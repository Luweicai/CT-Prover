type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i33 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
var $M.0: [ref] i8;
var $M.0.dup: [ref] i1;
var $M.1: [ref] i8;
var $M.1.dup: [ref] i1;
var $M.2: [ref] i8;
var $M.2.dup: [ref] i1;
var $M.3: [ref] i8;
var $M.3.dup: [ref] i1;
var $M.4: [ref] i8;
var $M.4.dup: [ref] i1;
var $M.5: [ref] i8;
var $M.5.dup: [ref] i1;
var $M.6: [ref] i8;
var $M.6.dup: [ref] i1;
var $M.7: [ref] i8;
var $M.7.dup: [ref] i1;
var $M.8: [ref] i8;
var $M.8.dup: [ref] i1;
var $M.9: [ref] i8;
var $M.9.dup: [ref] i1;
var $M.10: [ref] i8;
var $M.10.dup: [ref] i1;
var $M.11: [ref] i8;
var $M.11.dup: [ref] i1;
var $M.12: [ref] i8;
var $M.12.dup: [ref] i1;
var $M.13: [ref] i8;
var $M.13.dup: [ref] i1;
var $M.14: [ref] i8;
var $M.14.dup: [ref] i1;
var $M.15: [ref] i8;
var $M.15.dup: [ref] i1;
var $M.16: [ref] i32;
var $M.16.dup: [ref] i1;
var $M.17: [ref] i32;
var $M.17.dup: [ref] i1;
var $M.18: [ref] i32;
var $M.18.dup: [ref] i1;
var $M.19: [ref] i32;
var $M.19.dup: [ref] i1;
var $M.20: [ref] i32;
var $M.20.dup: [ref] i1;
var $M.21: [ref] i32;
var $M.21.dup: [ref] i1;
var $M.22: [ref] i32;
var $M.22.dup: [ref] i1;
var $M.23: [ref] i32;
var $M.23.dup: [ref] i1;
var $M.24: [ref] i8;
var $M.24.dup: [ref] i1;
var $M.25: [ref] i8;
var $M.25.dup: [ref] i1;
var $M.26: [ref] i8;
var $M.26.dup: [ref] i1;
var $M.27: [ref] i8;
var $M.27.dup: [ref] i1;
var $M.28: [ref] i64;
var $M.28.dup: [ref] i1;
var $M.29: [ref] ref;
var $M.29.dup: [ref] i1;
axiom ($GLOBALS_BOTTOM == $sub.ref(0,42336));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM,$sub.ref(0,32768)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p,$EXTERNS_BOTTOM) }
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i33(i1: i33, i2: i33) returns (i33) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i33(i1: i33, i2: i33) returns (i33) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i33(i1: i33, i2: i33) returns (i33) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $idiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $idiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $idiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $idiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $idiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $idiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $idiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $idiv.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "div"} $idiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $idiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $idiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $idiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $idiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $idiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $idiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $idiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $idiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $idiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $sdiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1,i2) }
function {:inline} $sdiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1,i2) }
function {:inline} $sdiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1,i2) }
function {:inline} $sdiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1,i2) }
function {:inline} $sdiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1,i2) }
function {:inline} $sdiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1,i2) }
function {:inline} $sdiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1,i2) }
function {:inline} $sdiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1,i2) }
function {:inline} $sdiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1,i2) }
function {:inline} $sdiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1,i2) }
function {:inline} $sdiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1,i2) }
function {:inline} $sdiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1,i2) }
function {:inline} $sdiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1,i2) }
function {:inline} $sdiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1,i2) }
function {:inline} $sdiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1,i2) }
function {:inline} $sdiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1,i2) }
function {:inline} $sdiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1,i2) }
function {:inline} $sdiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1,i2) }
function {:inline} $udiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1,i2) }
function {:inline} $udiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1,i2) }
function {:inline} $udiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1,i2) }
function {:inline} $udiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1,i2) }
function {:inline} $udiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1,i2) }
function {:inline} $udiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1,i2) }
function {:inline} $udiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1,i2) }
function {:inline} $udiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1,i2) }
function {:inline} $udiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1,i2) }
function {:inline} $udiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1,i2) }
function {:inline} $udiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1,i2) }
function {:inline} $udiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1,i2) }
function {:inline} $udiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1,i2) }
function {:inline} $udiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1,i2) }
function {:inline} $udiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1,i2) }
function {:inline} $udiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1,i2) }
function {:inline} $udiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1,i2) }
function {:inline} $udiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1,i2) }
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1,i2),0) && $slt.i1.bool(i1,0)) then $sub.i1($smod.i1(i1,i2),$smax.i1(i2,$sub.i1(0,i2))) else $smod.i1(i1,i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1,i2),0) && $slt.i5.bool(i1,0)) then $sub.i5($smod.i5(i1,i2),$smax.i5(i2,$sub.i5(0,i2))) else $smod.i5(i1,i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1,i2),0) && $slt.i6.bool(i1,0)) then $sub.i6($smod.i6(i1,i2),$smax.i6(i2,$sub.i6(0,i2))) else $smod.i6(i1,i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1,i2),0) && $slt.i8.bool(i1,0)) then $sub.i8($smod.i8(i1,i2),$smax.i8(i2,$sub.i8(0,i2))) else $smod.i8(i1,i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1,i2),0) && $slt.i16.bool(i1,0)) then $sub.i16($smod.i16(i1,i2),$smax.i16(i2,$sub.i16(0,i2))) else $smod.i16(i1,i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1,i2),0) && $slt.i24.bool(i1,0)) then $sub.i24($smod.i24(i1,i2),$smax.i24(i2,$sub.i24(0,i2))) else $smod.i24(i1,i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1,i2),0) && $slt.i32.bool(i1,0)) then $sub.i32($smod.i32(i1,i2),$smax.i32(i2,$sub.i32(0,i2))) else $smod.i32(i1,i2)) }
function {:inline} $srem.i33(i1: i33, i2: i33) returns (i33) { (if ($ne.i33.bool($smod.i33(i1,i2),0) && $slt.i33.bool(i1,0)) then $sub.i33($smod.i33(i1,i2),$smax.i33(i2,$sub.i33(0,i2))) else $smod.i33(i1,i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1,i2),0) && $slt.i40.bool(i1,0)) then $sub.i40($smod.i40(i1,i2),$smax.i40(i2,$sub.i40(0,i2))) else $smod.i40(i1,i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1,i2),0) && $slt.i48.bool(i1,0)) then $sub.i48($smod.i48(i1,i2),$smax.i48(i2,$sub.i48(0,i2))) else $smod.i48(i1,i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1,i2),0) && $slt.i56.bool(i1,0)) then $sub.i56($smod.i56(i1,i2),$smax.i56(i2,$sub.i56(0,i2))) else $smod.i56(i1,i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1,i2),0) && $slt.i64.bool(i1,0)) then $sub.i64($smod.i64(i1,i2),$smax.i64(i2,$sub.i64(0,i2))) else $smod.i64(i1,i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1,i2),0) && $slt.i80.bool(i1,0)) then $sub.i80($smod.i80(i1,i2),$smax.i80(i2,$sub.i80(0,i2))) else $smod.i80(i1,i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1,i2),0) && $slt.i88.bool(i1,0)) then $sub.i88($smod.i88(i1,i2),$smax.i88(i2,$sub.i88(0,i2))) else $smod.i88(i1,i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1,i2),0) && $slt.i96.bool(i1,0)) then $sub.i96($smod.i96(i1,i2),$smax.i96(i2,$sub.i96(0,i2))) else $smod.i96(i1,i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1,i2),0) && $slt.i128.bool(i1,0)) then $sub.i128($smod.i128(i1,i2),$smax.i128(i2,$sub.i128(0,i2))) else $smod.i128(i1,i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1,i2),0) && $slt.i160.bool(i1,0)) then $sub.i160($smod.i160(i1,i2),$smax.i160(i2,$sub.i160(0,i2))) else $smod.i160(i1,i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1,i2),0) && $slt.i256.bool(i1,0)) then $sub.i256($smod.i256(i1,i2),$smax.i256(i2,$sub.i256(0,i2))) else $smod.i256(i1,i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1,i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1,i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1,i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1,i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1,i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1,i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1,i2) }
function {:inline} $urem.i33(i1: i33, i2: i33) returns (i33) { $smod.i33(i1,i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1,i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1,i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1,i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1,i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1,i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1,i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1,i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1,i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1,i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1,i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i33(i1: i33, i2: i33) returns (i33);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i33(i1: i33, i2: i33) returns (i33);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i33(i1: i33, i2: i33) returns (i33);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i33(i1: i33, i2: i33) returns (i33);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i33(i1: i33, i2: i33) returns (i33);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i33(i1: i33, i2: i33) returns (i33);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i33(i1: i33, i2: i33) returns (i33);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i33(i: i33) returns (i33);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if $slt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if $slt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if $slt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if $slt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if $slt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if $slt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i33(i1: i33, i2: i33) returns (i33) { (if $slt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if $slt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if $slt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if $slt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if $slt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if $slt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if $slt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if $slt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if $slt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if $slt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if $slt.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if $sgt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if $sgt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if $sgt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if $sgt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if $sgt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if $sgt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i33(i1: i33, i2: i33) returns (i33) { (if $sgt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if $sgt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if $sgt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if $sgt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if $sgt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if $sgt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if $sgt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if $sgt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if $sgt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if $sgt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if $sgt.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if $ult.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if $ult.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if $ult.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if $ult.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if $ult.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if $ult.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i33(i1: i33, i2: i33) returns (i33) { (if $ult.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if $ult.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if $ult.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if $ult.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if $ult.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if $ult.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if $ult.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if $ult.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if $ult.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if $ult.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if $ult.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if $ugt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if $ugt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if $ugt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if $ugt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if $ugt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if $ugt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i33(i1: i33, i2: i33) returns (i33) { (if $ugt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if $ugt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if $ugt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if $ugt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if $ugt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if $ugt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if $ugt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if $ugt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if $ugt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if $ugt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if $ugt.i256.bool(i1,i2) then i1 else i2) }
axiom ($and.i1(0,0) == 0);
axiom ($or.i1(0,0) == 0);
axiom ($xor.i1(0,0) == 0);
axiom ($and.i1(0,1) == 0);
axiom ($or.i1(0,1) == 1);
axiom ($xor.i1(0,1) == 1);
axiom ($and.i1(1,0) == 0);
axiom ($or.i1(1,0) == 1);
axiom ($xor.i1(1,0) == 1);
axiom ($and.i1(1,1) == 1);
axiom ($or.i1(1,1) == 1);
axiom ($xor.i1(1,1) == 0);
axiom ($and.i32(32,16) == 0);
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i33(i1: i33, i2: i33) returns (i1) { (if $ule.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $ult.i33(i1: i33, i2: i33) returns (i1) { (if $ult.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i33(i1: i33, i2: i33) returns (i1) { (if $uge.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i33(i1: i33, i2: i33) returns (i1) { (if $ugt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i33(i1: i33, i2: i33) returns (i1) { (if $sle.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $slt.i33(i1: i33, i2: i33) returns (i1) { (if $slt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i33(i1: i33, i2: i33) returns (i1) { (if $sge.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i33(i1: i33, i2: i33) returns (i1) { (if $sgt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 == i2) }
function {:inline} $eq.i33(i1: i33, i2: i33) returns (i1) { (if $eq.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 != i2) }
function {:inline} $ne.i33(i1: i33, i2: i33) returns (i1) { (if $ne.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i33(M: [ref] i33, p: ref) returns (i33) { M[p] }
function {:inline} $store.i33(M: [ref] i33, p: ref, i: i33) returns ([ref] i33) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i33.i1(i: i33) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i33.i5(i: i33) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i33.i6(i: i33) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i33.i8(i: i33) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i33.i16(i: i33) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i33.i24(i: i33) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i33.i32(i: i33) returns (i32) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i40.i33(i: i40) returns (i33) { i }
function {:inline} $trunc.i48.i33(i: i48) returns (i33) { i }
function {:inline} $trunc.i56.i33(i: i56) returns (i33) { i }
function {:inline} $trunc.i64.i33(i: i64) returns (i33) { i }
function {:inline} $trunc.i80.i33(i: i80) returns (i33) { i }
function {:inline} $trunc.i88.i33(i: i88) returns (i33) { i }
function {:inline} $trunc.i96.i33(i: i96) returns (i33) { i }
function {:inline} $trunc.i128.i33(i: i128) returns (i33) { i }
function {:inline} $trunc.i160.i33(i: i160) returns (i33) { i }
function {:inline} $trunc.i256.i33(i: i256) returns (i33) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $sext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $sext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $sext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $sext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $sext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $sext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $sext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $sext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $sext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $zext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $zext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $zext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $zext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $zext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $zext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $zext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $zext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $zext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i33(p: ref, i: int) returns (i33);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1,p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1,p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1,p2) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 == p2) }
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 != p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }
function $fp(ipart: int, fpart: int, epart: int) returns (float);
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
function $fneg.float(f: float) returns (float);
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i33(f: float) returns (i33);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i33(f: float) returns (i33);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i33.float(i: i33) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i33.float(i: i33) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const {:allocSize 32} {:count 32} hmac_iv: ref;
axiom (hmac_iv == $sub.ref(0,1056));
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0,2088));
procedure {:inline 1} llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0,3120));
procedure {:inline 1} llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const bytesub: ref;
axiom (bytesub == $sub.ref(0,4152));
procedure {:inline 1} bytesub($i0: i8, $i0.dup: i1) returns ($r: i8, $r.dup: i1)
modifies $M.0, $M.1, $exn;
modifies $M.2, $M.3, $M.4;
modifies $CurrAddr;
{
  var $p1: ref;
  var $p1.dup: i1;
  var $p2: ref;
  var $p2.dup: i1;
  var $i3: i8;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i1;
  var $i5.dup: i1;
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i8;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $i14: i8;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $p16: ref;
  var $p16.dup: i1;
  var $i17: i8;
  var $i17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $p20: ref;
  var $p20.dup: i1;
  var $i21: i8;
  var $i21.dup: i1;
  var $i22: i32;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $i25: i8;
  var $i25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $p28: ref;
  var $p28.dup: i1;
  var $i29: i8;
  var $i29.dup: i1;
  var $i30: i32;
  var $i30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i32;
  var $i32.dup: i1;
  var $i33: i8;
  var $i33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $i36: i8;
  var $i36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $i39: i8;
  var $i39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $i41: i32;
  var $i41.dup: i1;
  var $p42: ref;
  var $p42.dup: i1;
  var $i43: i8;
  var $i43.dup: i1;
  var $i44: i32;
  var $i44.dup: i1;
  var $i45: i32;
  var $i45.dup: i1;
  var $p46: ref;
  var $p46.dup: i1;
  var $i47: i8;
  var $i47.dup: i1;
  var $i48: i32;
  var $i48.dup: i1;
  var $i49: i32;
  var $i49.dup: i1;
  var $p50: ref;
  var $p50.dup: i1;
  var $i51: i8;
  var $i51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $i53: i32;
  var $i53.dup: i1;
  var $i54: i32;
  var $i54.dup: i1;
  var $i55: i8;
  var $i55.dup: i1;
  var $p56: ref;
  var $p56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i8;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $p60: ref;
  var $p60.dup: i1;
  var $i61: i8;
  var $i61.dup: i1;
  var $i62: i32;
  var $i62.dup: i1;
  var $i63: i32;
  var $i63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $i65: i8;
  var $i65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i67: i32;
  var $i67.dup: i1;
  var $p68: ref;
  var $p68.dup: i1;
  var $i69: i8;
  var $i69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $p72: ref;
  var $p72.dup: i1;
  var $i73: i8;
  var $i73.dup: i1;
  var $i74: i32;
  var $i74.dup: i1;
  var $i75: i32;
  var $i75.dup: i1;
  var $i76: i8;
  var $i76.dup: i1;
  var $p77: ref;
  var $p77.dup: i1;
  var $p78: ref;
  var $p78.dup: i1;
  var $i79: i8;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $p81: ref;
  var $p81.dup: i1;
  var $i82: i8;
  var $i82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i32;
  var $i84.dup: i1;
  var $p85: ref;
  var $p85.dup: i1;
  var $i86: i8;
  var $i86.dup: i1;
  var $i87: i32;
  var $i87.dup: i1;
  var $i88: i32;
  var $i88.dup: i1;
  var $p89: ref;
  var $p89.dup: i1;
  var $i90: i8;
  var $i90.dup: i1;
  var $i91: i32;
  var $i91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $p93: ref;
  var $p93.dup: i1;
  var $i94: i8;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i8;
  var $i97.dup: i1;
  var $p98: ref;
  var $p98.dup: i1;
  var $p99: ref;
  var $p99.dup: i1;
  var $i100: i8;
  var $i100.dup: i1;
  var $i101: i32;
  var $i101.dup: i1;
  var $p102: ref;
  var $p102.dup: i1;
  var $i103: i8;
  var $i103.dup: i1;
  var $i104: i32;
  var $i104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $p106: ref;
  var $p106.dup: i1;
  var $i107: i8;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $i109: i32;
  var $i109.dup: i1;
  var $p110: ref;
  var $p110.dup: i1;
  var $i111: i8;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $i113: i32;
  var $i113.dup: i1;
  var $p114: ref;
  var $p114.dup: i1;
  var $i115: i8;
  var $i115.dup: i1;
  var $i116: i32;
  var $i116.dup: i1;
  var $i117: i32;
  var $i117.dup: i1;
  var $i118: i8;
  var $i118.dup: i1;
  var $p119: ref;
  var $p119.dup: i1;
  var $p120: ref;
  var $p120.dup: i1;
  var $i121: i8;
  var $i121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
  var $p123: ref;
  var $p123.dup: i1;
  var $i124: i8;
  var $i124.dup: i1;
  var $i125: i32;
  var $i125.dup: i1;
  var $i126: i32;
  var $i126.dup: i1;
  var $p127: ref;
  var $p127.dup: i1;
  var $i128: i8;
  var $i128.dup: i1;
  var $i129: i32;
  var $i129.dup: i1;
  var $i130: i32;
  var $i130.dup: i1;
  var $p131: ref;
  var $p131.dup: i1;
  var $i132: i8;
  var $i132.dup: i1;
  var $i133: i32;
  var $i133.dup: i1;
  var $i134: i32;
  var $i134.dup: i1;
  var $p135: ref;
  var $p135.dup: i1;
  var $i136: i8;
  var $i136.dup: i1;
  var $i137: i32;
  var $i137.dup: i1;
  var $i138: i32;
  var $i138.dup: i1;
  var $i139: i32;
  var $i139.dup: i1;
  var $i140: i8;
  var $i140.dup: i1;
  var $p141: ref;
  var $p141.dup: i1;
  var $p142: ref;
  var $p142.dup: i1;
  var $i143: i8;
  var $i143.dup: i1;
  var $i144: i32;
  var $i144.dup: i1;
  var $p145: ref;
  var $p145.dup: i1;
  var $i146: i8;
  var $i146.dup: i1;
  var $i147: i32;
  var $i147.dup: i1;
  var $i148: i32;
  var $i148.dup: i1;
  var $p149: ref;
  var $p149.dup: i1;
  var $i150: i8;
  var $i150.dup: i1;
  var $i151: i32;
  var $i151.dup: i1;
  var $i152: i32;
  var $i152.dup: i1;
  var $p153: ref;
  var $p153.dup: i1;
  var $i154: i8;
  var $i154.dup: i1;
  var $i155: i32;
  var $i155.dup: i1;
  var $i156: i32;
  var $i156.dup: i1;
  var $p157: ref;
  var $p157.dup: i1;
  var $i158: i8;
  var $i158.dup: i1;
  var $i159: i32;
  var $i159.dup: i1;
  var $i160: i32;
  var $i160.dup: i1;
  var $i161: i32;
  var $i161.dup: i1;
  var $i162: i8;
  var $i162.dup: i1;
  var $p163: ref;
  var $p163.dup: i1;
  var $p164: ref;
  var $p164.dup: i1;
  var $i165: i8;
  var $i165.dup: i1;
  var $i166: i32;
  var $i166.dup: i1;
  var $p167: ref;
  var $p167.dup: i1;
  var $i168: i8;
  var $i168.dup: i1;
  var $i169: i32;
  var $i169.dup: i1;
  var $i170: i32;
  var $i170.dup: i1;
  var $p171: ref;
  var $p171.dup: i1;
  var $i172: i8;
  var $i172.dup: i1;
  var $i173: i32;
  var $i173.dup: i1;
  var $i174: i32;
  var $i174.dup: i1;
  var $p175: ref;
  var $p175.dup: i1;
  var $i176: i8;
  var $i176.dup: i1;
  var $i177: i32;
  var $i177.dup: i1;
  var $i178: i32;
  var $i178.dup: i1;
  var $p179: ref;
  var $p179.dup: i1;
  var $i180: i8;
  var $i180.dup: i1;
  var $i181: i32;
  var $i181.dup: i1;
  var $i182: i32;
  var $i182.dup: i1;
  var $i183: i8;
  var $i183.dup: i1;
  var $p184: ref;
  var $p184.dup: i1;
  var $i185: i32;
  var $i185.dup: i1;
  var $i186: i8;
  var $i186.dup: i1;
  var $i187: i1;
  var $i187.dup: i1;
  var $i188: i64;
  var $i188.dup: i1;
  var $p189: ref;
  var $p189.dup: i1;
  var $i190: i8;
  var $i190.dup: i1;
  var $i191: i32;
  var $i191.dup: i1;
  var $i192: i32;
  var $i192.dup: i1;
  var $i193: i32;
  var $i193.dup: i1;
  var $i194: i32;
  var $i194.dup: i1;
  var $i195: i8;
  var $i195.dup: i1;
  var $i196: i32;
  var $i196.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 61, 7} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8,$zext.i32.i64(1)));
  $p1.dup := 0;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8,$zext.i32.i64(1)));
  $p2.dup := 0;
  call {:cexpr "bytesub:arg:c"} boogie_si_record_i8($i0);
  assume true;
  assume true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 61, 7} true;
  assume {:verifier.code 0} true;
  call $i3, $i3.dup := invert($i0, $i0.dup);
  call {:cexpr "c"} boogie_si_record_i8($i3);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 8} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  $i4.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4,8);
  $i5.dup := $or.i1($i4.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  $i5.dup := 0;
  goto $bb2, $bb3;
$bb2:
  assume ($i5 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i3);
  $i6.dup := $i3.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $ashr.i32($i6,$i4);
  $i7.dup := $or.i1($i6.dup,$i4.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32(1,$i7);
  $i8.dup := $or.i1(0,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  $i9.dup := $i8.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 25} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i4);
  $i10.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 25} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p11 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref($i10,1));
  $p11.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1($i10.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 30} true;
  assume {:verifier.code 0} true;
  $p11.dup := 0;
  $M.0 := $store.i8($M.0,$p11,$i9);
  $M.0.dup := $store.i1($M.0.dup,$p11,$i9.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 25} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i5 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p13.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 10} true;
  assume {:verifier.code 0} true;
  $p13.dup := 0;
  $i14 := $load.i8($M.0,$p13);
  $i14.dup := $load.i1($M.0.dup,$p13);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i8.i32($i14);
  $i15.dup := $i14.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p16.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 17} true;
  assume {:verifier.code 0} true;
  $p16.dup := 0;
  $i17 := $load.i8($M.0,$p16);
  $i17.dup := $load.i1($M.0.dup,$p16);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i8.i32($i17);
  $i18.dup := $i17.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $xor.i32($i15,$i18);
  $i19.dup := $or.i1($i15.dup,$i18.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p20.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 24} true;
  assume {:verifier.code 0} true;
  $p20.dup := 0;
  $i21 := $load.i8($M.0,$p20);
  $i21.dup := $load.i1($M.0.dup,$p20);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i8.i32($i21);
  $i22.dup := $i21.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 22} true;
  assume {:verifier.code 0} true;
  $i23 := $xor.i32($i19,$i22);
  $i23.dup := $or.i1($i19.dup,$i22.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 31} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p24.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 31} true;
  assume {:verifier.code 0} true;
  $p24.dup := 0;
  $i25 := $load.i8($M.0,$p24);
  $i25.dup := $load.i1($M.0.dup,$p24);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i8.i32($i25);
  $i26.dup := $i25.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $xor.i32($i23,$i26);
  $i27.dup := $or.i1($i23.dup,$i26.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 38} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p28.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 38} true;
  assume {:verifier.code 0} true;
  $p28.dup := 0;
  $i29 := $load.i8($M.0,$p28);
  $i29.dup := $load.i1($M.0.dup,$p28);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 38} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i8.i32($i29);
  $i30.dup := $i29.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 36} true;
  assume {:verifier.code 0} true;
  $i31 := $xor.i32($i27,$i30);
  $i31.dup := $or.i1($i27.dup,$i30.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $xor.i32($i31,1);
  $i32.dup := $or.i1($i31.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 10} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i32.i8($i32);
  $i33.dup := $i32.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 3} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(0,1));
  $p34.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 63, 8} true;
  assume {:verifier.code 0} true;
  $p34.dup := 0;
  $M.1 := $store.i8($M.1,$p34,$i33);
  $M.1.dup := $store.i1($M.1.dup,$p34,$i33.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p35.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 10} true;
  assume {:verifier.code 0} true;
  $p35.dup := 0;
  $i36 := $load.i8($M.0,$p35);
  $i36.dup := $load.i1($M.0.dup,$p35);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 10} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i8.i32($i36);
  $i37.dup := $i36.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p38.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 17} true;
  assume {:verifier.code 0} true;
  $p38.dup := 0;
  $i39 := $load.i8($M.0,$p38);
  $i39.dup := $load.i1($M.0.dup,$p38);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i8.i32($i39);
  $i40.dup := $i39.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 15} true;
  assume {:verifier.code 0} true;
  $i41 := $xor.i32($i37,$i40);
  $i41.dup := $or.i1($i37.dup,$i40.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p42.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 24} true;
  assume {:verifier.code 0} true;
  $p42.dup := 0;
  $i43 := $load.i8($M.0,$p42);
  $i43.dup := $load.i1($M.0.dup,$p42);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 24} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i8.i32($i43);
  $i44.dup := $i43.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 22} true;
  assume {:verifier.code 0} true;
  $i45 := $xor.i32($i41,$i44);
  $i45.dup := $or.i1($i41.dup,$i44.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 31} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p46.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 31} true;
  assume {:verifier.code 0} true;
  $p46.dup := 0;
  $i47 := $load.i8($M.0,$p46);
  $i47.dup := $load.i1($M.0.dup,$p46);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i8.i32($i47);
  $i48.dup := $i47.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $xor.i32($i45,$i48);
  $i49.dup := $or.i1($i45.dup,$i48.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 38} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p50.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 38} true;
  assume {:verifier.code 0} true;
  $p50.dup := 0;
  $i51 := $load.i8($M.0,$p50);
  $i51.dup := $load.i1($M.0.dup,$p50);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 38} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i8.i32($i51);
  $i52.dup := $i51.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 36} true;
  assume {:verifier.code 0} true;
  $i53 := $xor.i32($i49,$i52);
  $i53.dup := $or.i1($i49.dup,$i52.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 43} true;
  assume {:verifier.code 0} true;
  $i54 := $xor.i32($i53,1);
  $i54.dup := $or.i1($i53.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 10} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  $i55.dup := $i54.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 3} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(1,1));
  $p56.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 64, 8} true;
  assume {:verifier.code 0} true;
  $p56.dup := 0;
  $M.1 := $store.i8($M.1,$p56,$i55);
  $M.1.dup := $store.i1($M.1.dup,$p56,$i55.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 10} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p57.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 10} true;
  assume {:verifier.code 0} true;
  $p57.dup := 0;
  $i58 := $load.i8($M.0,$p57);
  $i58.dup := $load.i1($M.0.dup,$p57);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 10} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i8.i32($i58);
  $i59.dup := $i58.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 17} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p60.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 17} true;
  assume {:verifier.code 0} true;
  $p60.dup := 0;
  $i61 := $load.i8($M.0,$p60);
  $i61.dup := $load.i1($M.0.dup,$p60);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $sext.i8.i32($i61);
  $i62.dup := $i61.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 15} true;
  assume {:verifier.code 0} true;
  $i63 := $xor.i32($i59,$i62);
  $i63.dup := $or.i1($i59.dup,$i62.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 24} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p64.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 24} true;
  assume {:verifier.code 0} true;
  $p64.dup := 0;
  $i65 := $load.i8($M.0,$p64);
  $i65.dup := $load.i1($M.0.dup,$p64);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 24} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i8.i32($i65);
  $i66.dup := $i65.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 22} true;
  assume {:verifier.code 0} true;
  $i67 := $xor.i32($i63,$i66);
  $i67.dup := $or.i1($i63.dup,$i66.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 31} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p68.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 31} true;
  assume {:verifier.code 0} true;
  $p68.dup := 0;
  $i69 := $load.i8($M.0,$p68);
  $i69.dup := $load.i1($M.0.dup,$p68);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 31} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i8.i32($i69);
  $i70.dup := $i69.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 29} true;
  assume {:verifier.code 0} true;
  $i71 := $xor.i32($i67,$i70);
  $i71.dup := $or.i1($i67.dup,$i70.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 38} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p72.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 38} true;
  assume {:verifier.code 0} true;
  $p72.dup := 0;
  $i73 := $load.i8($M.0,$p72);
  $i73.dup := $load.i1($M.0.dup,$p72);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 38} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i8.i32($i73);
  $i74.dup := $i73.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 36} true;
  assume {:verifier.code 0} true;
  $i75 := $xor.i32($i71,$i74);
  $i75.dup := $or.i1($i71.dup,$i74.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 10} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i75);
  $i76.dup := $i75.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 3} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(2,1));
  $p77.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 65, 8} true;
  assume {:verifier.code 0} true;
  $p77.dup := 0;
  $M.1 := $store.i8($M.1,$p77,$i76);
  $M.1.dup := $store.i1($M.1.dup,$p77,$i76.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 10} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p78.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 10} true;
  assume {:verifier.code 0} true;
  $p78.dup := 0;
  $i79 := $load.i8($M.0,$p78);
  $i79.dup := $load.i1($M.0.dup,$p78);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 10} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i8.i32($i79);
  $i80.dup := $i79.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 17} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p81.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 17} true;
  assume {:verifier.code 0} true;
  $p81.dup := 0;
  $i82 := $load.i8($M.0,$p81);
  $i82.dup := $load.i1($M.0.dup,$p81);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $sext.i8.i32($i82);
  $i83.dup := $i82.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 15} true;
  assume {:verifier.code 0} true;
  $i84 := $xor.i32($i80,$i83);
  $i84.dup := $or.i1($i80.dup,$i83.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 24} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p85.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 24} true;
  assume {:verifier.code 0} true;
  $p85.dup := 0;
  $i86 := $load.i8($M.0,$p85);
  $i86.dup := $load.i1($M.0.dup,$p85);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 24} true;
  assume {:verifier.code 0} true;
  $i87 := $sext.i8.i32($i86);
  $i87.dup := $i86.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 22} true;
  assume {:verifier.code 0} true;
  $i88 := $xor.i32($i84,$i87);
  $i88.dup := $or.i1($i84.dup,$i87.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 31} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p89.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 31} true;
  assume {:verifier.code 0} true;
  $p89.dup := 0;
  $i90 := $load.i8($M.0,$p89);
  $i90.dup := $load.i1($M.0.dup,$p89);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 31} true;
  assume {:verifier.code 0} true;
  $i91 := $sext.i8.i32($i90);
  $i91.dup := $i90.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $xor.i32($i88,$i91);
  $i92.dup := $or.i1($i88.dup,$i91.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 38} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p93.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 38} true;
  assume {:verifier.code 0} true;
  $p93.dup := 0;
  $i94 := $load.i8($M.0,$p93);
  $i94.dup := $load.i1($M.0.dup,$p93);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 38} true;
  assume {:verifier.code 0} true;
  $i95 := $sext.i8.i32($i94);
  $i95.dup := $i94.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 36} true;
  assume {:verifier.code 0} true;
  $i96 := $xor.i32($i92,$i95);
  $i96.dup := $or.i1($i92.dup,$i95.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 10} true;
  assume {:verifier.code 0} true;
  $i97 := $trunc.i32.i8($i96);
  $i97.dup := $i96.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 3} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(3,1));
  $p98.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 66, 8} true;
  assume {:verifier.code 0} true;
  $p98.dup := 0;
  $M.1 := $store.i8($M.1,$p98,$i97);
  $M.1.dup := $store.i1($M.1.dup,$p98,$i97.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 10} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p99.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 10} true;
  assume {:verifier.code 0} true;
  $p99.dup := 0;
  $i100 := $load.i8($M.0,$p99);
  $i100.dup := $load.i1($M.0.dup,$p99);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 10} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i8.i32($i100);
  $i101.dup := $i100.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 17} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p102.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 17} true;
  assume {:verifier.code 0} true;
  $p102.dup := 0;
  $i103 := $load.i8($M.0,$p102);
  $i103.dup := $load.i1($M.0.dup,$p102);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 17} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i8.i32($i103);
  $i104.dup := $i103.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 15} true;
  assume {:verifier.code 0} true;
  $i105 := $xor.i32($i101,$i104);
  $i105.dup := $or.i1($i101.dup,$i104.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 24} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p106.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 24} true;
  assume {:verifier.code 0} true;
  $p106.dup := 0;
  $i107 := $load.i8($M.0,$p106);
  $i107.dup := $load.i1($M.0.dup,$p106);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 24} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i8.i32($i107);
  $i108.dup := $i107.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 22} true;
  assume {:verifier.code 0} true;
  $i109 := $xor.i32($i105,$i108);
  $i109.dup := $or.i1($i105.dup,$i108.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 31} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p110.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 31} true;
  assume {:verifier.code 0} true;
  $p110.dup := 0;
  $i111 := $load.i8($M.0,$p110);
  $i111.dup := $load.i1($M.0.dup,$p110);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 31} true;
  assume {:verifier.code 0} true;
  $i112 := $sext.i8.i32($i111);
  $i112.dup := $i111.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 29} true;
  assume {:verifier.code 0} true;
  $i113 := $xor.i32($i109,$i112);
  $i113.dup := $or.i1($i109.dup,$i112.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 38} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p114.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 38} true;
  assume {:verifier.code 0} true;
  $p114.dup := 0;
  $i115 := $load.i8($M.0,$p114);
  $i115.dup := $load.i1($M.0.dup,$p114);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 38} true;
  assume {:verifier.code 0} true;
  $i116 := $sext.i8.i32($i115);
  $i116.dup := $i115.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 36} true;
  assume {:verifier.code 0} true;
  $i117 := $xor.i32($i113,$i116);
  $i117.dup := $or.i1($i113.dup,$i116.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 10} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i8($i117);
  $i118.dup := $i117.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 3} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(4,1));
  $p119.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 67, 8} true;
  assume {:verifier.code 0} true;
  $p119.dup := 0;
  $M.1 := $store.i8($M.1,$p119,$i118);
  $M.1.dup := $store.i1($M.1.dup,$p119,$i118.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 10} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p120.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 10} true;
  assume {:verifier.code 0} true;
  $p120.dup := 0;
  $i121 := $load.i8($M.0,$p120);
  $i121.dup := $load.i1($M.0.dup,$p120);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 10} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i8.i32($i121);
  $i122.dup := $i121.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 17} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p123.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 17} true;
  assume {:verifier.code 0} true;
  $p123.dup := 0;
  $i124 := $load.i8($M.0,$p123);
  $i124.dup := $load.i1($M.0.dup,$p123);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 17} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i8.i32($i124);
  $i125.dup := $i124.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 15} true;
  assume {:verifier.code 0} true;
  $i126 := $xor.i32($i122,$i125);
  $i126.dup := $or.i1($i122.dup,$i125.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 24} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p127.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 24} true;
  assume {:verifier.code 0} true;
  $p127.dup := 0;
  $i128 := $load.i8($M.0,$p127);
  $i128.dup := $load.i1($M.0.dup,$p127);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 24} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i8.i32($i128);
  $i129.dup := $i128.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 22} true;
  assume {:verifier.code 0} true;
  $i130 := $xor.i32($i126,$i129);
  $i130.dup := $or.i1($i126.dup,$i129.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 31} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p131.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 31} true;
  assume {:verifier.code 0} true;
  $p131.dup := 0;
  $i132 := $load.i8($M.0,$p131);
  $i132.dup := $load.i1($M.0.dup,$p131);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 31} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i8.i32($i132);
  $i133.dup := $i132.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 29} true;
  assume {:verifier.code 0} true;
  $i134 := $xor.i32($i130,$i133);
  $i134.dup := $or.i1($i130.dup,$i133.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 38} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p135.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 38} true;
  assume {:verifier.code 0} true;
  $p135.dup := 0;
  $i136 := $load.i8($M.0,$p135);
  $i136.dup := $load.i1($M.0.dup,$p135);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 38} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i8.i32($i136);
  $i137.dup := $i136.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 36} true;
  assume {:verifier.code 0} true;
  $i138 := $xor.i32($i134,$i137);
  $i138.dup := $or.i1($i134.dup,$i137.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 43} true;
  assume {:verifier.code 0} true;
  $i139 := $xor.i32($i138,1);
  $i139.dup := $or.i1($i138.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 10} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i32.i8($i139);
  $i140.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 3} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(5,1));
  $p141.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 68, 8} true;
  assume {:verifier.code 0} true;
  $p141.dup := 0;
  $M.1 := $store.i8($M.1,$p141,$i140);
  $M.1.dup := $store.i1($M.1.dup,$p141,$i140.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 10} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p142.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 10} true;
  assume {:verifier.code 0} true;
  $p142.dup := 0;
  $i143 := $load.i8($M.0,$p142);
  $i143.dup := $load.i1($M.0.dup,$p142);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 10} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i8.i32($i143);
  $i144.dup := $i143.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 17} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p145.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 17} true;
  assume {:verifier.code 0} true;
  $p145.dup := 0;
  $i146 := $load.i8($M.0,$p145);
  $i146.dup := $load.i1($M.0.dup,$p145);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 17} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i8.i32($i146);
  $i147.dup := $i146.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 15} true;
  assume {:verifier.code 0} true;
  $i148 := $xor.i32($i144,$i147);
  $i148.dup := $or.i1($i144.dup,$i147.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 24} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p149.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 24} true;
  assume {:verifier.code 0} true;
  $p149.dup := 0;
  $i150 := $load.i8($M.0,$p149);
  $i150.dup := $load.i1($M.0.dup,$p149);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 24} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i8.i32($i150);
  $i151.dup := $i150.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 22} true;
  assume {:verifier.code 0} true;
  $i152 := $xor.i32($i148,$i151);
  $i152.dup := $or.i1($i148.dup,$i151.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 31} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p153.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 31} true;
  assume {:verifier.code 0} true;
  $p153.dup := 0;
  $i154 := $load.i8($M.0,$p153);
  $i154.dup := $load.i1($M.0.dup,$p153);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 31} true;
  assume {:verifier.code 0} true;
  $i155 := $sext.i8.i32($i154);
  $i155.dup := $i154.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 29} true;
  assume {:verifier.code 0} true;
  $i156 := $xor.i32($i152,$i155);
  $i156.dup := $or.i1($i152.dup,$i155.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 38} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p157.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 38} true;
  assume {:verifier.code 0} true;
  $p157.dup := 0;
  $i158 := $load.i8($M.0,$p157);
  $i158.dup := $load.i1($M.0.dup,$p157);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 38} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i8.i32($i158);
  $i159.dup := $i158.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 36} true;
  assume {:verifier.code 0} true;
  $i160 := $xor.i32($i156,$i159);
  $i160.dup := $or.i1($i156.dup,$i159.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 43} true;
  assume {:verifier.code 0} true;
  $i161 := $xor.i32($i160,1);
  $i161.dup := $or.i1($i160.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 10} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i32.i8($i161);
  $i162.dup := $i161.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 3} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(6,1));
  $p163.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 69, 8} true;
  assume {:verifier.code 0} true;
  $p163.dup := 0;
  $M.1 := $store.i8($M.1,$p163,$i162);
  $M.1.dup := $store.i1($M.1.dup,$p163,$i162.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 10} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p164.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 10} true;
  assume {:verifier.code 0} true;
  $p164.dup := 0;
  $i165 := $load.i8($M.0,$p164);
  $i165.dup := $load.i1($M.0.dup,$p164);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 10} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i8.i32($i165);
  $i166.dup := $i165.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 17} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p167.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 17} true;
  assume {:verifier.code 0} true;
  $p167.dup := 0;
  $i168 := $load.i8($M.0,$p167);
  $i168.dup := $load.i1($M.0.dup,$p167);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 17} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i8.i32($i168);
  $i169.dup := $i168.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 15} true;
  assume {:verifier.code 0} true;
  $i170 := $xor.i32($i166,$i169);
  $i170.dup := $or.i1($i166.dup,$i169.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 24} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p171.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 24} true;
  assume {:verifier.code 0} true;
  $p171.dup := 0;
  $i172 := $load.i8($M.0,$p171);
  $i172.dup := $load.i1($M.0.dup,$p171);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 24} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i8.i32($i172);
  $i173.dup := $i172.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 22} true;
  assume {:verifier.code 0} true;
  $i174 := $xor.i32($i170,$i173);
  $i174.dup := $or.i1($i170.dup,$i173.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 31} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p175.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 31} true;
  assume {:verifier.code 0} true;
  $p175.dup := 0;
  $i176 := $load.i8($M.0,$p175);
  $i176.dup := $load.i1($M.0.dup,$p175);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 31} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i8.i32($i176);
  $i177.dup := $i176.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 29} true;
  assume {:verifier.code 0} true;
  $i178 := $xor.i32($i174,$i177);
  $i178.dup := $or.i1($i174.dup,$i177.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 38} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p179.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 38} true;
  assume {:verifier.code 0} true;
  $p179.dup := 0;
  $i180 := $load.i8($M.0,$p179);
  $i180.dup := $load.i1($M.0.dup,$p179);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 38} true;
  assume {:verifier.code 0} true;
  $i181 := $sext.i8.i32($i180);
  $i181.dup := $i180.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 36} true;
  assume {:verifier.code 0} true;
  $i182 := $xor.i32($i178,$i181);
  $i182.dup := $or.i1($i178.dup,$i181.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 10} true;
  assume {:verifier.code 0} true;
  $i183 := $trunc.i32.i8($i182);
  $i183.dup := $i182.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 3} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(7,1));
  $p184.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 70, 8} true;
  assume {:verifier.code 0} true;
  $p184.dup := 0;
  $M.1 := $store.i8($M.1,$p184,$i183);
  $M.1.dup := $store.i1($M.1.dup,$p184,$i183.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 8} true;
  assume {:verifier.code 0} true;
  $i185 := 0;
  $i185.dup := 0;
  $i186 := 0;
  $i186.dup := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i4,1);
  $i12.dup := $or.i1($i4.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i12);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 62, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i12;
  $i4.dup := 0;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 16} true;
  assume {:verifier.code 0} true;
  $i187 := $slt.i32($i185,8);
  $i187.dup := $or.i1($i185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i187} true;
  $i187.dup := 0;
  goto $bb6, $bb7;
$bb6:
  assume ($i187 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 30} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i32.i64($i185);
  $i188.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 30} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref($i188,1));
  $p189.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i188.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 30} true;
  assume {:verifier.code 0} true;
  $p189.dup := 0;
  $i190 := $load.i8($M.1,$p189);
  $i190.dup := $load.i1($M.1.dup,$p189);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 30} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i8.i32($i190);
  $i191.dup := $i190.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 35} true;
  assume {:verifier.code 0} true;
  $i192 := $shl.i32($i191,$i185);
  $i192.dup := $or.i1($i191.dup,$i185.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 27} true;
  assume {:verifier.code 0} true;
  $i193 := $zext.i8.i32($i186);
  $i193.dup := $i186.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 27} true;
  assume {:verifier.code 0} true;
  $i194 := $or.i32($i193,$i192);
  $i194.dup := $or.i1($i193.dup,$i192.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 27} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i32.i8($i194);
  $i195.dup := $i194.dup;
  call {:cexpr "c"} boogie_si_record_i8($i195);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 25} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i187 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 74, 3} true;
  assume {:verifier.code 0} true;
  $r := $i186;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb8:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 20} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i185,1);
  $i196.dup := $or.i1($i185.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i196);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 72, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $i196;
  $i185.dup := 0;
  $i186 := $i195;
  $i186.dup := 0;
  goto $bb5;
}
const xtime: ref;
axiom (xtime == $sub.ref(0,5184));
procedure {:inline 1} xtime($i0: i8, $i0.dup: i1) returns ($r: i8, $r.dup: i1)
modifies $exn;
modifies $M.2, $M.3, $M.4;
modifies $CurrAddr;
{
  var $i1: i32;
  var $i1.dup: i1;
  var $i2: i8;
  var $i2.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 41, 19} true;
  assume {:verifier.code 0} true;
  call {:cexpr "xtime:arg:c"} boogie_si_record_i8($i0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 41, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i8.i32($i0);
  $i1.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 41, 10} true;
  assume {:verifier.code 0} true;
  call $i2, $i2.dup := multiply($i1, $i1.dup, 2, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 41, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
}
const multiply: ref;
axiom (multiply == $sub.ref(0,6216));
procedure {:inline 1} multiply($i0: i32, $i0.dup: i1, $i1: i32, $i1.dup: i1) returns ($r: i8, $r.dup: i1)
modifies $M.2, $M.3, $M.4, $exn;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $i5: i32;
  var $i5.dup: i1;
  var $i6: i1;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i8;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i1;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i8;
  var $i17.dup: i1;
  var $i18: i64;
  var $i18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i1;
  var $i22.dup: i1;
  var $i23: i64;
  var $i23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $i27: i1;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i1;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $i32: i8;
  var $i32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
  var $i34: i64;
  var $i34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $i36: i8;
  var $i36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $i38: i32;
  var $i38.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i64;
  var $i40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $i42: i8;
  var $i42.dup: i1;
  var $i43: i32;
  var $i43.dup: i1;
  var $i44: i32;
  var $i44.dup: i1;
  var $i45: i8;
  var $i45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i32;
  var $i47.dup: i1;
  var $i48: i32;
  var $i48.dup: i1;
  var $i49: i1;
  var $i49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $i51: i64;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $i53: i8;
  var $i53.dup: i1;
  var $i54: i32;
  var $i54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i64;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i8;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $i61: i8;
  var $i61.dup: i1;
  var $i62: i32;
  var $i62.dup: i1;
  var $i63: i64;
  var $i63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $i65: i8;
  var $i65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i67: i32;
  var $i67.dup: i1;
  var $i68: i64;
  var $i68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $i70: i8;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $i72: i32;
  var $i72.dup: i1;
  var $i73: i8;
  var $i73.dup: i1;
  var $i74: i32;
  var $i74.dup: i1;
  var $i75: i64;
  var $i75.dup: i1;
  var $p76: ref;
  var $p76.dup: i1;
  var $i77: i8;
  var $i77.dup: i1;
  var $i78: i32;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i64;
  var $i80.dup: i1;
  var $p81: ref;
  var $p81.dup: i1;
  var $i82: i8;
  var $i82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i32;
  var $i84.dup: i1;
  var $i85: i8;
  var $i85.dup: i1;
  var $i86: i32;
  var $i86.dup: i1;
  var $i87: i64;
  var $i87.dup: i1;
  var $p88: ref;
  var $p88.dup: i1;
  var $i89: i8;
  var $i89.dup: i1;
  var $i90: i32;
  var $i90.dup: i1;
  var $i91: i32;
  var $i91.dup: i1;
  var $i92: i64;
  var $i92.dup: i1;
  var $p93: ref;
  var $p93.dup: i1;
  var $i94: i8;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i8;
  var $i97.dup: i1;
  var $i98: i32;
  var $i98.dup: i1;
  var $i99: i64;
  var $i99.dup: i1;
  var $p100: ref;
  var $p100.dup: i1;
  var $i101: i8;
  var $i101.dup: i1;
  var $i102: i32;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $i104: i64;
  var $i104.dup: i1;
  var $p105: ref;
  var $p105.dup: i1;
  var $i106: i8;
  var $i106.dup: i1;
  var $i107: i32;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $i109: i8;
  var $i109.dup: i1;
  var $i110: i32;
  var $i110.dup: i1;
  var $i111: i8;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $i113: i1;
  var $i113.dup: i1;
  var $i114: i64;
  var $i114.dup: i1;
  var $p115: ref;
  var $p115.dup: i1;
  var $i116: i8;
  var $i116.dup: i1;
  var $i117: i32;
  var $i117.dup: i1;
  var $i118: i32;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $i121: i8;
  var $i121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 8} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8,$zext.i32.i64(1)));
  $p2.dup := 0;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8,$zext.i32.i64(1)));
  $p3.dup := 0;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(15,$zext.i32.i64(1)));
  $p4.dup := 0;
  call {:cexpr "multiply:arg:c"} boogie_si_record_i32($i0);
  call {:cexpr "multiply:arg:d"} boogie_si_record_i32($i1);
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 8} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  $i5.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5,8);
  $i6.dup := $or.i1($i5.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $i6.dup := 0;
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $lshr.i32($i0,$i5);
  $i7.dup := $or.i1($i0.dup,$i5.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32(1,$i7);
  $i8.dup := $or.i1(0,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  $i9.dup := $i8.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 25} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i5);
  $i10.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 25} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p11 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref($i10,1));
  $p11.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i10.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 30} true;
  assume {:verifier.code 0} true;
  $p11.dup := 0;
  $M.2 := $store.i8($M.2,$p11,$i9);
  $M.2.dup := $store.i1($M.2.dup,$p11,$i9.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 25} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i6 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 8} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  $i13.dup := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i5,1);
  $i12.dup := $or.i1($i5.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i12);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i12;
  $i5.dup := 0;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 16} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i13,8);
  $i14.dup := $or.i1($i13.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  $i14.dup := 0;
  goto $bb6, $bb7;
$bb6:
  assume ($i14 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $lshr.i32($i1,$i13);
  $i15.dup := $or.i1($i1.dup,$i13.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32(1,$i15);
  $i16.dup := $or.i1(0,$i15.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  $i17.dup := $i16.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i13);
  $i18.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 25} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p19 := $add.ref($add.ref($p3,$mul.ref(0,8)),$mul.ref($i18,1));
  $p19.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i18.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 30} true;
  assume {:verifier.code 0} true;
  $p19.dup := 0;
  $M.3 := $store.i8($M.3,$p19,$i17);
  $M.3.dup := $store.i1($M.3.dup,$p19,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 25} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i14 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 8} true;
  assume {:verifier.code 0} true;
  $i21 := 0;
  $i21.dup := 0;
  goto $bb9;
$bb8:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 20} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i13,1);
  $i20.dup := $or.i1($i13.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i20);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i20;
  $i13.dup := 0;
  goto $bb5;
$bb9:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 16} true;
  assume {:verifier.code 0} true;
  $i22 := $slt.i32($i21,15);
  $i22.dup := $or.i1($i21.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  $i22.dup := 0;
  goto $bb10, $bb11;
$bb10:
  assume ($i22 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 26} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i21);
  $i23.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 26} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i23,1));
  $p24.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i23.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 31} true;
  assume {:verifier.code 0} true;
  $p24.dup := 0;
  $M.4 := $store.i8($M.4,$p24,0);
  $M.4.dup := $store.i1($M.4.dup,$p24,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 26} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !($i22 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 17, 8} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  $i26.dup := 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i21,1);
  $i25.dup := $or.i1($i21.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i25);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $i25;
  $i21.dup := 0;
  goto $bb9;
$bb13:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 17, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $slt.i32($i26,8);
  $i27.dup := $or.i1($i26.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 17, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  $i27.dup := 0;
  goto $bb14, $bb15;
$bb14:
  assume ($i27 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 10} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  $i28.dup := 0;
  goto $bb16;
$bb15:
  assume !($i27 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 20, 8} true;
  assume {:verifier.code 0} true;
  $i48 := 6;
  $i48.dup := 0;
  goto $bb21;
$bb16:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 18} true;
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i28,8);
  $i29.dup := $or.i1($i28.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  $i29.dup := 0;
  goto $bb17, $bb18;
$bb17:
  assume ($i29 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 39} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i26);
  $i30.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 39} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref($i30,1));
  $p31.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i30.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 39} true;
  assume {:verifier.code 0} true;
  $p31.dup := 0;
  $i32 := $load.i8($M.2,$p31);
  $i32.dup := $load.i1($M.2.dup,$p31);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 39} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  $i33.dup := $i32.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 46} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i28);
  $i34.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 46} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p3,$mul.ref(0,8)),$mul.ref($i34,1));
  $p35.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i34.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 46} true;
  assume {:verifier.code 0} true;
  $p35.dup := 0;
  $i36 := $load.i8($M.3,$p35);
  $i36.dup := $load.i1($M.3.dup,$p35);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 46} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  $i37.dup := $i36.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 44} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i32($i33,$i37);
  $i38.dup := $or.i1($i33.dup,$i37.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 31} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i26,$i28);
  $i39.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 27} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  $i40.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 27} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p41 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i40,1));
  $p41.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i40.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 36} true;
  assume {:verifier.code 0} true;
  $p41.dup := 0;
  $i42 := $load.i8($M.4,$p41);
  $i42.dup := $load.i1($M.4.dup,$p41);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 36} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  $i43.dup := $i42.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 36} true;
  assume {:verifier.code 0} true;
  $i44 := $xor.i32($i43,$i38);
  $i44.dup := $or.i1($i43.dup,$i38.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 36} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  $i45.dup := $i44.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 36} true;
  assume {:verifier.code 0} true;
  $p41.dup := 0;
  $M.4 := $store.i8($M.4,$p41,$i45);
  $M.4.dup := $store.i1($M.4.dup,$p41,$i45.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 27} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !($i29 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 49} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 22} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i28,1);
  $i46.dup := $or.i1($i28.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i46);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 18, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i46;
  $i28.dup := 0;
  goto $bb16;
$bb20:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 17, 20} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i26,1);
  $i47.dup := $or.i1($i26.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i47);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i26 := $i47;
  $i26.dup := 0;
  goto $bb13;
$bb21:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 20, 16} true;
  assume {:verifier.code 0} true;
  $i49 := $sge.i32($i48,0);
  $i49.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 20, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  $i49.dup := 0;
  goto $bb22, $bb23;
$bb22:
  assume ($i49 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 21} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i32($i48,8);
  $i50.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  $i51.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 17} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i51,1));
  $p52.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i51.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 17} true;
  assume {:verifier.code 0} true;
  $p52.dup := 0;
  $i53 := $load.i8($M.4,$p52);
  $i53.dup := $load.i1($M.4.dup,$p52);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i32($i53);
  $i54.dup := $i53.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i48,0);
  $i55.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 5} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i55);
  $i56.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p57 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i56,1));
  $p57.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i56.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 14} true;
  assume {:verifier.code 0} true;
  $p57.dup := 0;
  $i58 := $load.i8($M.4,$p57);
  $i58.dup := $load.i1($M.4.dup,$p57);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 14} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i58);
  $i59.dup := $i58.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 14} true;
  assume {:verifier.code 0} true;
  $i60 := $xor.i32($i59,$i54);
  $i60.dup := $or.i1($i59.dup,$i54.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 14} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  $i61.dup := $i60.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 21, 14} true;
  assume {:verifier.code 0} true;
  $p57.dup := 0;
  $M.4 := $store.i8($M.4,$p57,$i61);
  $M.4.dup := $store.i1($M.4.dup,$p57,$i61.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 21} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i48,8);
  $i62.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $sext.i32.i64($i62);
  $i63.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 17} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i63,1));
  $p64.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i63.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 17} true;
  assume {:verifier.code 0} true;
  $p64.dup := 0;
  $i65 := $load.i8($M.4,$p64);
  $i65.dup := $load.i1($M.4.dup,$p64);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  $i66.dup := $i65.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i48,1);
  $i67.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 5} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i67);
  $i68.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p69 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i68,1));
  $p69.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i68.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 14} true;
  assume {:verifier.code 0} true;
  $p69.dup := 0;
  $i70 := $load.i8($M.4,$p69);
  $i70.dup := $load.i1($M.4.dup,$p69);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 14} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i8.i32($i70);
  $i71.dup := $i70.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 14} true;
  assume {:verifier.code 0} true;
  $i72 := $xor.i32($i71,$i66);
  $i72.dup := $or.i1($i71.dup,$i66.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 14} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.i32.i8($i72);
  $i73.dup := $i72.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 22, 14} true;
  assume {:verifier.code 0} true;
  $p69.dup := 0;
  $M.4 := $store.i8($M.4,$p69,$i73);
  $M.4.dup := $store.i1($M.4.dup,$p69,$i73.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 21} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i32($i48,8);
  $i74.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 17} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i32.i64($i74);
  $i75.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 17} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i75,1));
  $p76.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i75.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 17} true;
  assume {:verifier.code 0} true;
  $p76.dup := 0;
  $i77 := $load.i8($M.4,$p76);
  $i77.dup := $load.i1($M.4.dup,$p76);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 17} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i77);
  $i78.dup := $i77.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 9} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i48,3);
  $i79.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i32.i64($i79);
  $i80.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p81 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i80,1));
  $p81.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i80.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 14} true;
  assume {:verifier.code 0} true;
  $p81.dup := 0;
  $i82 := $load.i8($M.4,$p81);
  $i82.dup := $load.i1($M.4.dup,$p81);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 14} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i8.i32($i82);
  $i83.dup := $i82.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 14} true;
  assume {:verifier.code 0} true;
  $i84 := $xor.i32($i83,$i78);
  $i84.dup := $or.i1($i83.dup,$i78.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 14} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i32.i8($i84);
  $i85.dup := $i84.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 23, 14} true;
  assume {:verifier.code 0} true;
  $p81.dup := 0;
  $M.4 := $store.i8($M.4,$p81,$i85);
  $M.4.dup := $store.i1($M.4.dup,$p81,$i85.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 21} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i48,8);
  $i86.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $i87 := $sext.i32.i64($i86);
  $i87.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i87,1));
  $p88.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i87.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $p88.dup := 0;
  $i89 := $load.i8($M.4,$p88);
  $i89.dup := $load.i1($M.4.dup,$p88);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  $i90.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 9} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i48,4);
  $i91.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $sext.i32.i64($i91);
  $i92.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p93 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i92,1));
  $p93.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i92.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 14} true;
  assume {:verifier.code 0} true;
  $p93.dup := 0;
  $i94 := $load.i8($M.4,$p93);
  $i94.dup := $load.i1($M.4.dup,$p93);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 14} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i94);
  $i95.dup := $i94.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 14} true;
  assume {:verifier.code 0} true;
  $i96 := $xor.i32($i95,$i90);
  $i96.dup := $or.i1($i95.dup,$i90.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 14} true;
  assume {:verifier.code 0} true;
  $i97 := $trunc.i32.i8($i96);
  $i97.dup := $i96.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 24, 14} true;
  assume {:verifier.code 0} true;
  $p93.dup := 0;
  $M.4 := $store.i8($M.4,$p93,$i97);
  $M.4.dup := $store.i1($M.4.dup,$p93,$i97.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 21} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i48,8);
  $i98.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $sext.i32.i64($i98);
  $i99.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 17} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i99,1));
  $p100.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i99.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 17} true;
  assume {:verifier.code 0} true;
  $p100.dup := 0;
  $i101 := $load.i8($M.4,$p100);
  $i101.dup := $load.i1($M.4.dup,$p100);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 17} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i8.i32($i101);
  $i102.dup := $i101.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i48,8);
  $i103.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 5} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  $i104.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p105 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i104,1));
  $p105.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i104.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $p105.dup := 0;
  $i106 := $load.i8($M.4,$p105);
  $i106.dup := $load.i1($M.4.dup,$p105);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i8.i32($i106);
  $i107.dup := $i106.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $i108 := $xor.i32($i107,$i102);
  $i108.dup := $or.i1($i107.dup,$i102.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $i109 := $trunc.i32.i8($i108);
  $i109.dup := $i108.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $p105.dup := 0;
  $M.4 := $store.i8($M.4,$p105,$i109);
  $M.4.dup := $store.i1($M.4.dup,$p105,$i109.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 26, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !($i49 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 8} true;
  assume {:verifier.code 0} true;
  $i111 := 0;
  $i111.dup := 0;
  $i112 := 0;
  $i112.dup := 0;
  goto $bb25;
$bb24:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 20, 21} true;
  assume {:verifier.code 0} true;
  $i110 := $add.i32($i48,$sub.i32(0,1));
  $i110.dup := $or.i1($i48.dup,$or.i1(0,0));
  call {:cexpr "i"} boogie_si_record_i32($i110);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $i110;
  $i48.dup := 0;
  goto $bb21;
$bb25:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 16} true;
  assume {:verifier.code 0} true;
  $i113 := $slt.i32($i112,8);
  $i113.dup := $or.i1($i112.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  $i113.dup := 0;
  goto $bb26, $bb27;
$bb26:
  assume ($i113 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 35} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i112);
  $i114.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 35} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($add.ref($p4,$mul.ref(0,15)),$mul.ref($i114,1));
  $p115.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i114.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 35} true;
  assume {:verifier.code 0} true;
  $p115.dup := 0;
  $i116 := $load.i8($M.4,$p115);
  $i116.dup := $load.i1($M.4.dup,$p115);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 35} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i8.i32($i116);
  $i117.dup := $i116.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 40} true;
  assume {:verifier.code 0} true;
  $i118 := $shl.i32($i117,$i112);
  $i118.dup := $or.i1($i117.dup,$i112.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 32} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i111);
  $i119.dup := $i111.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 32} true;
  assume {:verifier.code 0} true;
  $i120 := $or.i32($i119,$i118);
  $i120.dup := $or.i1($i119.dup,$i118.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 32} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  $i121.dup := $i120.dup;
  call {:cexpr "result"} boogie_si_record_i8($i121);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 25} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !($i113 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $r := $i111;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb28:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 20} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i112,1);
  $i122.dup := $or.i1($i112.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i122);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $i111 := $i121;
  $i111.dup := 0;
  $i112 := $i122;
  $i112.dup := 0;
  goto $bb25;
}
const invert: ref;
axiom (invert == $sub.ref(0,7248));
procedure {:inline 1} invert($i0: i8, $i0.dup: i1) returns ($r: i8, $r.dup: i1)
modifies $exn;
modifies $M.2, $M.3, $M.4;
modifies $CurrAddr;
{
  var $i1: i8;
  var $i1.dup: i1;
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i8;
  var $i4.dup: i1;
  var $i5: i8;
  var $i5.dup: i1;
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i8;
  var $i8.dup: i1;
  var $i9: i8;
  var $i9.dup: i1;
  var $i10: i8;
  var $i10.dup: i1;
  var $i11: i8;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i8;
  var $i14.dup: i1;
  var $i15: i8;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i32;
  var $i17.dup: i1;
  var $i18: i8;
  var $i18.dup: i1;
  var $i19: i8;
  var $i19.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 46, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "invert:arg:c"} boogie_si_record_i8($i0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 46, 31} true;
  assume {:verifier.code 0} true;
  call $i1, $i1.dup := square($i0, $i0.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 46, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i1);
  $i2.dup := $i1.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 46, 41} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i0);
  $i3.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 46, 22} true;
  assume {:verifier.code 0} true;
  call $i4, $i4.dup := multiply($i2, $i2.dup, $i3, $i3.dup);
  call {:cexpr "c3"} boogie_si_record_i8($i4);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 47, 31} true;
  assume {:verifier.code 0} true;
  call $i5, $i5.dup := square($i4, $i4.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 47, 31} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  $i6.dup := $i5.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 47, 42} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i0);
  $i7.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 47, 22} true;
  assume {:verifier.code 0} true;
  call $i8, $i8.dup := multiply($i6, $i6.dup, $i7, $i7.dup);
  call {:cexpr "c7"} boogie_si_record_i8($i8);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 48, 46} true;
  assume {:verifier.code 0} true;
  call $i9, $i9.dup := square($i8, $i8.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 48, 39} true;
  assume {:verifier.code 0} true;
  call $i10, $i10.dup := square($i9, $i9.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 48, 32} true;
  assume {:verifier.code 0} true;
  call $i11, $i11.dup := square($i10, $i10.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 48, 32} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  $i12.dup := $i11.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 48, 59} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i8);
  $i13.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 48, 23} true;
  assume {:verifier.code 0} true;
  call $i14, $i14.dup := multiply($i12, $i12.dup, $i13, $i13.dup);
  call {:cexpr "c63"} boogie_si_record_i8($i14);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 49, 33} true;
  assume {:verifier.code 0} true;
  call $i15, $i15.dup := square($i14, $i14.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 49, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  $i16.dup := $i15.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 49, 45} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i0);
  $i17.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 49, 24} true;
  assume {:verifier.code 0} true;
  call $i18, $i18.dup := multiply($i16, $i16.dup, $i17, $i17.dup);
  call {:cexpr "c127"} boogie_si_record_i8($i18);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 50, 24} true;
  assume {:verifier.code 0} true;
  call $i19, $i19.dup := square($i18, $i18.dup);
  call {:cexpr "c254"} boogie_si_record_i8($i19);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 51, 3} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $r.dup := $i19.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const square: ref;
axiom (square == $sub.ref(0,8280));
procedure {:inline 1} square($i0: i8, $i0.dup: i1) returns ($r: i8, $r.dup: i1)
modifies $exn;
modifies $M.2, $M.3, $M.4;
modifies $CurrAddr;
{
  var $i1: i32;
  var $i1.dup: i1;
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i8;
  var $i3.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 36, 19} true;
  assume {:verifier.code 0} true;
  call {:cexpr "square:arg:c"} boogie_si_record_i8($i0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 36, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i8.i32($i0);
  $i1.dup := $i0.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 36, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i0);
  $i2.dup := $i0.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 36, 10} true;
  assume {:verifier.code 0} true;
  call $i3, $i3.dup := multiply($i1, $i1.dup, $i2, $i2.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $r.dup := $i3.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const crypto_block_decrypt: ref;
axiom (crypto_block_decrypt == $sub.ref(0,9312));
procedure {:inline 1} crypto_block_decrypt($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $M.6, $M.7, $M.9, $M.10, $exn, $M.11;
modifies $M.0, $M.1;
modifies $M.2, $M.3, $M.4;
modifies $M.12, $M.13;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i1;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $i10: i1;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $i15: i8;
  var $i15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $i18: i64;
  var $i18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i8;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $i24: i1;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i1;
  var $i26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $i28: i1;
  var $i28.dup: i1;
  var $i29: i64;
  var $i29.dup: i1;
  var $p30: ref;
  var $p30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i64;
  var $i32.dup: i1;
  var $p33: ref;
  var $p33.dup: i1;
  var $i34: i8;
  var $i34.dup: i1;
  var $i35: i64;
  var $i35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i1;
  var $i40.dup: i1;
  var $i41: i32;
  var $i41.dup: i1;
  var $i42: i32;
  var $i42.dup: i1;
  var $i43: i64;
  var $i43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i32;
  var $i45.dup: i1;
  var $i46: i64;
  var $i46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $i48: i8;
  var $i48.dup: i1;
  var $i49: i8;
  var $i49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $p51: ref;
  var $p51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $i53: i32;
  var $i53.dup: i1;
  var $p54: ref;
  var $p54.dup: i1;
  var $i55: i8;
  var $i55.dup: i1;
  var $i56: i32;
  var $i56.dup: i1;
  var $i57: i32;
  var $i57.dup: i1;
  var $i58: i8;
  var $i58.dup: i1;
  var $i59: i8;
  var $i59.dup: i1;
  var $i38: i8;
  var $i38.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $i61: i1;
  var $i61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
  var $p63: ref;
  var $p63.dup: i1;
  var $i64: i8;
  var $i64.dup: i1;
  var $i65: i32;
  var $i65.dup: i1;
  var $i66: i64;
  var $i66.dup: i1;
  var $p67: ref;
  var $p67.dup: i1;
  var $i68: i32;
  var $i68.dup: i1;
  var $i69: i64;
  var $i69.dup: i1;
  var $p70: ref;
  var $p70.dup: i1;
  var $i71: i8;
  var $i71.dup: i1;
  var $i72: i32;
  var $i72.dup: i1;
  var $i73: i32;
  var $i73.dup: i1;
  var $i74: i8;
  var $i74.dup: i1;
  var $i75: i64;
  var $i75.dup: i1;
  var $p76: ref;
  var $p76.dup: i1;
  var $i77: i64;
  var $i77.dup: i1;
  var $p78: ref;
  var $p78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $i81: i32;
  var $i81.dup: i1;
  var $i82: i1;
  var $i82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i1;
  var $i84.dup: i1;
  var $i85: i32;
  var $i85.dup: i1;
  var $i86: i32;
  var $i86.dup: i1;
  var $i87: i64;
  var $i87.dup: i1;
  var $p88: ref;
  var $p88.dup: i1;
  var $i89: i8;
  var $i89.dup: i1;
  var $i90: i64;
  var $i90.dup: i1;
  var $p91: ref;
  var $p91.dup: i1;
  var $i92: i64;
  var $i92.dup: i1;
  var $p93: ref;
  var $p93.dup: i1;
  var $i94: i32;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i1;
  var $i97.dup: i1;
  var $i98: i32;
  var $i98.dup: i1;
  var $i99: i1;
  var $i99.dup: i1;
  var $i100: i32;
  var $i100.dup: i1;
  var $i101: i1;
  var $i101.dup: i1;
  var $i102: i64;
  var $i102.dup: i1;
  var $p103: ref;
  var $p103.dup: i1;
  var $i104: i32;
  var $i104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $i106: i32;
  var $i106.dup: i1;
  var $i107: i64;
  var $i107.dup: i1;
  var $p108: ref;
  var $p108.dup: i1;
  var $i109: i8;
  var $i109.dup: i1;
  var $i110: i32;
  var $i110.dup: i1;
  var $i111: i64;
  var $i111.dup: i1;
  var $p112: ref;
  var $p112.dup: i1;
  var $i113: i64;
  var $i113.dup: i1;
  var $p114: ref;
  var $p114.dup: i1;
  var $i115: i8;
  var $i115.dup: i1;
  var $i116: i32;
  var $i116.dup: i1;
  var $i117: i32;
  var $i117.dup: i1;
  var $i118: i8;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $i121: i1;
  var $i121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
  var $i123: i1;
  var $i123.dup: i1;
  var $p124: ref;
  var $p124.dup: i1;
  var $i125: i64;
  var $i125.dup: i1;
  var $p126: ref;
  var $p126.dup: i1;
  var $i127: i8;
  var $i127.dup: i1;
  var $p128: ref;
  var $p128.dup: i1;
  var $i129: i64;
  var $i129.dup: i1;
  var $p130: ref;
  var $p130.dup: i1;
  var $i131: i8;
  var $i131.dup: i1;
  var $p132: ref;
  var $p132.dup: i1;
  var $i133: i64;
  var $i133.dup: i1;
  var $p134: ref;
  var $p134.dup: i1;
  var $i135: i8;
  var $i135.dup: i1;
  var $p136: ref;
  var $p136.dup: i1;
  var $i137: i64;
  var $i137.dup: i1;
  var $p138: ref;
  var $p138.dup: i1;
  var $i139: i8;
  var $i139.dup: i1;
  var $i140: i32;
  var $i140.dup: i1;
  var $i141: i8;
  var $i141.dup: i1;
  var $i142: i32;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i8;
  var $i144.dup: i1;
  var $i145: i32;
  var $i145.dup: i1;
  var $i146: i32;
  var $i146.dup: i1;
  var $i147: i32;
  var $i147.dup: i1;
  var $i148: i8;
  var $i148.dup: i1;
  var $i149: i32;
  var $i149.dup: i1;
  var $i150: i32;
  var $i150.dup: i1;
  var $i151: i32;
  var $i151.dup: i1;
  var $i152: i8;
  var $i152.dup: i1;
  var $i153: i32;
  var $i153.dup: i1;
  var $i154: i32;
  var $i154.dup: i1;
  var $i155: i8;
  var $i155.dup: i1;
  var $p156: ref;
  var $p156.dup: i1;
  var $i157: i64;
  var $i157.dup: i1;
  var $p158: ref;
  var $p158.dup: i1;
  var $i159: i32;
  var $i159.dup: i1;
  var $i160: i8;
  var $i160.dup: i1;
  var $i161: i32;
  var $i161.dup: i1;
  var $i162: i32;
  var $i162.dup: i1;
  var $i163: i8;
  var $i163.dup: i1;
  var $i164: i32;
  var $i164.dup: i1;
  var $i165: i32;
  var $i165.dup: i1;
  var $i166: i32;
  var $i166.dup: i1;
  var $i167: i8;
  var $i167.dup: i1;
  var $i168: i32;
  var $i168.dup: i1;
  var $i169: i32;
  var $i169.dup: i1;
  var $i170: i32;
  var $i170.dup: i1;
  var $i171: i8;
  var $i171.dup: i1;
  var $i172: i32;
  var $i172.dup: i1;
  var $i173: i32;
  var $i173.dup: i1;
  var $i174: i8;
  var $i174.dup: i1;
  var $p175: ref;
  var $p175.dup: i1;
  var $i176: i64;
  var $i176.dup: i1;
  var $p177: ref;
  var $p177.dup: i1;
  var $i178: i32;
  var $i178.dup: i1;
  var $i179: i8;
  var $i179.dup: i1;
  var $i180: i32;
  var $i180.dup: i1;
  var $i181: i32;
  var $i181.dup: i1;
  var $i182: i8;
  var $i182.dup: i1;
  var $i183: i32;
  var $i183.dup: i1;
  var $i184: i32;
  var $i184.dup: i1;
  var $i185: i32;
  var $i185.dup: i1;
  var $i186: i8;
  var $i186.dup: i1;
  var $i187: i32;
  var $i187.dup: i1;
  var $i188: i32;
  var $i188.dup: i1;
  var $i189: i32;
  var $i189.dup: i1;
  var $i190: i8;
  var $i190.dup: i1;
  var $i191: i32;
  var $i191.dup: i1;
  var $i192: i32;
  var $i192.dup: i1;
  var $i193: i8;
  var $i193.dup: i1;
  var $p194: ref;
  var $p194.dup: i1;
  var $i195: i64;
  var $i195.dup: i1;
  var $p196: ref;
  var $p196.dup: i1;
  var $i197: i32;
  var $i197.dup: i1;
  var $i198: i8;
  var $i198.dup: i1;
  var $i199: i32;
  var $i199.dup: i1;
  var $i200: i32;
  var $i200.dup: i1;
  var $i201: i8;
  var $i201.dup: i1;
  var $i202: i32;
  var $i202.dup: i1;
  var $i203: i32;
  var $i203.dup: i1;
  var $i204: i32;
  var $i204.dup: i1;
  var $i205: i8;
  var $i205.dup: i1;
  var $i206: i32;
  var $i206.dup: i1;
  var $i207: i32;
  var $i207.dup: i1;
  var $i208: i32;
  var $i208.dup: i1;
  var $i209: i8;
  var $i209.dup: i1;
  var $i210: i32;
  var $i210.dup: i1;
  var $i211: i32;
  var $i211.dup: i1;
  var $i212: i8;
  var $i212.dup: i1;
  var $p213: ref;
  var $p213.dup: i1;
  var $i214: i64;
  var $i214.dup: i1;
  var $p215: ref;
  var $p215.dup: i1;
  var $i216: i32;
  var $i216.dup: i1;
  var $i217: i32;
  var $i217.dup: i1;
  var $i218: i1;
  var $i218.dup: i1;
  var $i219: i32;
  var $i219.dup: i1;
  var $i220: i1;
  var $i220.dup: i1;
  var $i221: i64;
  var $i221.dup: i1;
  var $p222: ref;
  var $p222.dup: i1;
  var $i223: i32;
  var $i223.dup: i1;
  var $i224: i32;
  var $i224.dup: i1;
  var $i225: i32;
  var $i225.dup: i1;
  var $i226: i64;
  var $i226.dup: i1;
  var $p227: ref;
  var $p227.dup: i1;
  var $i228: i8;
  var $i228.dup: i1;
  var $i229: i64;
  var $i229.dup: i1;
  var $p230: ref;
  var $p230.dup: i1;
  var $i231: i64;
  var $i231.dup: i1;
  var $p232: ref;
  var $p232.dup: i1;
  var $i233: i32;
  var $i233.dup: i1;
  var $i234: i32;
  var $i234.dup: i1;
  var $i235: i32;
  var $i235.dup: i1;
  var $i236: i1;
  var $i236.dup: i1;
  var $i237: i32;
  var $i237.dup: i1;
  var $i238: i1;
  var $i238.dup: i1;
  var $i239: i64;
  var $i239.dup: i1;
  var $p240: ref;
  var $p240.dup: i1;
  var $i241: i64;
  var $i241.dup: i1;
  var $p242: ref;
  var $p242.dup: i1;
  var $i243: i8;
  var $i243.dup: i1;
  var $i244: i8;
  var $i244.dup: i1;
  var $i245: i64;
  var $i245.dup: i1;
  var $p246: ref;
  var $p246.dup: i1;
  var $i247: i64;
  var $i247.dup: i1;
  var $p248: ref;
  var $p248.dup: i1;
  var $i249: i32;
  var $i249.dup: i1;
  var $i250: i32;
  var $i250.dup: i1;
  var $i251: i32;
  var $i251.dup: i1;
  var $i252: i32;
  var $i252.dup: i1;
  var $i253: i1;
  var $i253.dup: i1;
  var $i254: i32;
  var $i254.dup: i1;
  var $i255: i1;
  var $i255.dup: i1;
  var $i256: i64;
  var $i256.dup: i1;
  var $p257: ref;
  var $p257.dup: i1;
  var $i258: i64;
  var $i258.dup: i1;
  var $p259: ref;
  var $p259.dup: i1;
  var $i260: i8;
  var $i260.dup: i1;
  var $i261: i32;
  var $i261.dup: i1;
  var $i262: i64;
  var $i262.dup: i1;
  var $p263: ref;
  var $p263.dup: i1;
  var $i264: i64;
  var $i264.dup: i1;
  var $p265: ref;
  var $p265.dup: i1;
  var $i266: i8;
  var $i266.dup: i1;
  var $i267: i32;
  var $i267.dup: i1;
  var $i268: i32;
  var $i268.dup: i1;
  var $i269: i8;
  var $i269.dup: i1;
  var $i270: i32;
  var $i270.dup: i1;
  var $i271: i32;
  var $i271.dup: i1;
  var $i272: i32;
  var $i272.dup: i1;
  var $i273: i1;
  var $i273.dup: i1;
  var $i274: i32;
  var $i274.dup: i1;
  var $i275: i1;
  var $i275.dup: i1;
  var $i276: i64;
  var $i276.dup: i1;
  var $p277: ref;
  var $p277.dup: i1;
  var $i278: i64;
  var $i278.dup: i1;
  var $p279: ref;
  var $p279.dup: i1;
  var $i280: i8;
  var $i280.dup: i1;
  var $i281: i32;
  var $i281.dup: i1;
  var $i282: i32;
  var $i282.dup: i1;
  var $i283: i64;
  var $i283.dup: i1;
  var $p284: ref;
  var $p284.dup: i1;
  var $i285: i32;
  var $i285.dup: i1;
  var $i286: i32;
  var $i286.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 182, 8} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(176,$zext.i32.i64(1)));
  $p3.dup := 0;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16,$zext.i32.i64(1)));
  $p4.dup := 0;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16,$zext.i32.i64(1)));
  $p5.dup := 0;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4,$zext.i32.i64(1)));
  $p6.dup := 0;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 182, 8} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  $i7.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 182, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i7,4);
  $i8.dup := $or.i1($i7.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 182, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  $i8.dup := 0;
  goto $bb2, $bb3;
$bb2:
  assume ($i8 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 183, 10} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  $i9.dup := 0;
  goto $bb4;
$bb3:
  assume !($i8 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 187, 8} true;
  assume {:verifier.code 0} true;
  $i22 := 1;
  $i22.dup := 0;
  $i23 := 4;
  $i23.dup := 0;
  goto $bb9;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 183, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,4);
  $i10.dup := $or.i1($i9.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 183, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  $i10.dup := 0;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 28} true;
  assume {:verifier.code 0} true;
  $i11 := $mul.i32($i7,4);
  $i11.dup := $or.i1($i7.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 32} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i11,$i9);
  $i12.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 24} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  $i13.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 24} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p14 := $add.ref($p2,$mul.ref($i13,1));
  $p14.dup := $or.i1($p2.dup,$or.i1($i13.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 24} true;
  assume {:verifier.code 0} true;
  $p14.dup := 0;
  $i15 := $load.i8($M.5,$p14);
  $i15.dup := $load.i1($M.5.dup,$p14);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i9);
  $i16.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i16,44));
  $p17.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i16.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i7);
  $i18.dup := 0;
  $p19 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i16,44)),$mul.ref($i18,1));
  $p19.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i16.dup,0)),$or.i1($i18.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 22} true;
  assume {:verifier.code 0} true;
  $p19.dup := 0;
  $M.6 := $store.i8($M.6,$p19,$i15);
  $M.6.dup := $store.i1($M.6.dup,$p19,$i15.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 184, 35} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 183, 22} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i9,1);
  $i20.dup := $or.i1($i9.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i20);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i20;
  $i9.dup := 0;
  goto $bb4;
$bb8:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 182, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i7,1);
  $i21.dup := $or.i1($i7.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i21);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 182, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i21;
  $i7.dup := 0;
  goto $bb1;
$bb9:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i22.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i23.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 186, 17} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 187, 16} true;
  assume {:verifier.code 0} true;
  $i24 := $slt.i32($i23,44);
  $i24.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 187, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  $i24.dup := 0;
  goto $bb10, $bb11;
$bb10:
  assume ($i24 == 1);
  assume true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 189, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i23,4);
  $i25.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 189, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25,0);
  $i26.dup := $or.i1($i25.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 189, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  $i26.dup := 0;
  goto $bb12, $bb13;
$bb11:
  assume !($i24 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 200, 8} true;
  assume {:verifier.code 0} true;
  $i81 := 0;
  $i81.dup := 0;
  goto $bb28;
$bb12:
  assume ($i26 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 12} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  $i27.dup := 0;
  goto $bb14;
$bb13:
  assume !($i26 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 12} true;
  assume {:verifier.code 0} true;
  $i39 := 0;
  $i39.dup := 0;
  goto $bb19;
$bb14:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i22.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i23.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 20} true;
  assume {:verifier.code 0} true;
  $i28 := $slt.i32($i27,4);
  $i28.dup := $or.i1($i27.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  $i28.dup := 0;
  goto $bb15, $bb16;
$bb15:
  assume ($i28 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 39} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i27);
  $i29.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 39} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i29,44));
  $p30.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i29.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 53} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32($i23,1);
  $i31.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 39} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i31);
  $i32.dup := 0;
  $p33 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i29,44)),$mul.ref($i32,1));
  $p33.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i29.dup,0)),$or.i1($i32.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 39} true;
  assume {:verifier.code 0} true;
  $p33.dup := 0;
  $i34 := $load.i8($M.6,$p33);
  $i34.dup := $load.i1($M.6.dup,$p33);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i27);
  $i35.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 29} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p36 := $add.ref($add.ref($p6,$mul.ref(0,4)),$mul.ref($i35,1));
  $p36.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1($i35.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 37} true;
  assume {:verifier.code 0} true;
  $p36.dup := 0;
  $M.7 := $store.i8($M.7,$p36,$i34);
  $M.7.dup := $store.i1($M.7.dup,$p36,$i34.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 29} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !($i28 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 56} true;
  assume {:verifier.code 0} true;
  $i38 := $i22;
  $i38.dup := 0;
  goto $bb18;
$bb17:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 24} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i32($i27,1);
  $i37.dup := $or.i1($i27.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i37);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 190, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $i37;
  $i27.dup := 0;
  goto $bb14;
$bb18:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 196, 10} true;
  assume {:verifier.code 0} true;
  $i60 := 0;
  $i60.dup := 0;
  goto $bb23;
$bb19:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i22.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i39.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i23.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 20} true;
  assume {:verifier.code 0} true;
  $i40 := $slt.i32($i39,4);
  $i40.dup := $or.i1($i39.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  $i40.dup := 0;
  goto $bb20, $bb21;
$bb20:
  assume ($i40 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 59} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i39,1);
  $i41.dup := $or.i1($i39.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 64} true;
  assume {:verifier.code 0} true;
  $i42 := $srem.i32($i41,4);
  $i42.dup := $or.i1($i41.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 47} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i42);
  $i43.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 47} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i43,44));
  $p44.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i43.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 71} true;
  assume {:verifier.code 0} true;
  $i45 := $sub.i32($i23,1);
  $i45.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 47} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i45);
  $i46.dup := 0;
  $p47 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i43,44)),$mul.ref($i46,1));
  $p47.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i43.dup,0)),$or.i1($i46.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 47} true;
  assume {:verifier.code 0} true;
  $p47.dup := 0;
  $i48 := $load.i8($M.6,$p47);
  $i48.dup := $load.i1($M.6.dup,$p47);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 39} true;
  assume {:verifier.code 0} true;
  call $i49, $i49.dup := bytesub($i48, $i48.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i39);
  $i50.dup := $i39.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 29} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p51 := $add.ref($add.ref($p6,$mul.ref(0,4)),$mul.ref($i50,1));
  $p51.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1($i50.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 37} true;
  assume {:verifier.code 0} true;
  $p51.dup := 0;
  $M.7 := $store.i8($M.7,$p51,$i49);
  $M.7.dup := $store.i1($M.7.dup,$p51,$i49.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 29} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !($i40 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 18} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i8.i32($i22);
  $i53.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p54 := $add.ref($add.ref($p6,$mul.ref(0,4)),$mul.ref(0,1));
  $p54.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 15} true;
  assume {:verifier.code 0} true;
  $p54.dup := 0;
  $i55 := $load.i8($M.7,$p54);
  $i55.dup := $load.i1($M.7.dup,$p54);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 15} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i55);
  $i56.dup := $i55.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 15} true;
  assume {:verifier.code 0} true;
  $i57 := $xor.i32($i56,$i53);
  $i57.dup := $or.i1($i56.dup,$i53.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i32.i8($i57);
  $i58.dup := $i57.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 193, 15} true;
  assume {:verifier.code 0} true;
  $p54.dup := 0;
  $M.7 := $store.i8($M.7,$p54,$i58);
  $M.7.dup := $store.i1($M.7.dup,$p54,$i58.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 194, 23} true;
  assume {:verifier.code 0} true;
  call $i59, $i59.dup := xtime($i22, $i22.dup);
  call {:cexpr "roundconstant"} boogie_si_record_i8($i59);
  assume {:verifier.code 0} true;
  $i38 := $i59;
  $i38.dup := 0;
  goto $bb18;
$bb22:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i32($i39,1);
  $i52.dup := $or.i1($i39.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i52);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 192, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $i52;
  $i39.dup := 0;
  goto $bb19;
$bb23:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i38.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i23.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 196, 18} true;
  assume {:verifier.code 0} true;
  $i61 := $slt.i32($i60,4);
  $i61.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 196, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  $i61.dup := 0;
  goto $bb24, $bb25;
$bb24:
  assume ($i61 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 24} true;
  assume {:verifier.code 0} true;
  $i62 := $sext.i32.i64($i60);
  $i62.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 24} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p6,$mul.ref(0,4)),$mul.ref($i62,1));
  $p63.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1($i62.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 24} true;
  assume {:verifier.code 0} true;
  $p63.dup := 0;
  $i64 := $load.i8($M.7,$p63);
  $i64.dup := $load.i1($M.7.dup,$p63);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 24} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i32($i64);
  $i65.dup := $i64.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 34} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i60);
  $i66.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 34} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i66,44));
  $p67.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i66.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 48} true;
  assume {:verifier.code 0} true;
  $i68 := $sub.i32($i23,4);
  $i68.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 34} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i68);
  $i69.dup := 0;
  $p70 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i66,44)),$mul.ref($i69,1));
  $p70.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i66.dup,0)),$or.i1($i69.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 34} true;
  assume {:verifier.code 0} true;
  $p70.dup := 0;
  $i71 := $load.i8($M.6,$p70);
  $i71.dup := $load.i1($M.6.dup,$p70);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 34} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  $i72.dup := $i71.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 32} true;
  assume {:verifier.code 0} true;
  $i73 := $xor.i32($i65,$i72);
  $i73.dup := $or.i1($i65.dup,$i72.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 24} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  $i74.dup := $i73.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i32.i64($i60);
  $i75.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 7} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i75,44));
  $p76.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i75.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i32.i64($i23);
  $i77.dup := 0;
  $p78 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i75,44)),$mul.ref($i77,1));
  $p78.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i75.dup,0)),$or.i1($i77.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 22} true;
  assume {:verifier.code 0} true;
  $p78.dup := 0;
  $M.6 := $store.i8($M.6,$p78,$i74);
  $M.6.dup := $store.i1($M.6.dup,$p78,$i74.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 197, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !($i61 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 198, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 196, 22} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i60,1);
  $i79.dup := $or.i1($i60.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i79);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i60 := $i79;
  $i60.dup := 0;
  goto $bb23;
$bb27:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 187, 21} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i23,1);
  $i80.dup := $or.i1($i23.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i80);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 187, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i38;
  $i22.dup := 0;
  $i23 := $i80;
  $i23.dup := 0;
  goto $bb9;
$bb28:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 200, 16} true;
  assume {:verifier.code 0} true;
  $i82 := $slt.i32($i81,4);
  $i82.dup := $or.i1($i81.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 200, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  $i82.dup := 0;
  goto $bb29, $bb30;
$bb29:
  assume ($i82 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 201, 10} true;
  assume {:verifier.code 0} true;
  $i83 := 0;
  $i83.dup := 0;
  goto $bb31;
$bb30:
  assume !($i82 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 204, 8} true;
  assume {:verifier.code 0} true;
  $i96 := 9;
  $i96.dup := 0;
  goto $bb36;
$bb31:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 201, 18} true;
  assume {:verifier.code 0} true;
  $i84 := $slt.i32($i83,4);
  $i84.dup := $or.i1($i83.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 201, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  $i84.dup := 0;
  goto $bb32, $bb33;
$bb32:
  assume ($i84 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 26} true;
  assume {:verifier.code 0} true;
  $i85 := $mul.i32($i81,4);
  $i85.dup := $or.i1($i81.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 30} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i85,$i83);
  $i86.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 21} true;
  assume {:verifier.code 0} true;
  $i87 := $sext.i32.i64($i86);
  $i87.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 21} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p1,$mul.ref($i87,1));
  $p88.dup := $or.i1($p1.dup,$or.i1($i87.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 21} true;
  assume {:verifier.code 0} true;
  $p88.dup := 0;
  $i89 := $load.i8($M.8,$p88);
  $i89.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i32.i64($i83);
  $i90.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 7} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i90,4));
  $p91.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i90.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 7} true;
  assume {:verifier.code 0} true;
  $i92 := $sext.i32.i64($i81);
  $i92.dup := 0;
  $p93 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i90,4)),$mul.ref($i92,1));
  $p93.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i90.dup,0)),$or.i1($i92.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 19} true;
  assume {:verifier.code 0} true;
  $p93.dup := 0;
  $M.9 := $store.i8($M.9,$p93,$i89);
  $M.9.dup := $store.i1($M.9.dup,$p93,$i89.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !($i84 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 202, 33} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 201, 22} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i83,1);
  $i94.dup := $or.i1($i83.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i94);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i83 := $i94;
  $i83.dup := 0;
  goto $bb31;
$bb35:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 200, 20} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i32($i81,1);
  $i95.dup := $or.i1($i81.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i95);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 200, 3} true;
  assume {:verifier.code 0} true;
  $i81 := $i95;
  $i81.dup := 0;
  goto $bb28;
$bb36:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 204, 16} true;
  assume {:verifier.code 0} true;
  $i97 := $sge.i32($i96,0);
  $i97.dup := $or.i1($i96.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 204, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  $i97.dup := 0;
  goto $bb37, $bb38;
$bb37:
  assume ($i97 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 205, 10} true;
  assume {:verifier.code 0} true;
  $i98 := 0;
  $i98.dup := 0;
  goto $bb39;
$bb38:
  assume !($i97 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 227, 8} true;
  assume {:verifier.code 0} true;
  $i252 := 0;
  $i252.dup := 0;
  goto $bb71;
$bb39:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 205, 18} true;
  assume {:verifier.code 0} true;
  $i99 := $slt.i32($i98,4);
  $i99.dup := $or.i1($i98.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 205, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  $i99.dup := 0;
  goto $bb40, $bb41;
$bb40:
  assume ($i99 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 206, 12} true;
  assume {:verifier.code 0} true;
  $i100 := 0;
  $i100.dup := 0;
  goto $bb42;
$bb41:
  assume !($i99 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 208, 11} true;
  assume {:verifier.code 0} true;
  $i121 := $slt.i32($i96,9);
  $i121.dup := $or.i1($i96.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 208, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  $i121.dup := 0;
  goto $bb47, $bb48;
$bb42:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 206, 20} true;
  assume {:verifier.code 0} true;
  $i101 := $slt.i32($i100,4);
  $i101.dup := $or.i1($i100.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 206, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  $i101.dup := 0;
  goto $bb43, $bb44;
$bb43:
  assume ($i101 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 24} true;
  assume {:verifier.code 0} true;
  $i102 := $sext.i32.i64($i98);
  $i102.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 24} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i102,44));
  $p103.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i102.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 38} true;
  assume {:verifier.code 0} true;
  $i104 := $mul.i32($i96,4);
  $i104.dup := $or.i1($i96.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 42} true;
  assume {:verifier.code 0} true;
  $i105 := $add.i32($i104,4);
  $i105.dup := $or.i1($i104.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 46} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105,$i100);
  $i106.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 24} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i32.i64($i106);
  $i107.dup := 0;
  $p108 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i102,44)),$mul.ref($i107,1));
  $p108.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i102.dup,0)),$or.i1($i107.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 24} true;
  assume {:verifier.code 0} true;
  $p108.dup := 0;
  $i109 := $load.i8($M.6,$p108);
  $i109.dup := $load.i1($M.6.dup,$p108);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 24} true;
  assume {:verifier.code 0} true;
  $i110 := $zext.i8.i32($i109);
  $i110.dup := $i109.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 9} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i32.i64($i98);
  $i111.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 9} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i111,4));
  $p112.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i111.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $sext.i32.i64($i100);
  $i113.dup := 0;
  $p114 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i111,4)),$mul.ref($i113,1));
  $p114.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i111.dup,0)),$or.i1($i113.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 21} true;
  assume {:verifier.code 0} true;
  $p114.dup := 0;
  $i115 := $load.i8($M.9,$p114);
  $i115.dup := $load.i1($M.9.dup,$p114);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 21} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.i8.i32($i115);
  $i116.dup := $i115.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 21} true;
  assume {:verifier.code 0} true;
  $i117 := $xor.i32($i116,$i110);
  $i117.dup := $or.i1($i116.dup,$i110.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 21} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i8($i117);
  $i118.dup := $i117.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 21} true;
  assume {:verifier.code 0} true;
  $p114.dup := 0;
  $M.9 := $store.i8($M.9,$p114,$i118);
  $M.9.dup := $store.i1($M.9.dup,$p114,$i118.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 9} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !($i101 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 207, 49} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 206, 24} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i32($i100,1);
  $i119.dup := $or.i1($i100.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i119);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 206, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $i119;
  $i100.dup := 0;
  goto $bb42;
$bb46:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 205, 22} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i98,1);
  $i120.dup := $or.i1($i98.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i120);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $i98 := $i120;
  $i98.dup := 0;
  goto $bb39;
$bb47:
  assume ($i121 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 209, 12} true;
  assume {:verifier.code 0} true;
  $i122 := 0;
  $i122.dup := 0;
  goto $bb50;
$bb48:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 208, 9} true;
  assume {:verifier.code 0} true;
  assume !($i121 == 1);
  goto $bb49;
$bb49:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 219, 10} true;
  assume {:verifier.code 0} true;
  $i217 := 0;
  $i217.dup := 0;
  goto $bb54;
$bb50:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i122.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 209, 20} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,4);
  $i123.dup := $or.i1($i122.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 209, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  $i123.dup := 0;
  goto $bb51, $bb52;
$bb51:
  assume ($i123 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 210, 28} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(0,4));
  $p124.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 210, 28} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i32.i64($i122);
  $i125.dup := 0;
  $p126 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(0,4)),$mul.ref($i125,1));
  $p126.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i125.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 210, 28} true;
  assume {:verifier.code 0} true;
  $p126.dup := 0;
  $i127 := $load.i8($M.9,$p126);
  $i127.dup := $load.i1($M.9.dup,$p126);
  call {:cexpr "a0"} boogie_si_record_i8($i127);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 211, 28} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(1,4));
  $p128.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 211, 28} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i122);
  $i129.dup := 0;
  $p130 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(1,4)),$mul.ref($i129,1));
  $p130.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i129.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 211, 28} true;
  assume {:verifier.code 0} true;
  $p130.dup := 0;
  $i131 := $load.i8($M.9,$p130);
  $i131.dup := $load.i1($M.9.dup,$p130);
  call {:cexpr "a1"} boogie_si_record_i8($i131);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 212, 28} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(2,4));
  $p132.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 212, 28} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i122);
  $i133.dup := 0;
  $p134 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(2,4)),$mul.ref($i133,1));
  $p134.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i133.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 212, 28} true;
  assume {:verifier.code 0} true;
  $p134.dup := 0;
  $i135 := $load.i8($M.9,$p134);
  $i135.dup := $load.i1($M.9.dup,$p134);
  call {:cexpr "a2"} boogie_si_record_i8($i135);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 213, 28} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(3,4));
  $p136.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 213, 28} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i32.i64($i122);
  $i137.dup := 0;
  $p138 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(3,4)),$mul.ref($i137,1));
  $p138.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i137.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 213, 28} true;
  assume {:verifier.code 0} true;
  $p138.dup := 0;
  $i139 := $load.i8($M.9,$p138);
  $i139.dup := $load.i1($M.9.dup,$p138);
  call {:cexpr "a3"} boogie_si_record_i8($i139);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 25} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i8.i32($i131);
  $i140.dup := $i131.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 16} true;
  assume {:verifier.code 0} true;
  call $i141, $i141.dup := multiply($i140, $i140.dup, 11, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 16} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i8.i32($i141);
  $i142.dup := $i141.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 43} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i8.i32($i135);
  $i143.dup := $i135.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 34} true;
  assume {:verifier.code 0} true;
  call $i144, $i144.dup := multiply($i143, $i143.dup, 13, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 34} true;
  assume {:verifier.code 0} true;
  $i145 := $zext.i8.i32($i144);
  $i145.dup := $i144.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 32} true;
  assume {:verifier.code 0} true;
  $i146 := $xor.i32($i142,$i145);
  $i146.dup := $or.i1($i142.dup,$i145.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 61} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i32($i139);
  $i147.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 52} true;
  assume {:verifier.code 0} true;
  call $i148, $i148.dup := multiply($i147, $i147.dup, 9, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 52} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i8.i32($i148);
  $i149.dup := $i148.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 50} true;
  assume {:verifier.code 0} true;
  $i150 := $xor.i32($i146,$i149);
  $i150.dup := $or.i1($i146.dup,$i149.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 78} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i8.i32($i127);
  $i151.dup := $i127.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 69} true;
  assume {:verifier.code 0} true;
  call $i152, $i152.dup := multiply($i151, $i151.dup, 14, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 69} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i8.i32($i152);
  $i153.dup := $i152.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 67} true;
  assume {:verifier.code 0} true;
  $i154 := $xor.i32($i150,$i153);
  $i154.dup := $or.i1($i150.dup,$i153.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 16} true;
  assume {:verifier.code 0} true;
  $i155 := $trunc.i32.i8($i154);
  $i155.dup := $i154.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 2} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(0,4));
  $p156.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 2} true;
  assume {:verifier.code 0} true;
  $i157 := $sext.i32.i64($i122);
  $i157.dup := 0;
  $p158 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(0,4)),$mul.ref($i157,1));
  $p158.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i157.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 214, 14} true;
  assume {:verifier.code 0} true;
  $p158.dup := 0;
  $M.9 := $store.i8($M.9,$p158,$i155);
  $M.9.dup := $store.i1($M.9.dup,$p158,$i155.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 25} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i8.i32($i135);
  $i159.dup := $i135.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 16} true;
  assume {:verifier.code 0} true;
  call $i160, $i160.dup := multiply($i159, $i159.dup, 11, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 16} true;
  assume {:verifier.code 0} true;
  $i161 := $zext.i8.i32($i160);
  $i161.dup := $i160.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 43} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.i8.i32($i139);
  $i162.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 34} true;
  assume {:verifier.code 0} true;
  call $i163, $i163.dup := multiply($i162, $i162.dup, 13, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 34} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i8.i32($i163);
  $i164.dup := $i163.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 32} true;
  assume {:verifier.code 0} true;
  $i165 := $xor.i32($i161,$i164);
  $i165.dup := $or.i1($i161.dup,$i164.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 61} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.i8.i32($i127);
  $i166.dup := $i127.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 52} true;
  assume {:verifier.code 0} true;
  call $i167, $i167.dup := multiply($i166, $i166.dup, 9, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 52} true;
  assume {:verifier.code 0} true;
  $i168 := $zext.i8.i32($i167);
  $i168.dup := $i167.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 50} true;
  assume {:verifier.code 0} true;
  $i169 := $xor.i32($i165,$i168);
  $i169.dup := $or.i1($i165.dup,$i168.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 78} true;
  assume {:verifier.code 0} true;
  $i170 := $zext.i8.i32($i131);
  $i170.dup := $i131.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 69} true;
  assume {:verifier.code 0} true;
  call $i171, $i171.dup := multiply($i170, $i170.dup, 14, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 69} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i32($i171);
  $i172.dup := $i171.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 67} true;
  assume {:verifier.code 0} true;
  $i173 := $xor.i32($i169,$i172);
  $i173.dup := $or.i1($i169.dup,$i172.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 16} true;
  assume {:verifier.code 0} true;
  $i174 := $trunc.i32.i8($i173);
  $i174.dup := $i173.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 2} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(1,4));
  $p175.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 2} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i32.i64($i122);
  $i176.dup := 0;
  $p177 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(1,4)),$mul.ref($i176,1));
  $p177.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i176.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 215, 14} true;
  assume {:verifier.code 0} true;
  $p177.dup := 0;
  $M.9 := $store.i8($M.9,$p177,$i174);
  $M.9.dup := $store.i1($M.9.dup,$p177,$i174.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 25} true;
  assume {:verifier.code 0} true;
  $i178 := $zext.i8.i32($i139);
  $i178.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 16} true;
  assume {:verifier.code 0} true;
  call $i179, $i179.dup := multiply($i178, $i178.dup, 11, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 16} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i8.i32($i179);
  $i180.dup := $i179.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 43} true;
  assume {:verifier.code 0} true;
  $i181 := $zext.i8.i32($i127);
  $i181.dup := $i127.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 34} true;
  assume {:verifier.code 0} true;
  call $i182, $i182.dup := multiply($i181, $i181.dup, 13, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 34} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i8.i32($i182);
  $i183.dup := $i182.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 32} true;
  assume {:verifier.code 0} true;
  $i184 := $xor.i32($i180,$i183);
  $i184.dup := $or.i1($i180.dup,$i183.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 61} true;
  assume {:verifier.code 0} true;
  $i185 := $zext.i8.i32($i131);
  $i185.dup := $i131.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 52} true;
  assume {:verifier.code 0} true;
  call $i186, $i186.dup := multiply($i185, $i185.dup, 9, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 52} true;
  assume {:verifier.code 0} true;
  $i187 := $zext.i8.i32($i186);
  $i187.dup := $i186.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 50} true;
  assume {:verifier.code 0} true;
  $i188 := $xor.i32($i184,$i187);
  $i188.dup := $or.i1($i184.dup,$i187.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 78} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i8.i32($i135);
  $i189.dup := $i135.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 69} true;
  assume {:verifier.code 0} true;
  call $i190, $i190.dup := multiply($i189, $i189.dup, 14, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 69} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i8.i32($i190);
  $i191.dup := $i190.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 67} true;
  assume {:verifier.code 0} true;
  $i192 := $xor.i32($i188,$i191);
  $i192.dup := $or.i1($i188.dup,$i191.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 16} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i8($i192);
  $i193.dup := $i192.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 2} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(2,4));
  $p194.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 2} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i32.i64($i122);
  $i195.dup := 0;
  $p196 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(2,4)),$mul.ref($i195,1));
  $p196.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i195.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 216, 14} true;
  assume {:verifier.code 0} true;
  $p196.dup := 0;
  $M.9 := $store.i8($M.9,$p196,$i193);
  $M.9.dup := $store.i1($M.9.dup,$p196,$i193.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 25} true;
  assume {:verifier.code 0} true;
  $i197 := $zext.i8.i32($i127);
  $i197.dup := $i127.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 16} true;
  assume {:verifier.code 0} true;
  call $i198, $i198.dup := multiply($i197, $i197.dup, 11, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 16} true;
  assume {:verifier.code 0} true;
  $i199 := $zext.i8.i32($i198);
  $i199.dup := $i198.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 43} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i8.i32($i131);
  $i200.dup := $i131.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 34} true;
  assume {:verifier.code 0} true;
  call $i201, $i201.dup := multiply($i200, $i200.dup, 13, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 34} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i8.i32($i201);
  $i202.dup := $i201.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 32} true;
  assume {:verifier.code 0} true;
  $i203 := $xor.i32($i199,$i202);
  $i203.dup := $or.i1($i199.dup,$i202.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 61} true;
  assume {:verifier.code 0} true;
  $i204 := $zext.i8.i32($i135);
  $i204.dup := $i135.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 52} true;
  assume {:verifier.code 0} true;
  call $i205, $i205.dup := multiply($i204, $i204.dup, 9, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 52} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i8.i32($i205);
  $i206.dup := $i205.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 50} true;
  assume {:verifier.code 0} true;
  $i207 := $xor.i32($i203,$i206);
  $i207.dup := $or.i1($i203.dup,$i206.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 78} true;
  assume {:verifier.code 0} true;
  $i208 := $zext.i8.i32($i139);
  $i208.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 69} true;
  assume {:verifier.code 0} true;
  call $i209, $i209.dup := multiply($i208, $i208.dup, 14, 0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 69} true;
  assume {:verifier.code 0} true;
  $i210 := $zext.i8.i32($i209);
  $i210.dup := $i209.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 67} true;
  assume {:verifier.code 0} true;
  $i211 := $xor.i32($i207,$i210);
  $i211.dup := $or.i1($i207.dup,$i210.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 16} true;
  assume {:verifier.code 0} true;
  $i212 := $trunc.i32.i8($i211);
  $i212.dup := $i211.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 2} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(3,4));
  $p213.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 2} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i32.i64($i122);
  $i214.dup := 0;
  $p215 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref(3,4)),$mul.ref($i214,1));
  $p215.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0)),$or.i1($i214.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 217, 14} true;
  assume {:verifier.code 0} true;
  $p215.dup := 0;
  $M.9 := $store.i8($M.9,$p215,$i212);
  $M.9.dup := $store.i1($M.9.dup,$p215,$i212.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 218, 7} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !($i123 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 218, 7} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb53:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 209, 24} true;
  assume {:verifier.code 0} true;
  $i216 := $add.i32($i122,1);
  $i216.dup := $or.i1($i122.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i216);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $i216;
  $i122.dup := 0;
  goto $bb50;
$bb54:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 219, 18} true;
  assume {:verifier.code 0} true;
  $i218 := $slt.i32($i217,4);
  $i218.dup := $or.i1($i217.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 219, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i218} true;
  $i218.dup := 0;
  goto $bb55, $bb56;
$bb55:
  assume ($i218 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 220, 12} true;
  assume {:verifier.code 0} true;
  $i219 := 0;
  $i219.dup := 0;
  goto $bb57;
$bb56:
  assume !($i218 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 222, 10} true;
  assume {:verifier.code 0} true;
  $i235 := 0;
  $i235.dup := 0;
  goto $bb62;
$bb57:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 220, 20} true;
  assume {:verifier.code 0} true;
  $i220 := $slt.i32($i219,4);
  $i220.dup := $or.i1($i219.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 220, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i220} true;
  $i220.dup := 0;
  goto $bb58, $bb59;
$bb58:
  assume ($i220 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 26} true;
  assume {:verifier.code 0} true;
  $i221 := $sext.i32.i64($i217);
  $i221.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 26} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i221,4));
  $p222.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i221.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 38} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i32($i219,4);
  $i223.dup := $or.i1($i219.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 42} true;
  assume {:verifier.code 0} true;
  $i224 := $sub.i32($i223,$i217);
  $i224.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 47} true;
  assume {:verifier.code 0} true;
  $i225 := $srem.i32($i224,4);
  $i225.dup := $or.i1($i224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 26} true;
  assume {:verifier.code 0} true;
  $i226 := $sext.i32.i64($i225);
  $i226.dup := 0;
  $p227 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i221,4)),$mul.ref($i226,1));
  $p227.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i221.dup,0)),$or.i1($i226.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 26} true;
  assume {:verifier.code 0} true;
  $p227.dup := 0;
  $i228 := $load.i8($M.9,$p227);
  $i228.dup := $load.i1($M.9.dup,$p227);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 9} true;
  assume {:verifier.code 0} true;
  $i229 := $sext.i32.i64($i217);
  $i229.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 9} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i229,4));
  $p230.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i229.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 9} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i32.i64($i219);
  $i231.dup := 0;
  $p232 := $add.ref($add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i229,4)),$mul.ref($i231,1));
  $p232.dup := $or.i1($or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i229.dup,0)),$or.i1($i231.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 24} true;
  assume {:verifier.code 0} true;
  $p232.dup := 0;
  $M.10 := $store.i8($M.10,$p232,$i228);
  $M.10.dup := $store.i1($M.10.dup,$p232,$i228.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 9} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume !($i220 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 221, 50} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 220, 24} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i219,1);
  $i233.dup := $or.i1($i219.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i233);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i219 := $i233;
  $i219.dup := 0;
  goto $bb57;
$bb61:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 219, 22} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i32($i217,1);
  $i234.dup := $or.i1($i217.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i234);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 219, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $i234;
  $i217.dup := 0;
  goto $bb54;
$bb62:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($i235.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 222, 18} true;
  assume {:verifier.code 0} true;
  $i236 := $slt.i32($i235,4);
  $i236.dup := $or.i1($i235.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 222, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  $i236.dup := 0;
  goto $bb63, $bb64;
$bb63:
  assume ($i236 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 223, 12} true;
  assume {:verifier.code 0} true;
  $i237 := 0;
  $i237.dup := 0;
  goto $bb65;
$bb64:
  assume !($i236 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 225, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb65:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($i237.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i235.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p5.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 223, 20} true;
  assume {:verifier.code 0} true;
  $i238 := $slt.i32($i237,4);
  $i238.dup := $or.i1($i237.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 223, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i238} true;
  $i238.dup := 0;
  goto $bb66, $bb67;
$bb66:
  assume ($i238 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 34} true;
  assume {:verifier.code 0} true;
  $i239 := $sext.i32.i64($i235);
  $i239.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 34} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i239,4));
  $p240.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i239.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 34} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i32.i64($i237);
  $i241.dup := 0;
  $p242 := $add.ref($add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i239,4)),$mul.ref($i241,1));
  $p242.dup := $or.i1($or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i239.dup,0)),$or.i1($i241.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 34} true;
  assume {:verifier.code 0} true;
  $p242.dup := 0;
  $i243 := $load.i8($M.10,$p242);
  $i243.dup := $load.i1($M.10.dup,$p242);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 23} true;
  assume {:verifier.code 0} true;
  call $i244, $i244.dup := invbytesub($i243, $i243.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 9} true;
  assume {:verifier.code 0} true;
  $i245 := $sext.i32.i64($i235);
  $i245.dup := $i235.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 9} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i245,4));
  $p246.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i245.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $sext.i32.i64($i237);
  $i247.dup := 0;
  $p248 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i245,4)),$mul.ref($i247,1));
  $p248.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i245.dup,0)),$or.i1($i247.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 21} true;
  assume {:verifier.code 0} true;
  $p248.dup := 0;
  $M.9 := $store.i8($M.9,$p248,$i244);
  $M.9.dup := $store.i1($M.9.dup,$p248,$i244.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 9} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !($i238 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 224, 48} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb68:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 223, 24} true;
  assume {:verifier.code 0} true;
  $i249 := $add.i32($i237,1);
  $i249.dup := $or.i1($i237.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i249);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 223, 7} true;
  assume {:verifier.code 0} true;
  $i237 := $i249;
  $i237.dup := 0;
  goto $bb65;
$bb69:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 222, 22} true;
  assume {:verifier.code 0} true;
  $i250 := $add.i32($i235,1);
  $i250.dup := $or.i1($i235.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i250);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 222, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $i250;
  $i235.dup := 0;
  goto $bb62;
$bb70:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 204, 21} true;
  assume {:verifier.code 0} true;
  $i251 := $add.i32($i96,$sub.i32(0,1));
  $i251.dup := $or.i1($i96.dup,$or.i1(0,0));
  call {:cexpr "r"} boogie_si_record_i32($i251);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 204, 3} true;
  assume {:verifier.code 0} true;
  $i96 := $i251;
  $i96.dup := 0;
  goto $bb36;
$bb71:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 227, 16} true;
  assume {:verifier.code 0} true;
  $i253 := $slt.i32($i252,4);
  $i253.dup := $or.i1($i252.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 227, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  $i253.dup := 0;
  goto $bb72, $bb73;
$bb72:
  assume ($i253 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 228, 10} true;
  assume {:verifier.code 0} true;
  $i254 := 0;
  $i254.dup := 0;
  goto $bb74;
$bb73:
  assume !($i253 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 231, 8} true;
  assume {:verifier.code 0} true;
  $i272 := 0;
  $i272.dup := 0;
  goto $bb79;
$bb74:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 228, 18} true;
  assume {:verifier.code 0} true;
  $i255 := $slt.i32($i254,4);
  $i255.dup := $or.i1($i254.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 228, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i255} true;
  $i255.dup := 0;
  goto $bb75, $bb76;
$bb75:
  assume ($i255 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 22} true;
  assume {:verifier.code 0} true;
  $i256 := $sext.i32.i64($i254);
  $i256.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 22} true;
  assume {:verifier.code 0} true;
  $p257 := $add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i256,44));
  $p257.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i256.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 22} true;
  assume {:verifier.code 0} true;
  $i258 := $sext.i32.i64($i252);
  $i258.dup := 0;
  $p259 := $add.ref($add.ref($add.ref($p3,$mul.ref(0,176)),$mul.ref($i256,44)),$mul.ref($i258,1));
  $p259.dup := $or.i1($or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1($i256.dup,0)),$or.i1($i258.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 22} true;
  assume {:verifier.code 0} true;
  $p259.dup := 0;
  $i260 := $load.i8($M.6,$p259);
  $i260.dup := $load.i1($M.6.dup,$p259);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 22} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.i8.i32($i260);
  $i261.dup := $i260.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 7} true;
  assume {:verifier.code 0} true;
  $i262 := $sext.i32.i64($i254);
  $i262.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 7} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i262,4));
  $p263.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i262.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 7} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i32.i64($i252);
  $i264.dup := 0;
  $p265 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i262,4)),$mul.ref($i264,1));
  $p265.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i262.dup,0)),$or.i1($i264.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 19} true;
  assume {:verifier.code 0} true;
  $p265.dup := 0;
  $i266 := $load.i8($M.9,$p265);
  $i266.dup := $load.i1($M.9.dup,$p265);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 19} true;
  assume {:verifier.code 0} true;
  $i267 := $zext.i8.i32($i266);
  $i267.dup := $i266.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 19} true;
  assume {:verifier.code 0} true;
  $i268 := $xor.i32($i267,$i261);
  $i268.dup := $or.i1($i267.dup,$i261.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 19} true;
  assume {:verifier.code 0} true;
  $i269 := $trunc.i32.i8($i268);
  $i269.dup := $i268.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 19} true;
  assume {:verifier.code 0} true;
  $p265.dup := 0;
  $M.9 := $store.i8($M.9,$p265,$i269);
  $M.9.dup := $store.i1($M.9.dup,$p265,$i269.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 7} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb76:
  assume !($i255 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 229, 35} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb77:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 228, 22} true;
  assume {:verifier.code 0} true;
  $i270 := $add.i32($i254,1);
  $i270.dup := $or.i1($i254.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i270);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 228, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $i270;
  $i254.dup := 0;
  goto $bb74;
$bb78:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 227, 20} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i252,1);
  $i271.dup := $or.i1($i252.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i271);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 227, 3} true;
  assume {:verifier.code 0} true;
  $i252 := $i271;
  $i252.dup := 0;
  goto $bb71;
$bb79:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 231, 16} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i272,4);
  $i273.dup := $or.i1($i272.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 231, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  $i273.dup := 0;
  goto $bb80, $bb81;
$bb80:
  assume ($i273 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 232, 10} true;
  assume {:verifier.code 0} true;
  $i274 := 0;
  $i274.dup := 0;
  goto $bb82;
$bb81:
  assume !($i273 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 235, 3} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb82:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p4.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 232, 18} true;
  assume {:verifier.code 0} true;
  $i275 := $slt.i32($i274,4);
  $i275.dup := $or.i1($i274.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 232, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  $i275.dup := 0;
  goto $bb83, $bb84;
$bb83:
  assume ($i275 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 24} true;
  assume {:verifier.code 0} true;
  $i276 := $sext.i32.i64($i274);
  $i276.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 24} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i276,4));
  $p277.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i276.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 24} true;
  assume {:verifier.code 0} true;
  $i278 := $sext.i32.i64($i272);
  $i278.dup := 0;
  $p279 := $add.ref($add.ref($add.ref($p4,$mul.ref(0,16)),$mul.ref($i276,4)),$mul.ref($i278,1));
  $p279.dup := $or.i1($or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i276.dup,0)),$or.i1($i278.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 24} true;
  assume {:verifier.code 0} true;
  $p279.dup := 0;
  $i280 := $load.i8($M.9,$p279);
  $i280.dup := $load.i1($M.9.dup,$p279);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 13} true;
  assume {:verifier.code 0} true;
  $i281 := $mul.i32($i272,4);
  $i281.dup := $or.i1($i272.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 17} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i32($i281,$i274);
  $i282.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i283 := $sext.i32.i64($i282);
  $i283.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p284 := $add.ref($p0,$mul.ref($i283,1));
  $p284.dup := $or.i1($p0.dup,$or.i1($i283.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 22} true;
  assume {:verifier.code 0} true;
  $p284.dup := 0;
  $M.11 := $store.i8($M.11,$p284,$i280);
  $M.11.dup := $store.i1($M.11.dup,$p284,$i280.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 7} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !($i275 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 233, 34} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 232, 22} true;
  assume {:verifier.code 0} true;
  $i285 := $add.i32($i274,1);
  $i285.dup := $or.i1($i274.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i285);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 232, 5} true;
  assume {:verifier.code 0} true;
  $i274 := $i285;
  $i274.dup := 0;
  goto $bb82;
$bb86:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 231, 20} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i32($i272,1);
  $i286.dup := $or.i1($i272.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i286);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 231, 3} true;
  assume {:verifier.code 0} true;
  $i272 := $i286;
  $i272.dup := 0;
  goto $bb79;
}
const invbytesub: ref;
axiom (invbytesub == $sub.ref(0,10344));
procedure {:inline 1} invbytesub($i0: i8, $i0.dup: i1) returns ($r: i8, $r.dup: i1)
modifies $M.12, $M.13, $exn;
modifies $M.2, $M.3, $M.4;
modifies $CurrAddr;
{
  var $p1: ref;
  var $p1.dup: i1;
  var $p2: ref;
  var $p2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i1;
  var $i4.dup: i1;
  var $i5: i32;
  var $i5.dup: i1;
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i8;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $i13: i8;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i8;
  var $i16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $i18: i8;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i8;
  var $i21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $i23: i8;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i8;
  var $i26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $i28: i8;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i32;
  var $i30.dup: i1;
  var $i31: i8;
  var $i31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $i33: i8;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $i36: i8;
  var $i36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $i38: i32;
  var $i38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $i40: i8;
  var $i40.dup: i1;
  var $i41: i32;
  var $i41.dup: i1;
  var $i42: i32;
  var $i42.dup: i1;
  var $i43: i8;
  var $i43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $p45: ref;
  var $p45.dup: i1;
  var $i46: i8;
  var $i46.dup: i1;
  var $i47: i32;
  var $i47.dup: i1;
  var $p48: ref;
  var $p48.dup: i1;
  var $i49: i8;
  var $i49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $i51: i32;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $i53: i8;
  var $i53.dup: i1;
  var $i54: i32;
  var $i54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i8;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $p58: ref;
  var $p58.dup: i1;
  var $i59: i8;
  var $i59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $i62: i8;
  var $i62.dup: i1;
  var $i63: i32;
  var $i63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $i66: i8;
  var $i66.dup: i1;
  var $i67: i32;
  var $i67.dup: i1;
  var $i68: i32;
  var $i68.dup: i1;
  var $i69: i8;
  var $i69.dup: i1;
  var $p70: ref;
  var $p70.dup: i1;
  var $p71: ref;
  var $p71.dup: i1;
  var $i72: i8;
  var $i72.dup: i1;
  var $i73: i32;
  var $i73.dup: i1;
  var $p74: ref;
  var $p74.dup: i1;
  var $i75: i8;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $i77: i32;
  var $i77.dup: i1;
  var $p78: ref;
  var $p78.dup: i1;
  var $i79: i8;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $i81: i32;
  var $i81.dup: i1;
  var $i82: i8;
  var $i82.dup: i1;
  var $p83: ref;
  var $p83.dup: i1;
  var $p84: ref;
  var $p84.dup: i1;
  var $i85: i8;
  var $i85.dup: i1;
  var $i86: i32;
  var $i86.dup: i1;
  var $p87: ref;
  var $p87.dup: i1;
  var $i88: i8;
  var $i88.dup: i1;
  var $i89: i32;
  var $i89.dup: i1;
  var $i90: i32;
  var $i90.dup: i1;
  var $p91: ref;
  var $p91.dup: i1;
  var $i92: i8;
  var $i92.dup: i1;
  var $i93: i32;
  var $i93.dup: i1;
  var $i94: i32;
  var $i94.dup: i1;
  var $i95: i8;
  var $i95.dup: i1;
  var $p96: ref;
  var $p96.dup: i1;
  var $p97: ref;
  var $p97.dup: i1;
  var $i98: i8;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $p100: ref;
  var $p100.dup: i1;
  var $i101: i8;
  var $i101.dup: i1;
  var $i102: i32;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $p104: ref;
  var $p104.dup: i1;
  var $i105: i8;
  var $i105.dup: i1;
  var $i106: i32;
  var $i106.dup: i1;
  var $i107: i32;
  var $i107.dup: i1;
  var $i108: i8;
  var $i108.dup: i1;
  var $p109: ref;
  var $p109.dup: i1;
  var $p110: ref;
  var $p110.dup: i1;
  var $i111: i8;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $p113: ref;
  var $p113.dup: i1;
  var $i114: i8;
  var $i114.dup: i1;
  var $i115: i32;
  var $i115.dup: i1;
  var $i116: i32;
  var $i116.dup: i1;
  var $p117: ref;
  var $p117.dup: i1;
  var $i118: i8;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $i121: i8;
  var $i121.dup: i1;
  var $p122: ref;
  var $p122.dup: i1;
  var $p123: ref;
  var $p123.dup: i1;
  var $i124: i8;
  var $i124.dup: i1;
  var $i125: i32;
  var $i125.dup: i1;
  var $p126: ref;
  var $p126.dup: i1;
  var $i127: i8;
  var $i127.dup: i1;
  var $i128: i32;
  var $i128.dup: i1;
  var $i129: i32;
  var $i129.dup: i1;
  var $p130: ref;
  var $p130.dup: i1;
  var $i131: i8;
  var $i131.dup: i1;
  var $i132: i32;
  var $i132.dup: i1;
  var $i133: i32;
  var $i133.dup: i1;
  var $i134: i8;
  var $i134.dup: i1;
  var $p135: ref;
  var $p135.dup: i1;
  var $i136: i32;
  var $i136.dup: i1;
  var $i137: i8;
  var $i137.dup: i1;
  var $i138: i1;
  var $i138.dup: i1;
  var $i139: i64;
  var $i139.dup: i1;
  var $p140: ref;
  var $p140.dup: i1;
  var $i141: i8;
  var $i141.dup: i1;
  var $i142: i32;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i32;
  var $i144.dup: i1;
  var $i145: i32;
  var $i145.dup: i1;
  var $i146: i8;
  var $i146.dup: i1;
  var $i147: i32;
  var $i147.dup: i1;
  var $i148: i8;
  var $i148.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 8} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8,$zext.i32.i64(1)));
  $p1.dup := 0;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8,$zext.i32.i64(1)));
  $p2.dup := 0;
  call {:cexpr "invbytesub:arg:c"} boogie_si_record_i8($i0);
  assume true;
  assume true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 8} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  $i3.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p2.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3,8);
  $i4.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  $i4.dup := 0;
  goto $bb2, $bb3;
$bb2:
  assume ($i4 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i0);
  $i5.dup := $i0.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 39} true;
  assume {:verifier.code 0} true;
  $i6 := $ashr.i32($i5,$i3);
  $i6.dup := $or.i1($i5.dup,$i3.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 34} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32(1,$i6);
  $i7.dup := $or.i1(0,$i6.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 32} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  $i8.dup := $i7.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i3);
  $i9.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 25} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p10 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref($i9,1));
  $p10.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1($i9.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 30} true;
  assume {:verifier.code 0} true;
  $p10.dup := 0;
  $M.12 := $store.i8($M.12,$p10,$i8);
  $M.12.dup := $store.i1($M.12.dup,$p10,$i8.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 25} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i4 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 84, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p12.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 84, 8} true;
  assume {:verifier.code 0} true;
  $p12.dup := 0;
  $i13 := $load.i8($M.12,$p12);
  $i13.dup := $load.i1($M.12.dup,$p12);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 84, 8} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  $i14.dup := $i13.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 84, 8} true;
  assume {:verifier.code 0} true;
  $i15 := $xor.i32($i14,1);
  $i15.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 84, 8} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  $i16.dup := $i15.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 84, 8} true;
  assume {:verifier.code 0} true;
  $p12.dup := 0;
  $M.12 := $store.i8($M.12,$p12,$i16);
  $M.12.dup := $store.i1($M.12.dup,$p12,$i16.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 85, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p17.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 85, 8} true;
  assume {:verifier.code 0} true;
  $p17.dup := 0;
  $i18 := $load.i8($M.12,$p17);
  $i18.dup := $load.i1($M.12.dup,$p17);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 85, 8} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  $i19.dup := $i18.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 85, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $xor.i32($i19,1);
  $i20.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 85, 8} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  $i21.dup := $i20.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 85, 8} true;
  assume {:verifier.code 0} true;
  $p17.dup := 0;
  $M.12 := $store.i8($M.12,$p17,$i21);
  $M.12.dup := $store.i1($M.12.dup,$p17,$i21.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 86, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p22.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 86, 8} true;
  assume {:verifier.code 0} true;
  $p22.dup := 0;
  $i23 := $load.i8($M.12,$p22);
  $i23.dup := $load.i1($M.12.dup,$p22);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 86, 8} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i32($i23);
  $i24.dup := $i23.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 86, 8} true;
  assume {:verifier.code 0} true;
  $i25 := $xor.i32($i24,1);
  $i25.dup := $or.i1($i24.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 86, 8} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  $i26.dup := $i25.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 86, 8} true;
  assume {:verifier.code 0} true;
  $p22.dup := 0;
  $M.12 := $store.i8($M.12,$p22,$i26);
  $M.12.dup := $store.i1($M.12.dup,$p22,$i26.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 87, 3} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p27.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 87, 8} true;
  assume {:verifier.code 0} true;
  $p27.dup := 0;
  $i28 := $load.i8($M.12,$p27);
  $i28.dup := $load.i1($M.12.dup,$p27);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 87, 8} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  $i29.dup := $i28.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 87, 8} true;
  assume {:verifier.code 0} true;
  $i30 := $xor.i32($i29,1);
  $i30.dup := $or.i1($i29.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 87, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i8($i30);
  $i31.dup := $i30.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 87, 8} true;
  assume {:verifier.code 0} true;
  $p27.dup := 0;
  $M.12 := $store.i8($M.12,$p27,$i31);
  $M.12.dup := $store.i1($M.12.dup,$p27,$i31.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p32.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 10} true;
  assume {:verifier.code 0} true;
  $p32.dup := 0;
  $i33 := $load.i8($M.12,$p32);
  $i33.dup := $load.i1($M.12.dup,$p32);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 10} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  $i34.dup := $i33.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p35.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 17} true;
  assume {:verifier.code 0} true;
  $p35.dup := 0;
  $i36 := $load.i8($M.12,$p35);
  $i36.dup := $load.i1($M.12.dup,$p35);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  $i37.dup := $i36.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $xor.i32($i34,$i37);
  $i38.dup := $or.i1($i34.dup,$i37.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 24} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p39.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 24} true;
  assume {:verifier.code 0} true;
  $p39.dup := 0;
  $i40 := $load.i8($M.12,$p39);
  $i40.dup := $load.i1($M.12.dup,$p39);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 24} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  $i41.dup := $i40.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 22} true;
  assume {:verifier.code 0} true;
  $i42 := $xor.i32($i38,$i41);
  $i42.dup := $or.i1($i38.dup,$i41.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 10} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i8($i42);
  $i43.dup := $i42.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(0,1));
  $p44.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 88, 8} true;
  assume {:verifier.code 0} true;
  $p44.dup := 0;
  $M.13 := $store.i8($M.13,$p44,$i43);
  $M.13.dup := $store.i1($M.13.dup,$p44,$i43.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p45.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 10} true;
  assume {:verifier.code 0} true;
  $p45.dup := 0;
  $i46 := $load.i8($M.12,$p45);
  $i46.dup := $load.i1($M.12.dup,$p45);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 10} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  $i47.dup := $i46.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 17} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p48.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 17} true;
  assume {:verifier.code 0} true;
  $p48.dup := 0;
  $i49 := $load.i8($M.12,$p48);
  $i49.dup := $load.i1($M.12.dup,$p48);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  $i50.dup := $i49.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 15} true;
  assume {:verifier.code 0} true;
  $i51 := $xor.i32($i47,$i50);
  $i51.dup := $or.i1($i47.dup,$i50.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 24} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p52.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 24} true;
  assume {:verifier.code 0} true;
  $p52.dup := 0;
  $i53 := $load.i8($M.12,$p52);
  $i53.dup := $load.i1($M.12.dup,$p52);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 24} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i32($i53);
  $i54.dup := $i53.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 22} true;
  assume {:verifier.code 0} true;
  $i55 := $xor.i32($i51,$i54);
  $i55.dup := $or.i1($i51.dup,$i54.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 10} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i32.i8($i55);
  $i56.dup := $i55.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 3} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(1,1));
  $p57.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 89, 8} true;
  assume {:verifier.code 0} true;
  $p57.dup := 0;
  $M.13 := $store.i8($M.13,$p57,$i56);
  $M.13.dup := $store.i1($M.13.dup,$p57,$i56.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 10} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p58.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 10} true;
  assume {:verifier.code 0} true;
  $p58.dup := 0;
  $i59 := $load.i8($M.12,$p58);
  $i59.dup := $load.i1($M.12.dup,$p58);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 10} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  $i60.dup := $i59.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 17} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p61.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 17} true;
  assume {:verifier.code 0} true;
  $p61.dup := 0;
  $i62 := $load.i8($M.12,$p61);
  $i62.dup := $load.i1($M.12.dup,$p61);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i62);
  $i63.dup := $i62.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 15} true;
  assume {:verifier.code 0} true;
  $i64 := $xor.i32($i60,$i63);
  $i64.dup := $or.i1($i60.dup,$i63.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 24} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p65.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 24} true;
  assume {:verifier.code 0} true;
  $p65.dup := 0;
  $i66 := $load.i8($M.12,$p65);
  $i66.dup := $load.i1($M.12.dup,$p65);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 24} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i8.i32($i66);
  $i67.dup := $i66.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 22} true;
  assume {:verifier.code 0} true;
  $i68 := $xor.i32($i64,$i67);
  $i68.dup := $or.i1($i64.dup,$i67.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 10} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  $i69.dup := $i68.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 3} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(2,1));
  $p70.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 90, 8} true;
  assume {:verifier.code 0} true;
  $p70.dup := 0;
  $M.13 := $store.i8($M.13,$p70,$i69);
  $M.13.dup := $store.i1($M.13.dup,$p70,$i69.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 10} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p71.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 10} true;
  assume {:verifier.code 0} true;
  $p71.dup := 0;
  $i72 := $load.i8($M.12,$p71);
  $i72.dup := $load.i1($M.12.dup,$p71);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 10} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  $i73.dup := $i72.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 17} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p74.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 17} true;
  assume {:verifier.code 0} true;
  $p74.dup := 0;
  $i75 := $load.i8($M.12,$p74);
  $i75.dup := $load.i1($M.12.dup,$p74);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i8.i32($i75);
  $i76.dup := $i75.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 15} true;
  assume {:verifier.code 0} true;
  $i77 := $xor.i32($i73,$i76);
  $i77.dup := $or.i1($i73.dup,$i76.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 24} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p78.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 24} true;
  assume {:verifier.code 0} true;
  $p78.dup := 0;
  $i79 := $load.i8($M.12,$p78);
  $i79.dup := $load.i1($M.12.dup,$p78);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 24} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i79);
  $i80.dup := $i79.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 22} true;
  assume {:verifier.code 0} true;
  $i81 := $xor.i32($i77,$i80);
  $i81.dup := $or.i1($i77.dup,$i80.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 10} true;
  assume {:verifier.code 0} true;
  $i82 := $trunc.i32.i8($i81);
  $i82.dup := $i81.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 3} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(3,1));
  $p83.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 91, 8} true;
  assume {:verifier.code 0} true;
  $p83.dup := 0;
  $M.13 := $store.i8($M.13,$p83,$i82);
  $M.13.dup := $store.i1($M.13.dup,$p83,$i82.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 10} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p84.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 10} true;
  assume {:verifier.code 0} true;
  $p84.dup := 0;
  $i85 := $load.i8($M.12,$p84);
  $i85.dup := $load.i1($M.12.dup,$p84);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 10} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i85);
  $i86.dup := $i85.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 17} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p87.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 17} true;
  assume {:verifier.code 0} true;
  $p87.dup := 0;
  $i88 := $load.i8($M.12,$p87);
  $i88.dup := $load.i1($M.12.dup,$p87);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i32($i88);
  $i89.dup := $i88.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 15} true;
  assume {:verifier.code 0} true;
  $i90 := $xor.i32($i86,$i89);
  $i90.dup := $or.i1($i86.dup,$i89.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 24} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p91.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 24} true;
  assume {:verifier.code 0} true;
  $p91.dup := 0;
  $i92 := $load.i8($M.12,$p91);
  $i92.dup := $load.i1($M.12.dup,$p91);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 24} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i8.i32($i92);
  $i93.dup := $i92.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 22} true;
  assume {:verifier.code 0} true;
  $i94 := $xor.i32($i90,$i93);
  $i94.dup := $or.i1($i90.dup,$i93.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 10} true;
  assume {:verifier.code 0} true;
  $i95 := $trunc.i32.i8($i94);
  $i95.dup := $i94.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 3} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(4,1));
  $p96.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 92, 8} true;
  assume {:verifier.code 0} true;
  $p96.dup := 0;
  $M.13 := $store.i8($M.13,$p96,$i95);
  $M.13.dup := $store.i1($M.13.dup,$p96,$i95.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 10} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(7,1));
  $p97.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 10} true;
  assume {:verifier.code 0} true;
  $p97.dup := 0;
  $i98 := $load.i8($M.12,$p97);
  $i98.dup := $load.i1($M.12.dup,$p97);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 10} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i8.i32($i98);
  $i99.dup := $i98.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 17} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(2,1));
  $p100.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 17} true;
  assume {:verifier.code 0} true;
  $p100.dup := 0;
  $i101 := $load.i8($M.12,$p100);
  $i101.dup := $load.i1($M.12.dup,$p100);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 17} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i8.i32($i101);
  $i102.dup := $i101.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 15} true;
  assume {:verifier.code 0} true;
  $i103 := $xor.i32($i99,$i102);
  $i103.dup := $or.i1($i99.dup,$i102.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 24} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p104.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 24} true;
  assume {:verifier.code 0} true;
  $p104.dup := 0;
  $i105 := $load.i8($M.12,$p104);
  $i105.dup := $load.i1($M.12.dup,$p104);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 24} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i8.i32($i105);
  $i106.dup := $i105.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 22} true;
  assume {:verifier.code 0} true;
  $i107 := $xor.i32($i103,$i106);
  $i107.dup := $or.i1($i103.dup,$i106.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 10} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.i32.i8($i107);
  $i108.dup := $i107.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 3} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(5,1));
  $p109.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 93, 8} true;
  assume {:verifier.code 0} true;
  $p109.dup := 0;
  $M.13 := $store.i8($M.13,$p109,$i108);
  $M.13.dup := $store.i1($M.13.dup,$p109,$i108.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 10} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(0,1));
  $p110.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 10} true;
  assume {:verifier.code 0} true;
  $p110.dup := 0;
  $i111 := $load.i8($M.12,$p110);
  $i111.dup := $load.i1($M.12.dup,$p110);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 10} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i8.i32($i111);
  $i112.dup := $i111.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 17} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(3,1));
  $p113.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 17} true;
  assume {:verifier.code 0} true;
  $p113.dup := 0;
  $i114 := $load.i8($M.12,$p113);
  $i114.dup := $load.i1($M.12.dup,$p113);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 17} true;
  assume {:verifier.code 0} true;
  $i115 := $zext.i8.i32($i114);
  $i115.dup := $i114.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 15} true;
  assume {:verifier.code 0} true;
  $i116 := $xor.i32($i112,$i115);
  $i116.dup := $or.i1($i112.dup,$i115.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 24} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(5,1));
  $p117.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 24} true;
  assume {:verifier.code 0} true;
  $p117.dup := 0;
  $i118 := $load.i8($M.12,$p117);
  $i118.dup := $load.i1($M.12.dup,$p117);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 24} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i118);
  $i119.dup := $i118.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 22} true;
  assume {:verifier.code 0} true;
  $i120 := $xor.i32($i116,$i119);
  $i120.dup := $or.i1($i116.dup,$i119.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 10} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  $i121.dup := $i120.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 3} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(6,1));
  $p122.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 94, 8} true;
  assume {:verifier.code 0} true;
  $p122.dup := 0;
  $M.13 := $store.i8($M.13,$p122,$i121);
  $M.13.dup := $store.i1($M.13.dup,$p122,$i121.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 10} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(1,1));
  $p123.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 10} true;
  assume {:verifier.code 0} true;
  $p123.dup := 0;
  $i124 := $load.i8($M.12,$p123);
  $i124.dup := $load.i1($M.12.dup,$p123);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 10} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i8.i32($i124);
  $i125.dup := $i124.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 17} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(4,1));
  $p126.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 17} true;
  assume {:verifier.code 0} true;
  $p126.dup := 0;
  $i127 := $load.i8($M.12,$p126);
  $i127.dup := $load.i1($M.12.dup,$p126);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 17} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i32($i127);
  $i128.dup := $i127.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 15} true;
  assume {:verifier.code 0} true;
  $i129 := $xor.i32($i125,$i128);
  $i129.dup := $or.i1($i125.dup,$i128.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 24} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($add.ref($p1,$mul.ref(0,8)),$mul.ref(6,1));
  $p130.dup := $or.i1($or.i1($p1.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 24} true;
  assume {:verifier.code 0} true;
  $p130.dup := 0;
  $i131 := $load.i8($M.12,$p130);
  $i131.dup := $load.i1($M.12.dup,$p130);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 24} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i32($i131);
  $i132.dup := $i131.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 22} true;
  assume {:verifier.code 0} true;
  $i133 := $xor.i32($i129,$i132);
  $i133.dup := $or.i1($i129.dup,$i132.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 10} true;
  assume {:verifier.code 0} true;
  $i134 := $trunc.i32.i8($i133);
  $i134.dup := $i133.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 3} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref(7,1));
  $p135.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 95, 8} true;
  assume {:verifier.code 0} true;
  $p135.dup := 0;
  $M.13 := $store.i8($M.13,$p135,$i134);
  $M.13.dup := $store.i1($M.13.dup,$p135,$i134.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 8} true;
  assume {:verifier.code 0} true;
  $i136 := 0;
  $i136.dup := 0;
  $i137 := 0;
  $i137.dup := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i3,1);
  $i11.dup := $or.i1($i3.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 83, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $i11;
  $i3.dup := 0;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:unlikely_shadow_invariant ($p2.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i136.dup == 0)} true;
  assert {:unlikely_shadow_invariant ($i137.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 16} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i136,8);
  $i138.dup := $or.i1($i136.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  $i138.dup := 0;
  goto $bb6, $bb7;
$bb6:
  assume ($i138 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 30} true;
  assume {:verifier.code 0} true;
  $i139 := $sext.i32.i64($i136);
  $i139.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 30} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($add.ref($p2,$mul.ref(0,8)),$mul.ref($i139,1));
  $p140.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i139.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 30} true;
  assume {:verifier.code 0} true;
  $p140.dup := 0;
  $i141 := $load.i8($M.13,$p140);
  $i141.dup := $load.i1($M.13.dup,$p140);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 30} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i8.i32($i141);
  $i142.dup := $i141.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 35} true;
  assume {:verifier.code 0} true;
  $i143 := $shl.i32($i142,$i136);
  $i143.dup := $or.i1($i142.dup,$i136.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 27} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i8.i32($i137);
  $i144.dup := $i137.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 27} true;
  assume {:verifier.code 0} true;
  $i145 := $or.i32($i144,$i143);
  $i145.dup := $or.i1($i144.dup,$i143.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 27} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i8($i145);
  $i146.dup := $i145.dup;
  call {:cexpr "c"} boogie_si_record_i8($i146);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 25} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i138 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 99, 10} true;
  assume {:verifier.code 0} true;
  call $i148, $i148.dup := invert($i137, $i137.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 99, 3} true;
  assume {:verifier.code 0} true;
  $r := $i148;
  $r.dup := $i148.dup;
  $exn := false;
  $exn.dup := false;
  return;
$bb8:
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 20} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i136,1);
  $i147.dup := $or.i1($i136.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i147);
  assume {:sourceloc "../mac-then-encrypt/aes128.c", 97, 3} true;
  assume {:verifier.code 0} true;
  $i136 := $i147;
  $i136.dup := 0;
  $i137 := $i146;
  $i137.dup := 0;
  goto $bb5;
}
const crypto_stream_decrypt: ref;
axiom (crypto_stream_decrypt == $sub.ref(0,11376));
procedure {:inline 1} crypto_stream_decrypt($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1, $p3: ref, $p3.dup: i1, $p4: ref, $p4.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn, $M.15, $M.11;
modifies $M.6, $M.7, $M.9, $M.10, $M.0, $M.1, $M.2, $M.3, $M.4;
modifies $M.12, $M.13;
modifies $CurrAddr;
{
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $i7: i1;
  var $i7.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $i10: i32;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i1;
  var $i12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $i15: i8;
  var $i15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i1;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i64;
  var $i22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i64;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i1;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $i32: i8;
  var $i32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $i35: i32;
  var $i35.dup: i1;
  var $i36: i64;
  var $i36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $i38: i8;
  var $i38.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $i41: i8;
  var $i41.dup: i1;
  var $i42: i32;
  var $i42.dup: i1;
  var $i43: i32;
  var $i43.dup: i1;
  var $i44: i1;
  var $i44.dup: i1;
  var $i45: i32;
  var $i45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i64;
  var $i47.dup: i1;
  var $p48: ref;
  var $p48.dup: i1;
  var $i49: i8;
  var $i49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $p51: ref;
  var $p51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $i53: i32;
  var $i53.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 53, 13} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16,$zext.i32.i64(1)));
  $p5.dup := 0;
  call {:cexpr "crypto_stream_decrypt:arg:inlen"} boogie_si_record_i64($i2);
  assume true;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 53, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $urem.i64($i2,16);
  $i6.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 53, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6,0);
  $i7.dup := $or.i1($i6.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 53, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  $i7.dup := 0;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 54, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  $i8.dup := 0;
  goto $bb3;
$bb2:
  assume !($i7 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 56, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $udiv.i64($i2,16);
  $i9.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 56, 8} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i64.i32($i9);
  $i10.dup := 0;
  call {:cexpr "bs"} boogie_si_record_i32($i10);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 8} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  $i11.dup := 0;
  goto $bb4;
$bb3:
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 74, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i11,16);
  $i12.dup := $or.i1($i11.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  $i12.dup := 0;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 48} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i11);
  $i13.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 48} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3,$mul.ref($i13,1));
  $p14.dup := $or.i1($p3.dup,$or.i1($i13.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 48} true;
  assume {:verifier.code 0} true;
  $p14.dup := 0;
  $i15 := $load.i8($M.14,$p14);
  $i15.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i11);
  $i16.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 37} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i16,1));
  $p17.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i16.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 46} true;
  assume {:verifier.code 0} true;
  $p17.dup := 0;
  $M.15 := $store.i8($M.15,$p17,$i15);
  $M.15.dup := $store.i1($M.15.dup,$p17,$i15.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 37} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i12 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 62, 8} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  $i19.dup := 0;
  goto $bb8;
$bb7:
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i32($i11,1);
  $i18.dup := $or.i1($i11.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i18);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 59, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i18;
  $i11.dup := 0;
  goto $bb4;
$bb8:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($i19.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 62, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i19,$i10);
  $i20.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 62, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  $i20.dup := 0;
  goto $bb9, $bb10;
$bb9:
  assume ($i20 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 34} true;
  assume {:verifier.code 0} true;
  $i21 := $mul.i32($i19,16);
  $i21.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  $i22.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 30} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p23 := $add.ref($p0,$mul.ref($i22,1));
  $p23.dup := $or.i1($p0.dup,$or.i1($i22.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 59} true;
  assume {:verifier.code 0} true;
  $i24 := $mul.i32($i19,16);
  $i24.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 55} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  $i25.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 55} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1,$mul.ref($i25,1));
  $p26.dup := $or.i1($p1.dup,$or.i1($i25.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 64, 5} true;
  assume {:verifier.code 0} true;
  call $i27, $i27.dup := crypto_block_decrypt($p23, $p23.dup, $p26, $p26.dup, $p4, $p4.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 66, 10} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  $i28.dup := 0;
  goto $bb11;
$bb10:
  assume !($i20 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 73, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 1;
  $i8.dup := 0;
  goto $bb3;
$bb11:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($i19.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 66, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i28,16);
  $i29.dup := $or.i1($i28.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 66, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  $i29.dup := 0;
  goto $bb12, $bb13;
$bb12:
  assume ($i29 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 35} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i28);
  $i30.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 35} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i30,1));
  $p31.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i30.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 35} true;
  assume {:verifier.code 0} true;
  $p31.dup := 0;
  $i32 := $load.i8($M.15,$p31);
  $i32.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 35} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  $i33.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $mul.i32($i19,16);
  $i34.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 13} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i28,$i34);
  $i35.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i35);
  $i36.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p37 := $add.ref($p0,$mul.ref($i36,1));
  $p37.dup := $or.i1($p0.dup,$or.i1($i36.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 32} true;
  assume {:verifier.code 0} true;
  $p37.dup := 0;
  $i38 := $load.i8($M.11,$p37);
  $i38.dup := $load.i1($M.11.dup,$p37);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i38);
  $i39.dup := $i38.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 32} true;
  assume {:verifier.code 0} true;
  $i40 := $xor.i32($i39,$i33);
  $i40.dup := $or.i1($i39.dup,$i33.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 32} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i8($i40);
  $i41.dup := $i40.dup;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 32} true;
  assume {:verifier.code 0} true;
  $p37.dup := 0;
  $M.11 := $store.i8($M.11,$p37,$i41);
  $M.11.dup := $store.i1($M.11.dup,$p37,$i41.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 67, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !($i29 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 69, 10} true;
  assume {:verifier.code 0} true;
  $i43 := 0;
  $i43.dup := 0;
  goto $bb15;
$bb14:
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 66, 34} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i28,1);
  $i42.dup := $or.i1($i28.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i42);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 66, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i42;
  $i28.dup := 0;
  goto $bb11;
$bb15:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($i19.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 69, 19} true;
  assume {:verifier.code 0} true;
  $i44 := $slt.i32($i43,16);
  $i44.dup := $or.i1($i43.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 69, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  $i44.dup := 0;
  goto $bb16, $bb17;
$bb16:
  assume ($i44 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 31} true;
  assume {:verifier.code 0} true;
  $i45 := $mul.i32($i19,16);
  $i45.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 27} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i43,$i45);
  $i46.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 18} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i46);
  $i47.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 18} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1,$mul.ref($i47,1));
  $p48.dup := $or.i1($p1.dup,$or.i1($i47.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 18} true;
  assume {:verifier.code 0} true;
  $p48.dup := 0;
  $i49 := $load.i8($M.8,$p48);
  $i49.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i43);
  $i50.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 7} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p5,$mul.ref(0,16)),$mul.ref($i50,1));
  $p51.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i50.dup,0));
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 16} true;
  assume {:verifier.code 0} true;
  $p51.dup := 0;
  $M.15 := $store.i8($M.15,$p51,$i49);
  $M.15.dup := $store.i1($M.15.dup,$p51,$i49.dup);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 70, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !($i44 == 1);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 71, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 69, 34} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i32($i43,1);
  $i52.dup := $or.i1($i43.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i52);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 69, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $i52;
  $i43.dup := 0;
  goto $bb15;
$bb19:
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 62, 23} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i19,1);
  $i53.dup := $or.i1($i19.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i53);
  assume {:sourceloc "../mac-then-encrypt/aes128cbc.c", 62, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i53;
  $i19.dup := 0;
  goto $bb8;
}
const crypto_hashblocks: ref;
axiom (crypto_hashblocks == $sub.ref(0,12408));
procedure {:inline 1} crypto_hashblocks($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $exn;
modifies $M.11;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $i5: i32;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $p16: ref;
  var $p16.dup: i1;
  var $i17: i32;
  var $i17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $p25: ref;
  var $p25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i32;
  var $i30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i32;
  var $i32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $i35: i64;
  var $i35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $i38: i1;
  var $i38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $i42: i32;
  var $i42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $i44: i32;
  var $i44.dup: i1;
  var $p45: ref;
  var $p45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $i48: i32;
  var $i48.dup: i1;
  var $p49: ref;
  var $p49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $p51: ref;
  var $p51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $i54: i32;
  var $i54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $i56: i32;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i32;
  var $i58.dup: i1;
  var $p59: ref;
  var $p59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $i62: i32;
  var $i62.dup: i1;
  var $p63: ref;
  var $p63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $p67: ref;
  var $p67.dup: i1;
  var $i68: i32;
  var $i68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $i72: i32;
  var $i72.dup: i1;
  var $i73: i32;
  var $i73.dup: i1;
  var $i74: i32;
  var $i74.dup: i1;
  var $i75: i32;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $i77: i32;
  var $i77.dup: i1;
  var $i78: i32;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $i81: i32;
  var $i81.dup: i1;
  var $i82: i32;
  var $i82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i32;
  var $i84.dup: i1;
  var $i85: i32;
  var $i85.dup: i1;
  var $i86: i32;
  var $i86.dup: i1;
  var $i87: i32;
  var $i87.dup: i1;
  var $i88: i32;
  var $i88.dup: i1;
  var $i89: i32;
  var $i89.dup: i1;
  var $i90: i32;
  var $i90.dup: i1;
  var $i91: i32;
  var $i91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $i93: i32;
  var $i93.dup: i1;
  var $i94: i32;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i32;
  var $i97.dup: i1;
  var $i98: i32;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $i100: i32;
  var $i100.dup: i1;
  var $i101: i32;
  var $i101.dup: i1;
  var $i102: i32;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $i104: i32;
  var $i104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $i106: i32;
  var $i106.dup: i1;
  var $i107: i32;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $i109: i32;
  var $i109.dup: i1;
  var $i110: i32;
  var $i110.dup: i1;
  var $i111: i32;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $i113: i32;
  var $i113.dup: i1;
  var $i114: i32;
  var $i114.dup: i1;
  var $i115: i32;
  var $i115.dup: i1;
  var $i116: i32;
  var $i116.dup: i1;
  var $i117: i32;
  var $i117.dup: i1;
  var $i118: i32;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $i121: i32;
  var $i121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
  var $i123: i32;
  var $i123.dup: i1;
  var $i124: i32;
  var $i124.dup: i1;
  var $i125: i32;
  var $i125.dup: i1;
  var $i126: i32;
  var $i126.dup: i1;
  var $i127: i32;
  var $i127.dup: i1;
  var $i128: i32;
  var $i128.dup: i1;
  var $i129: i32;
  var $i129.dup: i1;
  var $i130: i32;
  var $i130.dup: i1;
  var $i131: i32;
  var $i131.dup: i1;
  var $i132: i32;
  var $i132.dup: i1;
  var $i133: i32;
  var $i133.dup: i1;
  var $i134: i32;
  var $i134.dup: i1;
  var $i135: i32;
  var $i135.dup: i1;
  var $i136: i32;
  var $i136.dup: i1;
  var $i137: i32;
  var $i137.dup: i1;
  var $i138: i32;
  var $i138.dup: i1;
  var $i139: i32;
  var $i139.dup: i1;
  var $i140: i32;
  var $i140.dup: i1;
  var $i141: i32;
  var $i141.dup: i1;
  var $i142: i32;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i32;
  var $i144.dup: i1;
  var $i145: i32;
  var $i145.dup: i1;
  var $i146: i32;
  var $i146.dup: i1;
  var $i147: i32;
  var $i147.dup: i1;
  var $i148: i32;
  var $i148.dup: i1;
  var $i149: i32;
  var $i149.dup: i1;
  var $i150: i32;
  var $i150.dup: i1;
  var $i151: i32;
  var $i151.dup: i1;
  var $i152: i32;
  var $i152.dup: i1;
  var $i153: i32;
  var $i153.dup: i1;
  var $i154: i32;
  var $i154.dup: i1;
  var $i155: i32;
  var $i155.dup: i1;
  var $i156: i32;
  var $i156.dup: i1;
  var $i157: i32;
  var $i157.dup: i1;
  var $i158: i32;
  var $i158.dup: i1;
  var $i159: i32;
  var $i159.dup: i1;
  var $i160: i32;
  var $i160.dup: i1;
  var $i161: i32;
  var $i161.dup: i1;
  var $i162: i32;
  var $i162.dup: i1;
  var $i163: i32;
  var $i163.dup: i1;
  var $i164: i32;
  var $i164.dup: i1;
  var $i165: i32;
  var $i165.dup: i1;
  var $i166: i32;
  var $i166.dup: i1;
  var $i167: i32;
  var $i167.dup: i1;
  var $i168: i32;
  var $i168.dup: i1;
  var $i169: i32;
  var $i169.dup: i1;
  var $i170: i32;
  var $i170.dup: i1;
  var $i171: i32;
  var $i171.dup: i1;
  var $i172: i32;
  var $i172.dup: i1;
  var $i173: i32;
  var $i173.dup: i1;
  var $i174: i32;
  var $i174.dup: i1;
  var $i175: i32;
  var $i175.dup: i1;
  var $i176: i32;
  var $i176.dup: i1;
  var $i177: i32;
  var $i177.dup: i1;
  var $i178: i32;
  var $i178.dup: i1;
  var $i179: i32;
  var $i179.dup: i1;
  var $i180: i32;
  var $i180.dup: i1;
  var $i181: i32;
  var $i181.dup: i1;
  var $i182: i32;
  var $i182.dup: i1;
  var $i183: i32;
  var $i183.dup: i1;
  var $i184: i32;
  var $i184.dup: i1;
  var $i185: i32;
  var $i185.dup: i1;
  var $i186: i32;
  var $i186.dup: i1;
  var $i187: i32;
  var $i187.dup: i1;
  var $i188: i32;
  var $i188.dup: i1;
  var $i189: i32;
  var $i189.dup: i1;
  var $i190: i32;
  var $i190.dup: i1;
  var $i191: i32;
  var $i191.dup: i1;
  var $i192: i32;
  var $i192.dup: i1;
  var $i193: i32;
  var $i193.dup: i1;
  var $i194: i32;
  var $i194.dup: i1;
  var $i195: i32;
  var $i195.dup: i1;
  var $i196: i32;
  var $i196.dup: i1;
  var $i197: i32;
  var $i197.dup: i1;
  var $i198: i32;
  var $i198.dup: i1;
  var $i199: i32;
  var $i199.dup: i1;
  var $i200: i32;
  var $i200.dup: i1;
  var $i201: i32;
  var $i201.dup: i1;
  var $i202: i32;
  var $i202.dup: i1;
  var $i203: i32;
  var $i203.dup: i1;
  var $i204: i32;
  var $i204.dup: i1;
  var $i205: i32;
  var $i205.dup: i1;
  var $i206: i32;
  var $i206.dup: i1;
  var $i207: i32;
  var $i207.dup: i1;
  var $i208: i32;
  var $i208.dup: i1;
  var $i209: i32;
  var $i209.dup: i1;
  var $i210: i32;
  var $i210.dup: i1;
  var $i211: i32;
  var $i211.dup: i1;
  var $i212: i32;
  var $i212.dup: i1;
  var $i213: i32;
  var $i213.dup: i1;
  var $i214: i32;
  var $i214.dup: i1;
  var $i215: i32;
  var $i215.dup: i1;
  var $i216: i32;
  var $i216.dup: i1;
  var $i217: i32;
  var $i217.dup: i1;
  var $i218: i32;
  var $i218.dup: i1;
  var $i219: i32;
  var $i219.dup: i1;
  var $i220: i32;
  var $i220.dup: i1;
  var $i221: i32;
  var $i221.dup: i1;
  var $i222: i32;
  var $i222.dup: i1;
  var $i223: i32;
  var $i223.dup: i1;
  var $i224: i32;
  var $i224.dup: i1;
  var $i225: i32;
  var $i225.dup: i1;
  var $i226: i32;
  var $i226.dup: i1;
  var $i227: i32;
  var $i227.dup: i1;
  var $i228: i32;
  var $i228.dup: i1;
  var $i229: i32;
  var $i229.dup: i1;
  var $i230: i32;
  var $i230.dup: i1;
  var $i231: i32;
  var $i231.dup: i1;
  var $i232: i32;
  var $i232.dup: i1;
  var $i233: i32;
  var $i233.dup: i1;
  var $i234: i32;
  var $i234.dup: i1;
  var $i235: i32;
  var $i235.dup: i1;
  var $i236: i32;
  var $i236.dup: i1;
  var $i237: i32;
  var $i237.dup: i1;
  var $i238: i32;
  var $i238.dup: i1;
  var $i239: i32;
  var $i239.dup: i1;
  var $i240: i32;
  var $i240.dup: i1;
  var $i241: i32;
  var $i241.dup: i1;
  var $i242: i32;
  var $i242.dup: i1;
  var $i243: i32;
  var $i243.dup: i1;
  var $i244: i32;
  var $i244.dup: i1;
  var $i245: i32;
  var $i245.dup: i1;
  var $i246: i32;
  var $i246.dup: i1;
  var $i247: i32;
  var $i247.dup: i1;
  var $i248: i32;
  var $i248.dup: i1;
  var $i249: i32;
  var $i249.dup: i1;
  var $i250: i32;
  var $i250.dup: i1;
  var $i251: i32;
  var $i251.dup: i1;
  var $i252: i32;
  var $i252.dup: i1;
  var $i253: i32;
  var $i253.dup: i1;
  var $i254: i32;
  var $i254.dup: i1;
  var $i255: i32;
  var $i255.dup: i1;
  var $i256: i32;
  var $i256.dup: i1;
  var $i257: i32;
  var $i257.dup: i1;
  var $i258: i32;
  var $i258.dup: i1;
  var $i259: i32;
  var $i259.dup: i1;
  var $i260: i32;
  var $i260.dup: i1;
  var $i261: i32;
  var $i261.dup: i1;
  var $i262: i32;
  var $i262.dup: i1;
  var $i263: i32;
  var $i263.dup: i1;
  var $i264: i32;
  var $i264.dup: i1;
  var $i265: i32;
  var $i265.dup: i1;
  var $i266: i32;
  var $i266.dup: i1;
  var $i267: i32;
  var $i267.dup: i1;
  var $i268: i32;
  var $i268.dup: i1;
  var $i269: i32;
  var $i269.dup: i1;
  var $i270: i32;
  var $i270.dup: i1;
  var $i271: i32;
  var $i271.dup: i1;
  var $i272: i32;
  var $i272.dup: i1;
  var $i273: i32;
  var $i273.dup: i1;
  var $i274: i32;
  var $i274.dup: i1;
  var $i275: i32;
  var $i275.dup: i1;
  var $i276: i32;
  var $i276.dup: i1;
  var $i277: i32;
  var $i277.dup: i1;
  var $i278: i32;
  var $i278.dup: i1;
  var $i279: i32;
  var $i279.dup: i1;
  var $i280: i32;
  var $i280.dup: i1;
  var $i281: i32;
  var $i281.dup: i1;
  var $i282: i32;
  var $i282.dup: i1;
  var $i283: i32;
  var $i283.dup: i1;
  var $i284: i32;
  var $i284.dup: i1;
  var $i285: i32;
  var $i285.dup: i1;
  var $i286: i32;
  var $i286.dup: i1;
  var $i287: i32;
  var $i287.dup: i1;
  var $i288: i32;
  var $i288.dup: i1;
  var $i289: i32;
  var $i289.dup: i1;
  var $i290: i32;
  var $i290.dup: i1;
  var $i291: i32;
  var $i291.dup: i1;
  var $i292: i32;
  var $i292.dup: i1;
  var $i293: i32;
  var $i293.dup: i1;
  var $i294: i32;
  var $i294.dup: i1;
  var $i295: i32;
  var $i295.dup: i1;
  var $i296: i32;
  var $i296.dup: i1;
  var $i297: i32;
  var $i297.dup: i1;
  var $i298: i32;
  var $i298.dup: i1;
  var $i299: i32;
  var $i299.dup: i1;
  var $i300: i32;
  var $i300.dup: i1;
  var $i301: i32;
  var $i301.dup: i1;
  var $i302: i32;
  var $i302.dup: i1;
  var $i303: i32;
  var $i303.dup: i1;
  var $i304: i32;
  var $i304.dup: i1;
  var $i305: i32;
  var $i305.dup: i1;
  var $i306: i32;
  var $i306.dup: i1;
  var $i307: i32;
  var $i307.dup: i1;
  var $i308: i32;
  var $i308.dup: i1;
  var $i309: i32;
  var $i309.dup: i1;
  var $i310: i32;
  var $i310.dup: i1;
  var $i311: i32;
  var $i311.dup: i1;
  var $i312: i32;
  var $i312.dup: i1;
  var $i313: i32;
  var $i313.dup: i1;
  var $i314: i32;
  var $i314.dup: i1;
  var $i315: i32;
  var $i315.dup: i1;
  var $i316: i32;
  var $i316.dup: i1;
  var $i317: i32;
  var $i317.dup: i1;
  var $i318: i32;
  var $i318.dup: i1;
  var $i319: i32;
  var $i319.dup: i1;
  var $i320: i32;
  var $i320.dup: i1;
  var $i321: i32;
  var $i321.dup: i1;
  var $i322: i32;
  var $i322.dup: i1;
  var $i323: i32;
  var $i323.dup: i1;
  var $i324: i32;
  var $i324.dup: i1;
  var $i325: i32;
  var $i325.dup: i1;
  var $i326: i32;
  var $i326.dup: i1;
  var $i327: i32;
  var $i327.dup: i1;
  var $i328: i32;
  var $i328.dup: i1;
  var $i329: i32;
  var $i329.dup: i1;
  var $i330: i32;
  var $i330.dup: i1;
  var $i331: i32;
  var $i331.dup: i1;
  var $i332: i32;
  var $i332.dup: i1;
  var $i333: i32;
  var $i333.dup: i1;
  var $i334: i32;
  var $i334.dup: i1;
  var $i335: i32;
  var $i335.dup: i1;
  var $i336: i32;
  var $i336.dup: i1;
  var $i337: i32;
  var $i337.dup: i1;
  var $i338: i32;
  var $i338.dup: i1;
  var $i339: i32;
  var $i339.dup: i1;
  var $i340: i32;
  var $i340.dup: i1;
  var $i341: i32;
  var $i341.dup: i1;
  var $i342: i32;
  var $i342.dup: i1;
  var $i343: i32;
  var $i343.dup: i1;
  var $i344: i32;
  var $i344.dup: i1;
  var $i345: i32;
  var $i345.dup: i1;
  var $i346: i32;
  var $i346.dup: i1;
  var $i347: i32;
  var $i347.dup: i1;
  var $i348: i32;
  var $i348.dup: i1;
  var $i349: i32;
  var $i349.dup: i1;
  var $i350: i32;
  var $i350.dup: i1;
  var $i351: i32;
  var $i351.dup: i1;
  var $i352: i32;
  var $i352.dup: i1;
  var $i353: i32;
  var $i353.dup: i1;
  var $i354: i32;
  var $i354.dup: i1;
  var $i355: i32;
  var $i355.dup: i1;
  var $i356: i32;
  var $i356.dup: i1;
  var $i357: i32;
  var $i357.dup: i1;
  var $i358: i32;
  var $i358.dup: i1;
  var $i359: i32;
  var $i359.dup: i1;
  var $i360: i32;
  var $i360.dup: i1;
  var $i361: i32;
  var $i361.dup: i1;
  var $i362: i32;
  var $i362.dup: i1;
  var $i363: i32;
  var $i363.dup: i1;
  var $i364: i32;
  var $i364.dup: i1;
  var $i365: i32;
  var $i365.dup: i1;
  var $i366: i32;
  var $i366.dup: i1;
  var $i367: i32;
  var $i367.dup: i1;
  var $i368: i32;
  var $i368.dup: i1;
  var $i369: i32;
  var $i369.dup: i1;
  var $i370: i32;
  var $i370.dup: i1;
  var $i371: i32;
  var $i371.dup: i1;
  var $i372: i32;
  var $i372.dup: i1;
  var $i373: i32;
  var $i373.dup: i1;
  var $i374: i32;
  var $i374.dup: i1;
  var $i375: i32;
  var $i375.dup: i1;
  var $i376: i32;
  var $i376.dup: i1;
  var $i377: i32;
  var $i377.dup: i1;
  var $i378: i32;
  var $i378.dup: i1;
  var $i379: i32;
  var $i379.dup: i1;
  var $i380: i32;
  var $i380.dup: i1;
  var $i381: i32;
  var $i381.dup: i1;
  var $i382: i32;
  var $i382.dup: i1;
  var $i383: i32;
  var $i383.dup: i1;
  var $i384: i32;
  var $i384.dup: i1;
  var $i385: i32;
  var $i385.dup: i1;
  var $i386: i32;
  var $i386.dup: i1;
  var $i387: i32;
  var $i387.dup: i1;
  var $i388: i32;
  var $i388.dup: i1;
  var $i389: i32;
  var $i389.dup: i1;
  var $i390: i32;
  var $i390.dup: i1;
  var $i391: i32;
  var $i391.dup: i1;
  var $i392: i32;
  var $i392.dup: i1;
  var $i393: i32;
  var $i393.dup: i1;
  var $i394: i32;
  var $i394.dup: i1;
  var $i395: i32;
  var $i395.dup: i1;
  var $i396: i32;
  var $i396.dup: i1;
  var $i397: i32;
  var $i397.dup: i1;
  var $i398: i32;
  var $i398.dup: i1;
  var $i399: i32;
  var $i399.dup: i1;
  var $i400: i32;
  var $i400.dup: i1;
  var $i401: i32;
  var $i401.dup: i1;
  var $i402: i32;
  var $i402.dup: i1;
  var $i403: i32;
  var $i403.dup: i1;
  var $i404: i32;
  var $i404.dup: i1;
  var $i405: i32;
  var $i405.dup: i1;
  var $i406: i32;
  var $i406.dup: i1;
  var $i407: i32;
  var $i407.dup: i1;
  var $i408: i32;
  var $i408.dup: i1;
  var $i409: i32;
  var $i409.dup: i1;
  var $i410: i32;
  var $i410.dup: i1;
  var $i411: i32;
  var $i411.dup: i1;
  var $i412: i32;
  var $i412.dup: i1;
  var $i413: i32;
  var $i413.dup: i1;
  var $i414: i32;
  var $i414.dup: i1;
  var $i415: i32;
  var $i415.dup: i1;
  var $i416: i32;
  var $i416.dup: i1;
  var $i417: i32;
  var $i417.dup: i1;
  var $i418: i32;
  var $i418.dup: i1;
  var $i419: i32;
  var $i419.dup: i1;
  var $i420: i32;
  var $i420.dup: i1;
  var $i421: i32;
  var $i421.dup: i1;
  var $i422: i32;
  var $i422.dup: i1;
  var $i423: i32;
  var $i423.dup: i1;
  var $i424: i32;
  var $i424.dup: i1;
  var $i425: i32;
  var $i425.dup: i1;
  var $i426: i32;
  var $i426.dup: i1;
  var $i427: i32;
  var $i427.dup: i1;
  var $i428: i32;
  var $i428.dup: i1;
  var $i429: i32;
  var $i429.dup: i1;
  var $i430: i32;
  var $i430.dup: i1;
  var $i431: i32;
  var $i431.dup: i1;
  var $i432: i32;
  var $i432.dup: i1;
  var $i433: i32;
  var $i433.dup: i1;
  var $i434: i32;
  var $i434.dup: i1;
  var $i435: i32;
  var $i435.dup: i1;
  var $i436: i32;
  var $i436.dup: i1;
  var $i437: i32;
  var $i437.dup: i1;
  var $i438: i32;
  var $i438.dup: i1;
  var $i439: i32;
  var $i439.dup: i1;
  var $i440: i32;
  var $i440.dup: i1;
  var $i441: i32;
  var $i441.dup: i1;
  var $i442: i32;
  var $i442.dup: i1;
  var $i443: i32;
  var $i443.dup: i1;
  var $i444: i32;
  var $i444.dup: i1;
  var $i445: i32;
  var $i445.dup: i1;
  var $i446: i32;
  var $i446.dup: i1;
  var $i447: i32;
  var $i447.dup: i1;
  var $i448: i32;
  var $i448.dup: i1;
  var $i449: i32;
  var $i449.dup: i1;
  var $i450: i32;
  var $i450.dup: i1;
  var $i451: i32;
  var $i451.dup: i1;
  var $i452: i32;
  var $i452.dup: i1;
  var $i453: i32;
  var $i453.dup: i1;
  var $i454: i32;
  var $i454.dup: i1;
  var $i455: i32;
  var $i455.dup: i1;
  var $i456: i32;
  var $i456.dup: i1;
  var $i457: i32;
  var $i457.dup: i1;
  var $i458: i32;
  var $i458.dup: i1;
  var $i459: i32;
  var $i459.dup: i1;
  var $i460: i32;
  var $i460.dup: i1;
  var $i461: i32;
  var $i461.dup: i1;
  var $i462: i32;
  var $i462.dup: i1;
  var $i463: i32;
  var $i463.dup: i1;
  var $i464: i32;
  var $i464.dup: i1;
  var $i465: i32;
  var $i465.dup: i1;
  var $i466: i32;
  var $i466.dup: i1;
  var $i467: i32;
  var $i467.dup: i1;
  var $i468: i32;
  var $i468.dup: i1;
  var $i469: i32;
  var $i469.dup: i1;
  var $i470: i32;
  var $i470.dup: i1;
  var $i471: i32;
  var $i471.dup: i1;
  var $i472: i32;
  var $i472.dup: i1;
  var $i473: i32;
  var $i473.dup: i1;
  var $i474: i32;
  var $i474.dup: i1;
  var $i475: i32;
  var $i475.dup: i1;
  var $i476: i32;
  var $i476.dup: i1;
  var $i477: i32;
  var $i477.dup: i1;
  var $i478: i32;
  var $i478.dup: i1;
  var $i479: i32;
  var $i479.dup: i1;
  var $i480: i32;
  var $i480.dup: i1;
  var $i481: i32;
  var $i481.dup: i1;
  var $i482: i32;
  var $i482.dup: i1;
  var $i483: i32;
  var $i483.dup: i1;
  var $i484: i32;
  var $i484.dup: i1;
  var $i485: i32;
  var $i485.dup: i1;
  var $i486: i32;
  var $i486.dup: i1;
  var $i487: i32;
  var $i487.dup: i1;
  var $i488: i32;
  var $i488.dup: i1;
  var $i489: i32;
  var $i489.dup: i1;
  var $i490: i32;
  var $i490.dup: i1;
  var $i491: i32;
  var $i491.dup: i1;
  var $i492: i32;
  var $i492.dup: i1;
  var $i493: i32;
  var $i493.dup: i1;
  var $i494: i32;
  var $i494.dup: i1;
  var $i495: i32;
  var $i495.dup: i1;
  var $i496: i32;
  var $i496.dup: i1;
  var $i497: i32;
  var $i497.dup: i1;
  var $i498: i32;
  var $i498.dup: i1;
  var $i499: i32;
  var $i499.dup: i1;
  var $i500: i32;
  var $i500.dup: i1;
  var $i501: i32;
  var $i501.dup: i1;
  var $i502: i32;
  var $i502.dup: i1;
  var $i503: i32;
  var $i503.dup: i1;
  var $i504: i32;
  var $i504.dup: i1;
  var $i505: i32;
  var $i505.dup: i1;
  var $i506: i32;
  var $i506.dup: i1;
  var $i507: i32;
  var $i507.dup: i1;
  var $i508: i32;
  var $i508.dup: i1;
  var $i509: i32;
  var $i509.dup: i1;
  var $i510: i32;
  var $i510.dup: i1;
  var $i511: i32;
  var $i511.dup: i1;
  var $i512: i32;
  var $i512.dup: i1;
  var $i513: i32;
  var $i513.dup: i1;
  var $i514: i32;
  var $i514.dup: i1;
  var $i515: i32;
  var $i515.dup: i1;
  var $i516: i32;
  var $i516.dup: i1;
  var $i517: i32;
  var $i517.dup: i1;
  var $i518: i32;
  var $i518.dup: i1;
  var $i519: i32;
  var $i519.dup: i1;
  var $i520: i32;
  var $i520.dup: i1;
  var $i521: i32;
  var $i521.dup: i1;
  var $i522: i32;
  var $i522.dup: i1;
  var $i523: i32;
  var $i523.dup: i1;
  var $i524: i32;
  var $i524.dup: i1;
  var $i525: i32;
  var $i525.dup: i1;
  var $i526: i32;
  var $i526.dup: i1;
  var $i527: i32;
  var $i527.dup: i1;
  var $i528: i32;
  var $i528.dup: i1;
  var $i529: i32;
  var $i529.dup: i1;
  var $i530: i32;
  var $i530.dup: i1;
  var $i531: i32;
  var $i531.dup: i1;
  var $i532: i32;
  var $i532.dup: i1;
  var $i533: i32;
  var $i533.dup: i1;
  var $i534: i32;
  var $i534.dup: i1;
  var $i535: i32;
  var $i535.dup: i1;
  var $i536: i32;
  var $i536.dup: i1;
  var $i537: i32;
  var $i537.dup: i1;
  var $i538: i32;
  var $i538.dup: i1;
  var $i539: i32;
  var $i539.dup: i1;
  var $i540: i32;
  var $i540.dup: i1;
  var $i541: i32;
  var $i541.dup: i1;
  var $i542: i32;
  var $i542.dup: i1;
  var $i543: i32;
  var $i543.dup: i1;
  var $i544: i32;
  var $i544.dup: i1;
  var $i545: i32;
  var $i545.dup: i1;
  var $i546: i32;
  var $i546.dup: i1;
  var $i547: i32;
  var $i547.dup: i1;
  var $i548: i32;
  var $i548.dup: i1;
  var $i549: i32;
  var $i549.dup: i1;
  var $i550: i32;
  var $i550.dup: i1;
  var $i551: i32;
  var $i551.dup: i1;
  var $i552: i32;
  var $i552.dup: i1;
  var $i553: i32;
  var $i553.dup: i1;
  var $i554: i32;
  var $i554.dup: i1;
  var $i555: i32;
  var $i555.dup: i1;
  var $i556: i32;
  var $i556.dup: i1;
  var $i557: i32;
  var $i557.dup: i1;
  var $i558: i32;
  var $i558.dup: i1;
  var $i559: i32;
  var $i559.dup: i1;
  var $i560: i32;
  var $i560.dup: i1;
  var $i561: i32;
  var $i561.dup: i1;
  var $i562: i32;
  var $i562.dup: i1;
  var $i563: i32;
  var $i563.dup: i1;
  var $i564: i32;
  var $i564.dup: i1;
  var $i565: i32;
  var $i565.dup: i1;
  var $i566: i32;
  var $i566.dup: i1;
  var $i567: i32;
  var $i567.dup: i1;
  var $i568: i32;
  var $i568.dup: i1;
  var $i569: i32;
  var $i569.dup: i1;
  var $i570: i32;
  var $i570.dup: i1;
  var $i571: i32;
  var $i571.dup: i1;
  var $i572: i32;
  var $i572.dup: i1;
  var $i573: i32;
  var $i573.dup: i1;
  var $i574: i32;
  var $i574.dup: i1;
  var $i575: i32;
  var $i575.dup: i1;
  var $i576: i32;
  var $i576.dup: i1;
  var $i577: i32;
  var $i577.dup: i1;
  var $i578: i32;
  var $i578.dup: i1;
  var $i579: i32;
  var $i579.dup: i1;
  var $i580: i32;
  var $i580.dup: i1;
  var $i581: i32;
  var $i581.dup: i1;
  var $i582: i32;
  var $i582.dup: i1;
  var $i583: i32;
  var $i583.dup: i1;
  var $i584: i32;
  var $i584.dup: i1;
  var $i585: i32;
  var $i585.dup: i1;
  var $i586: i32;
  var $i586.dup: i1;
  var $i587: i32;
  var $i587.dup: i1;
  var $i588: i32;
  var $i588.dup: i1;
  var $i589: i32;
  var $i589.dup: i1;
  var $i590: i32;
  var $i590.dup: i1;
  var $i591: i32;
  var $i591.dup: i1;
  var $i592: i32;
  var $i592.dup: i1;
  var $i593: i32;
  var $i593.dup: i1;
  var $i594: i32;
  var $i594.dup: i1;
  var $i595: i32;
  var $i595.dup: i1;
  var $i596: i32;
  var $i596.dup: i1;
  var $i597: i32;
  var $i597.dup: i1;
  var $i598: i32;
  var $i598.dup: i1;
  var $i599: i32;
  var $i599.dup: i1;
  var $i600: i32;
  var $i600.dup: i1;
  var $i601: i32;
  var $i601.dup: i1;
  var $i602: i32;
  var $i602.dup: i1;
  var $i603: i32;
  var $i603.dup: i1;
  var $i604: i32;
  var $i604.dup: i1;
  var $i605: i32;
  var $i605.dup: i1;
  var $i606: i32;
  var $i606.dup: i1;
  var $i607: i32;
  var $i607.dup: i1;
  var $i608: i32;
  var $i608.dup: i1;
  var $i609: i32;
  var $i609.dup: i1;
  var $i610: i32;
  var $i610.dup: i1;
  var $i611: i32;
  var $i611.dup: i1;
  var $i612: i32;
  var $i612.dup: i1;
  var $i613: i32;
  var $i613.dup: i1;
  var $i614: i32;
  var $i614.dup: i1;
  var $i615: i32;
  var $i615.dup: i1;
  var $i616: i32;
  var $i616.dup: i1;
  var $i617: i32;
  var $i617.dup: i1;
  var $i618: i32;
  var $i618.dup: i1;
  var $i619: i32;
  var $i619.dup: i1;
  var $i620: i32;
  var $i620.dup: i1;
  var $i621: i32;
  var $i621.dup: i1;
  var $i622: i32;
  var $i622.dup: i1;
  var $i623: i32;
  var $i623.dup: i1;
  var $i624: i32;
  var $i624.dup: i1;
  var $i625: i32;
  var $i625.dup: i1;
  var $i626: i32;
  var $i626.dup: i1;
  var $i627: i32;
  var $i627.dup: i1;
  var $i628: i32;
  var $i628.dup: i1;
  var $i629: i32;
  var $i629.dup: i1;
  var $i630: i32;
  var $i630.dup: i1;
  var $i631: i32;
  var $i631.dup: i1;
  var $i632: i32;
  var $i632.dup: i1;
  var $i633: i32;
  var $i633.dup: i1;
  var $i634: i32;
  var $i634.dup: i1;
  var $i635: i32;
  var $i635.dup: i1;
  var $i636: i32;
  var $i636.dup: i1;
  var $i637: i32;
  var $i637.dup: i1;
  var $i638: i32;
  var $i638.dup: i1;
  var $i639: i32;
  var $i639.dup: i1;
  var $i640: i32;
  var $i640.dup: i1;
  var $i641: i32;
  var $i641.dup: i1;
  var $i642: i32;
  var $i642.dup: i1;
  var $i643: i32;
  var $i643.dup: i1;
  var $i644: i32;
  var $i644.dup: i1;
  var $i645: i32;
  var $i645.dup: i1;
  var $i646: i32;
  var $i646.dup: i1;
  var $i647: i32;
  var $i647.dup: i1;
  var $i648: i32;
  var $i648.dup: i1;
  var $i649: i32;
  var $i649.dup: i1;
  var $i650: i32;
  var $i650.dup: i1;
  var $i651: i32;
  var $i651.dup: i1;
  var $i652: i32;
  var $i652.dup: i1;
  var $i653: i32;
  var $i653.dup: i1;
  var $i654: i32;
  var $i654.dup: i1;
  var $i655: i32;
  var $i655.dup: i1;
  var $i656: i32;
  var $i656.dup: i1;
  var $i657: i32;
  var $i657.dup: i1;
  var $i658: i32;
  var $i658.dup: i1;
  var $i659: i32;
  var $i659.dup: i1;
  var $i660: i32;
  var $i660.dup: i1;
  var $i661: i32;
  var $i661.dup: i1;
  var $i662: i32;
  var $i662.dup: i1;
  var $i663: i32;
  var $i663.dup: i1;
  var $i664: i32;
  var $i664.dup: i1;
  var $i665: i32;
  var $i665.dup: i1;
  var $i666: i32;
  var $i666.dup: i1;
  var $i667: i32;
  var $i667.dup: i1;
  var $i668: i32;
  var $i668.dup: i1;
  var $i669: i32;
  var $i669.dup: i1;
  var $i670: i32;
  var $i670.dup: i1;
  var $i671: i32;
  var $i671.dup: i1;
  var $i672: i32;
  var $i672.dup: i1;
  var $i673: i32;
  var $i673.dup: i1;
  var $i674: i32;
  var $i674.dup: i1;
  var $i675: i32;
  var $i675.dup: i1;
  var $i676: i32;
  var $i676.dup: i1;
  var $i677: i32;
  var $i677.dup: i1;
  var $i678: i32;
  var $i678.dup: i1;
  var $i679: i32;
  var $i679.dup: i1;
  var $i680: i32;
  var $i680.dup: i1;
  var $i681: i32;
  var $i681.dup: i1;
  var $i682: i32;
  var $i682.dup: i1;
  var $i683: i32;
  var $i683.dup: i1;
  var $i684: i32;
  var $i684.dup: i1;
  var $i685: i32;
  var $i685.dup: i1;
  var $i686: i32;
  var $i686.dup: i1;
  var $i687: i32;
  var $i687.dup: i1;
  var $i688: i32;
  var $i688.dup: i1;
  var $i689: i32;
  var $i689.dup: i1;
  var $i690: i32;
  var $i690.dup: i1;
  var $i691: i32;
  var $i691.dup: i1;
  var $i692: i32;
  var $i692.dup: i1;
  var $i693: i32;
  var $i693.dup: i1;
  var $i694: i32;
  var $i694.dup: i1;
  var $i695: i32;
  var $i695.dup: i1;
  var $i696: i32;
  var $i696.dup: i1;
  var $i697: i32;
  var $i697.dup: i1;
  var $i698: i32;
  var $i698.dup: i1;
  var $i699: i32;
  var $i699.dup: i1;
  var $i700: i32;
  var $i700.dup: i1;
  var $i701: i32;
  var $i701.dup: i1;
  var $i702: i32;
  var $i702.dup: i1;
  var $i703: i32;
  var $i703.dup: i1;
  var $i704: i32;
  var $i704.dup: i1;
  var $i705: i32;
  var $i705.dup: i1;
  var $i706: i32;
  var $i706.dup: i1;
  var $i707: i32;
  var $i707.dup: i1;
  var $i708: i32;
  var $i708.dup: i1;
  var $i709: i32;
  var $i709.dup: i1;
  var $i710: i32;
  var $i710.dup: i1;
  var $i711: i32;
  var $i711.dup: i1;
  var $i712: i32;
  var $i712.dup: i1;
  var $i713: i32;
  var $i713.dup: i1;
  var $i714: i32;
  var $i714.dup: i1;
  var $i715: i32;
  var $i715.dup: i1;
  var $i716: i32;
  var $i716.dup: i1;
  var $i717: i32;
  var $i717.dup: i1;
  var $i718: i32;
  var $i718.dup: i1;
  var $i719: i32;
  var $i719.dup: i1;
  var $i720: i32;
  var $i720.dup: i1;
  var $i721: i32;
  var $i721.dup: i1;
  var $i722: i32;
  var $i722.dup: i1;
  var $i723: i32;
  var $i723.dup: i1;
  var $i724: i32;
  var $i724.dup: i1;
  var $i725: i32;
  var $i725.dup: i1;
  var $i726: i32;
  var $i726.dup: i1;
  var $i727: i32;
  var $i727.dup: i1;
  var $i728: i32;
  var $i728.dup: i1;
  var $i729: i32;
  var $i729.dup: i1;
  var $i730: i32;
  var $i730.dup: i1;
  var $i731: i32;
  var $i731.dup: i1;
  var $i732: i32;
  var $i732.dup: i1;
  var $i733: i32;
  var $i733.dup: i1;
  var $i734: i32;
  var $i734.dup: i1;
  var $i735: i32;
  var $i735.dup: i1;
  var $i736: i32;
  var $i736.dup: i1;
  var $i737: i32;
  var $i737.dup: i1;
  var $i738: i32;
  var $i738.dup: i1;
  var $i739: i32;
  var $i739.dup: i1;
  var $i740: i32;
  var $i740.dup: i1;
  var $i741: i32;
  var $i741.dup: i1;
  var $i742: i32;
  var $i742.dup: i1;
  var $i743: i32;
  var $i743.dup: i1;
  var $i744: i32;
  var $i744.dup: i1;
  var $i745: i32;
  var $i745.dup: i1;
  var $i746: i32;
  var $i746.dup: i1;
  var $i747: i32;
  var $i747.dup: i1;
  var $i748: i32;
  var $i748.dup: i1;
  var $i749: i32;
  var $i749.dup: i1;
  var $i750: i32;
  var $i750.dup: i1;
  var $i751: i32;
  var $i751.dup: i1;
  var $i752: i32;
  var $i752.dup: i1;
  var $i753: i32;
  var $i753.dup: i1;
  var $i754: i32;
  var $i754.dup: i1;
  var $i755: i32;
  var $i755.dup: i1;
  var $i756: i32;
  var $i756.dup: i1;
  var $i757: i32;
  var $i757.dup: i1;
  var $i758: i32;
  var $i758.dup: i1;
  var $i759: i32;
  var $i759.dup: i1;
  var $i760: i32;
  var $i760.dup: i1;
  var $i761: i32;
  var $i761.dup: i1;
  var $i762: i32;
  var $i762.dup: i1;
  var $i763: i32;
  var $i763.dup: i1;
  var $i764: i32;
  var $i764.dup: i1;
  var $i765: i32;
  var $i765.dup: i1;
  var $i766: i32;
  var $i766.dup: i1;
  var $i767: i32;
  var $i767.dup: i1;
  var $i768: i32;
  var $i768.dup: i1;
  var $i769: i32;
  var $i769.dup: i1;
  var $i770: i32;
  var $i770.dup: i1;
  var $i771: i32;
  var $i771.dup: i1;
  var $i772: i32;
  var $i772.dup: i1;
  var $i773: i32;
  var $i773.dup: i1;
  var $i774: i32;
  var $i774.dup: i1;
  var $i775: i32;
  var $i775.dup: i1;
  var $i776: i32;
  var $i776.dup: i1;
  var $i777: i32;
  var $i777.dup: i1;
  var $i778: i32;
  var $i778.dup: i1;
  var $i779: i32;
  var $i779.dup: i1;
  var $i780: i32;
  var $i780.dup: i1;
  var $i781: i32;
  var $i781.dup: i1;
  var $i782: i32;
  var $i782.dup: i1;
  var $i783: i32;
  var $i783.dup: i1;
  var $i784: i32;
  var $i784.dup: i1;
  var $i785: i32;
  var $i785.dup: i1;
  var $i786: i32;
  var $i786.dup: i1;
  var $i787: i32;
  var $i787.dup: i1;
  var $i788: i32;
  var $i788.dup: i1;
  var $i789: i32;
  var $i789.dup: i1;
  var $i790: i32;
  var $i790.dup: i1;
  var $i791: i32;
  var $i791.dup: i1;
  var $i792: i32;
  var $i792.dup: i1;
  var $i793: i32;
  var $i793.dup: i1;
  var $i794: i32;
  var $i794.dup: i1;
  var $i795: i32;
  var $i795.dup: i1;
  var $i796: i32;
  var $i796.dup: i1;
  var $i797: i32;
  var $i797.dup: i1;
  var $i798: i32;
  var $i798.dup: i1;
  var $i799: i32;
  var $i799.dup: i1;
  var $i800: i32;
  var $i800.dup: i1;
  var $i801: i32;
  var $i801.dup: i1;
  var $i802: i32;
  var $i802.dup: i1;
  var $i803: i32;
  var $i803.dup: i1;
  var $i804: i32;
  var $i804.dup: i1;
  var $i805: i32;
  var $i805.dup: i1;
  var $i806: i32;
  var $i806.dup: i1;
  var $i807: i32;
  var $i807.dup: i1;
  var $i808: i32;
  var $i808.dup: i1;
  var $i809: i32;
  var $i809.dup: i1;
  var $i810: i32;
  var $i810.dup: i1;
  var $i811: i32;
  var $i811.dup: i1;
  var $i812: i32;
  var $i812.dup: i1;
  var $i813: i32;
  var $i813.dup: i1;
  var $i814: i32;
  var $i814.dup: i1;
  var $i815: i32;
  var $i815.dup: i1;
  var $i816: i32;
  var $i816.dup: i1;
  var $i817: i32;
  var $i817.dup: i1;
  var $i818: i32;
  var $i818.dup: i1;
  var $i819: i32;
  var $i819.dup: i1;
  var $i820: i32;
  var $i820.dup: i1;
  var $i821: i32;
  var $i821.dup: i1;
  var $i822: i32;
  var $i822.dup: i1;
  var $i823: i32;
  var $i823.dup: i1;
  var $i824: i32;
  var $i824.dup: i1;
  var $i825: i32;
  var $i825.dup: i1;
  var $i826: i32;
  var $i826.dup: i1;
  var $i827: i32;
  var $i827.dup: i1;
  var $i828: i32;
  var $i828.dup: i1;
  var $i829: i32;
  var $i829.dup: i1;
  var $i830: i32;
  var $i830.dup: i1;
  var $i831: i32;
  var $i831.dup: i1;
  var $i832: i32;
  var $i832.dup: i1;
  var $i833: i32;
  var $i833.dup: i1;
  var $i834: i32;
  var $i834.dup: i1;
  var $i835: i32;
  var $i835.dup: i1;
  var $i836: i32;
  var $i836.dup: i1;
  var $i837: i32;
  var $i837.dup: i1;
  var $i838: i32;
  var $i838.dup: i1;
  var $i839: i32;
  var $i839.dup: i1;
  var $i840: i32;
  var $i840.dup: i1;
  var $i841: i32;
  var $i841.dup: i1;
  var $i842: i32;
  var $i842.dup: i1;
  var $i843: i32;
  var $i843.dup: i1;
  var $i844: i32;
  var $i844.dup: i1;
  var $i845: i32;
  var $i845.dup: i1;
  var $i846: i32;
  var $i846.dup: i1;
  var $i847: i32;
  var $i847.dup: i1;
  var $i848: i32;
  var $i848.dup: i1;
  var $i849: i32;
  var $i849.dup: i1;
  var $i850: i32;
  var $i850.dup: i1;
  var $i851: i32;
  var $i851.dup: i1;
  var $i852: i32;
  var $i852.dup: i1;
  var $i853: i32;
  var $i853.dup: i1;
  var $i854: i32;
  var $i854.dup: i1;
  var $i855: i32;
  var $i855.dup: i1;
  var $i856: i32;
  var $i856.dup: i1;
  var $i857: i32;
  var $i857.dup: i1;
  var $i858: i32;
  var $i858.dup: i1;
  var $i859: i32;
  var $i859.dup: i1;
  var $i860: i32;
  var $i860.dup: i1;
  var $i861: i32;
  var $i861.dup: i1;
  var $i862: i32;
  var $i862.dup: i1;
  var $i863: i32;
  var $i863.dup: i1;
  var $i864: i32;
  var $i864.dup: i1;
  var $i865: i32;
  var $i865.dup: i1;
  var $i866: i32;
  var $i866.dup: i1;
  var $i867: i32;
  var $i867.dup: i1;
  var $i868: i32;
  var $i868.dup: i1;
  var $i869: i32;
  var $i869.dup: i1;
  var $i870: i32;
  var $i870.dup: i1;
  var $i871: i32;
  var $i871.dup: i1;
  var $i872: i32;
  var $i872.dup: i1;
  var $i873: i32;
  var $i873.dup: i1;
  var $i874: i32;
  var $i874.dup: i1;
  var $i875: i32;
  var $i875.dup: i1;
  var $i876: i32;
  var $i876.dup: i1;
  var $i877: i32;
  var $i877.dup: i1;
  var $i878: i32;
  var $i878.dup: i1;
  var $i879: i32;
  var $i879.dup: i1;
  var $i880: i32;
  var $i880.dup: i1;
  var $i881: i32;
  var $i881.dup: i1;
  var $i882: i32;
  var $i882.dup: i1;
  var $i883: i32;
  var $i883.dup: i1;
  var $i884: i32;
  var $i884.dup: i1;
  var $i885: i32;
  var $i885.dup: i1;
  var $i886: i32;
  var $i886.dup: i1;
  var $i887: i32;
  var $i887.dup: i1;
  var $i888: i32;
  var $i888.dup: i1;
  var $i889: i32;
  var $i889.dup: i1;
  var $i890: i32;
  var $i890.dup: i1;
  var $i891: i32;
  var $i891.dup: i1;
  var $i892: i32;
  var $i892.dup: i1;
  var $i893: i32;
  var $i893.dup: i1;
  var $i894: i32;
  var $i894.dup: i1;
  var $i895: i32;
  var $i895.dup: i1;
  var $i896: i32;
  var $i896.dup: i1;
  var $i897: i32;
  var $i897.dup: i1;
  var $i898: i32;
  var $i898.dup: i1;
  var $i899: i32;
  var $i899.dup: i1;
  var $i900: i32;
  var $i900.dup: i1;
  var $i901: i32;
  var $i901.dup: i1;
  var $i902: i32;
  var $i902.dup: i1;
  var $i903: i32;
  var $i903.dup: i1;
  var $i904: i32;
  var $i904.dup: i1;
  var $i905: i32;
  var $i905.dup: i1;
  var $i906: i32;
  var $i906.dup: i1;
  var $i907: i32;
  var $i907.dup: i1;
  var $i908: i32;
  var $i908.dup: i1;
  var $i909: i32;
  var $i909.dup: i1;
  var $i910: i32;
  var $i910.dup: i1;
  var $i911: i32;
  var $i911.dup: i1;
  var $i912: i32;
  var $i912.dup: i1;
  var $i913: i32;
  var $i913.dup: i1;
  var $i914: i32;
  var $i914.dup: i1;
  var $i915: i32;
  var $i915.dup: i1;
  var $i916: i32;
  var $i916.dup: i1;
  var $i917: i32;
  var $i917.dup: i1;
  var $i918: i32;
  var $i918.dup: i1;
  var $i919: i32;
  var $i919.dup: i1;
  var $i920: i32;
  var $i920.dup: i1;
  var $i921: i32;
  var $i921.dup: i1;
  var $i922: i32;
  var $i922.dup: i1;
  var $i923: i32;
  var $i923.dup: i1;
  var $i924: i32;
  var $i924.dup: i1;
  var $i925: i32;
  var $i925.dup: i1;
  var $i926: i32;
  var $i926.dup: i1;
  var $i927: i32;
  var $i927.dup: i1;
  var $i928: i32;
  var $i928.dup: i1;
  var $i929: i32;
  var $i929.dup: i1;
  var $i930: i32;
  var $i930.dup: i1;
  var $i931: i32;
  var $i931.dup: i1;
  var $i932: i32;
  var $i932.dup: i1;
  var $i933: i32;
  var $i933.dup: i1;
  var $i934: i32;
  var $i934.dup: i1;
  var $i935: i32;
  var $i935.dup: i1;
  var $i936: i32;
  var $i936.dup: i1;
  var $i937: i32;
  var $i937.dup: i1;
  var $i938: i32;
  var $i938.dup: i1;
  var $i939: i32;
  var $i939.dup: i1;
  var $i940: i32;
  var $i940.dup: i1;
  var $i941: i32;
  var $i941.dup: i1;
  var $i942: i32;
  var $i942.dup: i1;
  var $i943: i32;
  var $i943.dup: i1;
  var $i944: i32;
  var $i944.dup: i1;
  var $i945: i32;
  var $i945.dup: i1;
  var $i946: i32;
  var $i946.dup: i1;
  var $i947: i32;
  var $i947.dup: i1;
  var $i948: i32;
  var $i948.dup: i1;
  var $i949: i32;
  var $i949.dup: i1;
  var $i950: i32;
  var $i950.dup: i1;
  var $i951: i32;
  var $i951.dup: i1;
  var $i952: i32;
  var $i952.dup: i1;
  var $i953: i32;
  var $i953.dup: i1;
  var $i954: i32;
  var $i954.dup: i1;
  var $i955: i32;
  var $i955.dup: i1;
  var $i956: i32;
  var $i956.dup: i1;
  var $i957: i32;
  var $i957.dup: i1;
  var $i958: i32;
  var $i958.dup: i1;
  var $i959: i32;
  var $i959.dup: i1;
  var $i960: i32;
  var $i960.dup: i1;
  var $i961: i32;
  var $i961.dup: i1;
  var $i962: i32;
  var $i962.dup: i1;
  var $i963: i32;
  var $i963.dup: i1;
  var $i964: i32;
  var $i964.dup: i1;
  var $i965: i32;
  var $i965.dup: i1;
  var $i966: i32;
  var $i966.dup: i1;
  var $i967: i32;
  var $i967.dup: i1;
  var $i968: i32;
  var $i968.dup: i1;
  var $i969: i32;
  var $i969.dup: i1;
  var $i970: i32;
  var $i970.dup: i1;
  var $i971: i32;
  var $i971.dup: i1;
  var $i972: i32;
  var $i972.dup: i1;
  var $i973: i32;
  var $i973.dup: i1;
  var $i974: i32;
  var $i974.dup: i1;
  var $i975: i32;
  var $i975.dup: i1;
  var $i976: i32;
  var $i976.dup: i1;
  var $i977: i32;
  var $i977.dup: i1;
  var $i978: i32;
  var $i978.dup: i1;
  var $i979: i32;
  var $i979.dup: i1;
  var $i980: i32;
  var $i980.dup: i1;
  var $i981: i32;
  var $i981.dup: i1;
  var $i982: i32;
  var $i982.dup: i1;
  var $i983: i32;
  var $i983.dup: i1;
  var $i984: i32;
  var $i984.dup: i1;
  var $i985: i32;
  var $i985.dup: i1;
  var $i986: i32;
  var $i986.dup: i1;
  var $i987: i32;
  var $i987.dup: i1;
  var $i988: i32;
  var $i988.dup: i1;
  var $i989: i32;
  var $i989.dup: i1;
  var $i990: i32;
  var $i990.dup: i1;
  var $i991: i32;
  var $i991.dup: i1;
  var $i992: i32;
  var $i992.dup: i1;
  var $i993: i32;
  var $i993.dup: i1;
  var $i994: i32;
  var $i994.dup: i1;
  var $i995: i32;
  var $i995.dup: i1;
  var $i996: i32;
  var $i996.dup: i1;
  var $i997: i32;
  var $i997.dup: i1;
  var $i998: i32;
  var $i998.dup: i1;
  var $i999: i32;
  var $i999.dup: i1;
  var $i1000: i32;
  var $i1000.dup: i1;
  var $i1001: i32;
  var $i1001.dup: i1;
  var $i1002: i32;
  var $i1002.dup: i1;
  var $i1003: i32;
  var $i1003.dup: i1;
  var $i1004: i32;
  var $i1004.dup: i1;
  var $i1005: i32;
  var $i1005.dup: i1;
  var $i1006: i32;
  var $i1006.dup: i1;
  var $i1007: i32;
  var $i1007.dup: i1;
  var $i1008: i32;
  var $i1008.dup: i1;
  var $i1009: i32;
  var $i1009.dup: i1;
  var $i1010: i32;
  var $i1010.dup: i1;
  var $i1011: i32;
  var $i1011.dup: i1;
  var $i1012: i32;
  var $i1012.dup: i1;
  var $i1013: i32;
  var $i1013.dup: i1;
  var $i1014: i32;
  var $i1014.dup: i1;
  var $i1015: i32;
  var $i1015.dup: i1;
  var $i1016: i32;
  var $i1016.dup: i1;
  var $i1017: i32;
  var $i1017.dup: i1;
  var $i1018: i32;
  var $i1018.dup: i1;
  var $i1019: i32;
  var $i1019.dup: i1;
  var $i1020: i32;
  var $i1020.dup: i1;
  var $i1021: i32;
  var $i1021.dup: i1;
  var $i1022: i32;
  var $i1022.dup: i1;
  var $i1023: i32;
  var $i1023.dup: i1;
  var $i1024: i32;
  var $i1024.dup: i1;
  var $i1025: i32;
  var $i1025.dup: i1;
  var $i1026: i32;
  var $i1026.dup: i1;
  var $i1027: i32;
  var $i1027.dup: i1;
  var $i1028: i32;
  var $i1028.dup: i1;
  var $i1029: i32;
  var $i1029.dup: i1;
  var $i1030: i32;
  var $i1030.dup: i1;
  var $i1031: i32;
  var $i1031.dup: i1;
  var $i1032: i32;
  var $i1032.dup: i1;
  var $i1033: i32;
  var $i1033.dup: i1;
  var $i1034: i32;
  var $i1034.dup: i1;
  var $i1035: i32;
  var $i1035.dup: i1;
  var $i1036: i32;
  var $i1036.dup: i1;
  var $i1037: i32;
  var $i1037.dup: i1;
  var $i1038: i32;
  var $i1038.dup: i1;
  var $i1039: i32;
  var $i1039.dup: i1;
  var $i1040: i32;
  var $i1040.dup: i1;
  var $i1041: i32;
  var $i1041.dup: i1;
  var $i1042: i32;
  var $i1042.dup: i1;
  var $i1043: i32;
  var $i1043.dup: i1;
  var $i1044: i32;
  var $i1044.dup: i1;
  var $i1045: i32;
  var $i1045.dup: i1;
  var $i1046: i32;
  var $i1046.dup: i1;
  var $i1047: i32;
  var $i1047.dup: i1;
  var $i1048: i32;
  var $i1048.dup: i1;
  var $i1049: i32;
  var $i1049.dup: i1;
  var $i1050: i32;
  var $i1050.dup: i1;
  var $i1051: i32;
  var $i1051.dup: i1;
  var $i1052: i32;
  var $i1052.dup: i1;
  var $i1053: i32;
  var $i1053.dup: i1;
  var $i1054: i32;
  var $i1054.dup: i1;
  var $i1055: i32;
  var $i1055.dup: i1;
  var $i1056: i32;
  var $i1056.dup: i1;
  var $i1057: i32;
  var $i1057.dup: i1;
  var $i1058: i32;
  var $i1058.dup: i1;
  var $i1059: i32;
  var $i1059.dup: i1;
  var $i1060: i32;
  var $i1060.dup: i1;
  var $i1061: i32;
  var $i1061.dup: i1;
  var $i1062: i32;
  var $i1062.dup: i1;
  var $i1063: i32;
  var $i1063.dup: i1;
  var $i1064: i32;
  var $i1064.dup: i1;
  var $i1065: i32;
  var $i1065.dup: i1;
  var $i1066: i32;
  var $i1066.dup: i1;
  var $i1067: i32;
  var $i1067.dup: i1;
  var $i1068: i32;
  var $i1068.dup: i1;
  var $i1069: i32;
  var $i1069.dup: i1;
  var $i1070: i32;
  var $i1070.dup: i1;
  var $i1071: i32;
  var $i1071.dup: i1;
  var $i1072: i32;
  var $i1072.dup: i1;
  var $i1073: i32;
  var $i1073.dup: i1;
  var $i1074: i32;
  var $i1074.dup: i1;
  var $i1075: i32;
  var $i1075.dup: i1;
  var $i1076: i32;
  var $i1076.dup: i1;
  var $i1077: i32;
  var $i1077.dup: i1;
  var $i1078: i32;
  var $i1078.dup: i1;
  var $i1079: i32;
  var $i1079.dup: i1;
  var $i1080: i32;
  var $i1080.dup: i1;
  var $i1081: i32;
  var $i1081.dup: i1;
  var $i1082: i32;
  var $i1082.dup: i1;
  var $i1083: i32;
  var $i1083.dup: i1;
  var $i1084: i32;
  var $i1084.dup: i1;
  var $i1085: i32;
  var $i1085.dup: i1;
  var $i1086: i32;
  var $i1086.dup: i1;
  var $i1087: i32;
  var $i1087.dup: i1;
  var $i1088: i32;
  var $i1088.dup: i1;
  var $i1089: i32;
  var $i1089.dup: i1;
  var $i1090: i32;
  var $i1090.dup: i1;
  var $i1091: i32;
  var $i1091.dup: i1;
  var $i1092: i32;
  var $i1092.dup: i1;
  var $i1093: i32;
  var $i1093.dup: i1;
  var $i1094: i32;
  var $i1094.dup: i1;
  var $i1095: i32;
  var $i1095.dup: i1;
  var $i1096: i32;
  var $i1096.dup: i1;
  var $i1097: i32;
  var $i1097.dup: i1;
  var $i1098: i32;
  var $i1098.dup: i1;
  var $i1099: i32;
  var $i1099.dup: i1;
  var $i1100: i32;
  var $i1100.dup: i1;
  var $i1101: i32;
  var $i1101.dup: i1;
  var $i1102: i32;
  var $i1102.dup: i1;
  var $i1103: i32;
  var $i1103.dup: i1;
  var $i1104: i32;
  var $i1104.dup: i1;
  var $i1105: i32;
  var $i1105.dup: i1;
  var $i1106: i32;
  var $i1106.dup: i1;
  var $i1107: i32;
  var $i1107.dup: i1;
  var $i1108: i32;
  var $i1108.dup: i1;
  var $i1109: i32;
  var $i1109.dup: i1;
  var $i1110: i32;
  var $i1110.dup: i1;
  var $i1111: i32;
  var $i1111.dup: i1;
  var $i1112: i32;
  var $i1112.dup: i1;
  var $i1113: i32;
  var $i1113.dup: i1;
  var $i1114: i32;
  var $i1114.dup: i1;
  var $i1115: i32;
  var $i1115.dup: i1;
  var $i1116: i32;
  var $i1116.dup: i1;
  var $i1117: i32;
  var $i1117.dup: i1;
  var $i1118: i32;
  var $i1118.dup: i1;
  var $i1119: i32;
  var $i1119.dup: i1;
  var $i1120: i32;
  var $i1120.dup: i1;
  var $i1121: i32;
  var $i1121.dup: i1;
  var $i1122: i32;
  var $i1122.dup: i1;
  var $i1123: i32;
  var $i1123.dup: i1;
  var $i1124: i32;
  var $i1124.dup: i1;
  var $i1125: i32;
  var $i1125.dup: i1;
  var $i1126: i32;
  var $i1126.dup: i1;
  var $i1127: i32;
  var $i1127.dup: i1;
  var $i1128: i32;
  var $i1128.dup: i1;
  var $i1129: i32;
  var $i1129.dup: i1;
  var $i1130: i32;
  var $i1130.dup: i1;
  var $i1131: i32;
  var $i1131.dup: i1;
  var $i1132: i32;
  var $i1132.dup: i1;
  var $i1133: i32;
  var $i1133.dup: i1;
  var $i1134: i32;
  var $i1134.dup: i1;
  var $i1135: i32;
  var $i1135.dup: i1;
  var $i1136: i32;
  var $i1136.dup: i1;
  var $i1137: i32;
  var $i1137.dup: i1;
  var $i1138: i32;
  var $i1138.dup: i1;
  var $i1139: i32;
  var $i1139.dup: i1;
  var $i1140: i32;
  var $i1140.dup: i1;
  var $i1141: i32;
  var $i1141.dup: i1;
  var $i1142: i32;
  var $i1142.dup: i1;
  var $i1143: i32;
  var $i1143.dup: i1;
  var $i1144: i32;
  var $i1144.dup: i1;
  var $i1145: i32;
  var $i1145.dup: i1;
  var $i1146: i32;
  var $i1146.dup: i1;
  var $i1147: i32;
  var $i1147.dup: i1;
  var $i1148: i32;
  var $i1148.dup: i1;
  var $i1149: i32;
  var $i1149.dup: i1;
  var $i1150: i32;
  var $i1150.dup: i1;
  var $i1151: i32;
  var $i1151.dup: i1;
  var $i1152: i32;
  var $i1152.dup: i1;
  var $i1153: i32;
  var $i1153.dup: i1;
  var $i1154: i32;
  var $i1154.dup: i1;
  var $i1155: i32;
  var $i1155.dup: i1;
  var $i1156: i32;
  var $i1156.dup: i1;
  var $i1157: i32;
  var $i1157.dup: i1;
  var $i1158: i32;
  var $i1158.dup: i1;
  var $i1159: i32;
  var $i1159.dup: i1;
  var $i1160: i32;
  var $i1160.dup: i1;
  var $i1161: i32;
  var $i1161.dup: i1;
  var $i1162: i32;
  var $i1162.dup: i1;
  var $i1163: i32;
  var $i1163.dup: i1;
  var $i1164: i32;
  var $i1164.dup: i1;
  var $i1165: i32;
  var $i1165.dup: i1;
  var $i1166: i32;
  var $i1166.dup: i1;
  var $i1167: i32;
  var $i1167.dup: i1;
  var $i1168: i32;
  var $i1168.dup: i1;
  var $i1169: i32;
  var $i1169.dup: i1;
  var $i1170: i32;
  var $i1170.dup: i1;
  var $i1171: i32;
  var $i1171.dup: i1;
  var $i1172: i32;
  var $i1172.dup: i1;
  var $i1173: i32;
  var $i1173.dup: i1;
  var $i1174: i32;
  var $i1174.dup: i1;
  var $i1175: i32;
  var $i1175.dup: i1;
  var $i1176: i32;
  var $i1176.dup: i1;
  var $i1177: i32;
  var $i1177.dup: i1;
  var $i1178: i32;
  var $i1178.dup: i1;
  var $i1179: i32;
  var $i1179.dup: i1;
  var $i1180: i32;
  var $i1180.dup: i1;
  var $i1181: i32;
  var $i1181.dup: i1;
  var $i1182: i32;
  var $i1182.dup: i1;
  var $i1183: i32;
  var $i1183.dup: i1;
  var $i1184: i32;
  var $i1184.dup: i1;
  var $i1185: i32;
  var $i1185.dup: i1;
  var $i1186: i32;
  var $i1186.dup: i1;
  var $i1187: i32;
  var $i1187.dup: i1;
  var $i1188: i32;
  var $i1188.dup: i1;
  var $i1189: i32;
  var $i1189.dup: i1;
  var $i1190: i32;
  var $i1190.dup: i1;
  var $i1191: i32;
  var $i1191.dup: i1;
  var $i1192: i32;
  var $i1192.dup: i1;
  var $i1193: i32;
  var $i1193.dup: i1;
  var $i1194: i32;
  var $i1194.dup: i1;
  var $i1195: i32;
  var $i1195.dup: i1;
  var $i1196: i32;
  var $i1196.dup: i1;
  var $i1197: i32;
  var $i1197.dup: i1;
  var $i1198: i32;
  var $i1198.dup: i1;
  var $i1199: i32;
  var $i1199.dup: i1;
  var $i1200: i32;
  var $i1200.dup: i1;
  var $i1201: i32;
  var $i1201.dup: i1;
  var $i1202: i32;
  var $i1202.dup: i1;
  var $i1203: i32;
  var $i1203.dup: i1;
  var $i1204: i32;
  var $i1204.dup: i1;
  var $i1205: i32;
  var $i1205.dup: i1;
  var $i1206: i32;
  var $i1206.dup: i1;
  var $i1207: i32;
  var $i1207.dup: i1;
  var $i1208: i32;
  var $i1208.dup: i1;
  var $i1209: i32;
  var $i1209.dup: i1;
  var $i1210: i32;
  var $i1210.dup: i1;
  var $i1211: i32;
  var $i1211.dup: i1;
  var $i1212: i32;
  var $i1212.dup: i1;
  var $i1213: i32;
  var $i1213.dup: i1;
  var $i1214: i32;
  var $i1214.dup: i1;
  var $i1215: i32;
  var $i1215.dup: i1;
  var $i1216: i32;
  var $i1216.dup: i1;
  var $i1217: i32;
  var $i1217.dup: i1;
  var $i1218: i32;
  var $i1218.dup: i1;
  var $i1219: i32;
  var $i1219.dup: i1;
  var $i1220: i32;
  var $i1220.dup: i1;
  var $i1221: i32;
  var $i1221.dup: i1;
  var $i1222: i32;
  var $i1222.dup: i1;
  var $i1223: i32;
  var $i1223.dup: i1;
  var $i1224: i32;
  var $i1224.dup: i1;
  var $i1225: i32;
  var $i1225.dup: i1;
  var $i1226: i32;
  var $i1226.dup: i1;
  var $i1227: i32;
  var $i1227.dup: i1;
  var $i1228: i32;
  var $i1228.dup: i1;
  var $i1229: i32;
  var $i1229.dup: i1;
  var $i1230: i32;
  var $i1230.dup: i1;
  var $i1231: i32;
  var $i1231.dup: i1;
  var $i1232: i32;
  var $i1232.dup: i1;
  var $i1233: i32;
  var $i1233.dup: i1;
  var $i1234: i32;
  var $i1234.dup: i1;
  var $i1235: i32;
  var $i1235.dup: i1;
  var $i1236: i32;
  var $i1236.dup: i1;
  var $i1237: i32;
  var $i1237.dup: i1;
  var $i1238: i32;
  var $i1238.dup: i1;
  var $i1239: i32;
  var $i1239.dup: i1;
  var $i1240: i32;
  var $i1240.dup: i1;
  var $i1241: i32;
  var $i1241.dup: i1;
  var $i1242: i32;
  var $i1242.dup: i1;
  var $i1243: i32;
  var $i1243.dup: i1;
  var $i1244: i32;
  var $i1244.dup: i1;
  var $i1245: i32;
  var $i1245.dup: i1;
  var $i1246: i32;
  var $i1246.dup: i1;
  var $i1247: i32;
  var $i1247.dup: i1;
  var $i1248: i32;
  var $i1248.dup: i1;
  var $i1249: i32;
  var $i1249.dup: i1;
  var $i1250: i32;
  var $i1250.dup: i1;
  var $i1251: i32;
  var $i1251.dup: i1;
  var $i1252: i32;
  var $i1252.dup: i1;
  var $i1253: i32;
  var $i1253.dup: i1;
  var $i1254: i32;
  var $i1254.dup: i1;
  var $i1255: i32;
  var $i1255.dup: i1;
  var $i1256: i32;
  var $i1256.dup: i1;
  var $i1257: i32;
  var $i1257.dup: i1;
  var $i1258: i32;
  var $i1258.dup: i1;
  var $i1259: i32;
  var $i1259.dup: i1;
  var $i1260: i32;
  var $i1260.dup: i1;
  var $i1261: i32;
  var $i1261.dup: i1;
  var $i1262: i32;
  var $i1262.dup: i1;
  var $i1263: i32;
  var $i1263.dup: i1;
  var $i1264: i32;
  var $i1264.dup: i1;
  var $i1265: i32;
  var $i1265.dup: i1;
  var $i1266: i32;
  var $i1266.dup: i1;
  var $i1267: i32;
  var $i1267.dup: i1;
  var $i1268: i32;
  var $i1268.dup: i1;
  var $i1269: i32;
  var $i1269.dup: i1;
  var $i1270: i32;
  var $i1270.dup: i1;
  var $i1271: i32;
  var $i1271.dup: i1;
  var $i1272: i32;
  var $i1272.dup: i1;
  var $i1273: i32;
  var $i1273.dup: i1;
  var $i1274: i32;
  var $i1274.dup: i1;
  var $i1275: i32;
  var $i1275.dup: i1;
  var $i1276: i32;
  var $i1276.dup: i1;
  var $i1277: i32;
  var $i1277.dup: i1;
  var $i1278: i32;
  var $i1278.dup: i1;
  var $i1279: i32;
  var $i1279.dup: i1;
  var $i1280: i32;
  var $i1280.dup: i1;
  var $i1281: i32;
  var $i1281.dup: i1;
  var $i1282: i32;
  var $i1282.dup: i1;
  var $i1283: i32;
  var $i1283.dup: i1;
  var $i1284: i32;
  var $i1284.dup: i1;
  var $i1285: i32;
  var $i1285.dup: i1;
  var $i1286: i32;
  var $i1286.dup: i1;
  var $i1287: i32;
  var $i1287.dup: i1;
  var $i1288: i32;
  var $i1288.dup: i1;
  var $i1289: i32;
  var $i1289.dup: i1;
  var $i1290: i32;
  var $i1290.dup: i1;
  var $i1291: i32;
  var $i1291.dup: i1;
  var $i1292: i32;
  var $i1292.dup: i1;
  var $i1293: i32;
  var $i1293.dup: i1;
  var $i1294: i32;
  var $i1294.dup: i1;
  var $i1295: i32;
  var $i1295.dup: i1;
  var $i1296: i32;
  var $i1296.dup: i1;
  var $i1297: i32;
  var $i1297.dup: i1;
  var $i1298: i32;
  var $i1298.dup: i1;
  var $i1299: i32;
  var $i1299.dup: i1;
  var $i1300: i32;
  var $i1300.dup: i1;
  var $i1301: i32;
  var $i1301.dup: i1;
  var $i1302: i32;
  var $i1302.dup: i1;
  var $i1303: i32;
  var $i1303.dup: i1;
  var $i1304: i32;
  var $i1304.dup: i1;
  var $i1305: i32;
  var $i1305.dup: i1;
  var $i1306: i32;
  var $i1306.dup: i1;
  var $i1307: i32;
  var $i1307.dup: i1;
  var $i1308: i32;
  var $i1308.dup: i1;
  var $i1309: i32;
  var $i1309.dup: i1;
  var $i1310: i32;
  var $i1310.dup: i1;
  var $i1311: i32;
  var $i1311.dup: i1;
  var $i1312: i32;
  var $i1312.dup: i1;
  var $i1313: i32;
  var $i1313.dup: i1;
  var $i1314: i32;
  var $i1314.dup: i1;
  var $i1315: i32;
  var $i1315.dup: i1;
  var $i1316: i32;
  var $i1316.dup: i1;
  var $i1317: i32;
  var $i1317.dup: i1;
  var $i1318: i32;
  var $i1318.dup: i1;
  var $i1319: i32;
  var $i1319.dup: i1;
  var $i1320: i32;
  var $i1320.dup: i1;
  var $i1321: i32;
  var $i1321.dup: i1;
  var $i1322: i32;
  var $i1322.dup: i1;
  var $i1323: i32;
  var $i1323.dup: i1;
  var $i1324: i32;
  var $i1324.dup: i1;
  var $i1325: i32;
  var $i1325.dup: i1;
  var $i1326: i32;
  var $i1326.dup: i1;
  var $i1327: i32;
  var $i1327.dup: i1;
  var $i1328: i32;
  var $i1328.dup: i1;
  var $i1329: i32;
  var $i1329.dup: i1;
  var $i1330: i32;
  var $i1330.dup: i1;
  var $i1331: i32;
  var $i1331.dup: i1;
  var $i1332: i32;
  var $i1332.dup: i1;
  var $i1333: i32;
  var $i1333.dup: i1;
  var $i1334: i32;
  var $i1334.dup: i1;
  var $i1335: i32;
  var $i1335.dup: i1;
  var $i1336: i32;
  var $i1336.dup: i1;
  var $i1337: i32;
  var $i1337.dup: i1;
  var $i1338: i32;
  var $i1338.dup: i1;
  var $i1339: i32;
  var $i1339.dup: i1;
  var $i1340: i32;
  var $i1340.dup: i1;
  var $i1341: i32;
  var $i1341.dup: i1;
  var $i1342: i32;
  var $i1342.dup: i1;
  var $i1343: i32;
  var $i1343.dup: i1;
  var $i1344: i32;
  var $i1344.dup: i1;
  var $i1345: i32;
  var $i1345.dup: i1;
  var $i1346: i32;
  var $i1346.dup: i1;
  var $i1347: i32;
  var $i1347.dup: i1;
  var $i1348: i32;
  var $i1348.dup: i1;
  var $i1349: i32;
  var $i1349.dup: i1;
  var $i1350: i32;
  var $i1350.dup: i1;
  var $i1351: i32;
  var $i1351.dup: i1;
  var $i1352: i32;
  var $i1352.dup: i1;
  var $i1353: i32;
  var $i1353.dup: i1;
  var $i1354: i32;
  var $i1354.dup: i1;
  var $i1355: i32;
  var $i1355.dup: i1;
  var $i1356: i32;
  var $i1356.dup: i1;
  var $i1357: i32;
  var $i1357.dup: i1;
  var $i1358: i32;
  var $i1358.dup: i1;
  var $i1359: i32;
  var $i1359.dup: i1;
  var $i1360: i32;
  var $i1360.dup: i1;
  var $i1361: i32;
  var $i1361.dup: i1;
  var $i1362: i32;
  var $i1362.dup: i1;
  var $i1363: i32;
  var $i1363.dup: i1;
  var $i1364: i32;
  var $i1364.dup: i1;
  var $i1365: i32;
  var $i1365.dup: i1;
  var $i1366: i32;
  var $i1366.dup: i1;
  var $i1367: i32;
  var $i1367.dup: i1;
  var $i1368: i32;
  var $i1368.dup: i1;
  var $i1369: i32;
  var $i1369.dup: i1;
  var $i1370: i32;
  var $i1370.dup: i1;
  var $i1371: i32;
  var $i1371.dup: i1;
  var $i1372: i32;
  var $i1372.dup: i1;
  var $i1373: i32;
  var $i1373.dup: i1;
  var $i1374: i32;
  var $i1374.dup: i1;
  var $i1375: i32;
  var $i1375.dup: i1;
  var $i1376: i32;
  var $i1376.dup: i1;
  var $i1377: i32;
  var $i1377.dup: i1;
  var $i1378: i32;
  var $i1378.dup: i1;
  var $i1379: i32;
  var $i1379.dup: i1;
  var $i1380: i32;
  var $i1380.dup: i1;
  var $i1381: i32;
  var $i1381.dup: i1;
  var $i1382: i32;
  var $i1382.dup: i1;
  var $i1383: i32;
  var $i1383.dup: i1;
  var $i1384: i32;
  var $i1384.dup: i1;
  var $i1385: i32;
  var $i1385.dup: i1;
  var $i1386: i32;
  var $i1386.dup: i1;
  var $i1387: i32;
  var $i1387.dup: i1;
  var $i1388: i32;
  var $i1388.dup: i1;
  var $i1389: i32;
  var $i1389.dup: i1;
  var $i1390: i32;
  var $i1390.dup: i1;
  var $i1391: i32;
  var $i1391.dup: i1;
  var $i1392: i32;
  var $i1392.dup: i1;
  var $i1393: i32;
  var $i1393.dup: i1;
  var $i1394: i32;
  var $i1394.dup: i1;
  var $i1395: i32;
  var $i1395.dup: i1;
  var $i1396: i32;
  var $i1396.dup: i1;
  var $i1397: i32;
  var $i1397.dup: i1;
  var $i1398: i32;
  var $i1398.dup: i1;
  var $i1399: i32;
  var $i1399.dup: i1;
  var $i1400: i32;
  var $i1400.dup: i1;
  var $i1401: i32;
  var $i1401.dup: i1;
  var $i1402: i32;
  var $i1402.dup: i1;
  var $i1403: i32;
  var $i1403.dup: i1;
  var $i1404: i32;
  var $i1404.dup: i1;
  var $i1405: i32;
  var $i1405.dup: i1;
  var $i1406: i32;
  var $i1406.dup: i1;
  var $i1407: i32;
  var $i1407.dup: i1;
  var $i1408: i32;
  var $i1408.dup: i1;
  var $i1409: i32;
  var $i1409.dup: i1;
  var $i1410: i32;
  var $i1410.dup: i1;
  var $i1411: i32;
  var $i1411.dup: i1;
  var $i1412: i32;
  var $i1412.dup: i1;
  var $i1413: i32;
  var $i1413.dup: i1;
  var $i1414: i32;
  var $i1414.dup: i1;
  var $i1415: i32;
  var $i1415.dup: i1;
  var $i1416: i32;
  var $i1416.dup: i1;
  var $i1417: i32;
  var $i1417.dup: i1;
  var $i1418: i32;
  var $i1418.dup: i1;
  var $i1419: i32;
  var $i1419.dup: i1;
  var $i1420: i32;
  var $i1420.dup: i1;
  var $i1421: i32;
  var $i1421.dup: i1;
  var $i1422: i32;
  var $i1422.dup: i1;
  var $i1423: i32;
  var $i1423.dup: i1;
  var $i1424: i32;
  var $i1424.dup: i1;
  var $i1425: i32;
  var $i1425.dup: i1;
  var $i1426: i32;
  var $i1426.dup: i1;
  var $i1427: i32;
  var $i1427.dup: i1;
  var $i1428: i32;
  var $i1428.dup: i1;
  var $i1429: i32;
  var $i1429.dup: i1;
  var $i1430: i32;
  var $i1430.dup: i1;
  var $i1431: i32;
  var $i1431.dup: i1;
  var $i1432: i32;
  var $i1432.dup: i1;
  var $i1433: i32;
  var $i1433.dup: i1;
  var $i1434: i32;
  var $i1434.dup: i1;
  var $i1435: i32;
  var $i1435.dup: i1;
  var $i1436: i32;
  var $i1436.dup: i1;
  var $i1437: i32;
  var $i1437.dup: i1;
  var $i1438: i32;
  var $i1438.dup: i1;
  var $i1439: i32;
  var $i1439.dup: i1;
  var $i1440: i32;
  var $i1440.dup: i1;
  var $i1441: i32;
  var $i1441.dup: i1;
  var $i1442: i32;
  var $i1442.dup: i1;
  var $i1443: i32;
  var $i1443.dup: i1;
  var $i1444: i32;
  var $i1444.dup: i1;
  var $i1445: i32;
  var $i1445.dup: i1;
  var $i1446: i32;
  var $i1446.dup: i1;
  var $i1447: i32;
  var $i1447.dup: i1;
  var $i1448: i32;
  var $i1448.dup: i1;
  var $i1449: i32;
  var $i1449.dup: i1;
  var $i1450: i32;
  var $i1450.dup: i1;
  var $i1451: i32;
  var $i1451.dup: i1;
  var $i1452: i32;
  var $i1452.dup: i1;
  var $i1453: i32;
  var $i1453.dup: i1;
  var $i1454: i32;
  var $i1454.dup: i1;
  var $i1455: i32;
  var $i1455.dup: i1;
  var $i1456: i32;
  var $i1456.dup: i1;
  var $i1457: i32;
  var $i1457.dup: i1;
  var $i1458: i32;
  var $i1458.dup: i1;
  var $i1459: i32;
  var $i1459.dup: i1;
  var $i1460: i32;
  var $i1460.dup: i1;
  var $i1461: i32;
  var $i1461.dup: i1;
  var $i1462: i32;
  var $i1462.dup: i1;
  var $i1463: i32;
  var $i1463.dup: i1;
  var $i1464: i32;
  var $i1464.dup: i1;
  var $i1465: i32;
  var $i1465.dup: i1;
  var $i1466: i32;
  var $i1466.dup: i1;
  var $i1467: i32;
  var $i1467.dup: i1;
  var $i1468: i32;
  var $i1468.dup: i1;
  var $i1469: i32;
  var $i1469.dup: i1;
  var $i1470: i32;
  var $i1470.dup: i1;
  var $i1471: i32;
  var $i1471.dup: i1;
  var $i1472: i32;
  var $i1472.dup: i1;
  var $i1473: i32;
  var $i1473.dup: i1;
  var $i1474: i32;
  var $i1474.dup: i1;
  var $i1475: i32;
  var $i1475.dup: i1;
  var $i1476: i32;
  var $i1476.dup: i1;
  var $i1477: i32;
  var $i1477.dup: i1;
  var $i1478: i32;
  var $i1478.dup: i1;
  var $i1479: i32;
  var $i1479.dup: i1;
  var $i1480: i32;
  var $i1480.dup: i1;
  var $i1481: i32;
  var $i1481.dup: i1;
  var $i1482: i32;
  var $i1482.dup: i1;
  var $i1483: i32;
  var $i1483.dup: i1;
  var $i1484: i32;
  var $i1484.dup: i1;
  var $i1485: i32;
  var $i1485.dup: i1;
  var $i1486: i32;
  var $i1486.dup: i1;
  var $i1487: i32;
  var $i1487.dup: i1;
  var $i1488: i32;
  var $i1488.dup: i1;
  var $i1489: i32;
  var $i1489.dup: i1;
  var $i1490: i32;
  var $i1490.dup: i1;
  var $i1491: i32;
  var $i1491.dup: i1;
  var $i1492: i32;
  var $i1492.dup: i1;
  var $i1493: i32;
  var $i1493.dup: i1;
  var $i1494: i32;
  var $i1494.dup: i1;
  var $i1495: i32;
  var $i1495.dup: i1;
  var $i1496: i32;
  var $i1496.dup: i1;
  var $i1497: i32;
  var $i1497.dup: i1;
  var $i1498: i32;
  var $i1498.dup: i1;
  var $i1499: i32;
  var $i1499.dup: i1;
  var $i1500: i32;
  var $i1500.dup: i1;
  var $i1501: i32;
  var $i1501.dup: i1;
  var $i1502: i32;
  var $i1502.dup: i1;
  var $i1503: i32;
  var $i1503.dup: i1;
  var $i1504: i32;
  var $i1504.dup: i1;
  var $i1505: i32;
  var $i1505.dup: i1;
  var $i1506: i32;
  var $i1506.dup: i1;
  var $i1507: i32;
  var $i1507.dup: i1;
  var $i1508: i32;
  var $i1508.dup: i1;
  var $i1509: i32;
  var $i1509.dup: i1;
  var $i1510: i32;
  var $i1510.dup: i1;
  var $i1511: i32;
  var $i1511.dup: i1;
  var $i1512: i32;
  var $i1512.dup: i1;
  var $i1513: i32;
  var $i1513.dup: i1;
  var $i1514: i32;
  var $i1514.dup: i1;
  var $i1515: i32;
  var $i1515.dup: i1;
  var $i1516: i32;
  var $i1516.dup: i1;
  var $i1517: i32;
  var $i1517.dup: i1;
  var $i1518: i32;
  var $i1518.dup: i1;
  var $i1519: i32;
  var $i1519.dup: i1;
  var $i1520: i32;
  var $i1520.dup: i1;
  var $i1521: i32;
  var $i1521.dup: i1;
  var $i1522: i32;
  var $i1522.dup: i1;
  var $i1523: i32;
  var $i1523.dup: i1;
  var $i1524: i32;
  var $i1524.dup: i1;
  var $i1525: i32;
  var $i1525.dup: i1;
  var $i1526: i32;
  var $i1526.dup: i1;
  var $i1527: i32;
  var $i1527.dup: i1;
  var $i1528: i32;
  var $i1528.dup: i1;
  var $i1529: i32;
  var $i1529.dup: i1;
  var $i1530: i32;
  var $i1530.dup: i1;
  var $i1531: i32;
  var $i1531.dup: i1;
  var $i1532: i32;
  var $i1532.dup: i1;
  var $i1533: i32;
  var $i1533.dup: i1;
  var $i1534: i32;
  var $i1534.dup: i1;
  var $i1535: i32;
  var $i1535.dup: i1;
  var $i1536: i32;
  var $i1536.dup: i1;
  var $i1537: i32;
  var $i1537.dup: i1;
  var $i1538: i32;
  var $i1538.dup: i1;
  var $i1539: i32;
  var $i1539.dup: i1;
  var $i1540: i32;
  var $i1540.dup: i1;
  var $i1541: i32;
  var $i1541.dup: i1;
  var $i1542: i32;
  var $i1542.dup: i1;
  var $i1543: i32;
  var $i1543.dup: i1;
  var $i1544: i32;
  var $i1544.dup: i1;
  var $i1545: i32;
  var $i1545.dup: i1;
  var $i1546: i32;
  var $i1546.dup: i1;
  var $i1547: i32;
  var $i1547.dup: i1;
  var $i1548: i32;
  var $i1548.dup: i1;
  var $i1549: i32;
  var $i1549.dup: i1;
  var $i1550: i32;
  var $i1550.dup: i1;
  var $i1551: i32;
  var $i1551.dup: i1;
  var $i1552: i32;
  var $i1552.dup: i1;
  var $i1553: i32;
  var $i1553.dup: i1;
  var $i1554: i32;
  var $i1554.dup: i1;
  var $i1555: i32;
  var $i1555.dup: i1;
  var $i1556: i32;
  var $i1556.dup: i1;
  var $i1557: i32;
  var $i1557.dup: i1;
  var $i1558: i32;
  var $i1558.dup: i1;
  var $i1559: i32;
  var $i1559.dup: i1;
  var $i1560: i32;
  var $i1560.dup: i1;
  var $i1561: i32;
  var $i1561.dup: i1;
  var $i1562: i32;
  var $i1562.dup: i1;
  var $i1563: i32;
  var $i1563.dup: i1;
  var $i1564: i32;
  var $i1564.dup: i1;
  var $i1565: i32;
  var $i1565.dup: i1;
  var $i1566: i32;
  var $i1566.dup: i1;
  var $i1567: i32;
  var $i1567.dup: i1;
  var $i1568: i32;
  var $i1568.dup: i1;
  var $i1569: i32;
  var $i1569.dup: i1;
  var $i1570: i32;
  var $i1570.dup: i1;
  var $i1571: i32;
  var $i1571.dup: i1;
  var $i1572: i32;
  var $i1572.dup: i1;
  var $i1573: i32;
  var $i1573.dup: i1;
  var $i1574: i32;
  var $i1574.dup: i1;
  var $i1575: i32;
  var $i1575.dup: i1;
  var $i1576: i32;
  var $i1576.dup: i1;
  var $i1577: i32;
  var $i1577.dup: i1;
  var $i1578: i32;
  var $i1578.dup: i1;
  var $i1579: i32;
  var $i1579.dup: i1;
  var $i1580: i32;
  var $i1580.dup: i1;
  var $i1581: i32;
  var $i1581.dup: i1;
  var $i1582: i32;
  var $i1582.dup: i1;
  var $i1583: i32;
  var $i1583.dup: i1;
  var $i1584: i32;
  var $i1584.dup: i1;
  var $i1585: i32;
  var $i1585.dup: i1;
  var $i1586: i32;
  var $i1586.dup: i1;
  var $i1587: i32;
  var $i1587.dup: i1;
  var $i1588: i32;
  var $i1588.dup: i1;
  var $i1589: i32;
  var $i1589.dup: i1;
  var $i1590: i32;
  var $i1590.dup: i1;
  var $i1591: i32;
  var $i1591.dup: i1;
  var $i1592: i32;
  var $i1592.dup: i1;
  var $i1593: i32;
  var $i1593.dup: i1;
  var $i1594: i32;
  var $i1594.dup: i1;
  var $i1595: i32;
  var $i1595.dup: i1;
  var $i1596: i32;
  var $i1596.dup: i1;
  var $i1597: i32;
  var $i1597.dup: i1;
  var $i1598: i32;
  var $i1598.dup: i1;
  var $i1599: i32;
  var $i1599.dup: i1;
  var $i1600: i32;
  var $i1600.dup: i1;
  var $i1601: i32;
  var $i1601.dup: i1;
  var $i1602: i32;
  var $i1602.dup: i1;
  var $i1603: i32;
  var $i1603.dup: i1;
  var $i1604: i32;
  var $i1604.dup: i1;
  var $i1605: i32;
  var $i1605.dup: i1;
  var $i1606: i32;
  var $i1606.dup: i1;
  var $i1607: i32;
  var $i1607.dup: i1;
  var $i1608: i32;
  var $i1608.dup: i1;
  var $i1609: i32;
  var $i1609.dup: i1;
  var $i1610: i32;
  var $i1610.dup: i1;
  var $i1611: i32;
  var $i1611.dup: i1;
  var $i1612: i32;
  var $i1612.dup: i1;
  var $i1613: i32;
  var $i1613.dup: i1;
  var $i1614: i32;
  var $i1614.dup: i1;
  var $i1615: i32;
  var $i1615.dup: i1;
  var $i1616: i32;
  var $i1616.dup: i1;
  var $i1617: i32;
  var $i1617.dup: i1;
  var $i1618: i32;
  var $i1618.dup: i1;
  var $i1619: i32;
  var $i1619.dup: i1;
  var $i1620: i32;
  var $i1620.dup: i1;
  var $i1621: i32;
  var $i1621.dup: i1;
  var $i1622: i32;
  var $i1622.dup: i1;
  var $i1623: i32;
  var $i1623.dup: i1;
  var $i1624: i32;
  var $i1624.dup: i1;
  var $i1625: i32;
  var $i1625.dup: i1;
  var $i1626: i32;
  var $i1626.dup: i1;
  var $i1627: i32;
  var $i1627.dup: i1;
  var $i1628: i32;
  var $i1628.dup: i1;
  var $i1629: i32;
  var $i1629.dup: i1;
  var $i1630: i32;
  var $i1630.dup: i1;
  var $i1631: i32;
  var $i1631.dup: i1;
  var $i1632: i32;
  var $i1632.dup: i1;
  var $i1633: i32;
  var $i1633.dup: i1;
  var $i1634: i32;
  var $i1634.dup: i1;
  var $i1635: i32;
  var $i1635.dup: i1;
  var $i1636: i32;
  var $i1636.dup: i1;
  var $i1637: i32;
  var $i1637.dup: i1;
  var $i1638: i32;
  var $i1638.dup: i1;
  var $i1639: i32;
  var $i1639.dup: i1;
  var $i1640: i32;
  var $i1640.dup: i1;
  var $i1641: i32;
  var $i1641.dup: i1;
  var $i1642: i32;
  var $i1642.dup: i1;
  var $i1643: i32;
  var $i1643.dup: i1;
  var $i1644: i32;
  var $i1644.dup: i1;
  var $i1645: i32;
  var $i1645.dup: i1;
  var $i1646: i32;
  var $i1646.dup: i1;
  var $i1647: i32;
  var $i1647.dup: i1;
  var $i1648: i32;
  var $i1648.dup: i1;
  var $i1649: i32;
  var $i1649.dup: i1;
  var $i1650: i32;
  var $i1650.dup: i1;
  var $i1651: i32;
  var $i1651.dup: i1;
  var $i1652: i32;
  var $i1652.dup: i1;
  var $i1653: i32;
  var $i1653.dup: i1;
  var $i1654: i32;
  var $i1654.dup: i1;
  var $i1655: i32;
  var $i1655.dup: i1;
  var $i1656: i32;
  var $i1656.dup: i1;
  var $i1657: i32;
  var $i1657.dup: i1;
  var $i1658: i32;
  var $i1658.dup: i1;
  var $i1659: i32;
  var $i1659.dup: i1;
  var $i1660: i32;
  var $i1660.dup: i1;
  var $i1661: i32;
  var $i1661.dup: i1;
  var $i1662: i32;
  var $i1662.dup: i1;
  var $i1663: i32;
  var $i1663.dup: i1;
  var $i1664: i32;
  var $i1664.dup: i1;
  var $i1665: i32;
  var $i1665.dup: i1;
  var $i1666: i32;
  var $i1666.dup: i1;
  var $i1667: i32;
  var $i1667.dup: i1;
  var $i1668: i32;
  var $i1668.dup: i1;
  var $i1669: i32;
  var $i1669.dup: i1;
  var $i1670: i32;
  var $i1670.dup: i1;
  var $i1671: i32;
  var $i1671.dup: i1;
  var $i1672: i32;
  var $i1672.dup: i1;
  var $i1673: i32;
  var $i1673.dup: i1;
  var $i1674: i32;
  var $i1674.dup: i1;
  var $i1675: i32;
  var $i1675.dup: i1;
  var $i1676: i32;
  var $i1676.dup: i1;
  var $i1677: i32;
  var $i1677.dup: i1;
  var $i1678: i32;
  var $i1678.dup: i1;
  var $i1679: i32;
  var $i1679.dup: i1;
  var $i1680: i32;
  var $i1680.dup: i1;
  var $i1681: i32;
  var $i1681.dup: i1;
  var $i1682: i32;
  var $i1682.dup: i1;
  var $i1683: i32;
  var $i1683.dup: i1;
  var $i1684: i32;
  var $i1684.dup: i1;
  var $i1685: i32;
  var $i1685.dup: i1;
  var $i1686: i32;
  var $i1686.dup: i1;
  var $i1687: i32;
  var $i1687.dup: i1;
  var $i1688: i32;
  var $i1688.dup: i1;
  var $i1689: i32;
  var $i1689.dup: i1;
  var $i1690: i32;
  var $i1690.dup: i1;
  var $i1691: i32;
  var $i1691.dup: i1;
  var $i1692: i32;
  var $i1692.dup: i1;
  var $i1693: i32;
  var $i1693.dup: i1;
  var $i1694: i32;
  var $i1694.dup: i1;
  var $i1695: i32;
  var $i1695.dup: i1;
  var $i1696: i32;
  var $i1696.dup: i1;
  var $i1697: i32;
  var $i1697.dup: i1;
  var $i1698: i32;
  var $i1698.dup: i1;
  var $i1699: i32;
  var $i1699.dup: i1;
  var $i1700: i32;
  var $i1700.dup: i1;
  var $i1701: i32;
  var $i1701.dup: i1;
  var $i1702: i32;
  var $i1702.dup: i1;
  var $i1703: i32;
  var $i1703.dup: i1;
  var $i1704: i32;
  var $i1704.dup: i1;
  var $i1705: i32;
  var $i1705.dup: i1;
  var $i1706: i32;
  var $i1706.dup: i1;
  var $i1707: i32;
  var $i1707.dup: i1;
  var $i1708: i32;
  var $i1708.dup: i1;
  var $i1709: i32;
  var $i1709.dup: i1;
  var $i1710: i32;
  var $i1710.dup: i1;
  var $i1711: i32;
  var $i1711.dup: i1;
  var $i1712: i32;
  var $i1712.dup: i1;
  var $i1713: i32;
  var $i1713.dup: i1;
  var $i1714: i32;
  var $i1714.dup: i1;
  var $i1715: i32;
  var $i1715.dup: i1;
  var $i1716: i32;
  var $i1716.dup: i1;
  var $i1717: i32;
  var $i1717.dup: i1;
  var $i1718: i32;
  var $i1718.dup: i1;
  var $i1719: i32;
  var $i1719.dup: i1;
  var $i1720: i32;
  var $i1720.dup: i1;
  var $i1721: i32;
  var $i1721.dup: i1;
  var $i1722: i32;
  var $i1722.dup: i1;
  var $i1723: i32;
  var $i1723.dup: i1;
  var $i1724: i32;
  var $i1724.dup: i1;
  var $i1725: i32;
  var $i1725.dup: i1;
  var $i1726: i32;
  var $i1726.dup: i1;
  var $i1727: i32;
  var $i1727.dup: i1;
  var $i1728: i32;
  var $i1728.dup: i1;
  var $i1729: i32;
  var $i1729.dup: i1;
  var $i1730: i32;
  var $i1730.dup: i1;
  var $i1731: i32;
  var $i1731.dup: i1;
  var $i1732: i32;
  var $i1732.dup: i1;
  var $i1733: i32;
  var $i1733.dup: i1;
  var $i1734: i32;
  var $i1734.dup: i1;
  var $i1735: i32;
  var $i1735.dup: i1;
  var $i1736: i32;
  var $i1736.dup: i1;
  var $i1737: i32;
  var $i1737.dup: i1;
  var $i1738: i32;
  var $i1738.dup: i1;
  var $i1739: i32;
  var $i1739.dup: i1;
  var $i1740: i32;
  var $i1740.dup: i1;
  var $i1741: i32;
  var $i1741.dup: i1;
  var $i1742: i32;
  var $i1742.dup: i1;
  var $i1743: i32;
  var $i1743.dup: i1;
  var $i1744: i32;
  var $i1744.dup: i1;
  var $i1745: i32;
  var $i1745.dup: i1;
  var $i1746: i32;
  var $i1746.dup: i1;
  var $i1747: i32;
  var $i1747.dup: i1;
  var $i1748: i32;
  var $i1748.dup: i1;
  var $i1749: i32;
  var $i1749.dup: i1;
  var $i1750: i32;
  var $i1750.dup: i1;
  var $i1751: i32;
  var $i1751.dup: i1;
  var $i1752: i32;
  var $i1752.dup: i1;
  var $i1753: i32;
  var $i1753.dup: i1;
  var $i1754: i32;
  var $i1754.dup: i1;
  var $i1755: i32;
  var $i1755.dup: i1;
  var $i1756: i32;
  var $i1756.dup: i1;
  var $i1757: i32;
  var $i1757.dup: i1;
  var $i1758: i32;
  var $i1758.dup: i1;
  var $i1759: i32;
  var $i1759.dup: i1;
  var $i1760: i32;
  var $i1760.dup: i1;
  var $i1761: i32;
  var $i1761.dup: i1;
  var $i1762: i32;
  var $i1762.dup: i1;
  var $i1763: i32;
  var $i1763.dup: i1;
  var $i1764: i32;
  var $i1764.dup: i1;
  var $i1765: i32;
  var $i1765.dup: i1;
  var $i1766: i32;
  var $i1766.dup: i1;
  var $i1767: i32;
  var $i1767.dup: i1;
  var $i1768: i32;
  var $i1768.dup: i1;
  var $i1769: i32;
  var $i1769.dup: i1;
  var $i1770: i32;
  var $i1770.dup: i1;
  var $i1771: i32;
  var $i1771.dup: i1;
  var $i1772: i32;
  var $i1772.dup: i1;
  var $i1773: i32;
  var $i1773.dup: i1;
  var $i1774: i32;
  var $i1774.dup: i1;
  var $i1775: i32;
  var $i1775.dup: i1;
  var $i1776: i32;
  var $i1776.dup: i1;
  var $i1777: i32;
  var $i1777.dup: i1;
  var $i1778: i32;
  var $i1778.dup: i1;
  var $i1779: i32;
  var $i1779.dup: i1;
  var $i1780: i32;
  var $i1780.dup: i1;
  var $i1781: i32;
  var $i1781.dup: i1;
  var $i1782: i32;
  var $i1782.dup: i1;
  var $i1783: i32;
  var $i1783.dup: i1;
  var $i1784: i32;
  var $i1784.dup: i1;
  var $i1785: i32;
  var $i1785.dup: i1;
  var $i1786: i32;
  var $i1786.dup: i1;
  var $i1787: i32;
  var $i1787.dup: i1;
  var $i1788: i32;
  var $i1788.dup: i1;
  var $i1789: i32;
  var $i1789.dup: i1;
  var $i1790: i32;
  var $i1790.dup: i1;
  var $i1791: i32;
  var $i1791.dup: i1;
  var $i1792: i32;
  var $i1792.dup: i1;
  var $i1793: i32;
  var $i1793.dup: i1;
  var $i1794: i32;
  var $i1794.dup: i1;
  var $i1795: i32;
  var $i1795.dup: i1;
  var $i1796: i32;
  var $i1796.dup: i1;
  var $i1797: i32;
  var $i1797.dup: i1;
  var $i1798: i32;
  var $i1798.dup: i1;
  var $i1799: i32;
  var $i1799.dup: i1;
  var $i1800: i32;
  var $i1800.dup: i1;
  var $i1801: i32;
  var $i1801.dup: i1;
  var $i1802: i32;
  var $i1802.dup: i1;
  var $i1803: i32;
  var $i1803.dup: i1;
  var $i1804: i32;
  var $i1804.dup: i1;
  var $i1805: i32;
  var $i1805.dup: i1;
  var $i1806: i32;
  var $i1806.dup: i1;
  var $i1807: i32;
  var $i1807.dup: i1;
  var $i1808: i32;
  var $i1808.dup: i1;
  var $i1809: i32;
  var $i1809.dup: i1;
  var $i1810: i32;
  var $i1810.dup: i1;
  var $i1811: i32;
  var $i1811.dup: i1;
  var $i1812: i32;
  var $i1812.dup: i1;
  var $i1813: i32;
  var $i1813.dup: i1;
  var $i1814: i32;
  var $i1814.dup: i1;
  var $i1815: i32;
  var $i1815.dup: i1;
  var $i1816: i32;
  var $i1816.dup: i1;
  var $i1817: i32;
  var $i1817.dup: i1;
  var $i1818: i32;
  var $i1818.dup: i1;
  var $i1819: i32;
  var $i1819.dup: i1;
  var $i1820: i32;
  var $i1820.dup: i1;
  var $i1821: i32;
  var $i1821.dup: i1;
  var $i1822: i32;
  var $i1822.dup: i1;
  var $i1823: i32;
  var $i1823.dup: i1;
  var $i1824: i32;
  var $i1824.dup: i1;
  var $i1825: i32;
  var $i1825.dup: i1;
  var $i1826: i32;
  var $i1826.dup: i1;
  var $i1827: i32;
  var $i1827.dup: i1;
  var $i1828: i32;
  var $i1828.dup: i1;
  var $i1829: i32;
  var $i1829.dup: i1;
  var $i1830: i32;
  var $i1830.dup: i1;
  var $i1831: i32;
  var $i1831.dup: i1;
  var $i1832: i32;
  var $i1832.dup: i1;
  var $i1833: i32;
  var $i1833.dup: i1;
  var $i1834: i32;
  var $i1834.dup: i1;
  var $i1835: i32;
  var $i1835.dup: i1;
  var $i1836: i32;
  var $i1836.dup: i1;
  var $i1837: i32;
  var $i1837.dup: i1;
  var $i1838: i32;
  var $i1838.dup: i1;
  var $i1839: i32;
  var $i1839.dup: i1;
  var $i1840: i32;
  var $i1840.dup: i1;
  var $i1841: i32;
  var $i1841.dup: i1;
  var $i1842: i32;
  var $i1842.dup: i1;
  var $i1843: i32;
  var $i1843.dup: i1;
  var $i1844: i32;
  var $i1844.dup: i1;
  var $i1845: i32;
  var $i1845.dup: i1;
  var $i1846: i32;
  var $i1846.dup: i1;
  var $i1847: i32;
  var $i1847.dup: i1;
  var $i1848: i32;
  var $i1848.dup: i1;
  var $i1849: i32;
  var $i1849.dup: i1;
  var $i1850: i32;
  var $i1850.dup: i1;
  var $i1851: i32;
  var $i1851.dup: i1;
  var $i1852: i32;
  var $i1852.dup: i1;
  var $i1853: i32;
  var $i1853.dup: i1;
  var $i1854: i32;
  var $i1854.dup: i1;
  var $i1855: i32;
  var $i1855.dup: i1;
  var $i1856: i32;
  var $i1856.dup: i1;
  var $i1857: i32;
  var $i1857.dup: i1;
  var $i1858: i32;
  var $i1858.dup: i1;
  var $i1859: i32;
  var $i1859.dup: i1;
  var $i1860: i32;
  var $i1860.dup: i1;
  var $i1861: i32;
  var $i1861.dup: i1;
  var $i1862: i32;
  var $i1862.dup: i1;
  var $i1863: i32;
  var $i1863.dup: i1;
  var $i1864: i32;
  var $i1864.dup: i1;
  var $i1865: i32;
  var $i1865.dup: i1;
  var $i1866: i32;
  var $i1866.dup: i1;
  var $i1867: i32;
  var $i1867.dup: i1;
  var $i1868: i32;
  var $i1868.dup: i1;
  var $i1869: i32;
  var $i1869.dup: i1;
  var $i1870: i32;
  var $i1870.dup: i1;
  var $i1871: i32;
  var $i1871.dup: i1;
  var $i1872: i32;
  var $i1872.dup: i1;
  var $i1873: i32;
  var $i1873.dup: i1;
  var $i1874: i32;
  var $i1874.dup: i1;
  var $i1875: i32;
  var $i1875.dup: i1;
  var $i1876: i32;
  var $i1876.dup: i1;
  var $i1877: i32;
  var $i1877.dup: i1;
  var $i1878: i32;
  var $i1878.dup: i1;
  var $i1879: i32;
  var $i1879.dup: i1;
  var $i1880: i32;
  var $i1880.dup: i1;
  var $i1881: i32;
  var $i1881.dup: i1;
  var $i1882: i32;
  var $i1882.dup: i1;
  var $i1883: i32;
  var $i1883.dup: i1;
  var $i1884: i32;
  var $i1884.dup: i1;
  var $i1885: i32;
  var $i1885.dup: i1;
  var $i1886: i32;
  var $i1886.dup: i1;
  var $i1887: i32;
  var $i1887.dup: i1;
  var $i1888: i32;
  var $i1888.dup: i1;
  var $i1889: i32;
  var $i1889.dup: i1;
  var $i1890: i32;
  var $i1890.dup: i1;
  var $i1891: i32;
  var $i1891.dup: i1;
  var $i1892: i32;
  var $i1892.dup: i1;
  var $i1893: i32;
  var $i1893.dup: i1;
  var $i1894: i32;
  var $i1894.dup: i1;
  var $i1895: i32;
  var $i1895.dup: i1;
  var $i1896: i32;
  var $i1896.dup: i1;
  var $i1897: i32;
  var $i1897.dup: i1;
  var $i1898: i32;
  var $i1898.dup: i1;
  var $i1899: i32;
  var $i1899.dup: i1;
  var $i1900: i32;
  var $i1900.dup: i1;
  var $i1901: i32;
  var $i1901.dup: i1;
  var $i1902: i32;
  var $i1902.dup: i1;
  var $i1903: i32;
  var $i1903.dup: i1;
  var $i1904: i32;
  var $i1904.dup: i1;
  var $i1905: i32;
  var $i1905.dup: i1;
  var $i1906: i32;
  var $i1906.dup: i1;
  var $i1907: i32;
  var $i1907.dup: i1;
  var $i1908: i32;
  var $i1908.dup: i1;
  var $i1909: i32;
  var $i1909.dup: i1;
  var $i1910: i32;
  var $i1910.dup: i1;
  var $i1911: i32;
  var $i1911.dup: i1;
  var $i1912: i32;
  var $i1912.dup: i1;
  var $i1913: i32;
  var $i1913.dup: i1;
  var $i1914: i32;
  var $i1914.dup: i1;
  var $i1915: i32;
  var $i1915.dup: i1;
  var $i1916: i32;
  var $i1916.dup: i1;
  var $i1917: i32;
  var $i1917.dup: i1;
  var $i1918: i32;
  var $i1918.dup: i1;
  var $i1919: i32;
  var $i1919.dup: i1;
  var $i1920: i32;
  var $i1920.dup: i1;
  var $i1921: i32;
  var $i1921.dup: i1;
  var $i1922: i32;
  var $i1922.dup: i1;
  var $i1923: i32;
  var $i1923.dup: i1;
  var $i1924: i32;
  var $i1924.dup: i1;
  var $i1925: i32;
  var $i1925.dup: i1;
  var $i1926: i32;
  var $i1926.dup: i1;
  var $i1927: i32;
  var $i1927.dup: i1;
  var $i1928: i32;
  var $i1928.dup: i1;
  var $i1929: i32;
  var $i1929.dup: i1;
  var $i1930: i32;
  var $i1930.dup: i1;
  var $i1931: i32;
  var $i1931.dup: i1;
  var $i1932: i32;
  var $i1932.dup: i1;
  var $i1933: i32;
  var $i1933.dup: i1;
  var $i1934: i32;
  var $i1934.dup: i1;
  var $i1935: i32;
  var $i1935.dup: i1;
  var $i1936: i32;
  var $i1936.dup: i1;
  var $i1937: i32;
  var $i1937.dup: i1;
  var $i1938: i32;
  var $i1938.dup: i1;
  var $i1939: i32;
  var $i1939.dup: i1;
  var $i1940: i32;
  var $i1940.dup: i1;
  var $i1941: i32;
  var $i1941.dup: i1;
  var $i1942: i32;
  var $i1942.dup: i1;
  var $i1943: i32;
  var $i1943.dup: i1;
  var $i1944: i32;
  var $i1944.dup: i1;
  var $i1945: i32;
  var $i1945.dup: i1;
  var $i1946: i32;
  var $i1946.dup: i1;
  var $i1947: i32;
  var $i1947.dup: i1;
  var $i1948: i32;
  var $i1948.dup: i1;
  var $i1949: i32;
  var $i1949.dup: i1;
  var $i1950: i32;
  var $i1950.dup: i1;
  var $i1951: i32;
  var $i1951.dup: i1;
  var $i1952: i32;
  var $i1952.dup: i1;
  var $i1953: i32;
  var $i1953.dup: i1;
  var $i1954: i32;
  var $i1954.dup: i1;
  var $i1955: i32;
  var $i1955.dup: i1;
  var $i1956: i32;
  var $i1956.dup: i1;
  var $i1957: i32;
  var $i1957.dup: i1;
  var $i1958: i32;
  var $i1958.dup: i1;
  var $i1959: i32;
  var $i1959.dup: i1;
  var $i1960: i32;
  var $i1960.dup: i1;
  var $i1961: i32;
  var $i1961.dup: i1;
  var $i1962: i32;
  var $i1962.dup: i1;
  var $i1963: i32;
  var $i1963.dup: i1;
  var $i1964: i32;
  var $i1964.dup: i1;
  var $i1965: i32;
  var $i1965.dup: i1;
  var $i1966: i32;
  var $i1966.dup: i1;
  var $i1967: i32;
  var $i1967.dup: i1;
  var $i1968: i32;
  var $i1968.dup: i1;
  var $i1969: i32;
  var $i1969.dup: i1;
  var $i1970: i32;
  var $i1970.dup: i1;
  var $i1971: i32;
  var $i1971.dup: i1;
  var $i1972: i32;
  var $i1972.dup: i1;
  var $i1973: i32;
  var $i1973.dup: i1;
  var $i1974: i32;
  var $i1974.dup: i1;
  var $i1975: i32;
  var $i1975.dup: i1;
  var $i1976: i32;
  var $i1976.dup: i1;
  var $i1977: i32;
  var $i1977.dup: i1;
  var $i1978: i32;
  var $i1978.dup: i1;
  var $i1979: i32;
  var $i1979.dup: i1;
  var $i1980: i32;
  var $i1980.dup: i1;
  var $i1981: i32;
  var $i1981.dup: i1;
  var $i1982: i32;
  var $i1982.dup: i1;
  var $i1983: i32;
  var $i1983.dup: i1;
  var $i1984: i32;
  var $i1984.dup: i1;
  var $i1985: i32;
  var $i1985.dup: i1;
  var $i1986: i32;
  var $i1986.dup: i1;
  var $i1987: i32;
  var $i1987.dup: i1;
  var $i1988: i32;
  var $i1988.dup: i1;
  var $i1989: i32;
  var $i1989.dup: i1;
  var $i1990: i32;
  var $i1990.dup: i1;
  var $i1991: i32;
  var $i1991.dup: i1;
  var $i1992: i32;
  var $i1992.dup: i1;
  var $i1993: i32;
  var $i1993.dup: i1;
  var $i1994: i32;
  var $i1994.dup: i1;
  var $i1995: i32;
  var $i1995.dup: i1;
  var $i1996: i32;
  var $i1996.dup: i1;
  var $i1997: i32;
  var $i1997.dup: i1;
  var $i1998: i32;
  var $i1998.dup: i1;
  var $i1999: i32;
  var $i1999.dup: i1;
  var $i2000: i32;
  var $i2000.dup: i1;
  var $i2001: i32;
  var $i2001.dup: i1;
  var $i2002: i32;
  var $i2002.dup: i1;
  var $i2003: i32;
  var $i2003.dup: i1;
  var $i2004: i32;
  var $i2004.dup: i1;
  var $i2005: i32;
  var $i2005.dup: i1;
  var $i2006: i32;
  var $i2006.dup: i1;
  var $i2007: i32;
  var $i2007.dup: i1;
  var $i2008: i32;
  var $i2008.dup: i1;
  var $i2009: i32;
  var $i2009.dup: i1;
  var $i2010: i32;
  var $i2010.dup: i1;
  var $i2011: i32;
  var $i2011.dup: i1;
  var $i2012: i32;
  var $i2012.dup: i1;
  var $i2013: i32;
  var $i2013.dup: i1;
  var $i2014: i32;
  var $i2014.dup: i1;
  var $i2015: i32;
  var $i2015.dup: i1;
  var $i2016: i32;
  var $i2016.dup: i1;
  var $i2017: i32;
  var $i2017.dup: i1;
  var $i2018: i32;
  var $i2018.dup: i1;
  var $i2019: i32;
  var $i2019.dup: i1;
  var $i2020: i32;
  var $i2020.dup: i1;
  var $i2021: i32;
  var $i2021.dup: i1;
  var $i2022: i32;
  var $i2022.dup: i1;
  var $i2023: i32;
  var $i2023.dup: i1;
  var $i2024: i32;
  var $i2024.dup: i1;
  var $i2025: i32;
  var $i2025.dup: i1;
  var $i2026: i32;
  var $i2026.dup: i1;
  var $i2027: i32;
  var $i2027.dup: i1;
  var $i2028: i32;
  var $i2028.dup: i1;
  var $i2029: i32;
  var $i2029.dup: i1;
  var $i2030: i32;
  var $i2030.dup: i1;
  var $i2031: i32;
  var $i2031.dup: i1;
  var $i2032: i32;
  var $i2032.dup: i1;
  var $i2033: i32;
  var $i2033.dup: i1;
  var $i2034: i32;
  var $i2034.dup: i1;
  var $i2035: i32;
  var $i2035.dup: i1;
  var $i2036: i32;
  var $i2036.dup: i1;
  var $i2037: i32;
  var $i2037.dup: i1;
  var $i2038: i32;
  var $i2038.dup: i1;
  var $i2039: i32;
  var $i2039.dup: i1;
  var $i2040: i32;
  var $i2040.dup: i1;
  var $i2041: i32;
  var $i2041.dup: i1;
  var $i2042: i32;
  var $i2042.dup: i1;
  var $i2043: i32;
  var $i2043.dup: i1;
  var $i2044: i32;
  var $i2044.dup: i1;
  var $i2045: i32;
  var $i2045.dup: i1;
  var $i2046: i32;
  var $i2046.dup: i1;
  var $i2047: i32;
  var $i2047.dup: i1;
  var $i2048: i32;
  var $i2048.dup: i1;
  var $i2049: i32;
  var $i2049.dup: i1;
  var $i2050: i32;
  var $i2050.dup: i1;
  var $i2051: i32;
  var $i2051.dup: i1;
  var $i2052: i32;
  var $i2052.dup: i1;
  var $i2053: i32;
  var $i2053.dup: i1;
  var $i2054: i32;
  var $i2054.dup: i1;
  var $i2055: i32;
  var $i2055.dup: i1;
  var $i2056: i32;
  var $i2056.dup: i1;
  var $i2057: i32;
  var $i2057.dup: i1;
  var $i2058: i32;
  var $i2058.dup: i1;
  var $i2059: i32;
  var $i2059.dup: i1;
  var $i2060: i32;
  var $i2060.dup: i1;
  var $i2061: i32;
  var $i2061.dup: i1;
  var $i2062: i32;
  var $i2062.dup: i1;
  var $i2063: i32;
  var $i2063.dup: i1;
  var $i2064: i32;
  var $i2064.dup: i1;
  var $i2065: i32;
  var $i2065.dup: i1;
  var $i2066: i32;
  var $i2066.dup: i1;
  var $i2067: i32;
  var $i2067.dup: i1;
  var $i2068: i32;
  var $i2068.dup: i1;
  var $i2069: i32;
  var $i2069.dup: i1;
  var $i2070: i32;
  var $i2070.dup: i1;
  var $i2071: i32;
  var $i2071.dup: i1;
  var $i2072: i32;
  var $i2072.dup: i1;
  var $i2073: i32;
  var $i2073.dup: i1;
  var $i2074: i32;
  var $i2074.dup: i1;
  var $i2075: i32;
  var $i2075.dup: i1;
  var $i2076: i32;
  var $i2076.dup: i1;
  var $i2077: i32;
  var $i2077.dup: i1;
  var $i2078: i32;
  var $i2078.dup: i1;
  var $i2079: i32;
  var $i2079.dup: i1;
  var $i2080: i32;
  var $i2080.dup: i1;
  var $i2081: i32;
  var $i2081.dup: i1;
  var $i2082: i32;
  var $i2082.dup: i1;
  var $i2083: i32;
  var $i2083.dup: i1;
  var $i2084: i32;
  var $i2084.dup: i1;
  var $i2085: i32;
  var $i2085.dup: i1;
  var $i2086: i32;
  var $i2086.dup: i1;
  var $i2087: i32;
  var $i2087.dup: i1;
  var $i2088: i32;
  var $i2088.dup: i1;
  var $i2089: i32;
  var $i2089.dup: i1;
  var $i2090: i32;
  var $i2090.dup: i1;
  var $i2091: i32;
  var $i2091.dup: i1;
  var $i2092: i32;
  var $i2092.dup: i1;
  var $i2093: i32;
  var $i2093.dup: i1;
  var $i2094: i32;
  var $i2094.dup: i1;
  var $i2095: i32;
  var $i2095.dup: i1;
  var $i2096: i32;
  var $i2096.dup: i1;
  var $i2097: i32;
  var $i2097.dup: i1;
  var $i2098: i32;
  var $i2098.dup: i1;
  var $i2099: i32;
  var $i2099.dup: i1;
  var $i2100: i32;
  var $i2100.dup: i1;
  var $i2101: i32;
  var $i2101.dup: i1;
  var $i2102: i32;
  var $i2102.dup: i1;
  var $i2103: i32;
  var $i2103.dup: i1;
  var $i2104: i32;
  var $i2104.dup: i1;
  var $i2105: i32;
  var $i2105.dup: i1;
  var $i2106: i32;
  var $i2106.dup: i1;
  var $i2107: i32;
  var $i2107.dup: i1;
  var $i2108: i32;
  var $i2108.dup: i1;
  var $i2109: i32;
  var $i2109.dup: i1;
  var $i2110: i32;
  var $i2110.dup: i1;
  var $i2111: i32;
  var $i2111.dup: i1;
  var $i2112: i32;
  var $i2112.dup: i1;
  var $i2113: i32;
  var $i2113.dup: i1;
  var $i2114: i32;
  var $i2114.dup: i1;
  var $i2115: i32;
  var $i2115.dup: i1;
  var $i2116: i32;
  var $i2116.dup: i1;
  var $i2117: i32;
  var $i2117.dup: i1;
  var $i2118: i32;
  var $i2118.dup: i1;
  var $i2119: i32;
  var $i2119.dup: i1;
  var $i2120: i32;
  var $i2120.dup: i1;
  var $i2121: i32;
  var $i2121.dup: i1;
  var $i2122: i32;
  var $i2122.dup: i1;
  var $i2123: i32;
  var $i2123.dup: i1;
  var $i2124: i32;
  var $i2124.dup: i1;
  var $i2125: i32;
  var $i2125.dup: i1;
  var $i2126: i32;
  var $i2126.dup: i1;
  var $i2127: i32;
  var $i2127.dup: i1;
  var $i2128: i32;
  var $i2128.dup: i1;
  var $i2129: i32;
  var $i2129.dup: i1;
  var $i2130: i32;
  var $i2130.dup: i1;
  var $i2131: i32;
  var $i2131.dup: i1;
  var $i2132: i32;
  var $i2132.dup: i1;
  var $i2133: i32;
  var $i2133.dup: i1;
  var $i2134: i32;
  var $i2134.dup: i1;
  var $i2135: i32;
  var $i2135.dup: i1;
  var $i2136: i32;
  var $i2136.dup: i1;
  var $i2137: i32;
  var $i2137.dup: i1;
  var $i2138: i32;
  var $i2138.dup: i1;
  var $i2139: i32;
  var $i2139.dup: i1;
  var $i2140: i32;
  var $i2140.dup: i1;
  var $i2141: i32;
  var $i2141.dup: i1;
  var $i2142: i32;
  var $i2142.dup: i1;
  var $i2143: i32;
  var $i2143.dup: i1;
  var $i2144: i32;
  var $i2144.dup: i1;
  var $i2145: i32;
  var $i2145.dup: i1;
  var $i2146: i32;
  var $i2146.dup: i1;
  var $i2147: i32;
  var $i2147.dup: i1;
  var $i2148: i32;
  var $i2148.dup: i1;
  var $i2149: i32;
  var $i2149.dup: i1;
  var $i2150: i32;
  var $i2150.dup: i1;
  var $i2151: i32;
  var $i2151.dup: i1;
  var $i2152: i32;
  var $i2152.dup: i1;
  var $i2153: i32;
  var $i2153.dup: i1;
  var $i2154: i32;
  var $i2154.dup: i1;
  var $i2155: i32;
  var $i2155.dup: i1;
  var $i2156: i32;
  var $i2156.dup: i1;
  var $i2157: i32;
  var $i2157.dup: i1;
  var $i2158: i32;
  var $i2158.dup: i1;
  var $i2159: i32;
  var $i2159.dup: i1;
  var $i2160: i32;
  var $i2160.dup: i1;
  var $i2161: i32;
  var $i2161.dup: i1;
  var $i2162: i32;
  var $i2162.dup: i1;
  var $i2163: i32;
  var $i2163.dup: i1;
  var $i2164: i32;
  var $i2164.dup: i1;
  var $i2165: i32;
  var $i2165.dup: i1;
  var $i2166: i32;
  var $i2166.dup: i1;
  var $i2167: i32;
  var $i2167.dup: i1;
  var $i2168: i32;
  var $i2168.dup: i1;
  var $i2169: i32;
  var $i2169.dup: i1;
  var $i2170: i32;
  var $i2170.dup: i1;
  var $i2171: i32;
  var $i2171.dup: i1;
  var $i2172: i32;
  var $i2172.dup: i1;
  var $i2173: i32;
  var $i2173.dup: i1;
  var $i2174: i32;
  var $i2174.dup: i1;
  var $i2175: i32;
  var $i2175.dup: i1;
  var $i2176: i32;
  var $i2176.dup: i1;
  var $i2177: i32;
  var $i2177.dup: i1;
  var $i2178: i32;
  var $i2178.dup: i1;
  var $i2179: i32;
  var $i2179.dup: i1;
  var $i2180: i32;
  var $i2180.dup: i1;
  var $i2181: i32;
  var $i2181.dup: i1;
  var $i2182: i32;
  var $i2182.dup: i1;
  var $i2183: i32;
  var $i2183.dup: i1;
  var $i2184: i32;
  var $i2184.dup: i1;
  var $i2185: i32;
  var $i2185.dup: i1;
  var $i2186: i32;
  var $i2186.dup: i1;
  var $i2187: i32;
  var $i2187.dup: i1;
  var $i2188: i32;
  var $i2188.dup: i1;
  var $i2189: i32;
  var $i2189.dup: i1;
  var $i2190: i32;
  var $i2190.dup: i1;
  var $i2191: i32;
  var $i2191.dup: i1;
  var $i2192: i32;
  var $i2192.dup: i1;
  var $i2193: i32;
  var $i2193.dup: i1;
  var $i2194: i32;
  var $i2194.dup: i1;
  var $i2195: i32;
  var $i2195.dup: i1;
  var $i2196: i32;
  var $i2196.dup: i1;
  var $i2197: i32;
  var $i2197.dup: i1;
  var $i2198: i32;
  var $i2198.dup: i1;
  var $i2199: i32;
  var $i2199.dup: i1;
  var $i2200: i32;
  var $i2200.dup: i1;
  var $i2201: i32;
  var $i2201.dup: i1;
  var $i2202: i32;
  var $i2202.dup: i1;
  var $i2203: i32;
  var $i2203.dup: i1;
  var $i2204: i32;
  var $i2204.dup: i1;
  var $i2205: i32;
  var $i2205.dup: i1;
  var $i2206: i32;
  var $i2206.dup: i1;
  var $i2207: i32;
  var $i2207.dup: i1;
  var $i2208: i32;
  var $i2208.dup: i1;
  var $i2209: i32;
  var $i2209.dup: i1;
  var $i2210: i32;
  var $i2210.dup: i1;
  var $i2211: i32;
  var $i2211.dup: i1;
  var $i2212: i32;
  var $i2212.dup: i1;
  var $i2213: i32;
  var $i2213.dup: i1;
  var $i2214: i32;
  var $i2214.dup: i1;
  var $i2215: i32;
  var $i2215.dup: i1;
  var $i2216: i32;
  var $i2216.dup: i1;
  var $i2217: i32;
  var $i2217.dup: i1;
  var $i2218: i32;
  var $i2218.dup: i1;
  var $i2219: i32;
  var $i2219.dup: i1;
  var $i2220: i32;
  var $i2220.dup: i1;
  var $i2221: i32;
  var $i2221.dup: i1;
  var $i2222: i32;
  var $i2222.dup: i1;
  var $i2223: i32;
  var $i2223.dup: i1;
  var $i2224: i32;
  var $i2224.dup: i1;
  var $i2225: i32;
  var $i2225.dup: i1;
  var $i2226: i32;
  var $i2226.dup: i1;
  var $i2227: i32;
  var $i2227.dup: i1;
  var $i2228: i32;
  var $i2228.dup: i1;
  var $i2229: i32;
  var $i2229.dup: i1;
  var $i2230: i32;
  var $i2230.dup: i1;
  var $i2231: i32;
  var $i2231.dup: i1;
  var $i2232: i32;
  var $i2232.dup: i1;
  var $i2233: i32;
  var $i2233.dup: i1;
  var $i2234: i32;
  var $i2234.dup: i1;
  var $i2235: i32;
  var $i2235.dup: i1;
  var $i2236: i32;
  var $i2236.dup: i1;
  var $i2237: i32;
  var $i2237.dup: i1;
  var $i2238: i32;
  var $i2238.dup: i1;
  var $i2239: i32;
  var $i2239.dup: i1;
  var $i2240: i32;
  var $i2240.dup: i1;
  var $i2241: i32;
  var $i2241.dup: i1;
  var $i2242: i32;
  var $i2242.dup: i1;
  var $i2243: i32;
  var $i2243.dup: i1;
  var $i2244: i32;
  var $i2244.dup: i1;
  var $i2245: i32;
  var $i2245.dup: i1;
  var $i2246: i32;
  var $i2246.dup: i1;
  var $i2247: i32;
  var $i2247.dup: i1;
  var $i2248: i32;
  var $i2248.dup: i1;
  var $i2249: i32;
  var $i2249.dup: i1;
  var $i2250: i32;
  var $i2250.dup: i1;
  var $i2251: i32;
  var $i2251.dup: i1;
  var $i2252: i32;
  var $i2252.dup: i1;
  var $i2253: i32;
  var $i2253.dup: i1;
  var $i2254: i32;
  var $i2254.dup: i1;
  var $i2255: i32;
  var $i2255.dup: i1;
  var $i2256: i32;
  var $i2256.dup: i1;
  var $i2257: i32;
  var $i2257.dup: i1;
  var $i2258: i32;
  var $i2258.dup: i1;
  var $i2259: i32;
  var $i2259.dup: i1;
  var $i2260: i32;
  var $i2260.dup: i1;
  var $i2261: i32;
  var $i2261.dup: i1;
  var $i2262: i32;
  var $i2262.dup: i1;
  var $i2263: i32;
  var $i2263.dup: i1;
  var $i2264: i32;
  var $i2264.dup: i1;
  var $i2265: i32;
  var $i2265.dup: i1;
  var $i2266: i32;
  var $i2266.dup: i1;
  var $i2267: i32;
  var $i2267.dup: i1;
  var $i2268: i32;
  var $i2268.dup: i1;
  var $i2269: i32;
  var $i2269.dup: i1;
  var $i2270: i32;
  var $i2270.dup: i1;
  var $i2271: i32;
  var $i2271.dup: i1;
  var $i2272: i32;
  var $i2272.dup: i1;
  var $i2273: i32;
  var $i2273.dup: i1;
  var $i2274: i32;
  var $i2274.dup: i1;
  var $i2275: i32;
  var $i2275.dup: i1;
  var $i2276: i32;
  var $i2276.dup: i1;
  var $i2277: i32;
  var $i2277.dup: i1;
  var $i2278: i32;
  var $i2278.dup: i1;
  var $i2279: i32;
  var $i2279.dup: i1;
  var $i2280: i32;
  var $i2280.dup: i1;
  var $i2281: i32;
  var $i2281.dup: i1;
  var $i2282: i32;
  var $i2282.dup: i1;
  var $i2283: i32;
  var $i2283.dup: i1;
  var $i2284: i32;
  var $i2284.dup: i1;
  var $i2285: i32;
  var $i2285.dup: i1;
  var $i2286: i32;
  var $i2286.dup: i1;
  var $i2287: i32;
  var $i2287.dup: i1;
  var $i2288: i32;
  var $i2288.dup: i1;
  var $i2289: i32;
  var $i2289.dup: i1;
  var $i2290: i32;
  var $i2290.dup: i1;
  var $i2291: i32;
  var $i2291.dup: i1;
  var $i2292: i32;
  var $i2292.dup: i1;
  var $i2293: i32;
  var $i2293.dup: i1;
  var $i2294: i32;
  var $i2294.dup: i1;
  var $i2295: i32;
  var $i2295.dup: i1;
  var $i2296: i32;
  var $i2296.dup: i1;
  var $i2297: i32;
  var $i2297.dup: i1;
  var $i2298: i32;
  var $i2298.dup: i1;
  var $i2299: i32;
  var $i2299.dup: i1;
  var $i2300: i32;
  var $i2300.dup: i1;
  var $i2301: i32;
  var $i2301.dup: i1;
  var $i2302: i32;
  var $i2302.dup: i1;
  var $i2303: i32;
  var $i2303.dup: i1;
  var $i2304: i32;
  var $i2304.dup: i1;
  var $i2305: i32;
  var $i2305.dup: i1;
  var $i2306: i32;
  var $i2306.dup: i1;
  var $i2307: i32;
  var $i2307.dup: i1;
  var $i2308: i32;
  var $i2308.dup: i1;
  var $i2309: i32;
  var $i2309.dup: i1;
  var $i2310: i32;
  var $i2310.dup: i1;
  var $i2311: i32;
  var $i2311.dup: i1;
  var $i2312: i32;
  var $i2312.dup: i1;
  var $i2313: i32;
  var $i2313.dup: i1;
  var $i2314: i32;
  var $i2314.dup: i1;
  var $i2315: i32;
  var $i2315.dup: i1;
  var $i2316: i32;
  var $i2316.dup: i1;
  var $i2317: i32;
  var $i2317.dup: i1;
  var $i2318: i32;
  var $i2318.dup: i1;
  var $i2319: i32;
  var $i2319.dup: i1;
  var $i2320: i32;
  var $i2320.dup: i1;
  var $i2321: i32;
  var $i2321.dup: i1;
  var $i2322: i32;
  var $i2322.dup: i1;
  var $i2323: i32;
  var $i2323.dup: i1;
  var $i2324: i32;
  var $i2324.dup: i1;
  var $i2325: i32;
  var $i2325.dup: i1;
  var $i2326: i32;
  var $i2326.dup: i1;
  var $i2327: i32;
  var $i2327.dup: i1;
  var $i2328: i32;
  var $i2328.dup: i1;
  var $i2329: i32;
  var $i2329.dup: i1;
  var $i2330: i32;
  var $i2330.dup: i1;
  var $i2331: i32;
  var $i2331.dup: i1;
  var $i2332: i32;
  var $i2332.dup: i1;
  var $i2333: i32;
  var $i2333.dup: i1;
  var $i2334: i32;
  var $i2334.dup: i1;
  var $i2335: i32;
  var $i2335.dup: i1;
  var $i2336: i32;
  var $i2336.dup: i1;
  var $i2337: i32;
  var $i2337.dup: i1;
  var $i2338: i32;
  var $i2338.dup: i1;
  var $i2339: i32;
  var $i2339.dup: i1;
  var $i2340: i32;
  var $i2340.dup: i1;
  var $i2341: i32;
  var $i2341.dup: i1;
  var $i2342: i32;
  var $i2342.dup: i1;
  var $i2343: i32;
  var $i2343.dup: i1;
  var $i2344: i32;
  var $i2344.dup: i1;
  var $i2345: i32;
  var $i2345.dup: i1;
  var $i2346: i32;
  var $i2346.dup: i1;
  var $i2347: i32;
  var $i2347.dup: i1;
  var $i2348: i32;
  var $i2348.dup: i1;
  var $i2349: i32;
  var $i2349.dup: i1;
  var $i2350: i32;
  var $i2350.dup: i1;
  var $i2351: i32;
  var $i2351.dup: i1;
  var $i2352: i32;
  var $i2352.dup: i1;
  var $i2353: i32;
  var $i2353.dup: i1;
  var $i2354: i32;
  var $i2354.dup: i1;
  var $i2355: i32;
  var $i2355.dup: i1;
  var $i2356: i32;
  var $i2356.dup: i1;
  var $i2357: i32;
  var $i2357.dup: i1;
  var $i2358: i32;
  var $i2358.dup: i1;
  var $i2359: i32;
  var $i2359.dup: i1;
  var $i2360: i32;
  var $i2360.dup: i1;
  var $i2361: i32;
  var $i2361.dup: i1;
  var $i2362: i32;
  var $i2362.dup: i1;
  var $i2363: i32;
  var $i2363.dup: i1;
  var $i2364: i32;
  var $i2364.dup: i1;
  var $i2365: i32;
  var $i2365.dup: i1;
  var $i2366: i32;
  var $i2366.dup: i1;
  var $i2367: i32;
  var $i2367.dup: i1;
  var $i2368: i32;
  var $i2368.dup: i1;
  var $i2369: i32;
  var $i2369.dup: i1;
  var $i2370: i32;
  var $i2370.dup: i1;
  var $i2371: i32;
  var $i2371.dup: i1;
  var $i2372: i32;
  var $i2372.dup: i1;
  var $i2373: i32;
  var $i2373.dup: i1;
  var $i2374: i32;
  var $i2374.dup: i1;
  var $i2375: i32;
  var $i2375.dup: i1;
  var $i2376: i32;
  var $i2376.dup: i1;
  var $i2377: i32;
  var $i2377.dup: i1;
  var $i2378: i32;
  var $i2378.dup: i1;
  var $i2379: i32;
  var $i2379.dup: i1;
  var $i2380: i32;
  var $i2380.dup: i1;
  var $i2381: i32;
  var $i2381.dup: i1;
  var $i2382: i32;
  var $i2382.dup: i1;
  var $i2383: i32;
  var $i2383.dup: i1;
  var $i2384: i32;
  var $i2384.dup: i1;
  var $i2385: i32;
  var $i2385.dup: i1;
  var $i2386: i32;
  var $i2386.dup: i1;
  var $i2387: i32;
  var $i2387.dup: i1;
  var $i2388: i32;
  var $i2388.dup: i1;
  var $i2389: i32;
  var $i2389.dup: i1;
  var $i2390: i32;
  var $i2390.dup: i1;
  var $i2391: i32;
  var $i2391.dup: i1;
  var $i2392: i32;
  var $i2392.dup: i1;
  var $i2393: i32;
  var $i2393.dup: i1;
  var $i2394: i32;
  var $i2394.dup: i1;
  var $i2395: i32;
  var $i2395.dup: i1;
  var $i2396: i32;
  var $i2396.dup: i1;
  var $i2397: i32;
  var $i2397.dup: i1;
  var $i2398: i32;
  var $i2398.dup: i1;
  var $i2399: i32;
  var $i2399.dup: i1;
  var $i2400: i32;
  var $i2400.dup: i1;
  var $i2401: i32;
  var $i2401.dup: i1;
  var $i2402: i32;
  var $i2402.dup: i1;
  var $i2403: i32;
  var $i2403.dup: i1;
  var $i2404: i32;
  var $i2404.dup: i1;
  var $i2405: i32;
  var $i2405.dup: i1;
  var $i2406: i32;
  var $i2406.dup: i1;
  var $i2407: i32;
  var $i2407.dup: i1;
  var $i2408: i32;
  var $i2408.dup: i1;
  var $i2409: i32;
  var $i2409.dup: i1;
  var $i2410: i32;
  var $i2410.dup: i1;
  var $i2411: i32;
  var $i2411.dup: i1;
  var $i2412: i32;
  var $i2412.dup: i1;
  var $i2413: i32;
  var $i2413.dup: i1;
  var $i2414: i32;
  var $i2414.dup: i1;
  var $i2415: i32;
  var $i2415.dup: i1;
  var $i2416: i32;
  var $i2416.dup: i1;
  var $i2417: i32;
  var $i2417.dup: i1;
  var $i2418: i32;
  var $i2418.dup: i1;
  var $i2419: i32;
  var $i2419.dup: i1;
  var $i2420: i32;
  var $i2420.dup: i1;
  var $i2421: i32;
  var $i2421.dup: i1;
  var $i2422: i32;
  var $i2422.dup: i1;
  var $i2423: i32;
  var $i2423.dup: i1;
  var $i2424: i32;
  var $i2424.dup: i1;
  var $i2425: i32;
  var $i2425.dup: i1;
  var $i2426: i32;
  var $i2426.dup: i1;
  var $i2427: i32;
  var $i2427.dup: i1;
  var $i2428: i32;
  var $i2428.dup: i1;
  var $i2429: i32;
  var $i2429.dup: i1;
  var $i2430: i32;
  var $i2430.dup: i1;
  var $i2431: i32;
  var $i2431.dup: i1;
  var $i2432: i32;
  var $i2432.dup: i1;
  var $i2433: i32;
  var $i2433.dup: i1;
  var $i2434: i32;
  var $i2434.dup: i1;
  var $i2435: i32;
  var $i2435.dup: i1;
  var $i2436: i32;
  var $i2436.dup: i1;
  var $i2437: i32;
  var $i2437.dup: i1;
  var $i2438: i32;
  var $i2438.dup: i1;
  var $i2439: i32;
  var $i2439.dup: i1;
  var $i2440: i32;
  var $i2440.dup: i1;
  var $i2441: i32;
  var $i2441.dup: i1;
  var $i2442: i32;
  var $i2442.dup: i1;
  var $i2443: i32;
  var $i2443.dup: i1;
  var $i2444: i32;
  var $i2444.dup: i1;
  var $i2445: i32;
  var $i2445.dup: i1;
  var $i2446: i32;
  var $i2446.dup: i1;
  var $i2447: i32;
  var $i2447.dup: i1;
  var $i2448: i32;
  var $i2448.dup: i1;
  var $i2449: i32;
  var $i2449.dup: i1;
  var $i2450: i32;
  var $i2450.dup: i1;
  var $i2451: i32;
  var $i2451.dup: i1;
  var $i2452: i32;
  var $i2452.dup: i1;
  var $i2453: i32;
  var $i2453.dup: i1;
  var $i2454: i32;
  var $i2454.dup: i1;
  var $i2455: i32;
  var $i2455.dup: i1;
  var $i2456: i32;
  var $i2456.dup: i1;
  var $i2457: i32;
  var $i2457.dup: i1;
  var $i2458: i32;
  var $i2458.dup: i1;
  var $i2459: i32;
  var $i2459.dup: i1;
  var $i2460: i32;
  var $i2460.dup: i1;
  var $i2461: i32;
  var $i2461.dup: i1;
  var $i2462: i32;
  var $i2462.dup: i1;
  var $i2463: i32;
  var $i2463.dup: i1;
  var $i2464: i32;
  var $i2464.dup: i1;
  var $i2465: i32;
  var $i2465.dup: i1;
  var $i2466: i32;
  var $i2466.dup: i1;
  var $i2467: i32;
  var $i2467.dup: i1;
  var $i2468: i32;
  var $i2468.dup: i1;
  var $i2469: i32;
  var $i2469.dup: i1;
  var $i2470: i32;
  var $i2470.dup: i1;
  var $i2471: i32;
  var $i2471.dup: i1;
  var $i2472: i32;
  var $i2472.dup: i1;
  var $i2473: i32;
  var $i2473.dup: i1;
  var $i2474: i32;
  var $i2474.dup: i1;
  var $i2475: i32;
  var $i2475.dup: i1;
  var $i2476: i32;
  var $i2476.dup: i1;
  var $i2477: i32;
  var $i2477.dup: i1;
  var $i2478: i32;
  var $i2478.dup: i1;
  var $i2479: i32;
  var $i2479.dup: i1;
  var $i2480: i32;
  var $i2480.dup: i1;
  var $i2481: i32;
  var $i2481.dup: i1;
  var $i2482: i32;
  var $i2482.dup: i1;
  var $i2483: i32;
  var $i2483.dup: i1;
  var $i2484: i32;
  var $i2484.dup: i1;
  var $i2485: i32;
  var $i2485.dup: i1;
  var $i2486: i32;
  var $i2486.dup: i1;
  var $i2487: i32;
  var $i2487.dup: i1;
  var $i2488: i32;
  var $i2488.dup: i1;
  var $i2489: i32;
  var $i2489.dup: i1;
  var $i2490: i32;
  var $i2490.dup: i1;
  var $i2491: i32;
  var $i2491.dup: i1;
  var $i2492: i32;
  var $i2492.dup: i1;
  var $i2493: i32;
  var $i2493.dup: i1;
  var $i2494: i32;
  var $i2494.dup: i1;
  var $i2495: i32;
  var $i2495.dup: i1;
  var $i2496: i32;
  var $i2496.dup: i1;
  var $i2497: i32;
  var $i2497.dup: i1;
  var $i2498: i32;
  var $i2498.dup: i1;
  var $i2499: i32;
  var $i2499.dup: i1;
  var $i2500: i32;
  var $i2500.dup: i1;
  var $i2501: i32;
  var $i2501.dup: i1;
  var $i2502: i32;
  var $i2502.dup: i1;
  var $i2503: i32;
  var $i2503.dup: i1;
  var $i2504: i32;
  var $i2504.dup: i1;
  var $i2505: i32;
  var $i2505.dup: i1;
  var $i2506: i32;
  var $i2506.dup: i1;
  var $i2507: i32;
  var $i2507.dup: i1;
  var $i2508: i32;
  var $i2508.dup: i1;
  var $i2509: i32;
  var $i2509.dup: i1;
  var $i2510: i32;
  var $i2510.dup: i1;
  var $i2511: i32;
  var $i2511.dup: i1;
  var $i2512: i32;
  var $i2512.dup: i1;
  var $i2513: i32;
  var $i2513.dup: i1;
  var $i2514: i32;
  var $i2514.dup: i1;
  var $i2515: i32;
  var $i2515.dup: i1;
  var $i2516: i32;
  var $i2516.dup: i1;
  var $i2517: i32;
  var $i2517.dup: i1;
  var $i2518: i32;
  var $i2518.dup: i1;
  var $i2519: i32;
  var $i2519.dup: i1;
  var $i2520: i32;
  var $i2520.dup: i1;
  var $i2521: i32;
  var $i2521.dup: i1;
  var $i2522: i32;
  var $i2522.dup: i1;
  var $i2523: i32;
  var $i2523.dup: i1;
  var $i2524: i32;
  var $i2524.dup: i1;
  var $i2525: i32;
  var $i2525.dup: i1;
  var $i2526: i32;
  var $i2526.dup: i1;
  var $i2527: i32;
  var $i2527.dup: i1;
  var $i2528: i32;
  var $i2528.dup: i1;
  var $i2529: i32;
  var $i2529.dup: i1;
  var $i2530: i32;
  var $i2530.dup: i1;
  var $i2531: i32;
  var $i2531.dup: i1;
  var $i2532: i32;
  var $i2532.dup: i1;
  var $i2533: i32;
  var $i2533.dup: i1;
  var $i2534: i32;
  var $i2534.dup: i1;
  var $i2535: i32;
  var $i2535.dup: i1;
  var $i2536: i32;
  var $i2536.dup: i1;
  var $i2537: i32;
  var $i2537.dup: i1;
  var $i2538: i32;
  var $i2538.dup: i1;
  var $i2539: i32;
  var $i2539.dup: i1;
  var $i2540: i32;
  var $i2540.dup: i1;
  var $i2541: i32;
  var $i2541.dup: i1;
  var $i2542: i32;
  var $i2542.dup: i1;
  var $i2543: i32;
  var $i2543.dup: i1;
  var $i2544: i32;
  var $i2544.dup: i1;
  var $i2545: i32;
  var $i2545.dup: i1;
  var $i2546: i32;
  var $i2546.dup: i1;
  var $i2547: i32;
  var $i2547.dup: i1;
  var $i2548: i32;
  var $i2548.dup: i1;
  var $i2549: i32;
  var $i2549.dup: i1;
  var $i2550: i32;
  var $i2550.dup: i1;
  var $i2551: i32;
  var $i2551.dup: i1;
  var $i2552: i32;
  var $i2552.dup: i1;
  var $i2553: i32;
  var $i2553.dup: i1;
  var $i2554: i32;
  var $i2554.dup: i1;
  var $i2555: i32;
  var $i2555.dup: i1;
  var $i2556: i32;
  var $i2556.dup: i1;
  var $i2557: i32;
  var $i2557.dup: i1;
  var $i2558: i32;
  var $i2558.dup: i1;
  var $i2559: i32;
  var $i2559.dup: i1;
  var $i2560: i32;
  var $i2560.dup: i1;
  var $i2561: i32;
  var $i2561.dup: i1;
  var $i2562: i32;
  var $i2562.dup: i1;
  var $i2563: i32;
  var $i2563.dup: i1;
  var $i2564: i32;
  var $i2564.dup: i1;
  var $i2565: i32;
  var $i2565.dup: i1;
  var $i2566: i32;
  var $i2566.dup: i1;
  var $i2567: i32;
  var $i2567.dup: i1;
  var $i2568: i32;
  var $i2568.dup: i1;
  var $i2569: i32;
  var $i2569.dup: i1;
  var $i2570: i32;
  var $i2570.dup: i1;
  var $i2571: i32;
  var $i2571.dup: i1;
  var $i2572: i32;
  var $i2572.dup: i1;
  var $i2573: i32;
  var $i2573.dup: i1;
  var $i2574: i32;
  var $i2574.dup: i1;
  var $i2575: i32;
  var $i2575.dup: i1;
  var $i2576: i32;
  var $i2576.dup: i1;
  var $i2577: i32;
  var $i2577.dup: i1;
  var $i2578: i32;
  var $i2578.dup: i1;
  var $i2579: i32;
  var $i2579.dup: i1;
  var $i2580: i32;
  var $i2580.dup: i1;
  var $i2581: i32;
  var $i2581.dup: i1;
  var $i2582: i32;
  var $i2582.dup: i1;
  var $i2583: i32;
  var $i2583.dup: i1;
  var $i2584: i32;
  var $i2584.dup: i1;
  var $i2585: i32;
  var $i2585.dup: i1;
  var $i2586: i32;
  var $i2586.dup: i1;
  var $i2587: i32;
  var $i2587.dup: i1;
  var $i2588: i32;
  var $i2588.dup: i1;
  var $i2589: i32;
  var $i2589.dup: i1;
  var $i2590: i32;
  var $i2590.dup: i1;
  var $i2591: i32;
  var $i2591.dup: i1;
  var $i2592: i32;
  var $i2592.dup: i1;
  var $i2593: i32;
  var $i2593.dup: i1;
  var $i2594: i32;
  var $i2594.dup: i1;
  var $i2595: i32;
  var $i2595.dup: i1;
  var $i2596: i32;
  var $i2596.dup: i1;
  var $i2597: i32;
  var $i2597.dup: i1;
  var $i2598: i32;
  var $i2598.dup: i1;
  var $i2599: i32;
  var $i2599.dup: i1;
  var $i2600: i32;
  var $i2600.dup: i1;
  var $i2601: i32;
  var $i2601.dup: i1;
  var $i2602: i32;
  var $i2602.dup: i1;
  var $i2603: i32;
  var $i2603.dup: i1;
  var $i2604: i32;
  var $i2604.dup: i1;
  var $i2605: i32;
  var $i2605.dup: i1;
  var $i2606: i32;
  var $i2606.dup: i1;
  var $i2607: i32;
  var $i2607.dup: i1;
  var $i2608: i32;
  var $i2608.dup: i1;
  var $i2609: i32;
  var $i2609.dup: i1;
  var $i2610: i32;
  var $i2610.dup: i1;
  var $i2611: i32;
  var $i2611.dup: i1;
  var $i2612: i32;
  var $i2612.dup: i1;
  var $i2613: i32;
  var $i2613.dup: i1;
  var $i2614: i32;
  var $i2614.dup: i1;
  var $i2615: i32;
  var $i2615.dup: i1;
  var $i2616: i32;
  var $i2616.dup: i1;
  var $i2617: i32;
  var $i2617.dup: i1;
  var $i2618: i32;
  var $i2618.dup: i1;
  var $i2619: i32;
  var $i2619.dup: i1;
  var $i2620: i32;
  var $i2620.dup: i1;
  var $i2621: i32;
  var $i2621.dup: i1;
  var $i2622: i32;
  var $i2622.dup: i1;
  var $i2623: i32;
  var $i2623.dup: i1;
  var $i2624: i32;
  var $i2624.dup: i1;
  var $i2625: i32;
  var $i2625.dup: i1;
  var $i2626: i32;
  var $i2626.dup: i1;
  var $i2627: i32;
  var $i2627.dup: i1;
  var $i2628: i32;
  var $i2628.dup: i1;
  var $i2629: i32;
  var $i2629.dup: i1;
  var $i2630: i32;
  var $i2630.dup: i1;
  var $i2631: i32;
  var $i2631.dup: i1;
  var $i2632: i32;
  var $i2632.dup: i1;
  var $i2633: i32;
  var $i2633.dup: i1;
  var $i2634: i32;
  var $i2634.dup: i1;
  var $i2635: i32;
  var $i2635.dup: i1;
  var $i2636: i32;
  var $i2636.dup: i1;
  var $i2637: i32;
  var $i2637.dup: i1;
  var $i2638: i32;
  var $i2638.dup: i1;
  var $i2639: i32;
  var $i2639.dup: i1;
  var $i2640: i32;
  var $i2640.dup: i1;
  var $i2641: i32;
  var $i2641.dup: i1;
  var $i2642: i32;
  var $i2642.dup: i1;
  var $i2643: i32;
  var $i2643.dup: i1;
  var $i2644: i32;
  var $i2644.dup: i1;
  var $i2645: i32;
  var $i2645.dup: i1;
  var $i2646: i32;
  var $i2646.dup: i1;
  var $i2647: i32;
  var $i2647.dup: i1;
  var $i2648: i32;
  var $i2648.dup: i1;
  var $i2649: i32;
  var $i2649.dup: i1;
  var $i2650: i32;
  var $i2650.dup: i1;
  var $i2651: i32;
  var $i2651.dup: i1;
  var $i2652: i32;
  var $i2652.dup: i1;
  var $i2653: i32;
  var $i2653.dup: i1;
  var $i2654: i32;
  var $i2654.dup: i1;
  var $i2655: i32;
  var $i2655.dup: i1;
  var $i2656: i32;
  var $i2656.dup: i1;
  var $i2657: i32;
  var $i2657.dup: i1;
  var $i2658: i32;
  var $i2658.dup: i1;
  var $i2659: i32;
  var $i2659.dup: i1;
  var $i2660: i32;
  var $i2660.dup: i1;
  var $i2661: i32;
  var $i2661.dup: i1;
  var $i2662: i32;
  var $i2662.dup: i1;
  var $i2663: i32;
  var $i2663.dup: i1;
  var $i2664: i32;
  var $i2664.dup: i1;
  var $i2665: i32;
  var $i2665.dup: i1;
  var $i2666: i32;
  var $i2666.dup: i1;
  var $i2667: i32;
  var $i2667.dup: i1;
  var $i2668: i32;
  var $i2668.dup: i1;
  var $i2669: i32;
  var $i2669.dup: i1;
  var $i2670: i32;
  var $i2670.dup: i1;
  var $i2671: i32;
  var $i2671.dup: i1;
  var $i2672: i32;
  var $i2672.dup: i1;
  var $i2673: i32;
  var $i2673.dup: i1;
  var $i2674: i32;
  var $i2674.dup: i1;
  var $i2675: i32;
  var $i2675.dup: i1;
  var $i2676: i32;
  var $i2676.dup: i1;
  var $i2677: i32;
  var $i2677.dup: i1;
  var $i2678: i32;
  var $i2678.dup: i1;
  var $i2679: i32;
  var $i2679.dup: i1;
  var $i2680: i32;
  var $i2680.dup: i1;
  var $i2681: i32;
  var $i2681.dup: i1;
  var $i2682: i32;
  var $i2682.dup: i1;
  var $i2683: i32;
  var $i2683.dup: i1;
  var $i2684: i32;
  var $i2684.dup: i1;
  var $i2685: i32;
  var $i2685.dup: i1;
  var $i2686: i32;
  var $i2686.dup: i1;
  var $i2687: i32;
  var $i2687.dup: i1;
  var $i2688: i32;
  var $i2688.dup: i1;
  var $i2689: i32;
  var $i2689.dup: i1;
  var $i2690: i32;
  var $i2690.dup: i1;
  var $i2691: i32;
  var $i2691.dup: i1;
  var $i2692: i32;
  var $i2692.dup: i1;
  var $i2693: i32;
  var $i2693.dup: i1;
  var $i2694: i32;
  var $i2694.dup: i1;
  var $i2695: i32;
  var $i2695.dup: i1;
  var $i2696: i32;
  var $i2696.dup: i1;
  var $i2697: i32;
  var $i2697.dup: i1;
  var $i2698: i32;
  var $i2698.dup: i1;
  var $i2699: i32;
  var $i2699.dup: i1;
  var $i2700: i32;
  var $i2700.dup: i1;
  var $i2701: i32;
  var $i2701.dup: i1;
  var $i2702: i32;
  var $i2702.dup: i1;
  var $i2703: i32;
  var $i2703.dup: i1;
  var $i2704: i32;
  var $i2704.dup: i1;
  var $i2705: i32;
  var $i2705.dup: i1;
  var $i2706: i32;
  var $i2706.dup: i1;
  var $i2707: i32;
  var $i2707.dup: i1;
  var $i2708: i32;
  var $i2708.dup: i1;
  var $i2709: i32;
  var $i2709.dup: i1;
  var $i2710: i32;
  var $i2710.dup: i1;
  var $i2711: i32;
  var $i2711.dup: i1;
  var $i2712: i32;
  var $i2712.dup: i1;
  var $i2713: i32;
  var $i2713.dup: i1;
  var $i2714: i32;
  var $i2714.dup: i1;
  var $i2715: i32;
  var $i2715.dup: i1;
  var $i2716: i32;
  var $i2716.dup: i1;
  var $i2717: i32;
  var $i2717.dup: i1;
  var $i2718: i32;
  var $i2718.dup: i1;
  var $i2719: i32;
  var $i2719.dup: i1;
  var $i2720: i32;
  var $i2720.dup: i1;
  var $i2721: i32;
  var $i2721.dup: i1;
  var $i2722: i32;
  var $i2722.dup: i1;
  var $i2723: i32;
  var $i2723.dup: i1;
  var $i2724: i32;
  var $i2724.dup: i1;
  var $i2725: i32;
  var $i2725.dup: i1;
  var $i2726: i32;
  var $i2726.dup: i1;
  var $i2727: i32;
  var $i2727.dup: i1;
  var $i2728: i32;
  var $i2728.dup: i1;
  var $i2729: i32;
  var $i2729.dup: i1;
  var $i2730: i32;
  var $i2730.dup: i1;
  var $i2731: i32;
  var $i2731.dup: i1;
  var $i2732: i32;
  var $i2732.dup: i1;
  var $i2733: i32;
  var $i2733.dup: i1;
  var $i2734: i32;
  var $i2734.dup: i1;
  var $i2735: i32;
  var $i2735.dup: i1;
  var $i2736: i32;
  var $i2736.dup: i1;
  var $i2737: i32;
  var $i2737.dup: i1;
  var $i2738: i32;
  var $i2738.dup: i1;
  var $i2739: i32;
  var $i2739.dup: i1;
  var $i2740: i32;
  var $i2740.dup: i1;
  var $i2741: i32;
  var $i2741.dup: i1;
  var $i2742: i32;
  var $i2742.dup: i1;
  var $i2743: i32;
  var $i2743.dup: i1;
  var $i2744: i32;
  var $i2744.dup: i1;
  var $i2745: i32;
  var $i2745.dup: i1;
  var $i2746: i32;
  var $i2746.dup: i1;
  var $i2747: i32;
  var $i2747.dup: i1;
  var $i2748: i32;
  var $i2748.dup: i1;
  var $i2749: i32;
  var $i2749.dup: i1;
  var $i2750: i32;
  var $i2750.dup: i1;
  var $i2751: i32;
  var $i2751.dup: i1;
  var $i2752: i32;
  var $i2752.dup: i1;
  var $i2753: i32;
  var $i2753.dup: i1;
  var $i2754: i32;
  var $i2754.dup: i1;
  var $i2755: i32;
  var $i2755.dup: i1;
  var $i2756: i32;
  var $i2756.dup: i1;
  var $i2757: i32;
  var $i2757.dup: i1;
  var $i2758: i32;
  var $i2758.dup: i1;
  var $i2759: i32;
  var $i2759.dup: i1;
  var $i2760: i32;
  var $i2760.dup: i1;
  var $i2761: i32;
  var $i2761.dup: i1;
  var $i2762: i32;
  var $i2762.dup: i1;
  var $i2763: i32;
  var $i2763.dup: i1;
  var $i2764: i32;
  var $i2764.dup: i1;
  var $i2765: i32;
  var $i2765.dup: i1;
  var $i2766: i32;
  var $i2766.dup: i1;
  var $i2767: i32;
  var $i2767.dup: i1;
  var $i2768: i32;
  var $i2768.dup: i1;
  var $i2769: i32;
  var $i2769.dup: i1;
  var $i2770: i32;
  var $i2770.dup: i1;
  var $i2771: i32;
  var $i2771.dup: i1;
  var $i2772: i32;
  var $i2772.dup: i1;
  var $i2773: i32;
  var $i2773.dup: i1;
  var $i2774: i32;
  var $i2774.dup: i1;
  var $i2775: i32;
  var $i2775.dup: i1;
  var $i2776: i32;
  var $i2776.dup: i1;
  var $i2777: i32;
  var $i2777.dup: i1;
  var $i2778: i32;
  var $i2778.dup: i1;
  var $i2779: i32;
  var $i2779.dup: i1;
  var $i2780: i32;
  var $i2780.dup: i1;
  var $i2781: i32;
  var $i2781.dup: i1;
  var $i2782: i32;
  var $i2782.dup: i1;
  var $i2783: i32;
  var $i2783.dup: i1;
  var $i2784: i32;
  var $i2784.dup: i1;
  var $i2785: i32;
  var $i2785.dup: i1;
  var $i2786: i32;
  var $i2786.dup: i1;
  var $i2787: i32;
  var $i2787.dup: i1;
  var $i2788: i32;
  var $i2788.dup: i1;
  var $i2789: i32;
  var $i2789.dup: i1;
  var $i2790: i32;
  var $i2790.dup: i1;
  var $i2791: i32;
  var $i2791.dup: i1;
  var $i2792: i32;
  var $i2792.dup: i1;
  var $i2793: i32;
  var $i2793.dup: i1;
  var $i2794: i32;
  var $i2794.dup: i1;
  var $i2795: i32;
  var $i2795.dup: i1;
  var $i2796: i32;
  var $i2796.dup: i1;
  var $i2797: i32;
  var $i2797.dup: i1;
  var $i2798: i32;
  var $i2798.dup: i1;
  var $i2799: i32;
  var $i2799.dup: i1;
  var $i2800: i32;
  var $i2800.dup: i1;
  var $i2801: i32;
  var $i2801.dup: i1;
  var $i2802: i32;
  var $i2802.dup: i1;
  var $i2803: i32;
  var $i2803.dup: i1;
  var $i2804: i32;
  var $i2804.dup: i1;
  var $i2805: i32;
  var $i2805.dup: i1;
  var $i2806: i32;
  var $i2806.dup: i1;
  var $i2807: i32;
  var $i2807.dup: i1;
  var $i2808: i32;
  var $i2808.dup: i1;
  var $i2809: i32;
  var $i2809.dup: i1;
  var $i2810: i32;
  var $i2810.dup: i1;
  var $i2811: i32;
  var $i2811.dup: i1;
  var $i2812: i32;
  var $i2812.dup: i1;
  var $i2813: i32;
  var $i2813.dup: i1;
  var $i2814: i32;
  var $i2814.dup: i1;
  var $i2815: i32;
  var $i2815.dup: i1;
  var $i2816: i32;
  var $i2816.dup: i1;
  var $i2817: i32;
  var $i2817.dup: i1;
  var $i2818: i32;
  var $i2818.dup: i1;
  var $i2819: i32;
  var $i2819.dup: i1;
  var $i2820: i32;
  var $i2820.dup: i1;
  var $i2821: i32;
  var $i2821.dup: i1;
  var $i2822: i32;
  var $i2822.dup: i1;
  var $i2823: i32;
  var $i2823.dup: i1;
  var $i2824: i32;
  var $i2824.dup: i1;
  var $i2825: i32;
  var $i2825.dup: i1;
  var $i2826: i32;
  var $i2826.dup: i1;
  var $i2827: i32;
  var $i2827.dup: i1;
  var $i2828: i32;
  var $i2828.dup: i1;
  var $i2829: i32;
  var $i2829.dup: i1;
  var $i2830: i32;
  var $i2830.dup: i1;
  var $i2831: i32;
  var $i2831.dup: i1;
  var $i2832: i32;
  var $i2832.dup: i1;
  var $i2833: i32;
  var $i2833.dup: i1;
  var $i2834: i32;
  var $i2834.dup: i1;
  var $i2835: i32;
  var $i2835.dup: i1;
  var $i2836: i32;
  var $i2836.dup: i1;
  var $i2837: i32;
  var $i2837.dup: i1;
  var $i2838: i32;
  var $i2838.dup: i1;
  var $i2839: i32;
  var $i2839.dup: i1;
  var $i2840: i32;
  var $i2840.dup: i1;
  var $i2841: i32;
  var $i2841.dup: i1;
  var $i2842: i32;
  var $i2842.dup: i1;
  var $i2843: i32;
  var $i2843.dup: i1;
  var $i2844: i32;
  var $i2844.dup: i1;
  var $i2845: i32;
  var $i2845.dup: i1;
  var $i2846: i32;
  var $i2846.dup: i1;
  var $i2847: i32;
  var $i2847.dup: i1;
  var $i2848: i32;
  var $i2848.dup: i1;
  var $i2849: i32;
  var $i2849.dup: i1;
  var $i2850: i32;
  var $i2850.dup: i1;
  var $i2851: i32;
  var $i2851.dup: i1;
  var $i2852: i32;
  var $i2852.dup: i1;
  var $i2853: i32;
  var $i2853.dup: i1;
  var $i2854: i32;
  var $i2854.dup: i1;
  var $i2855: i32;
  var $i2855.dup: i1;
  var $i2856: i32;
  var $i2856.dup: i1;
  var $i2857: i32;
  var $i2857.dup: i1;
  var $i2858: i32;
  var $i2858.dup: i1;
  var $i2859: i32;
  var $i2859.dup: i1;
  var $i2860: i32;
  var $i2860.dup: i1;
  var $i2861: i32;
  var $i2861.dup: i1;
  var $i2862: i32;
  var $i2862.dup: i1;
  var $i2863: i32;
  var $i2863.dup: i1;
  var $i2864: i32;
  var $i2864.dup: i1;
  var $i2865: i32;
  var $i2865.dup: i1;
  var $i2866: i32;
  var $i2866.dup: i1;
  var $i2867: i32;
  var $i2867.dup: i1;
  var $i2868: i32;
  var $i2868.dup: i1;
  var $i2869: i32;
  var $i2869.dup: i1;
  var $i2870: i32;
  var $i2870.dup: i1;
  var $i2871: i32;
  var $i2871.dup: i1;
  var $i2872: i32;
  var $i2872.dup: i1;
  var $i2873: i32;
  var $i2873.dup: i1;
  var $i2874: i32;
  var $i2874.dup: i1;
  var $i2875: i32;
  var $i2875.dup: i1;
  var $i2876: i32;
  var $i2876.dup: i1;
  var $i2877: i32;
  var $i2877.dup: i1;
  var $i2878: i32;
  var $i2878.dup: i1;
  var $i2879: i32;
  var $i2879.dup: i1;
  var $i2880: i32;
  var $i2880.dup: i1;
  var $i2881: i32;
  var $i2881.dup: i1;
  var $i2882: i32;
  var $i2882.dup: i1;
  var $i2883: i32;
  var $i2883.dup: i1;
  var $i2884: i32;
  var $i2884.dup: i1;
  var $i2885: i32;
  var $i2885.dup: i1;
  var $i2886: i32;
  var $i2886.dup: i1;
  var $i2887: i32;
  var $i2887.dup: i1;
  var $i2888: i32;
  var $i2888.dup: i1;
  var $i2889: i32;
  var $i2889.dup: i1;
  var $i2890: i32;
  var $i2890.dup: i1;
  var $i2891: i32;
  var $i2891.dup: i1;
  var $i2892: i32;
  var $i2892.dup: i1;
  var $i2893: i32;
  var $i2893.dup: i1;
  var $i2894: i32;
  var $i2894.dup: i1;
  var $i2895: i32;
  var $i2895.dup: i1;
  var $i2896: i32;
  var $i2896.dup: i1;
  var $i2897: i32;
  var $i2897.dup: i1;
  var $i2898: i32;
  var $i2898.dup: i1;
  var $i2899: i32;
  var $i2899.dup: i1;
  var $i2900: i32;
  var $i2900.dup: i1;
  var $i2901: i32;
  var $i2901.dup: i1;
  var $i2902: i32;
  var $i2902.dup: i1;
  var $i2903: i32;
  var $i2903.dup: i1;
  var $i2904: i32;
  var $i2904.dup: i1;
  var $i2905: i32;
  var $i2905.dup: i1;
  var $i2906: i32;
  var $i2906.dup: i1;
  var $i2907: i32;
  var $i2907.dup: i1;
  var $i2908: i32;
  var $i2908.dup: i1;
  var $i2909: i32;
  var $i2909.dup: i1;
  var $i2910: i32;
  var $i2910.dup: i1;
  var $i2911: i32;
  var $i2911.dup: i1;
  var $i2912: i32;
  var $i2912.dup: i1;
  var $i2913: i32;
  var $i2913.dup: i1;
  var $i2914: i32;
  var $i2914.dup: i1;
  var $i2915: i32;
  var $i2915.dup: i1;
  var $i2916: i32;
  var $i2916.dup: i1;
  var $i2917: i32;
  var $i2917.dup: i1;
  var $i2918: i32;
  var $i2918.dup: i1;
  var $i2919: i32;
  var $i2919.dup: i1;
  var $i2920: i32;
  var $i2920.dup: i1;
  var $i2921: i32;
  var $i2921.dup: i1;
  var $i2922: i32;
  var $i2922.dup: i1;
  var $i2923: i32;
  var $i2923.dup: i1;
  var $i2924: i32;
  var $i2924.dup: i1;
  var $i2925: i32;
  var $i2925.dup: i1;
  var $i2926: i32;
  var $i2926.dup: i1;
  var $i2927: i32;
  var $i2927.dup: i1;
  var $i2928: i32;
  var $i2928.dup: i1;
  var $i2929: i32;
  var $i2929.dup: i1;
  var $i2930: i32;
  var $i2930.dup: i1;
  var $i2931: i32;
  var $i2931.dup: i1;
  var $i2932: i32;
  var $i2932.dup: i1;
  var $i2933: i32;
  var $i2933.dup: i1;
  var $i2934: i32;
  var $i2934.dup: i1;
  var $i2935: i32;
  var $i2935.dup: i1;
  var $i2936: i32;
  var $i2936.dup: i1;
  var $i2937: i32;
  var $i2937.dup: i1;
  var $i2938: i32;
  var $i2938.dup: i1;
  var $i2939: i32;
  var $i2939.dup: i1;
  var $i2940: i32;
  var $i2940.dup: i1;
  var $i2941: i32;
  var $i2941.dup: i1;
  var $i2942: i32;
  var $i2942.dup: i1;
  var $i2943: i32;
  var $i2943.dup: i1;
  var $i2944: i32;
  var $i2944.dup: i1;
  var $i2945: i32;
  var $i2945.dup: i1;
  var $i2946: i32;
  var $i2946.dup: i1;
  var $i2947: i32;
  var $i2947.dup: i1;
  var $i2948: i32;
  var $i2948.dup: i1;
  var $i2949: i32;
  var $i2949.dup: i1;
  var $i2950: i32;
  var $i2950.dup: i1;
  var $i2951: i32;
  var $i2951.dup: i1;
  var $i2952: i32;
  var $i2952.dup: i1;
  var $i2953: i32;
  var $i2953.dup: i1;
  var $i2954: i32;
  var $i2954.dup: i1;
  var $i2955: i32;
  var $i2955.dup: i1;
  var $i2956: i32;
  var $i2956.dup: i1;
  var $i2957: i32;
  var $i2957.dup: i1;
  var $i2958: i32;
  var $i2958.dup: i1;
  var $i2959: i32;
  var $i2959.dup: i1;
  var $i2960: i32;
  var $i2960.dup: i1;
  var $i2961: i32;
  var $i2961.dup: i1;
  var $i2962: i32;
  var $i2962.dup: i1;
  var $i2963: i32;
  var $i2963.dup: i1;
  var $i2964: i32;
  var $i2964.dup: i1;
  var $i2965: i32;
  var $i2965.dup: i1;
  var $i2966: i32;
  var $i2966.dup: i1;
  var $i2967: i32;
  var $i2967.dup: i1;
  var $i2968: i32;
  var $i2968.dup: i1;
  var $i2969: i32;
  var $i2969.dup: i1;
  var $i2970: i32;
  var $i2970.dup: i1;
  var $i2971: i32;
  var $i2971.dup: i1;
  var $i2972: i32;
  var $i2972.dup: i1;
  var $i2973: i32;
  var $i2973.dup: i1;
  var $i2974: i32;
  var $i2974.dup: i1;
  var $i2975: i32;
  var $i2975.dup: i1;
  var $i2976: i32;
  var $i2976.dup: i1;
  var $i2977: i32;
  var $i2977.dup: i1;
  var $i2978: i32;
  var $i2978.dup: i1;
  var $i2979: i32;
  var $i2979.dup: i1;
  var $i2980: i32;
  var $i2980.dup: i1;
  var $i2981: i32;
  var $i2981.dup: i1;
  var $i2982: i32;
  var $i2982.dup: i1;
  var $i2983: i32;
  var $i2983.dup: i1;
  var $i2984: i32;
  var $i2984.dup: i1;
  var $i2985: i32;
  var $i2985.dup: i1;
  var $i2986: i32;
  var $i2986.dup: i1;
  var $i2987: i32;
  var $i2987.dup: i1;
  var $i2988: i32;
  var $i2988.dup: i1;
  var $i2989: i32;
  var $i2989.dup: i1;
  var $i2990: i32;
  var $i2990.dup: i1;
  var $i2991: i32;
  var $i2991.dup: i1;
  var $i2992: i32;
  var $i2992.dup: i1;
  var $i2993: i32;
  var $i2993.dup: i1;
  var $i2994: i32;
  var $i2994.dup: i1;
  var $i2995: i32;
  var $i2995.dup: i1;
  var $i2996: i32;
  var $i2996.dup: i1;
  var $i2997: i32;
  var $i2997.dup: i1;
  var $i2998: i32;
  var $i2998.dup: i1;
  var $i2999: i32;
  var $i2999.dup: i1;
  var $i3000: i32;
  var $i3000.dup: i1;
  var $i3001: i32;
  var $i3001.dup: i1;
  var $i3002: i32;
  var $i3002.dup: i1;
  var $i3003: i32;
  var $i3003.dup: i1;
  var $i3004: i32;
  var $i3004.dup: i1;
  var $i3005: i32;
  var $i3005.dup: i1;
  var $i3006: i32;
  var $i3006.dup: i1;
  var $i3007: i32;
  var $i3007.dup: i1;
  var $i3008: i32;
  var $i3008.dup: i1;
  var $i3009: i32;
  var $i3009.dup: i1;
  var $i3010: i32;
  var $i3010.dup: i1;
  var $i3011: i32;
  var $i3011.dup: i1;
  var $i3012: i32;
  var $i3012.dup: i1;
  var $i3013: i32;
  var $i3013.dup: i1;
  var $i3014: i32;
  var $i3014.dup: i1;
  var $i3015: i32;
  var $i3015.dup: i1;
  var $i3016: i32;
  var $i3016.dup: i1;
  var $i3017: i32;
  var $i3017.dup: i1;
  var $i3018: i32;
  var $i3018.dup: i1;
  var $i3019: i32;
  var $i3019.dup: i1;
  var $i3020: i32;
  var $i3020.dup: i1;
  var $i3021: i32;
  var $i3021.dup: i1;
  var $i3022: i32;
  var $i3022.dup: i1;
  var $i3023: i32;
  var $i3023.dup: i1;
  var $i3024: i32;
  var $i3024.dup: i1;
  var $i3025: i32;
  var $i3025.dup: i1;
  var $i3026: i32;
  var $i3026.dup: i1;
  var $i3027: i32;
  var $i3027.dup: i1;
  var $i3028: i32;
  var $i3028.dup: i1;
  var $i3029: i32;
  var $i3029.dup: i1;
  var $i3030: i32;
  var $i3030.dup: i1;
  var $i3031: i32;
  var $i3031.dup: i1;
  var $i3032: i32;
  var $i3032.dup: i1;
  var $i3033: i32;
  var $i3033.dup: i1;
  var $i3034: i32;
  var $i3034.dup: i1;
  var $i3035: i32;
  var $i3035.dup: i1;
  var $i3036: i32;
  var $i3036.dup: i1;
  var $i3037: i32;
  var $i3037.dup: i1;
  var $i3038: i32;
  var $i3038.dup: i1;
  var $i3039: i32;
  var $i3039.dup: i1;
  var $i3040: i32;
  var $i3040.dup: i1;
  var $i3041: i32;
  var $i3041.dup: i1;
  var $i3042: i32;
  var $i3042.dup: i1;
  var $i3043: i32;
  var $i3043.dup: i1;
  var $i3044: i32;
  var $i3044.dup: i1;
  var $i3045: i32;
  var $i3045.dup: i1;
  var $i3046: i32;
  var $i3046.dup: i1;
  var $i3047: i32;
  var $i3047.dup: i1;
  var $i3048: i32;
  var $i3048.dup: i1;
  var $i3049: i32;
  var $i3049.dup: i1;
  var $i3050: i32;
  var $i3050.dup: i1;
  var $i3051: i32;
  var $i3051.dup: i1;
  var $i3052: i32;
  var $i3052.dup: i1;
  var $i3053: i32;
  var $i3053.dup: i1;
  var $i3054: i32;
  var $i3054.dup: i1;
  var $i3055: i32;
  var $i3055.dup: i1;
  var $i3056: i32;
  var $i3056.dup: i1;
  var $i3057: i32;
  var $i3057.dup: i1;
  var $i3058: i32;
  var $i3058.dup: i1;
  var $i3059: i32;
  var $i3059.dup: i1;
  var $i3060: i32;
  var $i3060.dup: i1;
  var $i3061: i32;
  var $i3061.dup: i1;
  var $i3062: i32;
  var $i3062.dup: i1;
  var $i3063: i32;
  var $i3063.dup: i1;
  var $i3064: i32;
  var $i3064.dup: i1;
  var $i3065: i32;
  var $i3065.dup: i1;
  var $i3066: i32;
  var $i3066.dup: i1;
  var $i3067: i32;
  var $i3067.dup: i1;
  var $i3068: i32;
  var $i3068.dup: i1;
  var $i3069: i32;
  var $i3069.dup: i1;
  var $i3070: i32;
  var $i3070.dup: i1;
  var $i3071: i32;
  var $i3071.dup: i1;
  var $i3072: i32;
  var $i3072.dup: i1;
  var $i3073: i32;
  var $i3073.dup: i1;
  var $i3074: i32;
  var $i3074.dup: i1;
  var $i3075: i32;
  var $i3075.dup: i1;
  var $i3076: i32;
  var $i3076.dup: i1;
  var $i3077: i32;
  var $i3077.dup: i1;
  var $i3078: i32;
  var $i3078.dup: i1;
  var $i3079: i32;
  var $i3079.dup: i1;
  var $i3080: i32;
  var $i3080.dup: i1;
  var $i3081: i32;
  var $i3081.dup: i1;
  var $i3082: i32;
  var $i3082.dup: i1;
  var $i3083: i32;
  var $i3083.dup: i1;
  var $i3084: i32;
  var $i3084.dup: i1;
  var $i3085: i32;
  var $i3085.dup: i1;
  var $i3086: i32;
  var $i3086.dup: i1;
  var $i3087: i32;
  var $i3087.dup: i1;
  var $i3088: i32;
  var $i3088.dup: i1;
  var $i3089: i32;
  var $i3089.dup: i1;
  var $i3090: i32;
  var $i3090.dup: i1;
  var $i3091: i32;
  var $i3091.dup: i1;
  var $i3092: i32;
  var $i3092.dup: i1;
  var $i3093: i32;
  var $i3093.dup: i1;
  var $i3094: i32;
  var $i3094.dup: i1;
  var $i3095: i32;
  var $i3095.dup: i1;
  var $i3096: i32;
  var $i3096.dup: i1;
  var $i3097: i32;
  var $i3097.dup: i1;
  var $i3098: i32;
  var $i3098.dup: i1;
  var $i3099: i32;
  var $i3099.dup: i1;
  var $i3100: i32;
  var $i3100.dup: i1;
  var $i3101: i32;
  var $i3101.dup: i1;
  var $i3102: i32;
  var $i3102.dup: i1;
  var $i3103: i32;
  var $i3103.dup: i1;
  var $i3104: i32;
  var $i3104.dup: i1;
  var $i3105: i32;
  var $i3105.dup: i1;
  var $i3106: i32;
  var $i3106.dup: i1;
  var $i3107: i32;
  var $i3107.dup: i1;
  var $i3108: i32;
  var $i3108.dup: i1;
  var $i3109: i32;
  var $i3109.dup: i1;
  var $i3110: i32;
  var $i3110.dup: i1;
  var $i3111: i32;
  var $i3111.dup: i1;
  var $i3112: i32;
  var $i3112.dup: i1;
  var $i3113: i32;
  var $i3113.dup: i1;
  var $i3114: i32;
  var $i3114.dup: i1;
  var $i3115: i32;
  var $i3115.dup: i1;
  var $i3116: i32;
  var $i3116.dup: i1;
  var $i3117: i32;
  var $i3117.dup: i1;
  var $i3118: i32;
  var $i3118.dup: i1;
  var $i3119: i32;
  var $i3119.dup: i1;
  var $i3120: i32;
  var $i3120.dup: i1;
  var $i3121: i32;
  var $i3121.dup: i1;
  var $i3122: i32;
  var $i3122.dup: i1;
  var $i3123: i32;
  var $i3123.dup: i1;
  var $i3124: i32;
  var $i3124.dup: i1;
  var $i3125: i32;
  var $i3125.dup: i1;
  var $i3126: i32;
  var $i3126.dup: i1;
  var $i3127: i32;
  var $i3127.dup: i1;
  var $i3128: i32;
  var $i3128.dup: i1;
  var $i3129: i32;
  var $i3129.dup: i1;
  var $i3130: i32;
  var $i3130.dup: i1;
  var $i3131: i32;
  var $i3131.dup: i1;
  var $i3132: i32;
  var $i3132.dup: i1;
  var $i3133: i32;
  var $i3133.dup: i1;
  var $i3134: i32;
  var $i3134.dup: i1;
  var $i3135: i32;
  var $i3135.dup: i1;
  var $i3136: i32;
  var $i3136.dup: i1;
  var $i3137: i32;
  var $i3137.dup: i1;
  var $i3138: i32;
  var $i3138.dup: i1;
  var $i3139: i32;
  var $i3139.dup: i1;
  var $i3140: i32;
  var $i3140.dup: i1;
  var $i3141: i32;
  var $i3141.dup: i1;
  var $i3142: i32;
  var $i3142.dup: i1;
  var $i3143: i32;
  var $i3143.dup: i1;
  var $i3144: i32;
  var $i3144.dup: i1;
  var $i3145: i32;
  var $i3145.dup: i1;
  var $i3146: i32;
  var $i3146.dup: i1;
  var $i3147: i32;
  var $i3147.dup: i1;
  var $i3148: i32;
  var $i3148.dup: i1;
  var $i3149: i32;
  var $i3149.dup: i1;
  var $i3150: i32;
  var $i3150.dup: i1;
  var $i3151: i32;
  var $i3151.dup: i1;
  var $i3152: i32;
  var $i3152.dup: i1;
  var $i3153: i32;
  var $i3153.dup: i1;
  var $i3154: i32;
  var $i3154.dup: i1;
  var $i3155: i32;
  var $i3155.dup: i1;
  var $i3156: i32;
  var $i3156.dup: i1;
  var $i3157: i32;
  var $i3157.dup: i1;
  var $i3158: i32;
  var $i3158.dup: i1;
  var $i3159: i32;
  var $i3159.dup: i1;
  var $i3160: i32;
  var $i3160.dup: i1;
  var $i3161: i32;
  var $i3161.dup: i1;
  var $i3162: i32;
  var $i3162.dup: i1;
  var $i3163: i32;
  var $i3163.dup: i1;
  var $i3164: i32;
  var $i3164.dup: i1;
  var $i3165: i32;
  var $i3165.dup: i1;
  var $i3166: i32;
  var $i3166.dup: i1;
  var $i3167: i32;
  var $i3167.dup: i1;
  var $i3168: i32;
  var $i3168.dup: i1;
  var $i3169: i32;
  var $i3169.dup: i1;
  var $i3170: i32;
  var $i3170.dup: i1;
  var $i3171: i32;
  var $i3171.dup: i1;
  var $i3172: i32;
  var $i3172.dup: i1;
  var $i3173: i32;
  var $i3173.dup: i1;
  var $i3174: i32;
  var $i3174.dup: i1;
  var $i3175: i32;
  var $i3175.dup: i1;
  var $i3176: i32;
  var $i3176.dup: i1;
  var $i3177: i32;
  var $i3177.dup: i1;
  var $i3178: i32;
  var $i3178.dup: i1;
  var $i3179: i32;
  var $i3179.dup: i1;
  var $i3180: i32;
  var $i3180.dup: i1;
  var $i3181: i32;
  var $i3181.dup: i1;
  var $i3182: i32;
  var $i3182.dup: i1;
  var $i3183: i32;
  var $i3183.dup: i1;
  var $i3184: i32;
  var $i3184.dup: i1;
  var $i3185: i32;
  var $i3185.dup: i1;
  var $i3186: i32;
  var $i3186.dup: i1;
  var $i3187: i32;
  var $i3187.dup: i1;
  var $i3188: i32;
  var $i3188.dup: i1;
  var $i3189: i32;
  var $i3189.dup: i1;
  var $i3190: i32;
  var $i3190.dup: i1;
  var $i3191: i32;
  var $i3191.dup: i1;
  var $i3192: i32;
  var $i3192.dup: i1;
  var $i3193: i32;
  var $i3193.dup: i1;
  var $i3194: i32;
  var $i3194.dup: i1;
  var $i3195: i32;
  var $i3195.dup: i1;
  var $i3196: i32;
  var $i3196.dup: i1;
  var $i3197: i32;
  var $i3197.dup: i1;
  var $i3198: i32;
  var $i3198.dup: i1;
  var $i3199: i32;
  var $i3199.dup: i1;
  var $i3200: i32;
  var $i3200.dup: i1;
  var $i3201: i32;
  var $i3201.dup: i1;
  var $i3202: i32;
  var $i3202.dup: i1;
  var $i3203: i32;
  var $i3203.dup: i1;
  var $i3204: i32;
  var $i3204.dup: i1;
  var $i3205: i32;
  var $i3205.dup: i1;
  var $i3206: i32;
  var $i3206.dup: i1;
  var $i3207: i32;
  var $i3207.dup: i1;
  var $i3208: i32;
  var $i3208.dup: i1;
  var $i3209: i32;
  var $i3209.dup: i1;
  var $i3210: i32;
  var $i3210.dup: i1;
  var $i3211: i32;
  var $i3211.dup: i1;
  var $i3212: i32;
  var $i3212.dup: i1;
  var $i3213: i32;
  var $i3213.dup: i1;
  var $i3214: i32;
  var $i3214.dup: i1;
  var $i3215: i32;
  var $i3215.dup: i1;
  var $i3216: i32;
  var $i3216.dup: i1;
  var $i3217: i32;
  var $i3217.dup: i1;
  var $i3218: i32;
  var $i3218.dup: i1;
  var $i3219: i32;
  var $i3219.dup: i1;
  var $i3220: i32;
  var $i3220.dup: i1;
  var $i3221: i32;
  var $i3221.dup: i1;
  var $i3222: i32;
  var $i3222.dup: i1;
  var $i3223: i32;
  var $i3223.dup: i1;
  var $i3224: i32;
  var $i3224.dup: i1;
  var $i3225: i32;
  var $i3225.dup: i1;
  var $i3226: i32;
  var $i3226.dup: i1;
  var $i3227: i32;
  var $i3227.dup: i1;
  var $i3228: i32;
  var $i3228.dup: i1;
  var $i3229: i32;
  var $i3229.dup: i1;
  var $i3230: i32;
  var $i3230.dup: i1;
  var $i3231: i32;
  var $i3231.dup: i1;
  var $i3232: i32;
  var $i3232.dup: i1;
  var $i3233: i32;
  var $i3233.dup: i1;
  var $i3234: i32;
  var $i3234.dup: i1;
  var $i3235: i32;
  var $i3235.dup: i1;
  var $i3236: i32;
  var $i3236.dup: i1;
  var $i3237: i32;
  var $i3237.dup: i1;
  var $i3238: i32;
  var $i3238.dup: i1;
  var $i3239: i32;
  var $i3239.dup: i1;
  var $i3240: i32;
  var $i3240.dup: i1;
  var $i3241: i32;
  var $i3241.dup: i1;
  var $i3242: i32;
  var $i3242.dup: i1;
  var $i3243: i32;
  var $i3243.dup: i1;
  var $i3244: i32;
  var $i3244.dup: i1;
  var $i3245: i32;
  var $i3245.dup: i1;
  var $i3246: i32;
  var $i3246.dup: i1;
  var $i3247: i32;
  var $i3247.dup: i1;
  var $i3248: i32;
  var $i3248.dup: i1;
  var $i3249: i32;
  var $i3249.dup: i1;
  var $i3250: i32;
  var $i3250.dup: i1;
  var $i3251: i32;
  var $i3251.dup: i1;
  var $i3252: i32;
  var $i3252.dup: i1;
  var $i3253: i32;
  var $i3253.dup: i1;
  var $i3254: i32;
  var $i3254.dup: i1;
  var $i3255: i32;
  var $i3255.dup: i1;
  var $i3256: i32;
  var $i3256.dup: i1;
  var $i3257: i32;
  var $i3257.dup: i1;
  var $i3258: i32;
  var $i3258.dup: i1;
  var $i3259: i32;
  var $i3259.dup: i1;
  var $i3260: i32;
  var $i3260.dup: i1;
  var $i3261: i32;
  var $i3261.dup: i1;
  var $i3262: i32;
  var $i3262.dup: i1;
  var $i3263: i32;
  var $i3263.dup: i1;
  var $i3264: i32;
  var $i3264.dup: i1;
  var $i3265: i32;
  var $i3265.dup: i1;
  var $i3266: i32;
  var $i3266.dup: i1;
  var $i3267: i32;
  var $i3267.dup: i1;
  var $i3268: i32;
  var $i3268.dup: i1;
  var $i3269: i32;
  var $i3269.dup: i1;
  var $i3270: i32;
  var $i3270.dup: i1;
  var $i3271: i32;
  var $i3271.dup: i1;
  var $i3272: i32;
  var $i3272.dup: i1;
  var $i3273: i32;
  var $i3273.dup: i1;
  var $i3274: i32;
  var $i3274.dup: i1;
  var $i3275: i32;
  var $i3275.dup: i1;
  var $i3276: i32;
  var $i3276.dup: i1;
  var $i3277: i32;
  var $i3277.dup: i1;
  var $i3278: i32;
  var $i3278.dup: i1;
  var $i3279: i32;
  var $i3279.dup: i1;
  var $i3280: i32;
  var $i3280.dup: i1;
  var $i3281: i32;
  var $i3281.dup: i1;
  var $i3282: i32;
  var $i3282.dup: i1;
  var $i3283: i32;
  var $i3283.dup: i1;
  var $i3284: i32;
  var $i3284.dup: i1;
  var $i3285: i32;
  var $i3285.dup: i1;
  var $i3286: i32;
  var $i3286.dup: i1;
  var $i3287: i32;
  var $i3287.dup: i1;
  var $i3288: i32;
  var $i3288.dup: i1;
  var $i3289: i32;
  var $i3289.dup: i1;
  var $i3290: i32;
  var $i3290.dup: i1;
  var $i3291: i32;
  var $i3291.dup: i1;
  var $i3292: i32;
  var $i3292.dup: i1;
  var $i3293: i32;
  var $i3293.dup: i1;
  var $i3294: i32;
  var $i3294.dup: i1;
  var $i3295: i32;
  var $i3295.dup: i1;
  var $i3296: i32;
  var $i3296.dup: i1;
  var $i3297: i32;
  var $i3297.dup: i1;
  var $i3298: i32;
  var $i3298.dup: i1;
  var $i3299: i32;
  var $i3299.dup: i1;
  var $i3300: i32;
  var $i3300.dup: i1;
  var $i3301: i32;
  var $i3301.dup: i1;
  var $i3302: i32;
  var $i3302.dup: i1;
  var $i3303: i32;
  var $i3303.dup: i1;
  var $i3304: i32;
  var $i3304.dup: i1;
  var $i3305: i32;
  var $i3305.dup: i1;
  var $i3306: i32;
  var $i3306.dup: i1;
  var $i3307: i32;
  var $i3307.dup: i1;
  var $i3308: i32;
  var $i3308.dup: i1;
  var $i3309: i32;
  var $i3309.dup: i1;
  var $i3310: i32;
  var $i3310.dup: i1;
  var $i3311: i32;
  var $i3311.dup: i1;
  var $i3312: i32;
  var $i3312.dup: i1;
  var $i3313: i32;
  var $i3313.dup: i1;
  var $i3314: i32;
  var $i3314.dup: i1;
  var $i3315: i32;
  var $i3315.dup: i1;
  var $i3316: i32;
  var $i3316.dup: i1;
  var $i3317: i32;
  var $i3317.dup: i1;
  var $i3318: i32;
  var $i3318.dup: i1;
  var $i3319: i32;
  var $i3319.dup: i1;
  var $i3320: i32;
  var $i3320.dup: i1;
  var $i3321: i32;
  var $i3321.dup: i1;
  var $i3322: i32;
  var $i3322.dup: i1;
  var $i3323: i32;
  var $i3323.dup: i1;
  var $i3324: i32;
  var $i3324.dup: i1;
  var $i3325: i32;
  var $i3325.dup: i1;
  var $i3326: i32;
  var $i3326.dup: i1;
  var $i3327: i32;
  var $i3327.dup: i1;
  var $i3328: i32;
  var $i3328.dup: i1;
  var $i3329: i32;
  var $i3329.dup: i1;
  var $i3330: i32;
  var $i3330.dup: i1;
  var $i3331: i32;
  var $i3331.dup: i1;
  var $i3332: i32;
  var $i3332.dup: i1;
  var $i3333: i32;
  var $i3333.dup: i1;
  var $i3334: i32;
  var $i3334.dup: i1;
  var $i3335: i32;
  var $i3335.dup: i1;
  var $i3336: i32;
  var $i3336.dup: i1;
  var $i3337: i32;
  var $i3337.dup: i1;
  var $i3338: i32;
  var $i3338.dup: i1;
  var $i3339: i32;
  var $i3339.dup: i1;
  var $i3340: i32;
  var $i3340.dup: i1;
  var $i3341: i32;
  var $i3341.dup: i1;
  var $i3342: i32;
  var $i3342.dup: i1;
  var $i3343: i32;
  var $i3343.dup: i1;
  var $i3344: i32;
  var $i3344.dup: i1;
  var $i3345: i32;
  var $i3345.dup: i1;
  var $i3346: i32;
  var $i3346.dup: i1;
  var $i3347: i32;
  var $i3347.dup: i1;
  var $i3348: i32;
  var $i3348.dup: i1;
  var $i3349: i32;
  var $i3349.dup: i1;
  var $i3350: i32;
  var $i3350.dup: i1;
  var $i3351: i32;
  var $i3351.dup: i1;
  var $i3352: i32;
  var $i3352.dup: i1;
  var $i3353: i32;
  var $i3353.dup: i1;
  var $i3354: i32;
  var $i3354.dup: i1;
  var $i3355: i32;
  var $i3355.dup: i1;
  var $i3356: i32;
  var $i3356.dup: i1;
  var $i3357: i32;
  var $i3357.dup: i1;
  var $i3358: i32;
  var $i3358.dup: i1;
  var $i3359: i32;
  var $i3359.dup: i1;
  var $i3360: i32;
  var $i3360.dup: i1;
  var $i3361: i32;
  var $i3361.dup: i1;
  var $i3362: i32;
  var $i3362.dup: i1;
  var $i3363: i32;
  var $i3363.dup: i1;
  var $i3364: i32;
  var $i3364.dup: i1;
  var $i3365: i32;
  var $i3365.dup: i1;
  var $i3366: i32;
  var $i3366.dup: i1;
  var $i3367: i32;
  var $i3367.dup: i1;
  var $i3368: i32;
  var $i3368.dup: i1;
  var $i3369: i32;
  var $i3369.dup: i1;
  var $i3370: i32;
  var $i3370.dup: i1;
  var $i3371: i32;
  var $i3371.dup: i1;
  var $i3372: i32;
  var $i3372.dup: i1;
  var $i3373: i32;
  var $i3373.dup: i1;
  var $i3374: i32;
  var $i3374.dup: i1;
  var $i3375: i32;
  var $i3375.dup: i1;
  var $i3376: i32;
  var $i3376.dup: i1;
  var $i3377: i32;
  var $i3377.dup: i1;
  var $i3378: i32;
  var $i3378.dup: i1;
  var $i3379: i32;
  var $i3379.dup: i1;
  var $i3380: i32;
  var $i3380.dup: i1;
  var $i3381: i32;
  var $i3381.dup: i1;
  var $i3382: i32;
  var $i3382.dup: i1;
  var $i3383: i32;
  var $i3383.dup: i1;
  var $i3384: i32;
  var $i3384.dup: i1;
  var $i3385: i32;
  var $i3385.dup: i1;
  var $i3386: i32;
  var $i3386.dup: i1;
  var $i3387: i32;
  var $i3387.dup: i1;
  var $i3388: i32;
  var $i3388.dup: i1;
  var $i3389: i32;
  var $i3389.dup: i1;
  var $i3390: i32;
  var $i3390.dup: i1;
  var $i3391: i32;
  var $i3391.dup: i1;
  var $i3392: i32;
  var $i3392.dup: i1;
  var $i3393: i32;
  var $i3393.dup: i1;
  var $i3394: i32;
  var $i3394.dup: i1;
  var $i3395: i32;
  var $i3395.dup: i1;
  var $i3396: i32;
  var $i3396.dup: i1;
  var $i3397: i32;
  var $i3397.dup: i1;
  var $i3398: i32;
  var $i3398.dup: i1;
  var $i3399: i32;
  var $i3399.dup: i1;
  var $i3400: i32;
  var $i3400.dup: i1;
  var $i3401: i32;
  var $i3401.dup: i1;
  var $i3402: i32;
  var $i3402.dup: i1;
  var $i3403: i32;
  var $i3403.dup: i1;
  var $i3404: i32;
  var $i3404.dup: i1;
  var $i3405: i32;
  var $i3405.dup: i1;
  var $i3406: i32;
  var $i3406.dup: i1;
  var $i3407: i32;
  var $i3407.dup: i1;
  var $i3408: i32;
  var $i3408.dup: i1;
  var $i3409: i32;
  var $i3409.dup: i1;
  var $i3410: i32;
  var $i3410.dup: i1;
  var $i3411: i32;
  var $i3411.dup: i1;
  var $i3412: i32;
  var $i3412.dup: i1;
  var $i3413: i32;
  var $i3413.dup: i1;
  var $i3414: i32;
  var $i3414.dup: i1;
  var $i3415: i32;
  var $i3415.dup: i1;
  var $i3416: i32;
  var $i3416.dup: i1;
  var $i3417: i32;
  var $i3417.dup: i1;
  var $i3418: i32;
  var $i3418.dup: i1;
  var $i3419: i32;
  var $i3419.dup: i1;
  var $i3420: i32;
  var $i3420.dup: i1;
  var $i3421: i32;
  var $i3421.dup: i1;
  var $i3422: i32;
  var $i3422.dup: i1;
  var $i3423: i32;
  var $i3423.dup: i1;
  var $i3424: i32;
  var $i3424.dup: i1;
  var $i3425: i32;
  var $i3425.dup: i1;
  var $i3426: i32;
  var $i3426.dup: i1;
  var $i3427: i32;
  var $i3427.dup: i1;
  var $i3428: i32;
  var $i3428.dup: i1;
  var $i3429: i32;
  var $i3429.dup: i1;
  var $i3430: i32;
  var $i3430.dup: i1;
  var $i3431: i32;
  var $i3431.dup: i1;
  var $i3432: i32;
  var $i3432.dup: i1;
  var $i3433: i32;
  var $i3433.dup: i1;
  var $i3434: i32;
  var $i3434.dup: i1;
  var $i3435: i32;
  var $i3435.dup: i1;
  var $i3436: i32;
  var $i3436.dup: i1;
  var $i3437: i32;
  var $i3437.dup: i1;
  var $i3438: i32;
  var $i3438.dup: i1;
  var $i3439: i32;
  var $i3439.dup: i1;
  var $i3440: i32;
  var $i3440.dup: i1;
  var $i3441: i32;
  var $i3441.dup: i1;
  var $i3442: i32;
  var $i3442.dup: i1;
  var $i3443: i32;
  var $i3443.dup: i1;
  var $i3444: i32;
  var $i3444.dup: i1;
  var $i3445: i32;
  var $i3445.dup: i1;
  var $i3446: i32;
  var $i3446.dup: i1;
  var $i3447: i32;
  var $i3447.dup: i1;
  var $i3448: i32;
  var $i3448.dup: i1;
  var $i3449: i32;
  var $i3449.dup: i1;
  var $i3450: i32;
  var $i3450.dup: i1;
  var $i3451: i32;
  var $i3451.dup: i1;
  var $i3452: i32;
  var $i3452.dup: i1;
  var $i3453: i32;
  var $i3453.dup: i1;
  var $i3454: i32;
  var $i3454.dup: i1;
  var $i3455: i32;
  var $i3455.dup: i1;
  var $i3456: i32;
  var $i3456.dup: i1;
  var $i3457: i32;
  var $i3457.dup: i1;
  var $i3458: i32;
  var $i3458.dup: i1;
  var $i3459: i32;
  var $i3459.dup: i1;
  var $i3460: i32;
  var $i3460.dup: i1;
  var $i3461: i32;
  var $i3461.dup: i1;
  var $i3462: i32;
  var $i3462.dup: i1;
  var $i3463: i32;
  var $i3463.dup: i1;
  var $i3464: i32;
  var $i3464.dup: i1;
  var $i3465: i32;
  var $i3465.dup: i1;
  var $i3466: i32;
  var $i3466.dup: i1;
  var $i3467: i32;
  var $i3467.dup: i1;
  var $i3468: i32;
  var $i3468.dup: i1;
  var $i3469: i32;
  var $i3469.dup: i1;
  var $i3470: i32;
  var $i3470.dup: i1;
  var $i3471: i32;
  var $i3471.dup: i1;
  var $i3472: i32;
  var $i3472.dup: i1;
  var $i3473: i32;
  var $i3473.dup: i1;
  var $i3474: i32;
  var $i3474.dup: i1;
  var $i3475: i32;
  var $i3475.dup: i1;
  var $i3476: i32;
  var $i3476.dup: i1;
  var $i3477: i32;
  var $i3477.dup: i1;
  var $i3478: i32;
  var $i3478.dup: i1;
  var $i3479: i32;
  var $i3479.dup: i1;
  var $i3480: i32;
  var $i3480.dup: i1;
  var $i3481: i32;
  var $i3481.dup: i1;
  var $i3482: i32;
  var $i3482.dup: i1;
  var $i3483: i32;
  var $i3483.dup: i1;
  var $i3484: i32;
  var $i3484.dup: i1;
  var $i3485: i32;
  var $i3485.dup: i1;
  var $i3486: i32;
  var $i3486.dup: i1;
  var $i3487: i32;
  var $i3487.dup: i1;
  var $i3488: i32;
  var $i3488.dup: i1;
  var $i3489: i32;
  var $i3489.dup: i1;
  var $i3490: i32;
  var $i3490.dup: i1;
  var $i3491: i32;
  var $i3491.dup: i1;
  var $i3492: i32;
  var $i3492.dup: i1;
  var $i3493: i32;
  var $i3493.dup: i1;
  var $i3494: i32;
  var $i3494.dup: i1;
  var $i3495: i32;
  var $i3495.dup: i1;
  var $i3496: i32;
  var $i3496.dup: i1;
  var $i3497: i32;
  var $i3497.dup: i1;
  var $i3498: i32;
  var $i3498.dup: i1;
  var $i3499: i32;
  var $i3499.dup: i1;
  var $i3500: i32;
  var $i3500.dup: i1;
  var $i3501: i32;
  var $i3501.dup: i1;
  var $i3502: i32;
  var $i3502.dup: i1;
  var $i3503: i32;
  var $i3503.dup: i1;
  var $i3504: i32;
  var $i3504.dup: i1;
  var $i3505: i32;
  var $i3505.dup: i1;
  var $i3506: i32;
  var $i3506.dup: i1;
  var $i3507: i32;
  var $i3507.dup: i1;
  var $i3508: i32;
  var $i3508.dup: i1;
  var $i3509: i32;
  var $i3509.dup: i1;
  var $i3510: i32;
  var $i3510.dup: i1;
  var $p3511: ref;
  var $p3511.dup: i1;
  var $i3512: i32;
  var $i3512.dup: i1;
  var $i3513: i32;
  var $i3513.dup: i1;
  var $p3514: ref;
  var $p3514.dup: i1;
  var $i3515: i32;
  var $i3515.dup: i1;
  var $i3516: i32;
  var $i3516.dup: i1;
  var $p3517: ref;
  var $p3517.dup: i1;
  var $i3518: i32;
  var $i3518.dup: i1;
  var $i3519: i32;
  var $i3519.dup: i1;
  var $p3520: ref;
  var $p3520.dup: i1;
  var $i3521: i32;
  var $i3521.dup: i1;
  var $i3522: i32;
  var $i3522.dup: i1;
  var $p3523: ref;
  var $p3523.dup: i1;
  var $i3524: i32;
  var $i3524.dup: i1;
  var $i3525: i32;
  var $i3525.dup: i1;
  var $p3526: ref;
  var $p3526.dup: i1;
  var $i3527: i32;
  var $i3527.dup: i1;
  var $i3528: i32;
  var $i3528.dup: i1;
  var $p3529: ref;
  var $p3529.dup: i1;
  var $i3530: i32;
  var $i3530.dup: i1;
  var $i3531: i32;
  var $i3531.dup: i1;
  var $p3532: ref;
  var $p3532.dup: i1;
  var $i3533: i32;
  var $i3533.dup: i1;
  var $i3534: i32;
  var $i3534.dup: i1;
  var $p3535: ref;
  var $p3535.dup: i1;
  var $p3536: ref;
  var $p3536.dup: i1;
  var $p3537: ref;
  var $p3537.dup: i1;
  var $p3538: ref;
  var $p3538.dup: i1;
  var $p3539: ref;
  var $p3539.dup: i1;
  var $p3540: ref;
  var $p3540.dup: i1;
  var $p3541: ref;
  var $p3541.dup: i1;
  var $p3542: ref;
  var $p3542.dup: i1;
  var $p3543: ref;
  var $p3543.dup: i1;
  var $i3544: i64;
  var $i3544.dup: i1;
  var $p3545: ref;
  var $p3545.dup: i1;
  var $p3546: ref;
  var $p3546.dup: i1;
  var $i3547: i32;
  var $i3547.dup: i1;
  var $p3548: ref;
  var $p3548.dup: i1;
  var $p3549: ref;
  var $p3549.dup: i1;
  var $i3550: i32;
  var $i3550.dup: i1;
  var $p3551: ref;
  var $p3551.dup: i1;
  var $p3552: ref;
  var $p3552.dup: i1;
  var $i3553: i32;
  var $i3553.dup: i1;
  var $p3554: ref;
  var $p3554.dup: i1;
  var $p3555: ref;
  var $p3555.dup: i1;
  var $i3556: i32;
  var $i3556.dup: i1;
  var $p3557: ref;
  var $p3557.dup: i1;
  var $p3558: ref;
  var $p3558.dup: i1;
  var $i3559: i32;
  var $i3559.dup: i1;
  var $p3560: ref;
  var $p3560.dup: i1;
  var $p3561: ref;
  var $p3561.dup: i1;
  var $i3562: i32;
  var $i3562.dup: i1;
  var $p3563: ref;
  var $p3563.dup: i1;
  var $p3564: ref;
  var $p3564.dup: i1;
  var $i3565: i32;
  var $i3565.dup: i1;
  var $p3566: ref;
  var $p3566.dup: i1;
  var $p3567: ref;
  var $p3567.dup: i1;
  var $i3568: i32;
  var $i3568.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 77, 33} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  $p3.dup := 0;
  call {:cexpr "crypto_hashblocks:arg:inlen"} boogie_si_record_i64($i2);
  assume true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 77, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0,$mul.ref(0,1));
  $p4.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 77, 7} true;
  assume {:verifier.code 0} true;
  call $i5, $i5.dup := load_bigendian($p4, $p4.dup);
  call {:cexpr "a"} boogie_si_record_i32($i5);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 77, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(0,4));
  $p6.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 77, 51} true;
  assume {:verifier.code 0} true;
  $p6.dup := 0;
  $M.16 := $store.i32($M.16,$p6,$i5);
  $M.16.dup := $store.i1($M.16.dup,$p6,$i5.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 78, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0,$mul.ref(4,1));
  $p7.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 78, 7} true;
  assume {:verifier.code 0} true;
  call $i8, $i8.dup := load_bigendian($p7, $p7.dup);
  call {:cexpr "b"} boogie_si_record_i32($i8);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 78, 40} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(1,4));
  $p9.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 78, 51} true;
  assume {:verifier.code 0} true;
  $p9.dup := 0;
  $M.17 := $store.i32($M.17,$p9,$i8);
  $M.17.dup := $store.i1($M.17.dup,$p9,$i8.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 79, 33} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0,$mul.ref(8,1));
  $p10.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 79, 7} true;
  assume {:verifier.code 0} true;
  call $i11, $i11.dup := load_bigendian($p10, $p10.dup);
  call {:cexpr "c"} boogie_si_record_i32($i11);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 79, 40} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(2,4));
  $p12.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 79, 51} true;
  assume {:verifier.code 0} true;
  $p12.dup := 0;
  $M.18 := $store.i32($M.18,$p12,$i11);
  $M.18.dup := $store.i1($M.18.dup,$p12,$i11.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 80, 33} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0,$mul.ref(12,1));
  $p13.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 80, 7} true;
  assume {:verifier.code 0} true;
  call $i14, $i14.dup := load_bigendian($p13, $p13.dup);
  call {:cexpr "d"} boogie_si_record_i32($i14);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 80, 40} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(3,4));
  $p15.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 80, 51} true;
  assume {:verifier.code 0} true;
  $p15.dup := 0;
  $M.19 := $store.i32($M.19,$p15,$i14);
  $M.19.dup := $store.i1($M.19.dup,$p15,$i14.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 81, 33} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0,$mul.ref(16,1));
  $p16.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 81, 7} true;
  assume {:verifier.code 0} true;
  call $i17, $i17.dup := load_bigendian($p16, $p16.dup);
  call {:cexpr "e"} boogie_si_record_i32($i17);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 81, 40} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(4,4));
  $p18.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 81, 51} true;
  assume {:verifier.code 0} true;
  $p18.dup := 0;
  $M.20 := $store.i32($M.20,$p18,$i17);
  $M.20.dup := $store.i1($M.20.dup,$p18,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 82, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0,$mul.ref(20,1));
  $p19.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 82, 7} true;
  assume {:verifier.code 0} true;
  call $i20, $i20.dup := load_bigendian($p19, $p19.dup);
  call {:cexpr "f"} boogie_si_record_i32($i20);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 82, 40} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(5,4));
  $p21.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 82, 51} true;
  assume {:verifier.code 0} true;
  $p21.dup := 0;
  $M.21 := $store.i32($M.21,$p21,$i20);
  $M.21.dup := $store.i1($M.21.dup,$p21,$i20.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 83, 33} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0,$mul.ref(24,1));
  $p22.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 83, 7} true;
  assume {:verifier.code 0} true;
  call $i23, $i23.dup := load_bigendian($p22, $p22.dup);
  call {:cexpr "g"} boogie_si_record_i32($i23);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 83, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(6,4));
  $p24.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 83, 51} true;
  assume {:verifier.code 0} true;
  $p24.dup := 0;
  $M.22 := $store.i32($M.22,$p24,$i23);
  $M.22.dup := $store.i1($M.22.dup,$p24,$i23.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 84, 33} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0,$mul.ref(28,1));
  $p25.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 84, 7} true;
  assume {:verifier.code 0} true;
  call $i26, $i26.dup := load_bigendian($p25, $p25.dup);
  call {:cexpr "h"} boogie_si_record_i32($i26);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 84, 40} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(7,4));
  $p27.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 84, 51} true;
  assume {:verifier.code 0} true;
  $p27.dup := 0;
  $M.23 := $store.i32($M.23,$p27,$i26);
  $M.23.dup := $store.i1($M.23.dup,$p27,$i26.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 86, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i23;
  $i28.dup := 0;
  $i29 := $i20;
  $i29.dup := 0;
  $i30 := $i17;
  $i30.dup := 0;
  $i31 := $i14;
  $i31.dup := 0;
  $i32 := $i11;
  $i32.dup := 0;
  $i33 := $i8;
  $i33.dup := 0;
  $i34 := $i5;
  $i34.dup := 0;
  $i35 := $i2;
  $i35.dup := 0;
  $p36 := $p1;
  $p36.dup := 0;
  $i37 := $i26;
  $i37.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p36.dup == 0);
  assert {:unlikely_shadow_invariant ($p3.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 86, 16} true;
  assume {:verifier.code 0} true;
  $i38 := $uge.i64($i35,64);
  $i38.dup := $or.i1($i35.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 86, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  $i38.dup := 0;
  goto $bb2, $bb3;
$bb2:
  assume ($i38 == 1);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 87, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p39 := $add.ref($p36,$mul.ref(0,1));
  $p39.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 87, 24} true;
  assume {:verifier.code 0} true;
  call $i40, $i40.dup := load_bigendian($p39, $p39.dup);
  call {:cexpr "w0"} boogie_si_record_i32($i40);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 88, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p41 := $add.ref($p36,$mul.ref(4,1));
  $p41.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 88, 24} true;
  assume {:verifier.code 0} true;
  call $i42, $i42.dup := load_bigendian($p41, $p41.dup);
  call {:cexpr "w1"} boogie_si_record_i32($i42);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 89, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p43 := $add.ref($p36,$mul.ref(8,1));
  $p43.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 89, 24} true;
  assume {:verifier.code 0} true;
  call $i44, $i44.dup := load_bigendian($p43, $p43.dup);
  call {:cexpr "w2"} boogie_si_record_i32($i44);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 90, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p45 := $add.ref($p36,$mul.ref(12,1));
  $p45.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 90, 24} true;
  assume {:verifier.code 0} true;
  call $i46, $i46.dup := load_bigendian($p45, $p45.dup);
  call {:cexpr "w3"} boogie_si_record_i32($i46);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 91, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p47 := $add.ref($p36,$mul.ref(16,1));
  $p47.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 91, 24} true;
  assume {:verifier.code 0} true;
  call $i48, $i48.dup := load_bigendian($p47, $p47.dup);
  call {:cexpr "w4"} boogie_si_record_i32($i48);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 92, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p49 := $add.ref($p36,$mul.ref(20,1));
  $p49.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 92, 24} true;
  assume {:verifier.code 0} true;
  call $i50, $i50.dup := load_bigendian($p49, $p49.dup);
  call {:cexpr "w5"} boogie_si_record_i32($i50);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 93, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p51 := $add.ref($p36,$mul.ref(24,1));
  $p51.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 93, 24} true;
  assume {:verifier.code 0} true;
  call $i52, $i52.dup := load_bigendian($p51, $p51.dup);
  call {:cexpr "w6"} boogie_si_record_i32($i52);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 94, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p53 := $add.ref($p36,$mul.ref(28,1));
  $p53.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 94, 24} true;
  assume {:verifier.code 0} true;
  call $i54, $i54.dup := load_bigendian($p53, $p53.dup);
  call {:cexpr "w7"} boogie_si_record_i32($i54);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 95, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p55 := $add.ref($p36,$mul.ref(32,1));
  $p55.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 95, 24} true;
  assume {:verifier.code 0} true;
  call $i56, $i56.dup := load_bigendian($p55, $p55.dup);
  call {:cexpr "w8"} boogie_si_record_i32($i56);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 96, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p57 := $add.ref($p36,$mul.ref(36,1));
  $p57.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 96, 24} true;
  assume {:verifier.code 0} true;
  call $i58, $i58.dup := load_bigendian($p57, $p57.dup);
  call {:cexpr "w9"} boogie_si_record_i32($i58);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 97, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p59 := $add.ref($p36,$mul.ref(40,1));
  $p59.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 97, 24} true;
  assume {:verifier.code 0} true;
  call $i60, $i60.dup := load_bigendian($p59, $p59.dup);
  call {:cexpr "w10"} boogie_si_record_i32($i60);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 98, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p61 := $add.ref($p36,$mul.ref(44,1));
  $p61.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 98, 24} true;
  assume {:verifier.code 0} true;
  call $i62, $i62.dup := load_bigendian($p61, $p61.dup);
  call {:cexpr "w11"} boogie_si_record_i32($i62);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 99, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p63 := $add.ref($p36,$mul.ref(48,1));
  $p63.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 99, 24} true;
  assume {:verifier.code 0} true;
  call $i64, $i64.dup := load_bigendian($p63, $p63.dup);
  call {:cexpr "w12"} boogie_si_record_i32($i64);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 100, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p65 := $add.ref($p36,$mul.ref(52,1));
  $p65.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 100, 24} true;
  assume {:verifier.code 0} true;
  call $i66, $i66.dup := load_bigendian($p65, $p65.dup);
  call {:cexpr "w13"} boogie_si_record_i32($i66);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 101, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p67 := $add.ref($p36,$mul.ref(56,1));
  $p67.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 101, 24} true;
  assume {:verifier.code 0} true;
  call $i68, $i68.dup := load_bigendian($p67, $p67.dup);
  call {:cexpr "w14"} boogie_si_record_i32($i68);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 102, 42} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p69 := $add.ref($p36,$mul.ref(60,1));
  $p69.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 102, 24} true;
  assume {:verifier.code 0} true;
  call $i70, $i70.dup := load_bigendian($p69, $p69.dup);
  call {:cexpr "w15"} boogie_si_record_i32($i70);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $lshr.i32($i30,6);
  $i71.dup := $or.i1($i30.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $shl.i32($i30,26);
  $i72.dup := $or.i1($i30.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $or.i32($i71,$i72);
  $i73.dup := $or.i1($i71.dup,$i72.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i74 := $lshr.i32($i30,11);
  $i74.dup := $or.i1($i30.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $shl.i32($i30,21);
  $i75.dup := $or.i1($i30.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $or.i32($i74,$i75);
  $i76.dup := $or.i1($i74.dup,$i75.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $xor.i32($i73,$i76);
  $i77.dup := $or.i1($i73.dup,$i76.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i78 := $lshr.i32($i30,25);
  $i78.dup := $or.i1($i30.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $shl.i32($i30,7);
  $i79.dup := $or.i1($i30.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $or.i32($i78,$i79);
  $i80.dup := $or.i1($i78.dup,$i79.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $xor.i32($i77,$i80);
  $i81.dup := $or.i1($i77.dup,$i80.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i32($i37,$i81);
  $i82.dup := $or.i1($i37.dup,$i81.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i83 := $and.i32($i30,$i29);
  $i83.dup := $or.i1($i30.dup,$i29.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i84 := $xor.i32($i30,$sub.i32(0,1));
  $i84.dup := $or.i1($i30.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i85 := $and.i32($i84,$i28);
  $i85.dup := $or.i1($i84.dup,$i28.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $xor.i32($i83,$i85);
  $i86.dup := $or.i1($i83.dup,$i85.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i82,$i86);
  $i87.dup := $or.i1($i82.dup,$i86.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i87,1116352408);
  $i88.dup := $or.i1($i87.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i32($i88,$i40);
  $i89.dup := $or.i1($i88.dup,$i40.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i89);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $lshr.i32($i34,2);
  $i90.dup := $or.i1($i34.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $shl.i32($i34,30);
  $i91.dup := $or.i1($i34.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $or.i32($i90,$i91);
  $i92.dup := $or.i1($i90.dup,$i91.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i93 := $lshr.i32($i34,13);
  $i93.dup := $or.i1($i34.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i94 := $shl.i32($i34,19);
  $i94.dup := $or.i1($i34.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i95 := $or.i32($i93,$i94);
  $i95.dup := $or.i1($i93.dup,$i94.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i96 := $xor.i32($i92,$i95);
  $i96.dup := $or.i1($i92.dup,$i95.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $lshr.i32($i34,22);
  $i97.dup := $or.i1($i34.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i98 := $shl.i32($i34,10);
  $i98.dup := $or.i1($i34.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $or.i32($i97,$i98);
  $i99.dup := $or.i1($i97.dup,$i98.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $xor.i32($i96,$i99);
  $i100.dup := $or.i1($i96.dup,$i99.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i101 := $and.i32($i34,$i33);
  $i101.dup := $or.i1($i34.dup,$i33.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i102 := $and.i32($i34,$i32);
  $i102.dup := $or.i1($i34.dup,$i32.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i103 := $xor.i32($i101,$i102);
  $i103.dup := $or.i1($i101.dup,$i102.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i104 := $and.i32($i33,$i32);
  $i104.dup := $or.i1($i33.dup,$i32.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i105 := $xor.i32($i103,$i104);
  $i105.dup := $or.i1($i103.dup,$i104.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i100,$i105);
  $i106.dup := $or.i1($i100.dup,$i105.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i106);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i31,$i89);
  $i107.dup := $or.i1($i31.dup,$i89.dup);
  call {:cexpr "e"} boogie_si_record_i32($i107);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i32($i89,$i106);
  $i108.dup := $or.i1($i89.dup,$i106.dup);
  call {:cexpr "a"} boogie_si_record_i32($i108);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $lshr.i32($i107,6);
  $i109.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $shl.i32($i107,26);
  $i110.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i111 := $or.i32($i109,$i110);
  $i111.dup := $or.i1($i109.dup,$i110.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $lshr.i32($i107,11);
  $i112.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i113 := $shl.i32($i107,21);
  $i113.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $or.i32($i112,$i113);
  $i114.dup := $or.i1($i112.dup,$i113.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $xor.i32($i111,$i114);
  $i115.dup := $or.i1($i111.dup,$i114.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $lshr.i32($i107,25);
  $i116.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $shl.i32($i107,7);
  $i117.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i118 := $or.i32($i116,$i117);
  $i118.dup := $or.i1($i116.dup,$i117.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $xor.i32($i115,$i118);
  $i119.dup := $or.i1($i115.dup,$i118.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i28,$i119);
  $i120.dup := $or.i1($i28.dup,$i119.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i32($i107,$i30);
  $i121.dup := $or.i1($i107.dup,$i30.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $xor.i32($i107,$sub.i32(0,1));
  $i122.dup := $or.i1($i107.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i123 := $and.i32($i122,$i29);
  $i123.dup := $or.i1($i122.dup,$i29.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i124 := $xor.i32($i121,$i123);
  $i124.dup := $or.i1($i121.dup,$i123.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i120,$i124);
  $i125.dup := $or.i1($i120.dup,$i124.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i126 := $add.i32($i125,1899447441);
  $i126.dup := $or.i1($i125.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i32($i126,$i42);
  $i127.dup := $or.i1($i126.dup,$i42.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i127);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i128 := $lshr.i32($i108,2);
  $i128.dup := $or.i1($i108.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $shl.i32($i108,30);
  $i129.dup := $or.i1($i108.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i130 := $or.i32($i128,$i129);
  $i130.dup := $or.i1($i128.dup,$i129.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i131 := $lshr.i32($i108,13);
  $i131.dup := $or.i1($i108.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i132 := $shl.i32($i108,19);
  $i132.dup := $or.i1($i108.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i133 := $or.i32($i131,$i132);
  $i133.dup := $or.i1($i131.dup,$i132.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i134 := $xor.i32($i130,$i133);
  $i134.dup := $or.i1($i130.dup,$i133.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i135 := $lshr.i32($i108,22);
  $i135.dup := $or.i1($i108.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i136 := $shl.i32($i108,10);
  $i136.dup := $or.i1($i108.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $or.i32($i135,$i136);
  $i137.dup := $or.i1($i135.dup,$i136.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $xor.i32($i134,$i137);
  $i138.dup := $or.i1($i134.dup,$i137.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $and.i32($i108,$i34);
  $i139.dup := $or.i1($i108.dup,$i34.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i140 := $and.i32($i108,$i33);
  $i140.dup := $or.i1($i108.dup,$i33.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i141 := $xor.i32($i139,$i140);
  $i141.dup := $or.i1($i139.dup,$i140.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i142 := $and.i32($i34,$i33);
  $i142.dup := $or.i1($i34.dup,$i33.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i143 := $xor.i32($i141,$i142);
  $i143.dup := $or.i1($i141.dup,$i142.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i138,$i143);
  $i144.dup := $or.i1($i138.dup,$i143.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i144);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i32,$i127);
  $i145.dup := $or.i1($i32.dup,$i127.dup);
  call {:cexpr "e"} boogie_si_record_i32($i145);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 105, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $add.i32($i127,$i144);
  $i146.dup := $or.i1($i127.dup,$i144.dup);
  call {:cexpr "a"} boogie_si_record_i32($i146);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i147 := $lshr.i32($i145,6);
  $i147.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $shl.i32($i145,26);
  $i148.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $or.i32($i147,$i148);
  $i149.dup := $or.i1($i147.dup,$i148.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $lshr.i32($i145,11);
  $i150.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i151 := $shl.i32($i145,21);
  $i151.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $or.i32($i150,$i151);
  $i152.dup := $or.i1($i150.dup,$i151.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i153 := $xor.i32($i149,$i152);
  $i153.dup := $or.i1($i149.dup,$i152.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i154 := $lshr.i32($i145,25);
  $i154.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i155 := $shl.i32($i145,7);
  $i155.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i156 := $or.i32($i154,$i155);
  $i156.dup := $or.i1($i154.dup,$i155.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $xor.i32($i153,$i156);
  $i157.dup := $or.i1($i153.dup,$i156.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i29,$i157);
  $i158.dup := $or.i1($i29.dup,$i157.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i159 := $and.i32($i145,$i107);
  $i159.dup := $or.i1($i145.dup,$i107.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i160 := $xor.i32($i145,$sub.i32(0,1));
  $i160.dup := $or.i1($i145.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i161 := $and.i32($i160,$i30);
  $i161.dup := $or.i1($i160.dup,$i30.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $xor.i32($i159,$i161);
  $i162.dup := $or.i1($i159.dup,$i161.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i32($i158,$i162);
  $i163.dup := $or.i1($i158.dup,$i162.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i164 := $add.i32($i163,3049323471);
  $i164.dup := $or.i1($i163.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i165 := $add.i32($i164,$i44);
  $i165.dup := $or.i1($i164.dup,$i44.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i165);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $lshr.i32($i146,2);
  $i166.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $shl.i32($i146,30);
  $i167.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $or.i32($i166,$i167);
  $i168.dup := $or.i1($i166.dup,$i167.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i169 := $lshr.i32($i146,13);
  $i169.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i170 := $shl.i32($i146,19);
  $i170.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i171 := $or.i32($i169,$i170);
  $i171.dup := $or.i1($i169.dup,$i170.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i172 := $xor.i32($i168,$i171);
  $i172.dup := $or.i1($i168.dup,$i171.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $lshr.i32($i146,22);
  $i173.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $shl.i32($i146,10);
  $i174.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $or.i32($i173,$i174);
  $i175.dup := $or.i1($i173.dup,$i174.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i176 := $xor.i32($i172,$i175);
  $i176.dup := $or.i1($i172.dup,$i175.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $and.i32($i146,$i108);
  $i177.dup := $or.i1($i146.dup,$i108.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $and.i32($i146,$i34);
  $i178.dup := $or.i1($i146.dup,$i34.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $xor.i32($i177,$i178);
  $i179.dup := $or.i1($i177.dup,$i178.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i180 := $and.i32($i108,$i34);
  $i180.dup := $or.i1($i108.dup,$i34.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i181 := $xor.i32($i179,$i180);
  $i181.dup := $or.i1($i179.dup,$i180.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i176,$i181);
  $i182.dup := $or.i1($i176.dup,$i181.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i182);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i183 := $add.i32($i33,$i165);
  $i183.dup := $or.i1($i33.dup,$i165.dup);
  call {:cexpr "e"} boogie_si_record_i32($i183);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 106, 5} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i32($i165,$i182);
  $i184.dup := $or.i1($i165.dup,$i182.dup);
  call {:cexpr "a"} boogie_si_record_i32($i184);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i185 := $lshr.i32($i183,6);
  $i185.dup := $or.i1($i183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i186 := $shl.i32($i183,26);
  $i186.dup := $or.i1($i183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $or.i32($i185,$i186);
  $i187.dup := $or.i1($i185.dup,$i186.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i188 := $lshr.i32($i183,11);
  $i188.dup := $or.i1($i183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $shl.i32($i183,21);
  $i189.dup := $or.i1($i183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i190 := $or.i32($i188,$i189);
  $i190.dup := $or.i1($i188.dup,$i189.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i191 := $xor.i32($i187,$i190);
  $i191.dup := $or.i1($i187.dup,$i190.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i192 := $lshr.i32($i183,25);
  $i192.dup := $or.i1($i183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i193 := $shl.i32($i183,7);
  $i193.dup := $or.i1($i183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i194 := $or.i32($i192,$i193);
  $i194.dup := $or.i1($i192.dup,$i193.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $xor.i32($i191,$i194);
  $i195.dup := $or.i1($i191.dup,$i194.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i30,$i195);
  $i196.dup := $or.i1($i30.dup,$i195.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $and.i32($i183,$i145);
  $i197.dup := $or.i1($i183.dup,$i145.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i198 := $xor.i32($i183,$sub.i32(0,1));
  $i198.dup := $or.i1($i183.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i199 := $and.i32($i198,$i107);
  $i199.dup := $or.i1($i198.dup,$i107.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i200 := $xor.i32($i197,$i199);
  $i200.dup := $or.i1($i197.dup,$i199.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i201 := $add.i32($i196,$i200);
  $i201.dup := $or.i1($i196.dup,$i200.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $add.i32($i201,3921009573);
  $i202.dup := $or.i1($i201.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i46);
  $i203.dup := $or.i1($i202.dup,$i46.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i203);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $lshr.i32($i184,2);
  $i204.dup := $or.i1($i184.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i205 := $shl.i32($i184,30);
  $i205.dup := $or.i1($i184.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $or.i32($i204,$i205);
  $i206.dup := $or.i1($i204.dup,$i205.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $lshr.i32($i184,13);
  $i207.dup := $or.i1($i184.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $shl.i32($i184,19);
  $i208.dup := $or.i1($i184.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i209 := $or.i32($i207,$i208);
  $i209.dup := $or.i1($i207.dup,$i208.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i210 := $xor.i32($i206,$i209);
  $i210.dup := $or.i1($i206.dup,$i209.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i211 := $lshr.i32($i184,22);
  $i211.dup := $or.i1($i184.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $shl.i32($i184,10);
  $i212.dup := $or.i1($i184.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i213 := $or.i32($i211,$i212);
  $i213.dup := $or.i1($i211.dup,$i212.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i214 := $xor.i32($i210,$i213);
  $i214.dup := $or.i1($i210.dup,$i213.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i215 := $and.i32($i184,$i146);
  $i215.dup := $or.i1($i184.dup,$i146.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $and.i32($i184,$i108);
  $i216.dup := $or.i1($i184.dup,$i108.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $xor.i32($i215,$i216);
  $i217.dup := $or.i1($i215.dup,$i216.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i218 := $and.i32($i146,$i108);
  $i218.dup := $or.i1($i146.dup,$i108.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i219 := $xor.i32($i217,$i218);
  $i219.dup := $or.i1($i217.dup,$i218.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i220 := $add.i32($i214,$i219);
  $i220.dup := $or.i1($i214.dup,$i219.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i220);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i221 := $add.i32($i34,$i203);
  $i221.dup := $or.i1($i34.dup,$i203.dup);
  call {:cexpr "e"} boogie_si_record_i32($i221);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i222 := $add.i32($i203,$i220);
  $i222.dup := $or.i1($i203.dup,$i220.dup);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i223 := $lshr.i32($i221,6);
  $i223.dup := $or.i1($i221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $shl.i32($i221,26);
  $i224.dup := $or.i1($i221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i225 := $or.i32($i223,$i224);
  $i225.dup := $or.i1($i223.dup,$i224.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $lshr.i32($i221,11);
  $i226.dup := $or.i1($i221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $shl.i32($i221,21);
  $i227.dup := $or.i1($i221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i228 := $or.i32($i226,$i227);
  $i228.dup := $or.i1($i226.dup,$i227.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i229 := $xor.i32($i225,$i228);
  $i229.dup := $or.i1($i225.dup,$i228.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i230 := $lshr.i32($i221,25);
  $i230.dup := $or.i1($i221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i231 := $shl.i32($i221,7);
  $i231.dup := $or.i1($i221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $or.i32($i230,$i231);
  $i232.dup := $or.i1($i230.dup,$i231.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i233 := $xor.i32($i229,$i232);
  $i233.dup := $or.i1($i229.dup,$i232.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i32($i107,$i233);
  $i234.dup := $or.i1($i107.dup,$i233.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $and.i32($i221,$i183);
  $i235.dup := $or.i1($i221.dup,$i183.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i236 := $xor.i32($i221,$sub.i32(0,1));
  $i236.dup := $or.i1($i221.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $and.i32($i236,$i145);
  $i237.dup := $or.i1($i236.dup,$i145.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i238 := $xor.i32($i235,$i237);
  $i238.dup := $or.i1($i235.dup,$i237.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i239 := $add.i32($i234,$i238);
  $i239.dup := $or.i1($i234.dup,$i238.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i240 := $add.i32($i239,961987163);
  $i240.dup := $or.i1($i239.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i32($i240,$i48);
  $i241.dup := $or.i1($i240.dup,$i48.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i241);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $lshr.i32($i222,2);
  $i242.dup := $or.i1($i222.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i243 := $shl.i32($i222,30);
  $i243.dup := $or.i1($i222.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i244 := $or.i32($i242,$i243);
  $i244.dup := $or.i1($i242.dup,$i243.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i245 := $lshr.i32($i222,13);
  $i245.dup := $or.i1($i222.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i246 := $shl.i32($i222,19);
  $i246.dup := $or.i1($i222.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i247 := $or.i32($i245,$i246);
  $i247.dup := $or.i1($i245.dup,$i246.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i248 := $xor.i32($i244,$i247);
  $i248.dup := $or.i1($i244.dup,$i247.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i249 := $lshr.i32($i222,22);
  $i249.dup := $or.i1($i222.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i250 := $shl.i32($i222,10);
  $i250.dup := $or.i1($i222.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i251 := $or.i32($i249,$i250);
  $i251.dup := $or.i1($i249.dup,$i250.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i252 := $xor.i32($i248,$i251);
  $i252.dup := $or.i1($i248.dup,$i251.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $and.i32($i222,$i184);
  $i253.dup := $or.i1($i222.dup,$i184.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $and.i32($i222,$i146);
  $i254.dup := $or.i1($i222.dup,$i146.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i255 := $xor.i32($i253,$i254);
  $i255.dup := $or.i1($i253.dup,$i254.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $and.i32($i184,$i146);
  $i256.dup := $or.i1($i184.dup,$i146.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $xor.i32($i255,$i256);
  $i257.dup := $or.i1($i255.dup,$i256.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i258 := $add.i32($i252,$i257);
  $i258.dup := $or.i1($i252.dup,$i257.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i258);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i108,$i241);
  $i259.dup := $or.i1($i108.dup,$i241.dup);
  call {:cexpr "e"} boogie_si_record_i32($i259);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i260 := $add.i32($i241,$i258);
  $i260.dup := $or.i1($i241.dup,$i258.dup);
  call {:cexpr "a"} boogie_si_record_i32($i260);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i261 := $lshr.i32($i259,6);
  $i261.dup := $or.i1($i259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $shl.i32($i259,26);
  $i262.dup := $or.i1($i259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i263 := $or.i32($i261,$i262);
  $i263.dup := $or.i1($i261.dup,$i262.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $lshr.i32($i259,11);
  $i264.dup := $or.i1($i259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i265 := $shl.i32($i259,21);
  $i265.dup := $or.i1($i259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i266 := $or.i32($i264,$i265);
  $i266.dup := $or.i1($i264.dup,$i265.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i267 := $xor.i32($i263,$i266);
  $i267.dup := $or.i1($i263.dup,$i266.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i268 := $lshr.i32($i259,25);
  $i268.dup := $or.i1($i259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i269 := $shl.i32($i259,7);
  $i269.dup := $or.i1($i259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i270 := $or.i32($i268,$i269);
  $i270.dup := $or.i1($i268.dup,$i269.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $xor.i32($i267,$i270);
  $i271.dup := $or.i1($i267.dup,$i270.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i145,$i271);
  $i272.dup := $or.i1($i145.dup,$i271.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i273 := $and.i32($i259,$i221);
  $i273.dup := $or.i1($i259.dup,$i221.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i274 := $xor.i32($i259,$sub.i32(0,1));
  $i274.dup := $or.i1($i259.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i275 := $and.i32($i274,$i183);
  $i275.dup := $or.i1($i274.dup,$i183.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i276 := $xor.i32($i273,$i275);
  $i276.dup := $or.i1($i273.dup,$i275.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i277 := $add.i32($i272,$i276);
  $i277.dup := $or.i1($i272.dup,$i276.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i277,1508970993);
  $i278.dup := $or.i1($i277.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i279 := $add.i32($i278,$i50);
  $i279.dup := $or.i1($i278.dup,$i50.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i279);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i280 := $lshr.i32($i260,2);
  $i280.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i281 := $shl.i32($i260,30);
  $i281.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $or.i32($i280,$i281);
  $i282.dup := $or.i1($i280.dup,$i281.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $lshr.i32($i260,13);
  $i283.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i284 := $shl.i32($i260,19);
  $i284.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i285 := $or.i32($i283,$i284);
  $i285.dup := $or.i1($i283.dup,$i284.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i286 := $xor.i32($i282,$i285);
  $i286.dup := $or.i1($i282.dup,$i285.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $lshr.i32($i260,22);
  $i287.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i288 := $shl.i32($i260,10);
  $i288.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $or.i32($i287,$i288);
  $i289.dup := $or.i1($i287.dup,$i288.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i290 := $xor.i32($i286,$i289);
  $i290.dup := $or.i1($i286.dup,$i289.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i291 := $and.i32($i260,$i222);
  $i291.dup := $or.i1($i260.dup,$i222.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i292 := $and.i32($i260,$i184);
  $i292.dup := $or.i1($i260.dup,$i184.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i293 := $xor.i32($i291,$i292);
  $i293.dup := $or.i1($i291.dup,$i292.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $and.i32($i222,$i184);
  $i294.dup := $or.i1($i222.dup,$i184.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i295 := $xor.i32($i293,$i294);
  $i295.dup := $or.i1($i293.dup,$i294.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i296 := $add.i32($i290,$i295);
  $i296.dup := $or.i1($i290.dup,$i295.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i296);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i297 := $add.i32($i146,$i279);
  $i297.dup := $or.i1($i146.dup,$i279.dup);
  call {:cexpr "e"} boogie_si_record_i32($i297);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 109, 5} true;
  assume {:verifier.code 0} true;
  $i298 := $add.i32($i279,$i296);
  $i298.dup := $or.i1($i279.dup,$i296.dup);
  call {:cexpr "a"} boogie_si_record_i32($i298);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i299 := $lshr.i32($i297,6);
  $i299.dup := $or.i1($i297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i300 := $shl.i32($i297,26);
  $i300.dup := $or.i1($i297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i301 := $or.i32($i299,$i300);
  $i301.dup := $or.i1($i299.dup,$i300.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $lshr.i32($i297,11);
  $i302.dup := $or.i1($i297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i303 := $shl.i32($i297,21);
  $i303.dup := $or.i1($i297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i304 := $or.i32($i302,$i303);
  $i304.dup := $or.i1($i302.dup,$i303.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i305 := $xor.i32($i301,$i304);
  $i305.dup := $or.i1($i301.dup,$i304.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i306 := $lshr.i32($i297,25);
  $i306.dup := $or.i1($i297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i307 := $shl.i32($i297,7);
  $i307.dup := $or.i1($i297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i308 := $or.i32($i306,$i307);
  $i308.dup := $or.i1($i306.dup,$i307.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i309 := $xor.i32($i305,$i308);
  $i309.dup := $or.i1($i305.dup,$i308.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i310 := $add.i32($i183,$i309);
  $i310.dup := $or.i1($i183.dup,$i309.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i311 := $and.i32($i297,$i259);
  $i311.dup := $or.i1($i297.dup,$i259.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $xor.i32($i297,$sub.i32(0,1));
  $i312.dup := $or.i1($i297.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $and.i32($i312,$i221);
  $i313.dup := $or.i1($i312.dup,$i221.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i314 := $xor.i32($i311,$i313);
  $i314.dup := $or.i1($i311.dup,$i313.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i315 := $add.i32($i310,$i314);
  $i315.dup := $or.i1($i310.dup,$i314.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i316 := $add.i32($i315,2453635748);
  $i316.dup := $or.i1($i315.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i316,$i52);
  $i317.dup := $or.i1($i316.dup,$i52.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i317);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i318 := $lshr.i32($i298,2);
  $i318.dup := $or.i1($i298.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i319 := $shl.i32($i298,30);
  $i319.dup := $or.i1($i298.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i320 := $or.i32($i318,$i319);
  $i320.dup := $or.i1($i318.dup,$i319.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i321 := $lshr.i32($i298,13);
  $i321.dup := $or.i1($i298.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $shl.i32($i298,19);
  $i322.dup := $or.i1($i298.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i323 := $or.i32($i321,$i322);
  $i323.dup := $or.i1($i321.dup,$i322.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $xor.i32($i320,$i323);
  $i324.dup := $or.i1($i320.dup,$i323.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i325 := $lshr.i32($i298,22);
  $i325.dup := $or.i1($i298.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i326 := $shl.i32($i298,10);
  $i326.dup := $or.i1($i298.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i327 := $or.i32($i325,$i326);
  $i327.dup := $or.i1($i325.dup,$i326.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i328 := $xor.i32($i324,$i327);
  $i328.dup := $or.i1($i324.dup,$i327.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i329 := $and.i32($i298,$i260);
  $i329.dup := $or.i1($i298.dup,$i260.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i330 := $and.i32($i298,$i222);
  $i330.dup := $or.i1($i298.dup,$i222.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i331 := $xor.i32($i329,$i330);
  $i331.dup := $or.i1($i329.dup,$i330.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $and.i32($i260,$i222);
  $i332.dup := $or.i1($i260.dup,$i222.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i333 := $xor.i32($i331,$i332);
  $i333.dup := $or.i1($i331.dup,$i332.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i328,$i333);
  $i334.dup := $or.i1($i328.dup,$i333.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i334);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i335 := $add.i32($i184,$i317);
  $i335.dup := $or.i1($i184.dup,$i317.dup);
  call {:cexpr "e"} boogie_si_record_i32($i335);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 110, 5} true;
  assume {:verifier.code 0} true;
  $i336 := $add.i32($i317,$i334);
  $i336.dup := $or.i1($i317.dup,$i334.dup);
  call {:cexpr "a"} boogie_si_record_i32($i336);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i337 := $lshr.i32($i335,6);
  $i337.dup := $or.i1($i335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i338 := $shl.i32($i335,26);
  $i338.dup := $or.i1($i335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i339 := $or.i32($i337,$i338);
  $i339.dup := $or.i1($i337.dup,$i338.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i340 := $lshr.i32($i335,11);
  $i340.dup := $or.i1($i335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i341 := $shl.i32($i335,21);
  $i341.dup := $or.i1($i335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $or.i32($i340,$i341);
  $i342.dup := $or.i1($i340.dup,$i341.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i343 := $xor.i32($i339,$i342);
  $i343.dup := $or.i1($i339.dup,$i342.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i344 := $lshr.i32($i335,25);
  $i344.dup := $or.i1($i335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i345 := $shl.i32($i335,7);
  $i345.dup := $or.i1($i335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i346 := $or.i32($i344,$i345);
  $i346.dup := $or.i1($i344.dup,$i345.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $xor.i32($i343,$i346);
  $i347.dup := $or.i1($i343.dup,$i346.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i348 := $add.i32($i221,$i347);
  $i348.dup := $or.i1($i221.dup,$i347.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i349 := $and.i32($i335,$i297);
  $i349.dup := $or.i1($i335.dup,$i297.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i350 := $xor.i32($i335,$sub.i32(0,1));
  $i350.dup := $or.i1($i335.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i351 := $and.i32($i350,$i259);
  $i351.dup := $or.i1($i350.dup,$i259.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $xor.i32($i349,$i351);
  $i352.dup := $or.i1($i349.dup,$i351.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i348,$i352);
  $i353.dup := $or.i1($i348.dup,$i352.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i32($i353,2870763221);
  $i354.dup := $or.i1($i353.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i355 := $add.i32($i354,$i54);
  $i355.dup := $or.i1($i354.dup,$i54.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i355);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i356 := $lshr.i32($i336,2);
  $i356.dup := $or.i1($i336.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i357 := $shl.i32($i336,30);
  $i357.dup := $or.i1($i336.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i358 := $or.i32($i356,$i357);
  $i358.dup := $or.i1($i356.dup,$i357.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i359 := $lshr.i32($i336,13);
  $i359.dup := $or.i1($i336.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i360 := $shl.i32($i336,19);
  $i360.dup := $or.i1($i336.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $or.i32($i359,$i360);
  $i361.dup := $or.i1($i359.dup,$i360.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $xor.i32($i358,$i361);
  $i362.dup := $or.i1($i358.dup,$i361.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i363 := $lshr.i32($i336,22);
  $i363.dup := $or.i1($i336.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i364 := $shl.i32($i336,10);
  $i364.dup := $or.i1($i336.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i365 := $or.i32($i363,$i364);
  $i365.dup := $or.i1($i363.dup,$i364.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i366 := $xor.i32($i362,$i365);
  $i366.dup := $or.i1($i362.dup,$i365.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i367 := $and.i32($i336,$i298);
  $i367.dup := $or.i1($i336.dup,$i298.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i368 := $and.i32($i336,$i260);
  $i368.dup := $or.i1($i336.dup,$i260.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $xor.i32($i367,$i368);
  $i369.dup := $or.i1($i367.dup,$i368.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i370 := $and.i32($i298,$i260);
  $i370.dup := $or.i1($i298.dup,$i260.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i371 := $xor.i32($i369,$i370);
  $i371.dup := $or.i1($i369.dup,$i370.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i372 := $add.i32($i366,$i371);
  $i372.dup := $or.i1($i366.dup,$i371.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i372);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i373 := $add.i32($i222,$i355);
  $i373.dup := $or.i1($i222.dup,$i355.dup);
  call {:cexpr "e"} boogie_si_record_i32($i373);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i374 := $add.i32($i355,$i372);
  $i374.dup := $or.i1($i355.dup,$i372.dup);
  call {:cexpr "a"} boogie_si_record_i32($i374);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i375 := $lshr.i32($i373,6);
  $i375.dup := $or.i1($i373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $shl.i32($i373,26);
  $i376.dup := $or.i1($i373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $or.i32($i375,$i376);
  $i377.dup := $or.i1($i375.dup,$i376.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i378 := $lshr.i32($i373,11);
  $i378.dup := $or.i1($i373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i379 := $shl.i32($i373,21);
  $i379.dup := $or.i1($i373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i380 := $or.i32($i378,$i379);
  $i380.dup := $or.i1($i378.dup,$i379.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i381 := $xor.i32($i377,$i380);
  $i381.dup := $or.i1($i377.dup,$i380.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $lshr.i32($i373,25);
  $i382.dup := $or.i1($i373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i383 := $shl.i32($i373,7);
  $i383.dup := $or.i1($i373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i384 := $or.i32($i382,$i383);
  $i384.dup := $or.i1($i382.dup,$i383.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i385 := $xor.i32($i381,$i384);
  $i385.dup := $or.i1($i381.dup,$i384.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i386 := $add.i32($i259,$i385);
  $i386.dup := $or.i1($i259.dup,$i385.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i387 := $and.i32($i373,$i335);
  $i387.dup := $or.i1($i373.dup,$i335.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i388 := $xor.i32($i373,$sub.i32(0,1));
  $i388.dup := $or.i1($i373.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i389 := $and.i32($i388,$i297);
  $i389.dup := $or.i1($i388.dup,$i297.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i390 := $xor.i32($i387,$i389);
  $i390.dup := $or.i1($i387.dup,$i389.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i391 := $add.i32($i386,$i390);
  $i391.dup := $or.i1($i386.dup,$i390.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i391,3624381080);
  $i392.dup := $or.i1($i391.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i393 := $add.i32($i392,$i56);
  $i393.dup := $or.i1($i392.dup,$i56.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i393);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i394 := $lshr.i32($i374,2);
  $i394.dup := $or.i1($i374.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i395 := $shl.i32($i374,30);
  $i395.dup := $or.i1($i374.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i396 := $or.i32($i394,$i395);
  $i396.dup := $or.i1($i394.dup,$i395.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i397 := $lshr.i32($i374,13);
  $i397.dup := $or.i1($i374.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i398 := $shl.i32($i374,19);
  $i398.dup := $or.i1($i374.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $or.i32($i397,$i398);
  $i399.dup := $or.i1($i397.dup,$i398.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i400 := $xor.i32($i396,$i399);
  $i400.dup := $or.i1($i396.dup,$i399.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i401 := $lshr.i32($i374,22);
  $i401.dup := $or.i1($i374.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i402 := $shl.i32($i374,10);
  $i402.dup := $or.i1($i374.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i403 := $or.i32($i401,$i402);
  $i403.dup := $or.i1($i401.dup,$i402.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i404 := $xor.i32($i400,$i403);
  $i404.dup := $or.i1($i400.dup,$i403.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i405 := $and.i32($i374,$i336);
  $i405.dup := $or.i1($i374.dup,$i336.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $and.i32($i374,$i298);
  $i406.dup := $or.i1($i374.dup,$i298.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $xor.i32($i405,$i406);
  $i407.dup := $or.i1($i405.dup,$i406.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i408 := $and.i32($i336,$i298);
  $i408.dup := $or.i1($i336.dup,$i298.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i409 := $xor.i32($i407,$i408);
  $i409.dup := $or.i1($i407.dup,$i408.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i32($i404,$i409);
  $i410.dup := $or.i1($i404.dup,$i409.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i410);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i411 := $add.i32($i260,$i393);
  $i411.dup := $or.i1($i260.dup,$i393.dup);
  call {:cexpr "e"} boogie_si_record_i32($i411);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 112, 5} true;
  assume {:verifier.code 0} true;
  $i412 := $add.i32($i393,$i410);
  $i412.dup := $or.i1($i393.dup,$i410.dup);
  call {:cexpr "a"} boogie_si_record_i32($i412);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i413 := $lshr.i32($i411,6);
  $i413.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i414 := $shl.i32($i411,26);
  $i414.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i415 := $or.i32($i413,$i414);
  $i415.dup := $or.i1($i413.dup,$i414.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i416 := $lshr.i32($i411,11);
  $i416.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i417 := $shl.i32($i411,21);
  $i417.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i418 := $or.i32($i416,$i417);
  $i418.dup := $or.i1($i416.dup,$i417.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i419 := $xor.i32($i415,$i418);
  $i419.dup := $or.i1($i415.dup,$i418.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i420 := $lshr.i32($i411,25);
  $i420.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i421 := $shl.i32($i411,7);
  $i421.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $or.i32($i420,$i421);
  $i422.dup := $or.i1($i420.dup,$i421.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i423 := $xor.i32($i419,$i422);
  $i423.dup := $or.i1($i419.dup,$i422.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i424 := $add.i32($i297,$i423);
  $i424.dup := $or.i1($i297.dup,$i423.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i425 := $and.i32($i411,$i373);
  $i425.dup := $or.i1($i411.dup,$i373.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i426 := $xor.i32($i411,$sub.i32(0,1));
  $i426.dup := $or.i1($i411.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $and.i32($i426,$i335);
  $i427.dup := $or.i1($i426.dup,$i335.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i428 := $xor.i32($i425,$i427);
  $i428.dup := $or.i1($i425.dup,$i427.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $add.i32($i424,$i428);
  $i429.dup := $or.i1($i424.dup,$i428.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i430 := $add.i32($i429,310598401);
  $i430.dup := $or.i1($i429.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i431 := $add.i32($i430,$i58);
  $i431.dup := $or.i1($i430.dup,$i58.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i431);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i432 := $lshr.i32($i412,2);
  $i432.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i433 := $shl.i32($i412,30);
  $i433.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i434 := $or.i32($i432,$i433);
  $i434.dup := $or.i1($i432.dup,$i433.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i435 := $lshr.i32($i412,13);
  $i435.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $shl.i32($i412,19);
  $i436.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $or.i32($i435,$i436);
  $i437.dup := $or.i1($i435.dup,$i436.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i438 := $xor.i32($i434,$i437);
  $i438.dup := $or.i1($i434.dup,$i437.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i439 := $lshr.i32($i412,22);
  $i439.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i440 := $shl.i32($i412,10);
  $i440.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i441 := $or.i32($i439,$i440);
  $i441.dup := $or.i1($i439.dup,$i440.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i442 := $xor.i32($i438,$i441);
  $i442.dup := $or.i1($i438.dup,$i441.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i443 := $and.i32($i412,$i374);
  $i443.dup := $or.i1($i412.dup,$i374.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i444 := $and.i32($i412,$i336);
  $i444.dup := $or.i1($i412.dup,$i336.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i445 := $xor.i32($i443,$i444);
  $i445.dup := $or.i1($i443.dup,$i444.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i446 := $and.i32($i374,$i336);
  $i446.dup := $or.i1($i374.dup,$i336.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i447 := $xor.i32($i445,$i446);
  $i447.dup := $or.i1($i445.dup,$i446.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $add.i32($i442,$i447);
  $i448.dup := $or.i1($i442.dup,$i447.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i448);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i449 := $add.i32($i298,$i431);
  $i449.dup := $or.i1($i298.dup,$i431.dup);
  call {:cexpr "e"} boogie_si_record_i32($i449);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i450 := $add.i32($i431,$i448);
  $i450.dup := $or.i1($i431.dup,$i448.dup);
  call {:cexpr "a"} boogie_si_record_i32($i450);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i451 := $lshr.i32($i449,6);
  $i451.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $shl.i32($i449,26);
  $i452.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i453 := $or.i32($i451,$i452);
  $i453.dup := $or.i1($i451.dup,$i452.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i454 := $lshr.i32($i449,11);
  $i454.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i455 := $shl.i32($i449,21);
  $i455.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i456 := $or.i32($i454,$i455);
  $i456.dup := $or.i1($i454.dup,$i455.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i457 := $xor.i32($i453,$i456);
  $i457.dup := $or.i1($i453.dup,$i456.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i458 := $lshr.i32($i449,25);
  $i458.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i459 := $shl.i32($i449,7);
  $i459.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i460 := $or.i32($i458,$i459);
  $i460.dup := $or.i1($i458.dup,$i459.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i461 := $xor.i32($i457,$i460);
  $i461.dup := $or.i1($i457.dup,$i460.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i462 := $add.i32($i335,$i461);
  $i462.dup := $or.i1($i335.dup,$i461.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i463 := $and.i32($i449,$i411);
  $i463.dup := $or.i1($i449.dup,$i411.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i464 := $xor.i32($i449,$sub.i32(0,1));
  $i464.dup := $or.i1($i449.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i465 := $and.i32($i464,$i373);
  $i465.dup := $or.i1($i464.dup,$i373.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i466 := $xor.i32($i463,$i465);
  $i466.dup := $or.i1($i463.dup,$i465.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i462,$i466);
  $i467.dup := $or.i1($i462.dup,$i466.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i468 := $add.i32($i467,607225278);
  $i468.dup := $or.i1($i467.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i469 := $add.i32($i468,$i60);
  $i469.dup := $or.i1($i468.dup,$i60.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i469);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i470 := $lshr.i32($i450,2);
  $i470.dup := $or.i1($i450.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i471 := $shl.i32($i450,30);
  $i471.dup := $or.i1($i450.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i472 := $or.i32($i470,$i471);
  $i472.dup := $or.i1($i470.dup,$i471.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i473 := $lshr.i32($i450,13);
  $i473.dup := $or.i1($i450.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i474 := $shl.i32($i450,19);
  $i474.dup := $or.i1($i450.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i475 := $or.i32($i473,$i474);
  $i475.dup := $or.i1($i473.dup,$i474.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i476 := $xor.i32($i472,$i475);
  $i476.dup := $or.i1($i472.dup,$i475.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i477 := $lshr.i32($i450,22);
  $i477.dup := $or.i1($i450.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i478 := $shl.i32($i450,10);
  $i478.dup := $or.i1($i450.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i479 := $or.i32($i477,$i478);
  $i479.dup := $or.i1($i477.dup,$i478.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i480 := $xor.i32($i476,$i479);
  $i480.dup := $or.i1($i476.dup,$i479.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i481 := $and.i32($i450,$i412);
  $i481.dup := $or.i1($i450.dup,$i412.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i482 := $and.i32($i450,$i374);
  $i482.dup := $or.i1($i450.dup,$i374.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i483 := $xor.i32($i481,$i482);
  $i483.dup := $or.i1($i481.dup,$i482.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i484 := $and.i32($i412,$i374);
  $i484.dup := $or.i1($i412.dup,$i374.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i485 := $xor.i32($i483,$i484);
  $i485.dup := $or.i1($i483.dup,$i484.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i486 := $add.i32($i480,$i485);
  $i486.dup := $or.i1($i480.dup,$i485.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i486);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i487 := $add.i32($i336,$i469);
  $i487.dup := $or.i1($i336.dup,$i469.dup);
  call {:cexpr "e"} boogie_si_record_i32($i487);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 114, 5} true;
  assume {:verifier.code 0} true;
  $i488 := $add.i32($i469,$i486);
  $i488.dup := $or.i1($i469.dup,$i486.dup);
  call {:cexpr "a"} boogie_si_record_i32($i488);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i489 := $lshr.i32($i487,6);
  $i489.dup := $or.i1($i487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i490 := $shl.i32($i487,26);
  $i490.dup := $or.i1($i487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i491 := $or.i32($i489,$i490);
  $i491.dup := $or.i1($i489.dup,$i490.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i492 := $lshr.i32($i487,11);
  $i492.dup := $or.i1($i487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i493 := $shl.i32($i487,21);
  $i493.dup := $or.i1($i487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i494 := $or.i32($i492,$i493);
  $i494.dup := $or.i1($i492.dup,$i493.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i495 := $xor.i32($i491,$i494);
  $i495.dup := $or.i1($i491.dup,$i494.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i496 := $lshr.i32($i487,25);
  $i496.dup := $or.i1($i487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i497 := $shl.i32($i487,7);
  $i497.dup := $or.i1($i487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i498 := $or.i32($i496,$i497);
  $i498.dup := $or.i1($i496.dup,$i497.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i499 := $xor.i32($i495,$i498);
  $i499.dup := $or.i1($i495.dup,$i498.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i500 := $add.i32($i373,$i499);
  $i500.dup := $or.i1($i373.dup,$i499.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i501 := $and.i32($i487,$i449);
  $i501.dup := $or.i1($i487.dup,$i449.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i502 := $xor.i32($i487,$sub.i32(0,1));
  $i502.dup := $or.i1($i487.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i503 := $and.i32($i502,$i411);
  $i503.dup := $or.i1($i502.dup,$i411.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i504 := $xor.i32($i501,$i503);
  $i504.dup := $or.i1($i501.dup,$i503.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i505 := $add.i32($i500,$i504);
  $i505.dup := $or.i1($i500.dup,$i504.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i506 := $add.i32($i505,1426881987);
  $i506.dup := $or.i1($i505.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i507 := $add.i32($i506,$i62);
  $i507.dup := $or.i1($i506.dup,$i62.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i507);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i508 := $lshr.i32($i488,2);
  $i508.dup := $or.i1($i488.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i509 := $shl.i32($i488,30);
  $i509.dup := $or.i1($i488.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i510 := $or.i32($i508,$i509);
  $i510.dup := $or.i1($i508.dup,$i509.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i511 := $lshr.i32($i488,13);
  $i511.dup := $or.i1($i488.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i512 := $shl.i32($i488,19);
  $i512.dup := $or.i1($i488.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i513 := $or.i32($i511,$i512);
  $i513.dup := $or.i1($i511.dup,$i512.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i514 := $xor.i32($i510,$i513);
  $i514.dup := $or.i1($i510.dup,$i513.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i515 := $lshr.i32($i488,22);
  $i515.dup := $or.i1($i488.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i516 := $shl.i32($i488,10);
  $i516.dup := $or.i1($i488.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i517 := $or.i32($i515,$i516);
  $i517.dup := $or.i1($i515.dup,$i516.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i518 := $xor.i32($i514,$i517);
  $i518.dup := $or.i1($i514.dup,$i517.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i519 := $and.i32($i488,$i450);
  $i519.dup := $or.i1($i488.dup,$i450.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i520 := $and.i32($i488,$i412);
  $i520.dup := $or.i1($i488.dup,$i412.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i521 := $xor.i32($i519,$i520);
  $i521.dup := $or.i1($i519.dup,$i520.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i522 := $and.i32($i450,$i412);
  $i522.dup := $or.i1($i450.dup,$i412.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i523 := $xor.i32($i521,$i522);
  $i523.dup := $or.i1($i521.dup,$i522.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i524 := $add.i32($i518,$i523);
  $i524.dup := $or.i1($i518.dup,$i523.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i524);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i525 := $add.i32($i374,$i507);
  $i525.dup := $or.i1($i374.dup,$i507.dup);
  call {:cexpr "e"} boogie_si_record_i32($i525);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i526 := $add.i32($i507,$i524);
  $i526.dup := $or.i1($i507.dup,$i524.dup);
  call {:cexpr "a"} boogie_si_record_i32($i526);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i527 := $lshr.i32($i525,6);
  $i527.dup := $or.i1($i525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i528 := $shl.i32($i525,26);
  $i528.dup := $or.i1($i525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i529 := $or.i32($i527,$i528);
  $i529.dup := $or.i1($i527.dup,$i528.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i530 := $lshr.i32($i525,11);
  $i530.dup := $or.i1($i525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i531 := $shl.i32($i525,21);
  $i531.dup := $or.i1($i525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i532 := $or.i32($i530,$i531);
  $i532.dup := $or.i1($i530.dup,$i531.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i533 := $xor.i32($i529,$i532);
  $i533.dup := $or.i1($i529.dup,$i532.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i534 := $lshr.i32($i525,25);
  $i534.dup := $or.i1($i525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i535 := $shl.i32($i525,7);
  $i535.dup := $or.i1($i525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i536 := $or.i32($i534,$i535);
  $i536.dup := $or.i1($i534.dup,$i535.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i537 := $xor.i32($i533,$i536);
  $i537.dup := $or.i1($i533.dup,$i536.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i538 := $add.i32($i411,$i537);
  $i538.dup := $or.i1($i411.dup,$i537.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i539 := $and.i32($i525,$i487);
  $i539.dup := $or.i1($i525.dup,$i487.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i540 := $xor.i32($i525,$sub.i32(0,1));
  $i540.dup := $or.i1($i525.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i541 := $and.i32($i540,$i449);
  $i541.dup := $or.i1($i540.dup,$i449.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i542 := $xor.i32($i539,$i541);
  $i542.dup := $or.i1($i539.dup,$i541.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i543 := $add.i32($i538,$i542);
  $i543.dup := $or.i1($i538.dup,$i542.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i544 := $add.i32($i543,1925078388);
  $i544.dup := $or.i1($i543.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i545 := $add.i32($i544,$i64);
  $i545.dup := $or.i1($i544.dup,$i64.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i545);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i546 := $lshr.i32($i526,2);
  $i546.dup := $or.i1($i526.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i547 := $shl.i32($i526,30);
  $i547.dup := $or.i1($i526.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i548 := $or.i32($i546,$i547);
  $i548.dup := $or.i1($i546.dup,$i547.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i549 := $lshr.i32($i526,13);
  $i549.dup := $or.i1($i526.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i550 := $shl.i32($i526,19);
  $i550.dup := $or.i1($i526.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i551 := $or.i32($i549,$i550);
  $i551.dup := $or.i1($i549.dup,$i550.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i552 := $xor.i32($i548,$i551);
  $i552.dup := $or.i1($i548.dup,$i551.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i553 := $lshr.i32($i526,22);
  $i553.dup := $or.i1($i526.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i554 := $shl.i32($i526,10);
  $i554.dup := $or.i1($i526.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i555 := $or.i32($i553,$i554);
  $i555.dup := $or.i1($i553.dup,$i554.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i556 := $xor.i32($i552,$i555);
  $i556.dup := $or.i1($i552.dup,$i555.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i557 := $and.i32($i526,$i488);
  $i557.dup := $or.i1($i526.dup,$i488.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i558 := $and.i32($i526,$i450);
  $i558.dup := $or.i1($i526.dup,$i450.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i559 := $xor.i32($i557,$i558);
  $i559.dup := $or.i1($i557.dup,$i558.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i560 := $and.i32($i488,$i450);
  $i560.dup := $or.i1($i488.dup,$i450.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i561 := $xor.i32($i559,$i560);
  $i561.dup := $or.i1($i559.dup,$i560.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i562 := $add.i32($i556,$i561);
  $i562.dup := $or.i1($i556.dup,$i561.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i562);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i563 := $add.i32($i412,$i545);
  $i563.dup := $or.i1($i412.dup,$i545.dup);
  call {:cexpr "e"} boogie_si_record_i32($i563);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 116, 5} true;
  assume {:verifier.code 0} true;
  $i564 := $add.i32($i545,$i562);
  $i564.dup := $or.i1($i545.dup,$i562.dup);
  call {:cexpr "a"} boogie_si_record_i32($i564);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i565 := $lshr.i32($i563,6);
  $i565.dup := $or.i1($i563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i566 := $shl.i32($i563,26);
  $i566.dup := $or.i1($i563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i567 := $or.i32($i565,$i566);
  $i567.dup := $or.i1($i565.dup,$i566.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i568 := $lshr.i32($i563,11);
  $i568.dup := $or.i1($i563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i569 := $shl.i32($i563,21);
  $i569.dup := $or.i1($i563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i570 := $or.i32($i568,$i569);
  $i570.dup := $or.i1($i568.dup,$i569.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i571 := $xor.i32($i567,$i570);
  $i571.dup := $or.i1($i567.dup,$i570.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i572 := $lshr.i32($i563,25);
  $i572.dup := $or.i1($i563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i573 := $shl.i32($i563,7);
  $i573.dup := $or.i1($i563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i574 := $or.i32($i572,$i573);
  $i574.dup := $or.i1($i572.dup,$i573.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i575 := $xor.i32($i571,$i574);
  $i575.dup := $or.i1($i571.dup,$i574.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i576 := $add.i32($i449,$i575);
  $i576.dup := $or.i1($i449.dup,$i575.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i577 := $and.i32($i563,$i525);
  $i577.dup := $or.i1($i563.dup,$i525.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i578 := $xor.i32($i563,$sub.i32(0,1));
  $i578.dup := $or.i1($i563.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i579 := $and.i32($i578,$i487);
  $i579.dup := $or.i1($i578.dup,$i487.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i580 := $xor.i32($i577,$i579);
  $i580.dup := $or.i1($i577.dup,$i579.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i581 := $add.i32($i576,$i580);
  $i581.dup := $or.i1($i576.dup,$i580.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i582 := $add.i32($i581,2162078206);
  $i582.dup := $or.i1($i581.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i583 := $add.i32($i582,$i66);
  $i583.dup := $or.i1($i582.dup,$i66.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i583);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i584 := $lshr.i32($i564,2);
  $i584.dup := $or.i1($i564.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i585 := $shl.i32($i564,30);
  $i585.dup := $or.i1($i564.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i586 := $or.i32($i584,$i585);
  $i586.dup := $or.i1($i584.dup,$i585.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i587 := $lshr.i32($i564,13);
  $i587.dup := $or.i1($i564.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i588 := $shl.i32($i564,19);
  $i588.dup := $or.i1($i564.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i589 := $or.i32($i587,$i588);
  $i589.dup := $or.i1($i587.dup,$i588.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i590 := $xor.i32($i586,$i589);
  $i590.dup := $or.i1($i586.dup,$i589.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i591 := $lshr.i32($i564,22);
  $i591.dup := $or.i1($i564.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i592 := $shl.i32($i564,10);
  $i592.dup := $or.i1($i564.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i593 := $or.i32($i591,$i592);
  $i593.dup := $or.i1($i591.dup,$i592.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i594 := $xor.i32($i590,$i593);
  $i594.dup := $or.i1($i590.dup,$i593.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i595 := $and.i32($i564,$i526);
  $i595.dup := $or.i1($i564.dup,$i526.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i596 := $and.i32($i564,$i488);
  $i596.dup := $or.i1($i564.dup,$i488.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i597 := $xor.i32($i595,$i596);
  $i597.dup := $or.i1($i595.dup,$i596.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i598 := $and.i32($i526,$i488);
  $i598.dup := $or.i1($i526.dup,$i488.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i599 := $xor.i32($i597,$i598);
  $i599.dup := $or.i1($i597.dup,$i598.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i600 := $add.i32($i594,$i599);
  $i600.dup := $or.i1($i594.dup,$i599.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i600);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i601 := $add.i32($i450,$i583);
  $i601.dup := $or.i1($i450.dup,$i583.dup);
  call {:cexpr "e"} boogie_si_record_i32($i601);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 117, 5} true;
  assume {:verifier.code 0} true;
  $i602 := $add.i32($i583,$i600);
  $i602.dup := $or.i1($i583.dup,$i600.dup);
  call {:cexpr "a"} boogie_si_record_i32($i602);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i603 := $lshr.i32($i601,6);
  $i603.dup := $or.i1($i601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i604 := $shl.i32($i601,26);
  $i604.dup := $or.i1($i601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i605 := $or.i32($i603,$i604);
  $i605.dup := $or.i1($i603.dup,$i604.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i606 := $lshr.i32($i601,11);
  $i606.dup := $or.i1($i601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i607 := $shl.i32($i601,21);
  $i607.dup := $or.i1($i601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i608 := $or.i32($i606,$i607);
  $i608.dup := $or.i1($i606.dup,$i607.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i609 := $xor.i32($i605,$i608);
  $i609.dup := $or.i1($i605.dup,$i608.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i610 := $lshr.i32($i601,25);
  $i610.dup := $or.i1($i601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i611 := $shl.i32($i601,7);
  $i611.dup := $or.i1($i601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i612 := $or.i32($i610,$i611);
  $i612.dup := $or.i1($i610.dup,$i611.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i613 := $xor.i32($i609,$i612);
  $i613.dup := $or.i1($i609.dup,$i612.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i614 := $add.i32($i487,$i613);
  $i614.dup := $or.i1($i487.dup,$i613.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i615 := $and.i32($i601,$i563);
  $i615.dup := $or.i1($i601.dup,$i563.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i616 := $xor.i32($i601,$sub.i32(0,1));
  $i616.dup := $or.i1($i601.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i617 := $and.i32($i616,$i525);
  $i617.dup := $or.i1($i616.dup,$i525.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i618 := $xor.i32($i615,$i617);
  $i618.dup := $or.i1($i615.dup,$i617.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i619 := $add.i32($i614,$i618);
  $i619.dup := $or.i1($i614.dup,$i618.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i620 := $add.i32($i619,2614888103);
  $i620.dup := $or.i1($i619.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i621 := $add.i32($i620,$i68);
  $i621.dup := $or.i1($i620.dup,$i68.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i621);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i622 := $lshr.i32($i602,2);
  $i622.dup := $or.i1($i602.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i623 := $shl.i32($i602,30);
  $i623.dup := $or.i1($i602.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i624 := $or.i32($i622,$i623);
  $i624.dup := $or.i1($i622.dup,$i623.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i625 := $lshr.i32($i602,13);
  $i625.dup := $or.i1($i602.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i626 := $shl.i32($i602,19);
  $i626.dup := $or.i1($i602.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i627 := $or.i32($i625,$i626);
  $i627.dup := $or.i1($i625.dup,$i626.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i628 := $xor.i32($i624,$i627);
  $i628.dup := $or.i1($i624.dup,$i627.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i629 := $lshr.i32($i602,22);
  $i629.dup := $or.i1($i602.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i630 := $shl.i32($i602,10);
  $i630.dup := $or.i1($i602.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i631 := $or.i32($i629,$i630);
  $i631.dup := $or.i1($i629.dup,$i630.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i632 := $xor.i32($i628,$i631);
  $i632.dup := $or.i1($i628.dup,$i631.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i633 := $and.i32($i602,$i564);
  $i633.dup := $or.i1($i602.dup,$i564.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i634 := $and.i32($i602,$i526);
  $i634.dup := $or.i1($i602.dup,$i526.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i635 := $xor.i32($i633,$i634);
  $i635.dup := $or.i1($i633.dup,$i634.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i636 := $and.i32($i564,$i526);
  $i636.dup := $or.i1($i564.dup,$i526.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i637 := $xor.i32($i635,$i636);
  $i637.dup := $or.i1($i635.dup,$i636.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i638 := $add.i32($i632,$i637);
  $i638.dup := $or.i1($i632.dup,$i637.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i638);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i639 := $add.i32($i488,$i621);
  $i639.dup := $or.i1($i488.dup,$i621.dup);
  call {:cexpr "e"} boogie_si_record_i32($i639);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 118, 5} true;
  assume {:verifier.code 0} true;
  $i640 := $add.i32($i621,$i638);
  $i640.dup := $or.i1($i621.dup,$i638.dup);
  call {:cexpr "a"} boogie_si_record_i32($i640);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i641 := $lshr.i32($i639,6);
  $i641.dup := $or.i1($i639.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i642 := $shl.i32($i639,26);
  $i642.dup := $or.i1($i639.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i643 := $or.i32($i641,$i642);
  $i643.dup := $or.i1($i641.dup,$i642.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i644 := $lshr.i32($i639,11);
  $i644.dup := $or.i1($i639.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i645 := $shl.i32($i639,21);
  $i645.dup := $or.i1($i639.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i646 := $or.i32($i644,$i645);
  $i646.dup := $or.i1($i644.dup,$i645.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i647 := $xor.i32($i643,$i646);
  $i647.dup := $or.i1($i643.dup,$i646.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i648 := $lshr.i32($i639,25);
  $i648.dup := $or.i1($i639.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i649 := $shl.i32($i639,7);
  $i649.dup := $or.i1($i639.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i650 := $or.i32($i648,$i649);
  $i650.dup := $or.i1($i648.dup,$i649.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i651 := $xor.i32($i647,$i650);
  $i651.dup := $or.i1($i647.dup,$i650.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i652 := $add.i32($i525,$i651);
  $i652.dup := $or.i1($i525.dup,$i651.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i653 := $and.i32($i639,$i601);
  $i653.dup := $or.i1($i639.dup,$i601.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i654 := $xor.i32($i639,$sub.i32(0,1));
  $i654.dup := $or.i1($i639.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i655 := $and.i32($i654,$i563);
  $i655.dup := $or.i1($i654.dup,$i563.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i656 := $xor.i32($i653,$i655);
  $i656.dup := $or.i1($i653.dup,$i655.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i657 := $add.i32($i652,$i656);
  $i657.dup := $or.i1($i652.dup,$i656.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i658 := $add.i32($i657,3248222580);
  $i658.dup := $or.i1($i657.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i659 := $add.i32($i658,$i70);
  $i659.dup := $or.i1($i658.dup,$i70.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i659);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i660 := $lshr.i32($i640,2);
  $i660.dup := $or.i1($i640.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i661 := $shl.i32($i640,30);
  $i661.dup := $or.i1($i640.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i662 := $or.i32($i660,$i661);
  $i662.dup := $or.i1($i660.dup,$i661.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i663 := $lshr.i32($i640,13);
  $i663.dup := $or.i1($i640.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i664 := $shl.i32($i640,19);
  $i664.dup := $or.i1($i640.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i665 := $or.i32($i663,$i664);
  $i665.dup := $or.i1($i663.dup,$i664.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i666 := $xor.i32($i662,$i665);
  $i666.dup := $or.i1($i662.dup,$i665.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i667 := $lshr.i32($i640,22);
  $i667.dup := $or.i1($i640.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i668 := $shl.i32($i640,10);
  $i668.dup := $or.i1($i640.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i669 := $or.i32($i667,$i668);
  $i669.dup := $or.i1($i667.dup,$i668.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i670 := $xor.i32($i666,$i669);
  $i670.dup := $or.i1($i666.dup,$i669.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i671 := $and.i32($i640,$i602);
  $i671.dup := $or.i1($i640.dup,$i602.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i672 := $and.i32($i640,$i564);
  $i672.dup := $or.i1($i640.dup,$i564.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i673 := $xor.i32($i671,$i672);
  $i673.dup := $or.i1($i671.dup,$i672.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i674 := $and.i32($i602,$i564);
  $i674.dup := $or.i1($i602.dup,$i564.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i675 := $xor.i32($i673,$i674);
  $i675.dup := $or.i1($i673.dup,$i674.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i32($i670,$i675);
  $i676.dup := $or.i1($i670.dup,$i675.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i676);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i677 := $add.i32($i526,$i659);
  $i677.dup := $or.i1($i526.dup,$i659.dup);
  call {:cexpr "e"} boogie_si_record_i32($i677);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i678 := $add.i32($i659,$i676);
  $i678.dup := $or.i1($i659.dup,$i676.dup);
  call {:cexpr "a"} boogie_si_record_i32($i678);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i679 := $lshr.i32($i68,17);
  $i679.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i680 := $shl.i32($i68,15);
  $i680.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i681 := $or.i32($i679,$i680);
  $i681.dup := $or.i1($i679.dup,$i680.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i682 := $lshr.i32($i68,19);
  $i682.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i683 := $shl.i32($i68,13);
  $i683.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i684 := $or.i32($i682,$i683);
  $i684.dup := $or.i1($i682.dup,$i683.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i685 := $xor.i32($i681,$i684);
  $i685.dup := $or.i1($i681.dup,$i684.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i686 := $lshr.i32($i68,10);
  $i686.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i687 := $xor.i32($i685,$i686);
  $i687.dup := $or.i1($i685.dup,$i686.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i688 := $add.i32($i687,$i58);
  $i688.dup := $or.i1($i687.dup,$i58.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i689 := $lshr.i32($i42,7);
  $i689.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i690 := $shl.i32($i42,25);
  $i690.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i691 := $or.i32($i689,$i690);
  $i691.dup := $or.i1($i689.dup,$i690.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i692 := $lshr.i32($i42,18);
  $i692.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i693 := $shl.i32($i42,14);
  $i693.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i694 := $or.i32($i692,$i693);
  $i694.dup := $or.i1($i692.dup,$i693.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i695 := $xor.i32($i691,$i694);
  $i695.dup := $or.i1($i691.dup,$i694.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i696 := $lshr.i32($i42,3);
  $i696.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i697 := $xor.i32($i695,$i696);
  $i697.dup := $or.i1($i695.dup,$i696.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i698 := $add.i32($i688,$i697);
  $i698.dup := $or.i1($i688.dup,$i697.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i699 := $add.i32($i698,$i40);
  $i699.dup := $or.i1($i698.dup,$i40.dup);
  call {:cexpr "w0"} boogie_si_record_i32($i699);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i700 := $lshr.i32($i70,17);
  $i700.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i701 := $shl.i32($i70,15);
  $i701.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i702 := $or.i32($i700,$i701);
  $i702.dup := $or.i1($i700.dup,$i701.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i703 := $lshr.i32($i70,19);
  $i703.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i704 := $shl.i32($i70,13);
  $i704.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i705 := $or.i32($i703,$i704);
  $i705.dup := $or.i1($i703.dup,$i704.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i706 := $xor.i32($i702,$i705);
  $i706.dup := $or.i1($i702.dup,$i705.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i707 := $lshr.i32($i70,10);
  $i707.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i708 := $xor.i32($i706,$i707);
  $i708.dup := $or.i1($i706.dup,$i707.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i709 := $add.i32($i708,$i60);
  $i709.dup := $or.i1($i708.dup,$i60.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i710 := $lshr.i32($i44,7);
  $i710.dup := $or.i1($i44.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i711 := $shl.i32($i44,25);
  $i711.dup := $or.i1($i44.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i712 := $or.i32($i710,$i711);
  $i712.dup := $or.i1($i710.dup,$i711.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i713 := $lshr.i32($i44,18);
  $i713.dup := $or.i1($i44.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i714 := $shl.i32($i44,14);
  $i714.dup := $or.i1($i44.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i715 := $or.i32($i713,$i714);
  $i715.dup := $or.i1($i713.dup,$i714.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i716 := $xor.i32($i712,$i715);
  $i716.dup := $or.i1($i712.dup,$i715.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i717 := $lshr.i32($i44,3);
  $i717.dup := $or.i1($i44.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i718 := $xor.i32($i716,$i717);
  $i718.dup := $or.i1($i716.dup,$i717.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i719 := $add.i32($i709,$i718);
  $i719.dup := $or.i1($i709.dup,$i718.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i720 := $add.i32($i719,$i42);
  $i720.dup := $or.i1($i719.dup,$i42.dup);
  call {:cexpr "w1"} boogie_si_record_i32($i720);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i721 := $lshr.i32($i699,17);
  $i721.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i722 := $shl.i32($i699,15);
  $i722.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i723 := $or.i32($i721,$i722);
  $i723.dup := $or.i1($i721.dup,$i722.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i724 := $lshr.i32($i699,19);
  $i724.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i725 := $shl.i32($i699,13);
  $i725.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i726 := $or.i32($i724,$i725);
  $i726.dup := $or.i1($i724.dup,$i725.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i727 := $xor.i32($i723,$i726);
  $i727.dup := $or.i1($i723.dup,$i726.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i728 := $lshr.i32($i699,10);
  $i728.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i729 := $xor.i32($i727,$i728);
  $i729.dup := $or.i1($i727.dup,$i728.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i730 := $add.i32($i729,$i62);
  $i730.dup := $or.i1($i729.dup,$i62.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i731 := $lshr.i32($i46,7);
  $i731.dup := $or.i1($i46.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i732 := $shl.i32($i46,25);
  $i732.dup := $or.i1($i46.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i733 := $or.i32($i731,$i732);
  $i733.dup := $or.i1($i731.dup,$i732.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i734 := $lshr.i32($i46,18);
  $i734.dup := $or.i1($i46.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i735 := $shl.i32($i46,14);
  $i735.dup := $or.i1($i46.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i736 := $or.i32($i734,$i735);
  $i736.dup := $or.i1($i734.dup,$i735.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i737 := $xor.i32($i733,$i736);
  $i737.dup := $or.i1($i733.dup,$i736.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i738 := $lshr.i32($i46,3);
  $i738.dup := $or.i1($i46.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i739 := $xor.i32($i737,$i738);
  $i739.dup := $or.i1($i737.dup,$i738.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i740 := $add.i32($i730,$i739);
  $i740.dup := $or.i1($i730.dup,$i739.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i741 := $add.i32($i740,$i44);
  $i741.dup := $or.i1($i740.dup,$i44.dup);
  call {:cexpr "w2"} boogie_si_record_i32($i741);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i742 := $lshr.i32($i720,17);
  $i742.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i743 := $shl.i32($i720,15);
  $i743.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i744 := $or.i32($i742,$i743);
  $i744.dup := $or.i1($i742.dup,$i743.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i745 := $lshr.i32($i720,19);
  $i745.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i746 := $shl.i32($i720,13);
  $i746.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i747 := $or.i32($i745,$i746);
  $i747.dup := $or.i1($i745.dup,$i746.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i748 := $xor.i32($i744,$i747);
  $i748.dup := $or.i1($i744.dup,$i747.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i749 := $lshr.i32($i720,10);
  $i749.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i750 := $xor.i32($i748,$i749);
  $i750.dup := $or.i1($i748.dup,$i749.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i751 := $add.i32($i750,$i64);
  $i751.dup := $or.i1($i750.dup,$i64.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i752 := $lshr.i32($i48,7);
  $i752.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i753 := $shl.i32($i48,25);
  $i753.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i754 := $or.i32($i752,$i753);
  $i754.dup := $or.i1($i752.dup,$i753.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i755 := $lshr.i32($i48,18);
  $i755.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i756 := $shl.i32($i48,14);
  $i756.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i757 := $or.i32($i755,$i756);
  $i757.dup := $or.i1($i755.dup,$i756.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i758 := $xor.i32($i754,$i757);
  $i758.dup := $or.i1($i754.dup,$i757.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i759 := $lshr.i32($i48,3);
  $i759.dup := $or.i1($i48.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i760 := $xor.i32($i758,$i759);
  $i760.dup := $or.i1($i758.dup,$i759.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i761 := $add.i32($i751,$i760);
  $i761.dup := $or.i1($i751.dup,$i760.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i762 := $add.i32($i761,$i46);
  $i762.dup := $or.i1($i761.dup,$i46.dup);
  call {:cexpr "w3"} boogie_si_record_i32($i762);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i763 := $lshr.i32($i741,17);
  $i763.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i764 := $shl.i32($i741,15);
  $i764.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i765 := $or.i32($i763,$i764);
  $i765.dup := $or.i1($i763.dup,$i764.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i766 := $lshr.i32($i741,19);
  $i766.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i767 := $shl.i32($i741,13);
  $i767.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i768 := $or.i32($i766,$i767);
  $i768.dup := $or.i1($i766.dup,$i767.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i769 := $xor.i32($i765,$i768);
  $i769.dup := $or.i1($i765.dup,$i768.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i770 := $lshr.i32($i741,10);
  $i770.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i771 := $xor.i32($i769,$i770);
  $i771.dup := $or.i1($i769.dup,$i770.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i772 := $add.i32($i771,$i66);
  $i772.dup := $or.i1($i771.dup,$i66.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i773 := $lshr.i32($i50,7);
  $i773.dup := $or.i1($i50.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i774 := $shl.i32($i50,25);
  $i774.dup := $or.i1($i50.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i775 := $or.i32($i773,$i774);
  $i775.dup := $or.i1($i773.dup,$i774.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i776 := $lshr.i32($i50,18);
  $i776.dup := $or.i1($i50.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i777 := $shl.i32($i50,14);
  $i777.dup := $or.i1($i50.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i778 := $or.i32($i776,$i777);
  $i778.dup := $or.i1($i776.dup,$i777.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i779 := $xor.i32($i775,$i778);
  $i779.dup := $or.i1($i775.dup,$i778.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i780 := $lshr.i32($i50,3);
  $i780.dup := $or.i1($i50.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i781 := $xor.i32($i779,$i780);
  $i781.dup := $or.i1($i779.dup,$i780.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i782 := $add.i32($i772,$i781);
  $i782.dup := $or.i1($i772.dup,$i781.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i783 := $add.i32($i782,$i48);
  $i783.dup := $or.i1($i782.dup,$i48.dup);
  call {:cexpr "w4"} boogie_si_record_i32($i783);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i784 := $lshr.i32($i762,17);
  $i784.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i785 := $shl.i32($i762,15);
  $i785.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i786 := $or.i32($i784,$i785);
  $i786.dup := $or.i1($i784.dup,$i785.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i787 := $lshr.i32($i762,19);
  $i787.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i788 := $shl.i32($i762,13);
  $i788.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i789 := $or.i32($i787,$i788);
  $i789.dup := $or.i1($i787.dup,$i788.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i790 := $xor.i32($i786,$i789);
  $i790.dup := $or.i1($i786.dup,$i789.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i791 := $lshr.i32($i762,10);
  $i791.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i792 := $xor.i32($i790,$i791);
  $i792.dup := $or.i1($i790.dup,$i791.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i793 := $add.i32($i792,$i68);
  $i793.dup := $or.i1($i792.dup,$i68.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i794 := $lshr.i32($i52,7);
  $i794.dup := $or.i1($i52.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i795 := $shl.i32($i52,25);
  $i795.dup := $or.i1($i52.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i796 := $or.i32($i794,$i795);
  $i796.dup := $or.i1($i794.dup,$i795.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i797 := $lshr.i32($i52,18);
  $i797.dup := $or.i1($i52.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i798 := $shl.i32($i52,14);
  $i798.dup := $or.i1($i52.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i799 := $or.i32($i797,$i798);
  $i799.dup := $or.i1($i797.dup,$i798.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i800 := $xor.i32($i796,$i799);
  $i800.dup := $or.i1($i796.dup,$i799.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i801 := $lshr.i32($i52,3);
  $i801.dup := $or.i1($i52.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i802 := $xor.i32($i800,$i801);
  $i802.dup := $or.i1($i800.dup,$i801.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i803 := $add.i32($i793,$i802);
  $i803.dup := $or.i1($i793.dup,$i802.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i804 := $add.i32($i803,$i50);
  $i804.dup := $or.i1($i803.dup,$i50.dup);
  call {:cexpr "w5"} boogie_si_record_i32($i804);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i805 := $lshr.i32($i783,17);
  $i805.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i806 := $shl.i32($i783,15);
  $i806.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i807 := $or.i32($i805,$i806);
  $i807.dup := $or.i1($i805.dup,$i806.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i808 := $lshr.i32($i783,19);
  $i808.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i809 := $shl.i32($i783,13);
  $i809.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i810 := $or.i32($i808,$i809);
  $i810.dup := $or.i1($i808.dup,$i809.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i811 := $xor.i32($i807,$i810);
  $i811.dup := $or.i1($i807.dup,$i810.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i812 := $lshr.i32($i783,10);
  $i812.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i813 := $xor.i32($i811,$i812);
  $i813.dup := $or.i1($i811.dup,$i812.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i814 := $add.i32($i813,$i70);
  $i814.dup := $or.i1($i813.dup,$i70.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i815 := $lshr.i32($i54,7);
  $i815.dup := $or.i1($i54.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i816 := $shl.i32($i54,25);
  $i816.dup := $or.i1($i54.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i817 := $or.i32($i815,$i816);
  $i817.dup := $or.i1($i815.dup,$i816.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i818 := $lshr.i32($i54,18);
  $i818.dup := $or.i1($i54.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i819 := $shl.i32($i54,14);
  $i819.dup := $or.i1($i54.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i820 := $or.i32($i818,$i819);
  $i820.dup := $or.i1($i818.dup,$i819.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i821 := $xor.i32($i817,$i820);
  $i821.dup := $or.i1($i817.dup,$i820.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i822 := $lshr.i32($i54,3);
  $i822.dup := $or.i1($i54.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i823 := $xor.i32($i821,$i822);
  $i823.dup := $or.i1($i821.dup,$i822.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i824 := $add.i32($i814,$i823);
  $i824.dup := $or.i1($i814.dup,$i823.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i825 := $add.i32($i824,$i52);
  $i825.dup := $or.i1($i824.dup,$i52.dup);
  call {:cexpr "w6"} boogie_si_record_i32($i825);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i826 := $lshr.i32($i804,17);
  $i826.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i827 := $shl.i32($i804,15);
  $i827.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i828 := $or.i32($i826,$i827);
  $i828.dup := $or.i1($i826.dup,$i827.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i829 := $lshr.i32($i804,19);
  $i829.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i830 := $shl.i32($i804,13);
  $i830.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i831 := $or.i32($i829,$i830);
  $i831.dup := $or.i1($i829.dup,$i830.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i832 := $xor.i32($i828,$i831);
  $i832.dup := $or.i1($i828.dup,$i831.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i833 := $lshr.i32($i804,10);
  $i833.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i834 := $xor.i32($i832,$i833);
  $i834.dup := $or.i1($i832.dup,$i833.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i835 := $add.i32($i834,$i699);
  $i835.dup := $or.i1($i834.dup,$i699.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i836 := $lshr.i32($i56,7);
  $i836.dup := $or.i1($i56.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i837 := $shl.i32($i56,25);
  $i837.dup := $or.i1($i56.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i838 := $or.i32($i836,$i837);
  $i838.dup := $or.i1($i836.dup,$i837.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i839 := $lshr.i32($i56,18);
  $i839.dup := $or.i1($i56.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i840 := $shl.i32($i56,14);
  $i840.dup := $or.i1($i56.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i841 := $or.i32($i839,$i840);
  $i841.dup := $or.i1($i839.dup,$i840.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i842 := $xor.i32($i838,$i841);
  $i842.dup := $or.i1($i838.dup,$i841.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i843 := $lshr.i32($i56,3);
  $i843.dup := $or.i1($i56.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i844 := $xor.i32($i842,$i843);
  $i844.dup := $or.i1($i842.dup,$i843.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i845 := $add.i32($i835,$i844);
  $i845.dup := $or.i1($i835.dup,$i844.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i846 := $add.i32($i845,$i54);
  $i846.dup := $or.i1($i845.dup,$i54.dup);
  call {:cexpr "w7"} boogie_si_record_i32($i846);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i847 := $lshr.i32($i825,17);
  $i847.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i848 := $shl.i32($i825,15);
  $i848.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i849 := $or.i32($i847,$i848);
  $i849.dup := $or.i1($i847.dup,$i848.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i850 := $lshr.i32($i825,19);
  $i850.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i851 := $shl.i32($i825,13);
  $i851.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i852 := $or.i32($i850,$i851);
  $i852.dup := $or.i1($i850.dup,$i851.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i853 := $xor.i32($i849,$i852);
  $i853.dup := $or.i1($i849.dup,$i852.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i854 := $lshr.i32($i825,10);
  $i854.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i855 := $xor.i32($i853,$i854);
  $i855.dup := $or.i1($i853.dup,$i854.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i856 := $add.i32($i855,$i720);
  $i856.dup := $or.i1($i855.dup,$i720.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i857 := $lshr.i32($i58,7);
  $i857.dup := $or.i1($i58.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i858 := $shl.i32($i58,25);
  $i858.dup := $or.i1($i58.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i859 := $or.i32($i857,$i858);
  $i859.dup := $or.i1($i857.dup,$i858.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i860 := $lshr.i32($i58,18);
  $i860.dup := $or.i1($i58.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i861 := $shl.i32($i58,14);
  $i861.dup := $or.i1($i58.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i862 := $or.i32($i860,$i861);
  $i862.dup := $or.i1($i860.dup,$i861.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i863 := $xor.i32($i859,$i862);
  $i863.dup := $or.i1($i859.dup,$i862.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i864 := $lshr.i32($i58,3);
  $i864.dup := $or.i1($i58.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i865 := $xor.i32($i863,$i864);
  $i865.dup := $or.i1($i863.dup,$i864.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i866 := $add.i32($i856,$i865);
  $i866.dup := $or.i1($i856.dup,$i865.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i867 := $add.i32($i866,$i56);
  $i867.dup := $or.i1($i866.dup,$i56.dup);
  call {:cexpr "w8"} boogie_si_record_i32($i867);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i868 := $lshr.i32($i846,17);
  $i868.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i869 := $shl.i32($i846,15);
  $i869.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i870 := $or.i32($i868,$i869);
  $i870.dup := $or.i1($i868.dup,$i869.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i871 := $lshr.i32($i846,19);
  $i871.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i872 := $shl.i32($i846,13);
  $i872.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i873 := $or.i32($i871,$i872);
  $i873.dup := $or.i1($i871.dup,$i872.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i874 := $xor.i32($i870,$i873);
  $i874.dup := $or.i1($i870.dup,$i873.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i875 := $lshr.i32($i846,10);
  $i875.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i876 := $xor.i32($i874,$i875);
  $i876.dup := $or.i1($i874.dup,$i875.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i877 := $add.i32($i876,$i741);
  $i877.dup := $or.i1($i876.dup,$i741.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i878 := $lshr.i32($i60,7);
  $i878.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i879 := $shl.i32($i60,25);
  $i879.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i880 := $or.i32($i878,$i879);
  $i880.dup := $or.i1($i878.dup,$i879.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i881 := $lshr.i32($i60,18);
  $i881.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i882 := $shl.i32($i60,14);
  $i882.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i883 := $or.i32($i881,$i882);
  $i883.dup := $or.i1($i881.dup,$i882.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i884 := $xor.i32($i880,$i883);
  $i884.dup := $or.i1($i880.dup,$i883.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i885 := $lshr.i32($i60,3);
  $i885.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i886 := $xor.i32($i884,$i885);
  $i886.dup := $or.i1($i884.dup,$i885.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i887 := $add.i32($i877,$i886);
  $i887.dup := $or.i1($i877.dup,$i886.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i888 := $add.i32($i887,$i58);
  $i888.dup := $or.i1($i887.dup,$i58.dup);
  call {:cexpr "w9"} boogie_si_record_i32($i888);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i889 := $lshr.i32($i867,17);
  $i889.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i890 := $shl.i32($i867,15);
  $i890.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i891 := $or.i32($i889,$i890);
  $i891.dup := $or.i1($i889.dup,$i890.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i892 := $lshr.i32($i867,19);
  $i892.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i893 := $shl.i32($i867,13);
  $i893.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i894 := $or.i32($i892,$i893);
  $i894.dup := $or.i1($i892.dup,$i893.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i895 := $xor.i32($i891,$i894);
  $i895.dup := $or.i1($i891.dup,$i894.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i896 := $lshr.i32($i867,10);
  $i896.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i897 := $xor.i32($i895,$i896);
  $i897.dup := $or.i1($i895.dup,$i896.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i898 := $add.i32($i897,$i762);
  $i898.dup := $or.i1($i897.dup,$i762.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i899 := $lshr.i32($i62,7);
  $i899.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i900 := $shl.i32($i62,25);
  $i900.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i901 := $or.i32($i899,$i900);
  $i901.dup := $or.i1($i899.dup,$i900.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i902 := $lshr.i32($i62,18);
  $i902.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i903 := $shl.i32($i62,14);
  $i903.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i904 := $or.i32($i902,$i903);
  $i904.dup := $or.i1($i902.dup,$i903.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i905 := $xor.i32($i901,$i904);
  $i905.dup := $or.i1($i901.dup,$i904.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i906 := $lshr.i32($i62,3);
  $i906.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i907 := $xor.i32($i905,$i906);
  $i907.dup := $or.i1($i905.dup,$i906.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i908 := $add.i32($i898,$i907);
  $i908.dup := $or.i1($i898.dup,$i907.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i909 := $add.i32($i908,$i60);
  $i909.dup := $or.i1($i908.dup,$i60.dup);
  call {:cexpr "w10"} boogie_si_record_i32($i909);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i910 := $lshr.i32($i888,17);
  $i910.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i911 := $shl.i32($i888,15);
  $i911.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i912 := $or.i32($i910,$i911);
  $i912.dup := $or.i1($i910.dup,$i911.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i913 := $lshr.i32($i888,19);
  $i913.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i914 := $shl.i32($i888,13);
  $i914.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i915 := $or.i32($i913,$i914);
  $i915.dup := $or.i1($i913.dup,$i914.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i916 := $xor.i32($i912,$i915);
  $i916.dup := $or.i1($i912.dup,$i915.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i917 := $lshr.i32($i888,10);
  $i917.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i918 := $xor.i32($i916,$i917);
  $i918.dup := $or.i1($i916.dup,$i917.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i919 := $add.i32($i918,$i783);
  $i919.dup := $or.i1($i918.dup,$i783.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i920 := $lshr.i32($i64,7);
  $i920.dup := $or.i1($i64.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i921 := $shl.i32($i64,25);
  $i921.dup := $or.i1($i64.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i922 := $or.i32($i920,$i921);
  $i922.dup := $or.i1($i920.dup,$i921.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i923 := $lshr.i32($i64,18);
  $i923.dup := $or.i1($i64.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i924 := $shl.i32($i64,14);
  $i924.dup := $or.i1($i64.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i925 := $or.i32($i923,$i924);
  $i925.dup := $or.i1($i923.dup,$i924.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i926 := $xor.i32($i922,$i925);
  $i926.dup := $or.i1($i922.dup,$i925.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i927 := $lshr.i32($i64,3);
  $i927.dup := $or.i1($i64.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i928 := $xor.i32($i926,$i927);
  $i928.dup := $or.i1($i926.dup,$i927.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i929 := $add.i32($i919,$i928);
  $i929.dup := $or.i1($i919.dup,$i928.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i930 := $add.i32($i929,$i62);
  $i930.dup := $or.i1($i929.dup,$i62.dup);
  call {:cexpr "w11"} boogie_si_record_i32($i930);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i931 := $lshr.i32($i909,17);
  $i931.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i932 := $shl.i32($i909,15);
  $i932.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i933 := $or.i32($i931,$i932);
  $i933.dup := $or.i1($i931.dup,$i932.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i934 := $lshr.i32($i909,19);
  $i934.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i935 := $shl.i32($i909,13);
  $i935.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i936 := $or.i32($i934,$i935);
  $i936.dup := $or.i1($i934.dup,$i935.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i937 := $xor.i32($i933,$i936);
  $i937.dup := $or.i1($i933.dup,$i936.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i938 := $lshr.i32($i909,10);
  $i938.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i939 := $xor.i32($i937,$i938);
  $i939.dup := $or.i1($i937.dup,$i938.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i940 := $add.i32($i939,$i804);
  $i940.dup := $or.i1($i939.dup,$i804.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i941 := $lshr.i32($i66,7);
  $i941.dup := $or.i1($i66.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i942 := $shl.i32($i66,25);
  $i942.dup := $or.i1($i66.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i943 := $or.i32($i941,$i942);
  $i943.dup := $or.i1($i941.dup,$i942.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i944 := $lshr.i32($i66,18);
  $i944.dup := $or.i1($i66.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i945 := $shl.i32($i66,14);
  $i945.dup := $or.i1($i66.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i946 := $or.i32($i944,$i945);
  $i946.dup := $or.i1($i944.dup,$i945.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i947 := $xor.i32($i943,$i946);
  $i947.dup := $or.i1($i943.dup,$i946.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i948 := $lshr.i32($i66,3);
  $i948.dup := $or.i1($i66.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i949 := $xor.i32($i947,$i948);
  $i949.dup := $or.i1($i947.dup,$i948.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i950 := $add.i32($i940,$i949);
  $i950.dup := $or.i1($i940.dup,$i949.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i951 := $add.i32($i950,$i64);
  $i951.dup := $or.i1($i950.dup,$i64.dup);
  call {:cexpr "w12"} boogie_si_record_i32($i951);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i952 := $lshr.i32($i930,17);
  $i952.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i953 := $shl.i32($i930,15);
  $i953.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i954 := $or.i32($i952,$i953);
  $i954.dup := $or.i1($i952.dup,$i953.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i955 := $lshr.i32($i930,19);
  $i955.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i956 := $shl.i32($i930,13);
  $i956.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i957 := $or.i32($i955,$i956);
  $i957.dup := $or.i1($i955.dup,$i956.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i958 := $xor.i32($i954,$i957);
  $i958.dup := $or.i1($i954.dup,$i957.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i959 := $lshr.i32($i930,10);
  $i959.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i960 := $xor.i32($i958,$i959);
  $i960.dup := $or.i1($i958.dup,$i959.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i961 := $add.i32($i960,$i825);
  $i961.dup := $or.i1($i960.dup,$i825.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i962 := $lshr.i32($i68,7);
  $i962.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i963 := $shl.i32($i68,25);
  $i963.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i964 := $or.i32($i962,$i963);
  $i964.dup := $or.i1($i962.dup,$i963.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i965 := $lshr.i32($i68,18);
  $i965.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i966 := $shl.i32($i68,14);
  $i966.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i967 := $or.i32($i965,$i966);
  $i967.dup := $or.i1($i965.dup,$i966.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i968 := $xor.i32($i964,$i967);
  $i968.dup := $or.i1($i964.dup,$i967.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i969 := $lshr.i32($i68,3);
  $i969.dup := $or.i1($i68.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i970 := $xor.i32($i968,$i969);
  $i970.dup := $or.i1($i968.dup,$i969.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i971 := $add.i32($i961,$i970);
  $i971.dup := $or.i1($i961.dup,$i970.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i972 := $add.i32($i971,$i66);
  $i972.dup := $or.i1($i971.dup,$i66.dup);
  call {:cexpr "w13"} boogie_si_record_i32($i972);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i973 := $lshr.i32($i951,17);
  $i973.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i974 := $shl.i32($i951,15);
  $i974.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i975 := $or.i32($i973,$i974);
  $i975.dup := $or.i1($i973.dup,$i974.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i976 := $lshr.i32($i951,19);
  $i976.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i977 := $shl.i32($i951,13);
  $i977.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i978 := $or.i32($i976,$i977);
  $i978.dup := $or.i1($i976.dup,$i977.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i979 := $xor.i32($i975,$i978);
  $i979.dup := $or.i1($i975.dup,$i978.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i980 := $lshr.i32($i951,10);
  $i980.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i981 := $xor.i32($i979,$i980);
  $i981.dup := $or.i1($i979.dup,$i980.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i982 := $add.i32($i981,$i846);
  $i982.dup := $or.i1($i981.dup,$i846.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i983 := $lshr.i32($i70,7);
  $i983.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i984 := $shl.i32($i70,25);
  $i984.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i985 := $or.i32($i983,$i984);
  $i985.dup := $or.i1($i983.dup,$i984.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i986 := $lshr.i32($i70,18);
  $i986.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i987 := $shl.i32($i70,14);
  $i987.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i988 := $or.i32($i986,$i987);
  $i988.dup := $or.i1($i986.dup,$i987.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i989 := $xor.i32($i985,$i988);
  $i989.dup := $or.i1($i985.dup,$i988.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i990 := $lshr.i32($i70,3);
  $i990.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i991 := $xor.i32($i989,$i990);
  $i991.dup := $or.i1($i989.dup,$i990.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i992 := $add.i32($i982,$i991);
  $i992.dup := $or.i1($i982.dup,$i991.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i993 := $add.i32($i992,$i68);
  $i993.dup := $or.i1($i992.dup,$i68.dup);
  call {:cexpr "w14"} boogie_si_record_i32($i993);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i994 := $lshr.i32($i972,17);
  $i994.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i995 := $shl.i32($i972,15);
  $i995.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i996 := $or.i32($i994,$i995);
  $i996.dup := $or.i1($i994.dup,$i995.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i997 := $lshr.i32($i972,19);
  $i997.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i998 := $shl.i32($i972,13);
  $i998.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i999 := $or.i32($i997,$i998);
  $i999.dup := $or.i1($i997.dup,$i998.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1000 := $xor.i32($i996,$i999);
  $i1000.dup := $or.i1($i996.dup,$i999.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1001 := $lshr.i32($i972,10);
  $i1001.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1002 := $xor.i32($i1000,$i1001);
  $i1002.dup := $or.i1($i1000.dup,$i1001.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1003 := $add.i32($i1002,$i867);
  $i1003.dup := $or.i1($i1002.dup,$i867.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1004 := $lshr.i32($i699,7);
  $i1004.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1005 := $shl.i32($i699,25);
  $i1005.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1006 := $or.i32($i1004,$i1005);
  $i1006.dup := $or.i1($i1004.dup,$i1005.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1007 := $lshr.i32($i699,18);
  $i1007.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1008 := $shl.i32($i699,14);
  $i1008.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1009 := $or.i32($i1007,$i1008);
  $i1009.dup := $or.i1($i1007.dup,$i1008.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1010 := $xor.i32($i1006,$i1009);
  $i1010.dup := $or.i1($i1006.dup,$i1009.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1011 := $lshr.i32($i699,3);
  $i1011.dup := $or.i1($i699.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1012 := $xor.i32($i1010,$i1011);
  $i1012.dup := $or.i1($i1010.dup,$i1011.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1013 := $add.i32($i1003,$i1012);
  $i1013.dup := $or.i1($i1003.dup,$i1012.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 121, 5} true;
  assume {:verifier.code 0} true;
  $i1014 := $add.i32($i1013,$i70);
  $i1014.dup := $or.i1($i1013.dup,$i70.dup);
  call {:cexpr "w15"} boogie_si_record_i32($i1014);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1015 := $lshr.i32($i677,6);
  $i1015.dup := $or.i1($i677.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1016 := $shl.i32($i677,26);
  $i1016.dup := $or.i1($i677.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1017 := $or.i32($i1015,$i1016);
  $i1017.dup := $or.i1($i1015.dup,$i1016.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1018 := $lshr.i32($i677,11);
  $i1018.dup := $or.i1($i677.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1019 := $shl.i32($i677,21);
  $i1019.dup := $or.i1($i677.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1020 := $or.i32($i1018,$i1019);
  $i1020.dup := $or.i1($i1018.dup,$i1019.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1021 := $xor.i32($i1017,$i1020);
  $i1021.dup := $or.i1($i1017.dup,$i1020.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1022 := $lshr.i32($i677,25);
  $i1022.dup := $or.i1($i677.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1023 := $shl.i32($i677,7);
  $i1023.dup := $or.i1($i677.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1024 := $or.i32($i1022,$i1023);
  $i1024.dup := $or.i1($i1022.dup,$i1023.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1025 := $xor.i32($i1021,$i1024);
  $i1025.dup := $or.i1($i1021.dup,$i1024.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1026 := $add.i32($i563,$i1025);
  $i1026.dup := $or.i1($i563.dup,$i1025.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1027 := $and.i32($i677,$i639);
  $i1027.dup := $or.i1($i677.dup,$i639.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1028 := $xor.i32($i677,$sub.i32(0,1));
  $i1028.dup := $or.i1($i677.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1029 := $and.i32($i1028,$i601);
  $i1029.dup := $or.i1($i1028.dup,$i601.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1030 := $xor.i32($i1027,$i1029);
  $i1030.dup := $or.i1($i1027.dup,$i1029.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1031 := $add.i32($i1026,$i1030);
  $i1031.dup := $or.i1($i1026.dup,$i1030.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1032 := $add.i32($i1031,3835390401);
  $i1032.dup := $or.i1($i1031.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1033 := $add.i32($i1032,$i699);
  $i1033.dup := $or.i1($i1032.dup,$i699.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1033);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1034 := $lshr.i32($i678,2);
  $i1034.dup := $or.i1($i678.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1035 := $shl.i32($i678,30);
  $i1035.dup := $or.i1($i678.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1036 := $or.i32($i1034,$i1035);
  $i1036.dup := $or.i1($i1034.dup,$i1035.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1037 := $lshr.i32($i678,13);
  $i1037.dup := $or.i1($i678.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1038 := $shl.i32($i678,19);
  $i1038.dup := $or.i1($i678.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1039 := $or.i32($i1037,$i1038);
  $i1039.dup := $or.i1($i1037.dup,$i1038.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1040 := $xor.i32($i1036,$i1039);
  $i1040.dup := $or.i1($i1036.dup,$i1039.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1041 := $lshr.i32($i678,22);
  $i1041.dup := $or.i1($i678.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1042 := $shl.i32($i678,10);
  $i1042.dup := $or.i1($i678.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1043 := $or.i32($i1041,$i1042);
  $i1043.dup := $or.i1($i1041.dup,$i1042.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1044 := $xor.i32($i1040,$i1043);
  $i1044.dup := $or.i1($i1040.dup,$i1043.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1045 := $and.i32($i678,$i640);
  $i1045.dup := $or.i1($i678.dup,$i640.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1046 := $and.i32($i678,$i602);
  $i1046.dup := $or.i1($i678.dup,$i602.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1047 := $xor.i32($i1045,$i1046);
  $i1047.dup := $or.i1($i1045.dup,$i1046.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1048 := $and.i32($i640,$i602);
  $i1048.dup := $or.i1($i640.dup,$i602.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1049 := $xor.i32($i1047,$i1048);
  $i1049.dup := $or.i1($i1047.dup,$i1048.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1050 := $add.i32($i1044,$i1049);
  $i1050.dup := $or.i1($i1044.dup,$i1049.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1050);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1051 := $add.i32($i564,$i1033);
  $i1051.dup := $or.i1($i564.dup,$i1033.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1051);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 123, 5} true;
  assume {:verifier.code 0} true;
  $i1052 := $add.i32($i1033,$i1050);
  $i1052.dup := $or.i1($i1033.dup,$i1050.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1052);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1053 := $lshr.i32($i1051,6);
  $i1053.dup := $or.i1($i1051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1054 := $shl.i32($i1051,26);
  $i1054.dup := $or.i1($i1051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1055 := $or.i32($i1053,$i1054);
  $i1055.dup := $or.i1($i1053.dup,$i1054.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1056 := $lshr.i32($i1051,11);
  $i1056.dup := $or.i1($i1051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1057 := $shl.i32($i1051,21);
  $i1057.dup := $or.i1($i1051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1058 := $or.i32($i1056,$i1057);
  $i1058.dup := $or.i1($i1056.dup,$i1057.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1059 := $xor.i32($i1055,$i1058);
  $i1059.dup := $or.i1($i1055.dup,$i1058.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1060 := $lshr.i32($i1051,25);
  $i1060.dup := $or.i1($i1051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1061 := $shl.i32($i1051,7);
  $i1061.dup := $or.i1($i1051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1062 := $or.i32($i1060,$i1061);
  $i1062.dup := $or.i1($i1060.dup,$i1061.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1063 := $xor.i32($i1059,$i1062);
  $i1063.dup := $or.i1($i1059.dup,$i1062.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1064 := $add.i32($i601,$i1063);
  $i1064.dup := $or.i1($i601.dup,$i1063.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1065 := $and.i32($i1051,$i677);
  $i1065.dup := $or.i1($i1051.dup,$i677.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1066 := $xor.i32($i1051,$sub.i32(0,1));
  $i1066.dup := $or.i1($i1051.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1067 := $and.i32($i1066,$i639);
  $i1067.dup := $or.i1($i1066.dup,$i639.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1068 := $xor.i32($i1065,$i1067);
  $i1068.dup := $or.i1($i1065.dup,$i1067.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1069 := $add.i32($i1064,$i1068);
  $i1069.dup := $or.i1($i1064.dup,$i1068.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1070 := $add.i32($i1069,4022224774);
  $i1070.dup := $or.i1($i1069.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1071 := $add.i32($i1070,$i720);
  $i1071.dup := $or.i1($i1070.dup,$i720.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1071);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1072 := $lshr.i32($i1052,2);
  $i1072.dup := $or.i1($i1052.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1073 := $shl.i32($i1052,30);
  $i1073.dup := $or.i1($i1052.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1074 := $or.i32($i1072,$i1073);
  $i1074.dup := $or.i1($i1072.dup,$i1073.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1075 := $lshr.i32($i1052,13);
  $i1075.dup := $or.i1($i1052.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1076 := $shl.i32($i1052,19);
  $i1076.dup := $or.i1($i1052.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1077 := $or.i32($i1075,$i1076);
  $i1077.dup := $or.i1($i1075.dup,$i1076.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1078 := $xor.i32($i1074,$i1077);
  $i1078.dup := $or.i1($i1074.dup,$i1077.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1079 := $lshr.i32($i1052,22);
  $i1079.dup := $or.i1($i1052.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1080 := $shl.i32($i1052,10);
  $i1080.dup := $or.i1($i1052.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1081 := $or.i32($i1079,$i1080);
  $i1081.dup := $or.i1($i1079.dup,$i1080.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1082 := $xor.i32($i1078,$i1081);
  $i1082.dup := $or.i1($i1078.dup,$i1081.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1083 := $and.i32($i1052,$i678);
  $i1083.dup := $or.i1($i1052.dup,$i678.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1084 := $and.i32($i1052,$i640);
  $i1084.dup := $or.i1($i1052.dup,$i640.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1085 := $xor.i32($i1083,$i1084);
  $i1085.dup := $or.i1($i1083.dup,$i1084.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1086 := $and.i32($i678,$i640);
  $i1086.dup := $or.i1($i678.dup,$i640.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1087 := $xor.i32($i1085,$i1086);
  $i1087.dup := $or.i1($i1085.dup,$i1086.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1088 := $add.i32($i1082,$i1087);
  $i1088.dup := $or.i1($i1082.dup,$i1087.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1088);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1089 := $add.i32($i602,$i1071);
  $i1089.dup := $or.i1($i602.dup,$i1071.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1089);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i1090 := $add.i32($i1071,$i1088);
  $i1090.dup := $or.i1($i1071.dup,$i1088.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1090);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1091 := $lshr.i32($i1089,6);
  $i1091.dup := $or.i1($i1089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1092 := $shl.i32($i1089,26);
  $i1092.dup := $or.i1($i1089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1093 := $or.i32($i1091,$i1092);
  $i1093.dup := $or.i1($i1091.dup,$i1092.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1094 := $lshr.i32($i1089,11);
  $i1094.dup := $or.i1($i1089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1095 := $shl.i32($i1089,21);
  $i1095.dup := $or.i1($i1089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1096 := $or.i32($i1094,$i1095);
  $i1096.dup := $or.i1($i1094.dup,$i1095.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1097 := $xor.i32($i1093,$i1096);
  $i1097.dup := $or.i1($i1093.dup,$i1096.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1098 := $lshr.i32($i1089,25);
  $i1098.dup := $or.i1($i1089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1099 := $shl.i32($i1089,7);
  $i1099.dup := $or.i1($i1089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1100 := $or.i32($i1098,$i1099);
  $i1100.dup := $or.i1($i1098.dup,$i1099.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1101 := $xor.i32($i1097,$i1100);
  $i1101.dup := $or.i1($i1097.dup,$i1100.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1102 := $add.i32($i639,$i1101);
  $i1102.dup := $or.i1($i639.dup,$i1101.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1103 := $and.i32($i1089,$i1051);
  $i1103.dup := $or.i1($i1089.dup,$i1051.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1104 := $xor.i32($i1089,$sub.i32(0,1));
  $i1104.dup := $or.i1($i1089.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1105 := $and.i32($i1104,$i677);
  $i1105.dup := $or.i1($i1104.dup,$i677.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1106 := $xor.i32($i1103,$i1105);
  $i1106.dup := $or.i1($i1103.dup,$i1105.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1107 := $add.i32($i1102,$i1106);
  $i1107.dup := $or.i1($i1102.dup,$i1106.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1108 := $add.i32($i1107,264347078);
  $i1108.dup := $or.i1($i1107.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1109 := $add.i32($i1108,$i741);
  $i1109.dup := $or.i1($i1108.dup,$i741.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1109);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1110 := $lshr.i32($i1090,2);
  $i1110.dup := $or.i1($i1090.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1111 := $shl.i32($i1090,30);
  $i1111.dup := $or.i1($i1090.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1112 := $or.i32($i1110,$i1111);
  $i1112.dup := $or.i1($i1110.dup,$i1111.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1113 := $lshr.i32($i1090,13);
  $i1113.dup := $or.i1($i1090.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1114 := $shl.i32($i1090,19);
  $i1114.dup := $or.i1($i1090.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1115 := $or.i32($i1113,$i1114);
  $i1115.dup := $or.i1($i1113.dup,$i1114.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1116 := $xor.i32($i1112,$i1115);
  $i1116.dup := $or.i1($i1112.dup,$i1115.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1117 := $lshr.i32($i1090,22);
  $i1117.dup := $or.i1($i1090.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1118 := $shl.i32($i1090,10);
  $i1118.dup := $or.i1($i1090.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1119 := $or.i32($i1117,$i1118);
  $i1119.dup := $or.i1($i1117.dup,$i1118.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1120 := $xor.i32($i1116,$i1119);
  $i1120.dup := $or.i1($i1116.dup,$i1119.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1121 := $and.i32($i1090,$i1052);
  $i1121.dup := $or.i1($i1090.dup,$i1052.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1122 := $and.i32($i1090,$i678);
  $i1122.dup := $or.i1($i1090.dup,$i678.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1123 := $xor.i32($i1121,$i1122);
  $i1123.dup := $or.i1($i1121.dup,$i1122.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1124 := $and.i32($i1052,$i678);
  $i1124.dup := $or.i1($i1052.dup,$i678.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1125 := $xor.i32($i1123,$i1124);
  $i1125.dup := $or.i1($i1123.dup,$i1124.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1126 := $add.i32($i1120,$i1125);
  $i1126.dup := $or.i1($i1120.dup,$i1125.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1126);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1127 := $add.i32($i640,$i1109);
  $i1127.dup := $or.i1($i640.dup,$i1109.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1127);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 125, 5} true;
  assume {:verifier.code 0} true;
  $i1128 := $add.i32($i1109,$i1126);
  $i1128.dup := $or.i1($i1109.dup,$i1126.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1128);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1129 := $lshr.i32($i1127,6);
  $i1129.dup := $or.i1($i1127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1130 := $shl.i32($i1127,26);
  $i1130.dup := $or.i1($i1127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1131 := $or.i32($i1129,$i1130);
  $i1131.dup := $or.i1($i1129.dup,$i1130.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1132 := $lshr.i32($i1127,11);
  $i1132.dup := $or.i1($i1127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1133 := $shl.i32($i1127,21);
  $i1133.dup := $or.i1($i1127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1134 := $or.i32($i1132,$i1133);
  $i1134.dup := $or.i1($i1132.dup,$i1133.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1135 := $xor.i32($i1131,$i1134);
  $i1135.dup := $or.i1($i1131.dup,$i1134.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1136 := $lshr.i32($i1127,25);
  $i1136.dup := $or.i1($i1127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1137 := $shl.i32($i1127,7);
  $i1137.dup := $or.i1($i1127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1138 := $or.i32($i1136,$i1137);
  $i1138.dup := $or.i1($i1136.dup,$i1137.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1139 := $xor.i32($i1135,$i1138);
  $i1139.dup := $or.i1($i1135.dup,$i1138.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1140 := $add.i32($i677,$i1139);
  $i1140.dup := $or.i1($i677.dup,$i1139.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1141 := $and.i32($i1127,$i1089);
  $i1141.dup := $or.i1($i1127.dup,$i1089.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1142 := $xor.i32($i1127,$sub.i32(0,1));
  $i1142.dup := $or.i1($i1127.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1143 := $and.i32($i1142,$i1051);
  $i1143.dup := $or.i1($i1142.dup,$i1051.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1144 := $xor.i32($i1141,$i1143);
  $i1144.dup := $or.i1($i1141.dup,$i1143.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1145 := $add.i32($i1140,$i1144);
  $i1145.dup := $or.i1($i1140.dup,$i1144.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1146 := $add.i32($i1145,604807628);
  $i1146.dup := $or.i1($i1145.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1147 := $add.i32($i1146,$i762);
  $i1147.dup := $or.i1($i1146.dup,$i762.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1147);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1148 := $lshr.i32($i1128,2);
  $i1148.dup := $or.i1($i1128.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1149 := $shl.i32($i1128,30);
  $i1149.dup := $or.i1($i1128.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1150 := $or.i32($i1148,$i1149);
  $i1150.dup := $or.i1($i1148.dup,$i1149.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1151 := $lshr.i32($i1128,13);
  $i1151.dup := $or.i1($i1128.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1152 := $shl.i32($i1128,19);
  $i1152.dup := $or.i1($i1128.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1153 := $or.i32($i1151,$i1152);
  $i1153.dup := $or.i1($i1151.dup,$i1152.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1154 := $xor.i32($i1150,$i1153);
  $i1154.dup := $or.i1($i1150.dup,$i1153.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1155 := $lshr.i32($i1128,22);
  $i1155.dup := $or.i1($i1128.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1156 := $shl.i32($i1128,10);
  $i1156.dup := $or.i1($i1128.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1157 := $or.i32($i1155,$i1156);
  $i1157.dup := $or.i1($i1155.dup,$i1156.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1158 := $xor.i32($i1154,$i1157);
  $i1158.dup := $or.i1($i1154.dup,$i1157.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1159 := $and.i32($i1128,$i1090);
  $i1159.dup := $or.i1($i1128.dup,$i1090.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1160 := $and.i32($i1128,$i1052);
  $i1160.dup := $or.i1($i1128.dup,$i1052.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1161 := $xor.i32($i1159,$i1160);
  $i1161.dup := $or.i1($i1159.dup,$i1160.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1162 := $and.i32($i1090,$i1052);
  $i1162.dup := $or.i1($i1090.dup,$i1052.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1163 := $xor.i32($i1161,$i1162);
  $i1163.dup := $or.i1($i1161.dup,$i1162.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1164 := $add.i32($i1158,$i1163);
  $i1164.dup := $or.i1($i1158.dup,$i1163.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1164);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1165 := $add.i32($i678,$i1147);
  $i1165.dup := $or.i1($i678.dup,$i1147.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1165);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i1166 := $add.i32($i1147,$i1164);
  $i1166.dup := $or.i1($i1147.dup,$i1164.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1166);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1167 := $lshr.i32($i1165,6);
  $i1167.dup := $or.i1($i1165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1168 := $shl.i32($i1165,26);
  $i1168.dup := $or.i1($i1165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1169 := $or.i32($i1167,$i1168);
  $i1169.dup := $or.i1($i1167.dup,$i1168.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1170 := $lshr.i32($i1165,11);
  $i1170.dup := $or.i1($i1165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1171 := $shl.i32($i1165,21);
  $i1171.dup := $or.i1($i1165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1172 := $or.i32($i1170,$i1171);
  $i1172.dup := $or.i1($i1170.dup,$i1171.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1173 := $xor.i32($i1169,$i1172);
  $i1173.dup := $or.i1($i1169.dup,$i1172.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1174 := $lshr.i32($i1165,25);
  $i1174.dup := $or.i1($i1165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1175 := $shl.i32($i1165,7);
  $i1175.dup := $or.i1($i1165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1176 := $or.i32($i1174,$i1175);
  $i1176.dup := $or.i1($i1174.dup,$i1175.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1177 := $xor.i32($i1173,$i1176);
  $i1177.dup := $or.i1($i1173.dup,$i1176.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1178 := $add.i32($i1051,$i1177);
  $i1178.dup := $or.i1($i1051.dup,$i1177.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1179 := $and.i32($i1165,$i1127);
  $i1179.dup := $or.i1($i1165.dup,$i1127.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1180 := $xor.i32($i1165,$sub.i32(0,1));
  $i1180.dup := $or.i1($i1165.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1181 := $and.i32($i1180,$i1089);
  $i1181.dup := $or.i1($i1180.dup,$i1089.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1182 := $xor.i32($i1179,$i1181);
  $i1182.dup := $or.i1($i1179.dup,$i1181.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1183 := $add.i32($i1178,$i1182);
  $i1183.dup := $or.i1($i1178.dup,$i1182.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1184 := $add.i32($i1183,770255983);
  $i1184.dup := $or.i1($i1183.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1185 := $add.i32($i1184,$i783);
  $i1185.dup := $or.i1($i1184.dup,$i783.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1185);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1186 := $lshr.i32($i1166,2);
  $i1186.dup := $or.i1($i1166.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1187 := $shl.i32($i1166,30);
  $i1187.dup := $or.i1($i1166.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1188 := $or.i32($i1186,$i1187);
  $i1188.dup := $or.i1($i1186.dup,$i1187.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1189 := $lshr.i32($i1166,13);
  $i1189.dup := $or.i1($i1166.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1190 := $shl.i32($i1166,19);
  $i1190.dup := $or.i1($i1166.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1191 := $or.i32($i1189,$i1190);
  $i1191.dup := $or.i1($i1189.dup,$i1190.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1192 := $xor.i32($i1188,$i1191);
  $i1192.dup := $or.i1($i1188.dup,$i1191.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1193 := $lshr.i32($i1166,22);
  $i1193.dup := $or.i1($i1166.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1194 := $shl.i32($i1166,10);
  $i1194.dup := $or.i1($i1166.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1195 := $or.i32($i1193,$i1194);
  $i1195.dup := $or.i1($i1193.dup,$i1194.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1196 := $xor.i32($i1192,$i1195);
  $i1196.dup := $or.i1($i1192.dup,$i1195.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1197 := $and.i32($i1166,$i1128);
  $i1197.dup := $or.i1($i1166.dup,$i1128.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1198 := $and.i32($i1166,$i1090);
  $i1198.dup := $or.i1($i1166.dup,$i1090.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1199 := $xor.i32($i1197,$i1198);
  $i1199.dup := $or.i1($i1197.dup,$i1198.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1200 := $and.i32($i1128,$i1090);
  $i1200.dup := $or.i1($i1128.dup,$i1090.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1201 := $xor.i32($i1199,$i1200);
  $i1201.dup := $or.i1($i1199.dup,$i1200.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1202 := $add.i32($i1196,$i1201);
  $i1202.dup := $or.i1($i1196.dup,$i1201.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1202);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1203 := $add.i32($i1052,$i1185);
  $i1203.dup := $or.i1($i1052.dup,$i1185.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1203);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 127, 5} true;
  assume {:verifier.code 0} true;
  $i1204 := $add.i32($i1185,$i1202);
  $i1204.dup := $or.i1($i1185.dup,$i1202.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1204);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1205 := $lshr.i32($i1203,6);
  $i1205.dup := $or.i1($i1203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1206 := $shl.i32($i1203,26);
  $i1206.dup := $or.i1($i1203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1207 := $or.i32($i1205,$i1206);
  $i1207.dup := $or.i1($i1205.dup,$i1206.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1208 := $lshr.i32($i1203,11);
  $i1208.dup := $or.i1($i1203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1209 := $shl.i32($i1203,21);
  $i1209.dup := $or.i1($i1203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1210 := $or.i32($i1208,$i1209);
  $i1210.dup := $or.i1($i1208.dup,$i1209.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1211 := $xor.i32($i1207,$i1210);
  $i1211.dup := $or.i1($i1207.dup,$i1210.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1212 := $lshr.i32($i1203,25);
  $i1212.dup := $or.i1($i1203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1213 := $shl.i32($i1203,7);
  $i1213.dup := $or.i1($i1203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1214 := $or.i32($i1212,$i1213);
  $i1214.dup := $or.i1($i1212.dup,$i1213.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1215 := $xor.i32($i1211,$i1214);
  $i1215.dup := $or.i1($i1211.dup,$i1214.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1216 := $add.i32($i1089,$i1215);
  $i1216.dup := $or.i1($i1089.dup,$i1215.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1217 := $and.i32($i1203,$i1165);
  $i1217.dup := $or.i1($i1203.dup,$i1165.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1218 := $xor.i32($i1203,$sub.i32(0,1));
  $i1218.dup := $or.i1($i1203.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1219 := $and.i32($i1218,$i1127);
  $i1219.dup := $or.i1($i1218.dup,$i1127.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1220 := $xor.i32($i1217,$i1219);
  $i1220.dup := $or.i1($i1217.dup,$i1219.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1221 := $add.i32($i1216,$i1220);
  $i1221.dup := $or.i1($i1216.dup,$i1220.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1222 := $add.i32($i1221,1249150122);
  $i1222.dup := $or.i1($i1221.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1223 := $add.i32($i1222,$i804);
  $i1223.dup := $or.i1($i1222.dup,$i804.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1223);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1224 := $lshr.i32($i1204,2);
  $i1224.dup := $or.i1($i1204.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1225 := $shl.i32($i1204,30);
  $i1225.dup := $or.i1($i1204.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1226 := $or.i32($i1224,$i1225);
  $i1226.dup := $or.i1($i1224.dup,$i1225.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1227 := $lshr.i32($i1204,13);
  $i1227.dup := $or.i1($i1204.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1228 := $shl.i32($i1204,19);
  $i1228.dup := $or.i1($i1204.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1229 := $or.i32($i1227,$i1228);
  $i1229.dup := $or.i1($i1227.dup,$i1228.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1230 := $xor.i32($i1226,$i1229);
  $i1230.dup := $or.i1($i1226.dup,$i1229.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1231 := $lshr.i32($i1204,22);
  $i1231.dup := $or.i1($i1204.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1232 := $shl.i32($i1204,10);
  $i1232.dup := $or.i1($i1204.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1233 := $or.i32($i1231,$i1232);
  $i1233.dup := $or.i1($i1231.dup,$i1232.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1234 := $xor.i32($i1230,$i1233);
  $i1234.dup := $or.i1($i1230.dup,$i1233.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1235 := $and.i32($i1204,$i1166);
  $i1235.dup := $or.i1($i1204.dup,$i1166.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1236 := $and.i32($i1204,$i1128);
  $i1236.dup := $or.i1($i1204.dup,$i1128.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1237 := $xor.i32($i1235,$i1236);
  $i1237.dup := $or.i1($i1235.dup,$i1236.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1238 := $and.i32($i1166,$i1128);
  $i1238.dup := $or.i1($i1166.dup,$i1128.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1239 := $xor.i32($i1237,$i1238);
  $i1239.dup := $or.i1($i1237.dup,$i1238.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1240 := $add.i32($i1234,$i1239);
  $i1240.dup := $or.i1($i1234.dup,$i1239.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1240);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1241 := $add.i32($i1090,$i1223);
  $i1241.dup := $or.i1($i1090.dup,$i1223.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1241);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i1242 := $add.i32($i1223,$i1240);
  $i1242.dup := $or.i1($i1223.dup,$i1240.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1242);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1243 := $lshr.i32($i1241,6);
  $i1243.dup := $or.i1($i1241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1244 := $shl.i32($i1241,26);
  $i1244.dup := $or.i1($i1241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1245 := $or.i32($i1243,$i1244);
  $i1245.dup := $or.i1($i1243.dup,$i1244.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1246 := $lshr.i32($i1241,11);
  $i1246.dup := $or.i1($i1241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1247 := $shl.i32($i1241,21);
  $i1247.dup := $or.i1($i1241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1248 := $or.i32($i1246,$i1247);
  $i1248.dup := $or.i1($i1246.dup,$i1247.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1249 := $xor.i32($i1245,$i1248);
  $i1249.dup := $or.i1($i1245.dup,$i1248.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1250 := $lshr.i32($i1241,25);
  $i1250.dup := $or.i1($i1241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1251 := $shl.i32($i1241,7);
  $i1251.dup := $or.i1($i1241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1252 := $or.i32($i1250,$i1251);
  $i1252.dup := $or.i1($i1250.dup,$i1251.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1253 := $xor.i32($i1249,$i1252);
  $i1253.dup := $or.i1($i1249.dup,$i1252.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1254 := $add.i32($i1127,$i1253);
  $i1254.dup := $or.i1($i1127.dup,$i1253.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1255 := $and.i32($i1241,$i1203);
  $i1255.dup := $or.i1($i1241.dup,$i1203.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1256 := $xor.i32($i1241,$sub.i32(0,1));
  $i1256.dup := $or.i1($i1241.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1257 := $and.i32($i1256,$i1165);
  $i1257.dup := $or.i1($i1256.dup,$i1165.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1258 := $xor.i32($i1255,$i1257);
  $i1258.dup := $or.i1($i1255.dup,$i1257.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1259 := $add.i32($i1254,$i1258);
  $i1259.dup := $or.i1($i1254.dup,$i1258.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1260 := $add.i32($i1259,1555081692);
  $i1260.dup := $or.i1($i1259.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1261 := $add.i32($i1260,$i825);
  $i1261.dup := $or.i1($i1260.dup,$i825.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1261);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1262 := $lshr.i32($i1242,2);
  $i1262.dup := $or.i1($i1242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1263 := $shl.i32($i1242,30);
  $i1263.dup := $or.i1($i1242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1264 := $or.i32($i1262,$i1263);
  $i1264.dup := $or.i1($i1262.dup,$i1263.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1265 := $lshr.i32($i1242,13);
  $i1265.dup := $or.i1($i1242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1266 := $shl.i32($i1242,19);
  $i1266.dup := $or.i1($i1242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1267 := $or.i32($i1265,$i1266);
  $i1267.dup := $or.i1($i1265.dup,$i1266.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1268 := $xor.i32($i1264,$i1267);
  $i1268.dup := $or.i1($i1264.dup,$i1267.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1269 := $lshr.i32($i1242,22);
  $i1269.dup := $or.i1($i1242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1270 := $shl.i32($i1242,10);
  $i1270.dup := $or.i1($i1242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1271 := $or.i32($i1269,$i1270);
  $i1271.dup := $or.i1($i1269.dup,$i1270.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1272 := $xor.i32($i1268,$i1271);
  $i1272.dup := $or.i1($i1268.dup,$i1271.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1273 := $and.i32($i1242,$i1204);
  $i1273.dup := $or.i1($i1242.dup,$i1204.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1274 := $and.i32($i1242,$i1166);
  $i1274.dup := $or.i1($i1242.dup,$i1166.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1275 := $xor.i32($i1273,$i1274);
  $i1275.dup := $or.i1($i1273.dup,$i1274.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1276 := $and.i32($i1204,$i1166);
  $i1276.dup := $or.i1($i1204.dup,$i1166.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1277 := $xor.i32($i1275,$i1276);
  $i1277.dup := $or.i1($i1275.dup,$i1276.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1278 := $add.i32($i1272,$i1277);
  $i1278.dup := $or.i1($i1272.dup,$i1277.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1278);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1279 := $add.i32($i1128,$i1261);
  $i1279.dup := $or.i1($i1128.dup,$i1261.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1279);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 129, 5} true;
  assume {:verifier.code 0} true;
  $i1280 := $add.i32($i1261,$i1278);
  $i1280.dup := $or.i1($i1261.dup,$i1278.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1280);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1281 := $lshr.i32($i1279,6);
  $i1281.dup := $or.i1($i1279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1282 := $shl.i32($i1279,26);
  $i1282.dup := $or.i1($i1279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1283 := $or.i32($i1281,$i1282);
  $i1283.dup := $or.i1($i1281.dup,$i1282.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1284 := $lshr.i32($i1279,11);
  $i1284.dup := $or.i1($i1279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1285 := $shl.i32($i1279,21);
  $i1285.dup := $or.i1($i1279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1286 := $or.i32($i1284,$i1285);
  $i1286.dup := $or.i1($i1284.dup,$i1285.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1287 := $xor.i32($i1283,$i1286);
  $i1287.dup := $or.i1($i1283.dup,$i1286.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1288 := $lshr.i32($i1279,25);
  $i1288.dup := $or.i1($i1279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1289 := $shl.i32($i1279,7);
  $i1289.dup := $or.i1($i1279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1290 := $or.i32($i1288,$i1289);
  $i1290.dup := $or.i1($i1288.dup,$i1289.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1291 := $xor.i32($i1287,$i1290);
  $i1291.dup := $or.i1($i1287.dup,$i1290.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1292 := $add.i32($i1165,$i1291);
  $i1292.dup := $or.i1($i1165.dup,$i1291.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1293 := $and.i32($i1279,$i1241);
  $i1293.dup := $or.i1($i1279.dup,$i1241.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1294 := $xor.i32($i1279,$sub.i32(0,1));
  $i1294.dup := $or.i1($i1279.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1295 := $and.i32($i1294,$i1203);
  $i1295.dup := $or.i1($i1294.dup,$i1203.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1296 := $xor.i32($i1293,$i1295);
  $i1296.dup := $or.i1($i1293.dup,$i1295.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1297 := $add.i32($i1292,$i1296);
  $i1297.dup := $or.i1($i1292.dup,$i1296.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1298 := $add.i32($i1297,1996064986);
  $i1298.dup := $or.i1($i1297.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1299 := $add.i32($i1298,$i846);
  $i1299.dup := $or.i1($i1298.dup,$i846.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1299);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1300 := $lshr.i32($i1280,2);
  $i1300.dup := $or.i1($i1280.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1301 := $shl.i32($i1280,30);
  $i1301.dup := $or.i1($i1280.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1302 := $or.i32($i1300,$i1301);
  $i1302.dup := $or.i1($i1300.dup,$i1301.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1303 := $lshr.i32($i1280,13);
  $i1303.dup := $or.i1($i1280.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1304 := $shl.i32($i1280,19);
  $i1304.dup := $or.i1($i1280.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1305 := $or.i32($i1303,$i1304);
  $i1305.dup := $or.i1($i1303.dup,$i1304.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1306 := $xor.i32($i1302,$i1305);
  $i1306.dup := $or.i1($i1302.dup,$i1305.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1307 := $lshr.i32($i1280,22);
  $i1307.dup := $or.i1($i1280.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1308 := $shl.i32($i1280,10);
  $i1308.dup := $or.i1($i1280.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1309 := $or.i32($i1307,$i1308);
  $i1309.dup := $or.i1($i1307.dup,$i1308.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1310 := $xor.i32($i1306,$i1309);
  $i1310.dup := $or.i1($i1306.dup,$i1309.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1311 := $and.i32($i1280,$i1242);
  $i1311.dup := $or.i1($i1280.dup,$i1242.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1312 := $and.i32($i1280,$i1204);
  $i1312.dup := $or.i1($i1280.dup,$i1204.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1313 := $xor.i32($i1311,$i1312);
  $i1313.dup := $or.i1($i1311.dup,$i1312.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1314 := $and.i32($i1242,$i1204);
  $i1314.dup := $or.i1($i1242.dup,$i1204.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1315 := $xor.i32($i1313,$i1314);
  $i1315.dup := $or.i1($i1313.dup,$i1314.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1316 := $add.i32($i1310,$i1315);
  $i1316.dup := $or.i1($i1310.dup,$i1315.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1316);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1317 := $add.i32($i1166,$i1299);
  $i1317.dup := $or.i1($i1166.dup,$i1299.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1317);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i1318 := $add.i32($i1299,$i1316);
  $i1318.dup := $or.i1($i1299.dup,$i1316.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1318);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1319 := $lshr.i32($i1317,6);
  $i1319.dup := $or.i1($i1317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1320 := $shl.i32($i1317,26);
  $i1320.dup := $or.i1($i1317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1321 := $or.i32($i1319,$i1320);
  $i1321.dup := $or.i1($i1319.dup,$i1320.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1322 := $lshr.i32($i1317,11);
  $i1322.dup := $or.i1($i1317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1323 := $shl.i32($i1317,21);
  $i1323.dup := $or.i1($i1317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1324 := $or.i32($i1322,$i1323);
  $i1324.dup := $or.i1($i1322.dup,$i1323.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1325 := $xor.i32($i1321,$i1324);
  $i1325.dup := $or.i1($i1321.dup,$i1324.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1326 := $lshr.i32($i1317,25);
  $i1326.dup := $or.i1($i1317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1327 := $shl.i32($i1317,7);
  $i1327.dup := $or.i1($i1317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1328 := $or.i32($i1326,$i1327);
  $i1328.dup := $or.i1($i1326.dup,$i1327.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1329 := $xor.i32($i1325,$i1328);
  $i1329.dup := $or.i1($i1325.dup,$i1328.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1330 := $add.i32($i1203,$i1329);
  $i1330.dup := $or.i1($i1203.dup,$i1329.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1331 := $and.i32($i1317,$i1279);
  $i1331.dup := $or.i1($i1317.dup,$i1279.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1332 := $xor.i32($i1317,$sub.i32(0,1));
  $i1332.dup := $or.i1($i1317.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1333 := $and.i32($i1332,$i1241);
  $i1333.dup := $or.i1($i1332.dup,$i1241.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1334 := $xor.i32($i1331,$i1333);
  $i1334.dup := $or.i1($i1331.dup,$i1333.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1335 := $add.i32($i1330,$i1334);
  $i1335.dup := $or.i1($i1330.dup,$i1334.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1336 := $add.i32($i1335,2554220882);
  $i1336.dup := $or.i1($i1335.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1337 := $add.i32($i1336,$i867);
  $i1337.dup := $or.i1($i1336.dup,$i867.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1337);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1338 := $lshr.i32($i1318,2);
  $i1338.dup := $or.i1($i1318.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1339 := $shl.i32($i1318,30);
  $i1339.dup := $or.i1($i1318.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1340 := $or.i32($i1338,$i1339);
  $i1340.dup := $or.i1($i1338.dup,$i1339.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1341 := $lshr.i32($i1318,13);
  $i1341.dup := $or.i1($i1318.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1342 := $shl.i32($i1318,19);
  $i1342.dup := $or.i1($i1318.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1343 := $or.i32($i1341,$i1342);
  $i1343.dup := $or.i1($i1341.dup,$i1342.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1344 := $xor.i32($i1340,$i1343);
  $i1344.dup := $or.i1($i1340.dup,$i1343.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1345 := $lshr.i32($i1318,22);
  $i1345.dup := $or.i1($i1318.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1346 := $shl.i32($i1318,10);
  $i1346.dup := $or.i1($i1318.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1347 := $or.i32($i1345,$i1346);
  $i1347.dup := $or.i1($i1345.dup,$i1346.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1348 := $xor.i32($i1344,$i1347);
  $i1348.dup := $or.i1($i1344.dup,$i1347.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1349 := $and.i32($i1318,$i1280);
  $i1349.dup := $or.i1($i1318.dup,$i1280.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1350 := $and.i32($i1318,$i1242);
  $i1350.dup := $or.i1($i1318.dup,$i1242.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1351 := $xor.i32($i1349,$i1350);
  $i1351.dup := $or.i1($i1349.dup,$i1350.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1352 := $and.i32($i1280,$i1242);
  $i1352.dup := $or.i1($i1280.dup,$i1242.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1353 := $xor.i32($i1351,$i1352);
  $i1353.dup := $or.i1($i1351.dup,$i1352.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1354 := $add.i32($i1348,$i1353);
  $i1354.dup := $or.i1($i1348.dup,$i1353.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1354);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1355 := $add.i32($i1204,$i1337);
  $i1355.dup := $or.i1($i1204.dup,$i1337.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1355);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 131, 5} true;
  assume {:verifier.code 0} true;
  $i1356 := $add.i32($i1337,$i1354);
  $i1356.dup := $or.i1($i1337.dup,$i1354.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1356);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1357 := $lshr.i32($i1355,6);
  $i1357.dup := $or.i1($i1355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1358 := $shl.i32($i1355,26);
  $i1358.dup := $or.i1($i1355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1359 := $or.i32($i1357,$i1358);
  $i1359.dup := $or.i1($i1357.dup,$i1358.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1360 := $lshr.i32($i1355,11);
  $i1360.dup := $or.i1($i1355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1361 := $shl.i32($i1355,21);
  $i1361.dup := $or.i1($i1355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1362 := $or.i32($i1360,$i1361);
  $i1362.dup := $or.i1($i1360.dup,$i1361.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1363 := $xor.i32($i1359,$i1362);
  $i1363.dup := $or.i1($i1359.dup,$i1362.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1364 := $lshr.i32($i1355,25);
  $i1364.dup := $or.i1($i1355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1365 := $shl.i32($i1355,7);
  $i1365.dup := $or.i1($i1355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1366 := $or.i32($i1364,$i1365);
  $i1366.dup := $or.i1($i1364.dup,$i1365.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1367 := $xor.i32($i1363,$i1366);
  $i1367.dup := $or.i1($i1363.dup,$i1366.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1368 := $add.i32($i1241,$i1367);
  $i1368.dup := $or.i1($i1241.dup,$i1367.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1369 := $and.i32($i1355,$i1317);
  $i1369.dup := $or.i1($i1355.dup,$i1317.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1370 := $xor.i32($i1355,$sub.i32(0,1));
  $i1370.dup := $or.i1($i1355.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1371 := $and.i32($i1370,$i1279);
  $i1371.dup := $or.i1($i1370.dup,$i1279.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1372 := $xor.i32($i1369,$i1371);
  $i1372.dup := $or.i1($i1369.dup,$i1371.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1373 := $add.i32($i1368,$i1372);
  $i1373.dup := $or.i1($i1368.dup,$i1372.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1374 := $add.i32($i1373,2821834349);
  $i1374.dup := $or.i1($i1373.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1375 := $add.i32($i1374,$i888);
  $i1375.dup := $or.i1($i1374.dup,$i888.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1375);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1376 := $lshr.i32($i1356,2);
  $i1376.dup := $or.i1($i1356.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1377 := $shl.i32($i1356,30);
  $i1377.dup := $or.i1($i1356.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1378 := $or.i32($i1376,$i1377);
  $i1378.dup := $or.i1($i1376.dup,$i1377.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1379 := $lshr.i32($i1356,13);
  $i1379.dup := $or.i1($i1356.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1380 := $shl.i32($i1356,19);
  $i1380.dup := $or.i1($i1356.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1381 := $or.i32($i1379,$i1380);
  $i1381.dup := $or.i1($i1379.dup,$i1380.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1382 := $xor.i32($i1378,$i1381);
  $i1382.dup := $or.i1($i1378.dup,$i1381.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1383 := $lshr.i32($i1356,22);
  $i1383.dup := $or.i1($i1356.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1384 := $shl.i32($i1356,10);
  $i1384.dup := $or.i1($i1356.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1385 := $or.i32($i1383,$i1384);
  $i1385.dup := $or.i1($i1383.dup,$i1384.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1386 := $xor.i32($i1382,$i1385);
  $i1386.dup := $or.i1($i1382.dup,$i1385.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1387 := $and.i32($i1356,$i1318);
  $i1387.dup := $or.i1($i1356.dup,$i1318.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1388 := $and.i32($i1356,$i1280);
  $i1388.dup := $or.i1($i1356.dup,$i1280.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1389 := $xor.i32($i1387,$i1388);
  $i1389.dup := $or.i1($i1387.dup,$i1388.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1390 := $and.i32($i1318,$i1280);
  $i1390.dup := $or.i1($i1318.dup,$i1280.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1391 := $xor.i32($i1389,$i1390);
  $i1391.dup := $or.i1($i1389.dup,$i1390.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1392 := $add.i32($i1386,$i1391);
  $i1392.dup := $or.i1($i1386.dup,$i1391.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1392);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1393 := $add.i32($i1242,$i1375);
  $i1393.dup := $or.i1($i1242.dup,$i1375.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1393);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i1394 := $add.i32($i1375,$i1392);
  $i1394.dup := $or.i1($i1375.dup,$i1392.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1394);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1395 := $lshr.i32($i1393,6);
  $i1395.dup := $or.i1($i1393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1396 := $shl.i32($i1393,26);
  $i1396.dup := $or.i1($i1393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1397 := $or.i32($i1395,$i1396);
  $i1397.dup := $or.i1($i1395.dup,$i1396.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1398 := $lshr.i32($i1393,11);
  $i1398.dup := $or.i1($i1393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1399 := $shl.i32($i1393,21);
  $i1399.dup := $or.i1($i1393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1400 := $or.i32($i1398,$i1399);
  $i1400.dup := $or.i1($i1398.dup,$i1399.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1401 := $xor.i32($i1397,$i1400);
  $i1401.dup := $or.i1($i1397.dup,$i1400.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1402 := $lshr.i32($i1393,25);
  $i1402.dup := $or.i1($i1393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1403 := $shl.i32($i1393,7);
  $i1403.dup := $or.i1($i1393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1404 := $or.i32($i1402,$i1403);
  $i1404.dup := $or.i1($i1402.dup,$i1403.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1405 := $xor.i32($i1401,$i1404);
  $i1405.dup := $or.i1($i1401.dup,$i1404.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1406 := $add.i32($i1279,$i1405);
  $i1406.dup := $or.i1($i1279.dup,$i1405.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1407 := $and.i32($i1393,$i1355);
  $i1407.dup := $or.i1($i1393.dup,$i1355.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1408 := $xor.i32($i1393,$sub.i32(0,1));
  $i1408.dup := $or.i1($i1393.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1409 := $and.i32($i1408,$i1317);
  $i1409.dup := $or.i1($i1408.dup,$i1317.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1410 := $xor.i32($i1407,$i1409);
  $i1410.dup := $or.i1($i1407.dup,$i1409.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1411 := $add.i32($i1406,$i1410);
  $i1411.dup := $or.i1($i1406.dup,$i1410.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1412 := $add.i32($i1411,2952996808);
  $i1412.dup := $or.i1($i1411.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1413 := $add.i32($i1412,$i909);
  $i1413.dup := $or.i1($i1412.dup,$i909.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1413);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1414 := $lshr.i32($i1394,2);
  $i1414.dup := $or.i1($i1394.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1415 := $shl.i32($i1394,30);
  $i1415.dup := $or.i1($i1394.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1416 := $or.i32($i1414,$i1415);
  $i1416.dup := $or.i1($i1414.dup,$i1415.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1417 := $lshr.i32($i1394,13);
  $i1417.dup := $or.i1($i1394.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1418 := $shl.i32($i1394,19);
  $i1418.dup := $or.i1($i1394.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1419 := $or.i32($i1417,$i1418);
  $i1419.dup := $or.i1($i1417.dup,$i1418.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1420 := $xor.i32($i1416,$i1419);
  $i1420.dup := $or.i1($i1416.dup,$i1419.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1421 := $lshr.i32($i1394,22);
  $i1421.dup := $or.i1($i1394.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1422 := $shl.i32($i1394,10);
  $i1422.dup := $or.i1($i1394.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1423 := $or.i32($i1421,$i1422);
  $i1423.dup := $or.i1($i1421.dup,$i1422.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1424 := $xor.i32($i1420,$i1423);
  $i1424.dup := $or.i1($i1420.dup,$i1423.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1425 := $and.i32($i1394,$i1356);
  $i1425.dup := $or.i1($i1394.dup,$i1356.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1426 := $and.i32($i1394,$i1318);
  $i1426.dup := $or.i1($i1394.dup,$i1318.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1427 := $xor.i32($i1425,$i1426);
  $i1427.dup := $or.i1($i1425.dup,$i1426.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1428 := $and.i32($i1356,$i1318);
  $i1428.dup := $or.i1($i1356.dup,$i1318.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1429 := $xor.i32($i1427,$i1428);
  $i1429.dup := $or.i1($i1427.dup,$i1428.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1430 := $add.i32($i1424,$i1429);
  $i1430.dup := $or.i1($i1424.dup,$i1429.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1430);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1431 := $add.i32($i1280,$i1413);
  $i1431.dup := $or.i1($i1280.dup,$i1413.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1431);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i1432 := $add.i32($i1413,$i1430);
  $i1432.dup := $or.i1($i1413.dup,$i1430.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1432);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1433 := $lshr.i32($i1431,6);
  $i1433.dup := $or.i1($i1431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1434 := $shl.i32($i1431,26);
  $i1434.dup := $or.i1($i1431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1435 := $or.i32($i1433,$i1434);
  $i1435.dup := $or.i1($i1433.dup,$i1434.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1436 := $lshr.i32($i1431,11);
  $i1436.dup := $or.i1($i1431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1437 := $shl.i32($i1431,21);
  $i1437.dup := $or.i1($i1431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1438 := $or.i32($i1436,$i1437);
  $i1438.dup := $or.i1($i1436.dup,$i1437.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1439 := $xor.i32($i1435,$i1438);
  $i1439.dup := $or.i1($i1435.dup,$i1438.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1440 := $lshr.i32($i1431,25);
  $i1440.dup := $or.i1($i1431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1441 := $shl.i32($i1431,7);
  $i1441.dup := $or.i1($i1431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1442 := $or.i32($i1440,$i1441);
  $i1442.dup := $or.i1($i1440.dup,$i1441.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1443 := $xor.i32($i1439,$i1442);
  $i1443.dup := $or.i1($i1439.dup,$i1442.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1444 := $add.i32($i1317,$i1443);
  $i1444.dup := $or.i1($i1317.dup,$i1443.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1445 := $and.i32($i1431,$i1393);
  $i1445.dup := $or.i1($i1431.dup,$i1393.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1446 := $xor.i32($i1431,$sub.i32(0,1));
  $i1446.dup := $or.i1($i1431.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1447 := $and.i32($i1446,$i1355);
  $i1447.dup := $or.i1($i1446.dup,$i1355.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1448 := $xor.i32($i1445,$i1447);
  $i1448.dup := $or.i1($i1445.dup,$i1447.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1449 := $add.i32($i1444,$i1448);
  $i1449.dup := $or.i1($i1444.dup,$i1448.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1450 := $add.i32($i1449,3210313671);
  $i1450.dup := $or.i1($i1449.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1451 := $add.i32($i1450,$i930);
  $i1451.dup := $or.i1($i1450.dup,$i930.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1451);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1452 := $lshr.i32($i1432,2);
  $i1452.dup := $or.i1($i1432.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1453 := $shl.i32($i1432,30);
  $i1453.dup := $or.i1($i1432.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1454 := $or.i32($i1452,$i1453);
  $i1454.dup := $or.i1($i1452.dup,$i1453.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1455 := $lshr.i32($i1432,13);
  $i1455.dup := $or.i1($i1432.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1456 := $shl.i32($i1432,19);
  $i1456.dup := $or.i1($i1432.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1457 := $or.i32($i1455,$i1456);
  $i1457.dup := $or.i1($i1455.dup,$i1456.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1458 := $xor.i32($i1454,$i1457);
  $i1458.dup := $or.i1($i1454.dup,$i1457.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1459 := $lshr.i32($i1432,22);
  $i1459.dup := $or.i1($i1432.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1460 := $shl.i32($i1432,10);
  $i1460.dup := $or.i1($i1432.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1461 := $or.i32($i1459,$i1460);
  $i1461.dup := $or.i1($i1459.dup,$i1460.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1462 := $xor.i32($i1458,$i1461);
  $i1462.dup := $or.i1($i1458.dup,$i1461.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1463 := $and.i32($i1432,$i1394);
  $i1463.dup := $or.i1($i1432.dup,$i1394.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1464 := $and.i32($i1432,$i1356);
  $i1464.dup := $or.i1($i1432.dup,$i1356.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1465 := $xor.i32($i1463,$i1464);
  $i1465.dup := $or.i1($i1463.dup,$i1464.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1466 := $and.i32($i1394,$i1356);
  $i1466.dup := $or.i1($i1394.dup,$i1356.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1467 := $xor.i32($i1465,$i1466);
  $i1467.dup := $or.i1($i1465.dup,$i1466.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1468 := $add.i32($i1462,$i1467);
  $i1468.dup := $or.i1($i1462.dup,$i1467.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1468);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1469 := $add.i32($i1318,$i1451);
  $i1469.dup := $or.i1($i1318.dup,$i1451.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1469);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 134, 5} true;
  assume {:verifier.code 0} true;
  $i1470 := $add.i32($i1451,$i1468);
  $i1470.dup := $or.i1($i1451.dup,$i1468.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1470);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1471 := $lshr.i32($i1469,6);
  $i1471.dup := $or.i1($i1469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1472 := $shl.i32($i1469,26);
  $i1472.dup := $or.i1($i1469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1473 := $or.i32($i1471,$i1472);
  $i1473.dup := $or.i1($i1471.dup,$i1472.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1474 := $lshr.i32($i1469,11);
  $i1474.dup := $or.i1($i1469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1475 := $shl.i32($i1469,21);
  $i1475.dup := $or.i1($i1469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1476 := $or.i32($i1474,$i1475);
  $i1476.dup := $or.i1($i1474.dup,$i1475.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1477 := $xor.i32($i1473,$i1476);
  $i1477.dup := $or.i1($i1473.dup,$i1476.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1478 := $lshr.i32($i1469,25);
  $i1478.dup := $or.i1($i1469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1479 := $shl.i32($i1469,7);
  $i1479.dup := $or.i1($i1469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1480 := $or.i32($i1478,$i1479);
  $i1480.dup := $or.i1($i1478.dup,$i1479.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1481 := $xor.i32($i1477,$i1480);
  $i1481.dup := $or.i1($i1477.dup,$i1480.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1482 := $add.i32($i1355,$i1481);
  $i1482.dup := $or.i1($i1355.dup,$i1481.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1483 := $and.i32($i1469,$i1431);
  $i1483.dup := $or.i1($i1469.dup,$i1431.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1484 := $xor.i32($i1469,$sub.i32(0,1));
  $i1484.dup := $or.i1($i1469.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1485 := $and.i32($i1484,$i1393);
  $i1485.dup := $or.i1($i1484.dup,$i1393.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1486 := $xor.i32($i1483,$i1485);
  $i1486.dup := $or.i1($i1483.dup,$i1485.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1487 := $add.i32($i1482,$i1486);
  $i1487.dup := $or.i1($i1482.dup,$i1486.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1488 := $add.i32($i1487,3336571891);
  $i1488.dup := $or.i1($i1487.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1489 := $add.i32($i1488,$i951);
  $i1489.dup := $or.i1($i1488.dup,$i951.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1489);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1490 := $lshr.i32($i1470,2);
  $i1490.dup := $or.i1($i1470.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1491 := $shl.i32($i1470,30);
  $i1491.dup := $or.i1($i1470.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1492 := $or.i32($i1490,$i1491);
  $i1492.dup := $or.i1($i1490.dup,$i1491.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1493 := $lshr.i32($i1470,13);
  $i1493.dup := $or.i1($i1470.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1494 := $shl.i32($i1470,19);
  $i1494.dup := $or.i1($i1470.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1495 := $or.i32($i1493,$i1494);
  $i1495.dup := $or.i1($i1493.dup,$i1494.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1496 := $xor.i32($i1492,$i1495);
  $i1496.dup := $or.i1($i1492.dup,$i1495.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1497 := $lshr.i32($i1470,22);
  $i1497.dup := $or.i1($i1470.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1498 := $shl.i32($i1470,10);
  $i1498.dup := $or.i1($i1470.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1499 := $or.i32($i1497,$i1498);
  $i1499.dup := $or.i1($i1497.dup,$i1498.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1500 := $xor.i32($i1496,$i1499);
  $i1500.dup := $or.i1($i1496.dup,$i1499.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1501 := $and.i32($i1470,$i1432);
  $i1501.dup := $or.i1($i1470.dup,$i1432.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1502 := $and.i32($i1470,$i1394);
  $i1502.dup := $or.i1($i1470.dup,$i1394.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1503 := $xor.i32($i1501,$i1502);
  $i1503.dup := $or.i1($i1501.dup,$i1502.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1504 := $and.i32($i1432,$i1394);
  $i1504.dup := $or.i1($i1432.dup,$i1394.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1505 := $xor.i32($i1503,$i1504);
  $i1505.dup := $or.i1($i1503.dup,$i1504.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1506 := $add.i32($i1500,$i1505);
  $i1506.dup := $or.i1($i1500.dup,$i1505.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1506);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1507 := $add.i32($i1356,$i1489);
  $i1507.dup := $or.i1($i1356.dup,$i1489.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1507);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i1508 := $add.i32($i1489,$i1506);
  $i1508.dup := $or.i1($i1489.dup,$i1506.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1508);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1509 := $lshr.i32($i1507,6);
  $i1509.dup := $or.i1($i1507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1510 := $shl.i32($i1507,26);
  $i1510.dup := $or.i1($i1507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1511 := $or.i32($i1509,$i1510);
  $i1511.dup := $or.i1($i1509.dup,$i1510.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1512 := $lshr.i32($i1507,11);
  $i1512.dup := $or.i1($i1507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1513 := $shl.i32($i1507,21);
  $i1513.dup := $or.i1($i1507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1514 := $or.i32($i1512,$i1513);
  $i1514.dup := $or.i1($i1512.dup,$i1513.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1515 := $xor.i32($i1511,$i1514);
  $i1515.dup := $or.i1($i1511.dup,$i1514.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1516 := $lshr.i32($i1507,25);
  $i1516.dup := $or.i1($i1507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1517 := $shl.i32($i1507,7);
  $i1517.dup := $or.i1($i1507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1518 := $or.i32($i1516,$i1517);
  $i1518.dup := $or.i1($i1516.dup,$i1517.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1519 := $xor.i32($i1515,$i1518);
  $i1519.dup := $or.i1($i1515.dup,$i1518.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1520 := $add.i32($i1393,$i1519);
  $i1520.dup := $or.i1($i1393.dup,$i1519.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1521 := $and.i32($i1507,$i1469);
  $i1521.dup := $or.i1($i1507.dup,$i1469.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1522 := $xor.i32($i1507,$sub.i32(0,1));
  $i1522.dup := $or.i1($i1507.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1523 := $and.i32($i1522,$i1431);
  $i1523.dup := $or.i1($i1522.dup,$i1431.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1524 := $xor.i32($i1521,$i1523);
  $i1524.dup := $or.i1($i1521.dup,$i1523.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1525 := $add.i32($i1520,$i1524);
  $i1525.dup := $or.i1($i1520.dup,$i1524.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1526 := $add.i32($i1525,3584528711);
  $i1526.dup := $or.i1($i1525.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1527 := $add.i32($i1526,$i972);
  $i1527.dup := $or.i1($i1526.dup,$i972.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1527);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1528 := $lshr.i32($i1508,2);
  $i1528.dup := $or.i1($i1508.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1529 := $shl.i32($i1508,30);
  $i1529.dup := $or.i1($i1508.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1530 := $or.i32($i1528,$i1529);
  $i1530.dup := $or.i1($i1528.dup,$i1529.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1531 := $lshr.i32($i1508,13);
  $i1531.dup := $or.i1($i1508.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1532 := $shl.i32($i1508,19);
  $i1532.dup := $or.i1($i1508.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1533 := $or.i32($i1531,$i1532);
  $i1533.dup := $or.i1($i1531.dup,$i1532.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1534 := $xor.i32($i1530,$i1533);
  $i1534.dup := $or.i1($i1530.dup,$i1533.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1535 := $lshr.i32($i1508,22);
  $i1535.dup := $or.i1($i1508.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1536 := $shl.i32($i1508,10);
  $i1536.dup := $or.i1($i1508.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1537 := $or.i32($i1535,$i1536);
  $i1537.dup := $or.i1($i1535.dup,$i1536.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1538 := $xor.i32($i1534,$i1537);
  $i1538.dup := $or.i1($i1534.dup,$i1537.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1539 := $and.i32($i1508,$i1470);
  $i1539.dup := $or.i1($i1508.dup,$i1470.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1540 := $and.i32($i1508,$i1432);
  $i1540.dup := $or.i1($i1508.dup,$i1432.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1541 := $xor.i32($i1539,$i1540);
  $i1541.dup := $or.i1($i1539.dup,$i1540.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1542 := $and.i32($i1470,$i1432);
  $i1542.dup := $or.i1($i1470.dup,$i1432.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1543 := $xor.i32($i1541,$i1542);
  $i1543.dup := $or.i1($i1541.dup,$i1542.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1544 := $add.i32($i1538,$i1543);
  $i1544.dup := $or.i1($i1538.dup,$i1543.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1544);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1545 := $add.i32($i1394,$i1527);
  $i1545.dup := $or.i1($i1394.dup,$i1527.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1545);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i1546 := $add.i32($i1527,$i1544);
  $i1546.dup := $or.i1($i1527.dup,$i1544.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1546);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1547 := $lshr.i32($i1545,6);
  $i1547.dup := $or.i1($i1545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1548 := $shl.i32($i1545,26);
  $i1548.dup := $or.i1($i1545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1549 := $or.i32($i1547,$i1548);
  $i1549.dup := $or.i1($i1547.dup,$i1548.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1550 := $lshr.i32($i1545,11);
  $i1550.dup := $or.i1($i1545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1551 := $shl.i32($i1545,21);
  $i1551.dup := $or.i1($i1545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1552 := $or.i32($i1550,$i1551);
  $i1552.dup := $or.i1($i1550.dup,$i1551.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1553 := $xor.i32($i1549,$i1552);
  $i1553.dup := $or.i1($i1549.dup,$i1552.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1554 := $lshr.i32($i1545,25);
  $i1554.dup := $or.i1($i1545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1555 := $shl.i32($i1545,7);
  $i1555.dup := $or.i1($i1545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1556 := $or.i32($i1554,$i1555);
  $i1556.dup := $or.i1($i1554.dup,$i1555.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1557 := $xor.i32($i1553,$i1556);
  $i1557.dup := $or.i1($i1553.dup,$i1556.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1558 := $add.i32($i1431,$i1557);
  $i1558.dup := $or.i1($i1431.dup,$i1557.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1559 := $and.i32($i1545,$i1507);
  $i1559.dup := $or.i1($i1545.dup,$i1507.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1560 := $xor.i32($i1545,$sub.i32(0,1));
  $i1560.dup := $or.i1($i1545.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1561 := $and.i32($i1560,$i1469);
  $i1561.dup := $or.i1($i1560.dup,$i1469.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1562 := $xor.i32($i1559,$i1561);
  $i1562.dup := $or.i1($i1559.dup,$i1561.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1563 := $add.i32($i1558,$i1562);
  $i1563.dup := $or.i1($i1558.dup,$i1562.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1564 := $add.i32($i1563,113926993);
  $i1564.dup := $or.i1($i1563.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1565 := $add.i32($i1564,$i993);
  $i1565.dup := $or.i1($i1564.dup,$i993.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1565);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1566 := $lshr.i32($i1546,2);
  $i1566.dup := $or.i1($i1546.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1567 := $shl.i32($i1546,30);
  $i1567.dup := $or.i1($i1546.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1568 := $or.i32($i1566,$i1567);
  $i1568.dup := $or.i1($i1566.dup,$i1567.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1569 := $lshr.i32($i1546,13);
  $i1569.dup := $or.i1($i1546.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1570 := $shl.i32($i1546,19);
  $i1570.dup := $or.i1($i1546.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1571 := $or.i32($i1569,$i1570);
  $i1571.dup := $or.i1($i1569.dup,$i1570.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1572 := $xor.i32($i1568,$i1571);
  $i1572.dup := $or.i1($i1568.dup,$i1571.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1573 := $lshr.i32($i1546,22);
  $i1573.dup := $or.i1($i1546.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1574 := $shl.i32($i1546,10);
  $i1574.dup := $or.i1($i1546.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1575 := $or.i32($i1573,$i1574);
  $i1575.dup := $or.i1($i1573.dup,$i1574.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1576 := $xor.i32($i1572,$i1575);
  $i1576.dup := $or.i1($i1572.dup,$i1575.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1577 := $and.i32($i1546,$i1508);
  $i1577.dup := $or.i1($i1546.dup,$i1508.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1578 := $and.i32($i1546,$i1470);
  $i1578.dup := $or.i1($i1546.dup,$i1470.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1579 := $xor.i32($i1577,$i1578);
  $i1579.dup := $or.i1($i1577.dup,$i1578.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1580 := $and.i32($i1508,$i1470);
  $i1580.dup := $or.i1($i1508.dup,$i1470.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1581 := $xor.i32($i1579,$i1580);
  $i1581.dup := $or.i1($i1579.dup,$i1580.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1582 := $add.i32($i1576,$i1581);
  $i1582.dup := $or.i1($i1576.dup,$i1581.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1582);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1583 := $add.i32($i1432,$i1565);
  $i1583.dup := $or.i1($i1432.dup,$i1565.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1583);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i1584 := $add.i32($i1565,$i1582);
  $i1584.dup := $or.i1($i1565.dup,$i1582.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1584);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1585 := $lshr.i32($i1583,6);
  $i1585.dup := $or.i1($i1583.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1586 := $shl.i32($i1583,26);
  $i1586.dup := $or.i1($i1583.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1587 := $or.i32($i1585,$i1586);
  $i1587.dup := $or.i1($i1585.dup,$i1586.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1588 := $lshr.i32($i1583,11);
  $i1588.dup := $or.i1($i1583.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1589 := $shl.i32($i1583,21);
  $i1589.dup := $or.i1($i1583.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1590 := $or.i32($i1588,$i1589);
  $i1590.dup := $or.i1($i1588.dup,$i1589.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1591 := $xor.i32($i1587,$i1590);
  $i1591.dup := $or.i1($i1587.dup,$i1590.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1592 := $lshr.i32($i1583,25);
  $i1592.dup := $or.i1($i1583.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1593 := $shl.i32($i1583,7);
  $i1593.dup := $or.i1($i1583.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1594 := $or.i32($i1592,$i1593);
  $i1594.dup := $or.i1($i1592.dup,$i1593.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1595 := $xor.i32($i1591,$i1594);
  $i1595.dup := $or.i1($i1591.dup,$i1594.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1596 := $add.i32($i1469,$i1595);
  $i1596.dup := $or.i1($i1469.dup,$i1595.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1597 := $and.i32($i1583,$i1545);
  $i1597.dup := $or.i1($i1583.dup,$i1545.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1598 := $xor.i32($i1583,$sub.i32(0,1));
  $i1598.dup := $or.i1($i1583.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1599 := $and.i32($i1598,$i1507);
  $i1599.dup := $or.i1($i1598.dup,$i1507.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1600 := $xor.i32($i1597,$i1599);
  $i1600.dup := $or.i1($i1597.dup,$i1599.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1601 := $add.i32($i1596,$i1600);
  $i1601.dup := $or.i1($i1596.dup,$i1600.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1602 := $add.i32($i1601,338241895);
  $i1602.dup := $or.i1($i1601.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1603 := $add.i32($i1602,$i1014);
  $i1603.dup := $or.i1($i1602.dup,$i1014.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1603);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1604 := $lshr.i32($i1584,2);
  $i1604.dup := $or.i1($i1584.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1605 := $shl.i32($i1584,30);
  $i1605.dup := $or.i1($i1584.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1606 := $or.i32($i1604,$i1605);
  $i1606.dup := $or.i1($i1604.dup,$i1605.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1607 := $lshr.i32($i1584,13);
  $i1607.dup := $or.i1($i1584.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1608 := $shl.i32($i1584,19);
  $i1608.dup := $or.i1($i1584.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1609 := $or.i32($i1607,$i1608);
  $i1609.dup := $or.i1($i1607.dup,$i1608.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1610 := $xor.i32($i1606,$i1609);
  $i1610.dup := $or.i1($i1606.dup,$i1609.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1611 := $lshr.i32($i1584,22);
  $i1611.dup := $or.i1($i1584.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1612 := $shl.i32($i1584,10);
  $i1612.dup := $or.i1($i1584.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1613 := $or.i32($i1611,$i1612);
  $i1613.dup := $or.i1($i1611.dup,$i1612.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1614 := $xor.i32($i1610,$i1613);
  $i1614.dup := $or.i1($i1610.dup,$i1613.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1615 := $and.i32($i1584,$i1546);
  $i1615.dup := $or.i1($i1584.dup,$i1546.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1616 := $and.i32($i1584,$i1508);
  $i1616.dup := $or.i1($i1584.dup,$i1508.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1617 := $xor.i32($i1615,$i1616);
  $i1617.dup := $or.i1($i1615.dup,$i1616.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1618 := $and.i32($i1546,$i1508);
  $i1618.dup := $or.i1($i1546.dup,$i1508.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1619 := $xor.i32($i1617,$i1618);
  $i1619.dup := $or.i1($i1617.dup,$i1618.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1620 := $add.i32($i1614,$i1619);
  $i1620.dup := $or.i1($i1614.dup,$i1619.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1620);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1621 := $add.i32($i1470,$i1603);
  $i1621.dup := $or.i1($i1470.dup,$i1603.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1621);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 138, 5} true;
  assume {:verifier.code 0} true;
  $i1622 := $add.i32($i1603,$i1620);
  $i1622.dup := $or.i1($i1603.dup,$i1620.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1622);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1623 := $lshr.i32($i993,17);
  $i1623.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1624 := $shl.i32($i993,15);
  $i1624.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1625 := $or.i32($i1623,$i1624);
  $i1625.dup := $or.i1($i1623.dup,$i1624.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1626 := $lshr.i32($i993,19);
  $i1626.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1627 := $shl.i32($i993,13);
  $i1627.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1628 := $or.i32($i1626,$i1627);
  $i1628.dup := $or.i1($i1626.dup,$i1627.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1629 := $xor.i32($i1625,$i1628);
  $i1629.dup := $or.i1($i1625.dup,$i1628.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1630 := $lshr.i32($i993,10);
  $i1630.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1631 := $xor.i32($i1629,$i1630);
  $i1631.dup := $or.i1($i1629.dup,$i1630.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1632 := $add.i32($i1631,$i888);
  $i1632.dup := $or.i1($i1631.dup,$i888.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1633 := $lshr.i32($i720,7);
  $i1633.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1634 := $shl.i32($i720,25);
  $i1634.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1635 := $or.i32($i1633,$i1634);
  $i1635.dup := $or.i1($i1633.dup,$i1634.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1636 := $lshr.i32($i720,18);
  $i1636.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1637 := $shl.i32($i720,14);
  $i1637.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1638 := $or.i32($i1636,$i1637);
  $i1638.dup := $or.i1($i1636.dup,$i1637.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1639 := $xor.i32($i1635,$i1638);
  $i1639.dup := $or.i1($i1635.dup,$i1638.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1640 := $lshr.i32($i720,3);
  $i1640.dup := $or.i1($i720.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1641 := $xor.i32($i1639,$i1640);
  $i1641.dup := $or.i1($i1639.dup,$i1640.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1642 := $add.i32($i1632,$i1641);
  $i1642.dup := $or.i1($i1632.dup,$i1641.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1643 := $add.i32($i1642,$i699);
  $i1643.dup := $or.i1($i1642.dup,$i699.dup);
  call {:cexpr "w0"} boogie_si_record_i32($i1643);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1644 := $lshr.i32($i1014,17);
  $i1644.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1645 := $shl.i32($i1014,15);
  $i1645.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1646 := $or.i32($i1644,$i1645);
  $i1646.dup := $or.i1($i1644.dup,$i1645.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1647 := $lshr.i32($i1014,19);
  $i1647.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1648 := $shl.i32($i1014,13);
  $i1648.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1649 := $or.i32($i1647,$i1648);
  $i1649.dup := $or.i1($i1647.dup,$i1648.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1650 := $xor.i32($i1646,$i1649);
  $i1650.dup := $or.i1($i1646.dup,$i1649.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1651 := $lshr.i32($i1014,10);
  $i1651.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1652 := $xor.i32($i1650,$i1651);
  $i1652.dup := $or.i1($i1650.dup,$i1651.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1653 := $add.i32($i1652,$i909);
  $i1653.dup := $or.i1($i1652.dup,$i909.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1654 := $lshr.i32($i741,7);
  $i1654.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1655 := $shl.i32($i741,25);
  $i1655.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1656 := $or.i32($i1654,$i1655);
  $i1656.dup := $or.i1($i1654.dup,$i1655.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1657 := $lshr.i32($i741,18);
  $i1657.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1658 := $shl.i32($i741,14);
  $i1658.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1659 := $or.i32($i1657,$i1658);
  $i1659.dup := $or.i1($i1657.dup,$i1658.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1660 := $xor.i32($i1656,$i1659);
  $i1660.dup := $or.i1($i1656.dup,$i1659.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1661 := $lshr.i32($i741,3);
  $i1661.dup := $or.i1($i741.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1662 := $xor.i32($i1660,$i1661);
  $i1662.dup := $or.i1($i1660.dup,$i1661.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1663 := $add.i32($i1653,$i1662);
  $i1663.dup := $or.i1($i1653.dup,$i1662.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1664 := $add.i32($i1663,$i720);
  $i1664.dup := $or.i1($i1663.dup,$i720.dup);
  call {:cexpr "w1"} boogie_si_record_i32($i1664);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1665 := $lshr.i32($i1643,17);
  $i1665.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1666 := $shl.i32($i1643,15);
  $i1666.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1667 := $or.i32($i1665,$i1666);
  $i1667.dup := $or.i1($i1665.dup,$i1666.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1668 := $lshr.i32($i1643,19);
  $i1668.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1669 := $shl.i32($i1643,13);
  $i1669.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1670 := $or.i32($i1668,$i1669);
  $i1670.dup := $or.i1($i1668.dup,$i1669.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1671 := $xor.i32($i1667,$i1670);
  $i1671.dup := $or.i1($i1667.dup,$i1670.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1672 := $lshr.i32($i1643,10);
  $i1672.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1673 := $xor.i32($i1671,$i1672);
  $i1673.dup := $or.i1($i1671.dup,$i1672.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1674 := $add.i32($i1673,$i930);
  $i1674.dup := $or.i1($i1673.dup,$i930.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1675 := $lshr.i32($i762,7);
  $i1675.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1676 := $shl.i32($i762,25);
  $i1676.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1677 := $or.i32($i1675,$i1676);
  $i1677.dup := $or.i1($i1675.dup,$i1676.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1678 := $lshr.i32($i762,18);
  $i1678.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1679 := $shl.i32($i762,14);
  $i1679.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1680 := $or.i32($i1678,$i1679);
  $i1680.dup := $or.i1($i1678.dup,$i1679.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1681 := $xor.i32($i1677,$i1680);
  $i1681.dup := $or.i1($i1677.dup,$i1680.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1682 := $lshr.i32($i762,3);
  $i1682.dup := $or.i1($i762.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1683 := $xor.i32($i1681,$i1682);
  $i1683.dup := $or.i1($i1681.dup,$i1682.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1684 := $add.i32($i1674,$i1683);
  $i1684.dup := $or.i1($i1674.dup,$i1683.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1685 := $add.i32($i1684,$i741);
  $i1685.dup := $or.i1($i1684.dup,$i741.dup);
  call {:cexpr "w2"} boogie_si_record_i32($i1685);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1686 := $lshr.i32($i1664,17);
  $i1686.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1687 := $shl.i32($i1664,15);
  $i1687.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1688 := $or.i32($i1686,$i1687);
  $i1688.dup := $or.i1($i1686.dup,$i1687.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1689 := $lshr.i32($i1664,19);
  $i1689.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1690 := $shl.i32($i1664,13);
  $i1690.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1691 := $or.i32($i1689,$i1690);
  $i1691.dup := $or.i1($i1689.dup,$i1690.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1692 := $xor.i32($i1688,$i1691);
  $i1692.dup := $or.i1($i1688.dup,$i1691.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1693 := $lshr.i32($i1664,10);
  $i1693.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1694 := $xor.i32($i1692,$i1693);
  $i1694.dup := $or.i1($i1692.dup,$i1693.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1695 := $add.i32($i1694,$i951);
  $i1695.dup := $or.i1($i1694.dup,$i951.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1696 := $lshr.i32($i783,7);
  $i1696.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1697 := $shl.i32($i783,25);
  $i1697.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1698 := $or.i32($i1696,$i1697);
  $i1698.dup := $or.i1($i1696.dup,$i1697.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1699 := $lshr.i32($i783,18);
  $i1699.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1700 := $shl.i32($i783,14);
  $i1700.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1701 := $or.i32($i1699,$i1700);
  $i1701.dup := $or.i1($i1699.dup,$i1700.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1702 := $xor.i32($i1698,$i1701);
  $i1702.dup := $or.i1($i1698.dup,$i1701.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1703 := $lshr.i32($i783,3);
  $i1703.dup := $or.i1($i783.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1704 := $xor.i32($i1702,$i1703);
  $i1704.dup := $or.i1($i1702.dup,$i1703.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1705 := $add.i32($i1695,$i1704);
  $i1705.dup := $or.i1($i1695.dup,$i1704.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1706 := $add.i32($i1705,$i762);
  $i1706.dup := $or.i1($i1705.dup,$i762.dup);
  call {:cexpr "w3"} boogie_si_record_i32($i1706);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1707 := $lshr.i32($i1685,17);
  $i1707.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1708 := $shl.i32($i1685,15);
  $i1708.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1709 := $or.i32($i1707,$i1708);
  $i1709.dup := $or.i1($i1707.dup,$i1708.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1710 := $lshr.i32($i1685,19);
  $i1710.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1711 := $shl.i32($i1685,13);
  $i1711.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1712 := $or.i32($i1710,$i1711);
  $i1712.dup := $or.i1($i1710.dup,$i1711.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1713 := $xor.i32($i1709,$i1712);
  $i1713.dup := $or.i1($i1709.dup,$i1712.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1714 := $lshr.i32($i1685,10);
  $i1714.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1715 := $xor.i32($i1713,$i1714);
  $i1715.dup := $or.i1($i1713.dup,$i1714.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1716 := $add.i32($i1715,$i972);
  $i1716.dup := $or.i1($i1715.dup,$i972.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1717 := $lshr.i32($i804,7);
  $i1717.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1718 := $shl.i32($i804,25);
  $i1718.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1719 := $or.i32($i1717,$i1718);
  $i1719.dup := $or.i1($i1717.dup,$i1718.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1720 := $lshr.i32($i804,18);
  $i1720.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1721 := $shl.i32($i804,14);
  $i1721.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1722 := $or.i32($i1720,$i1721);
  $i1722.dup := $or.i1($i1720.dup,$i1721.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1723 := $xor.i32($i1719,$i1722);
  $i1723.dup := $or.i1($i1719.dup,$i1722.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1724 := $lshr.i32($i804,3);
  $i1724.dup := $or.i1($i804.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1725 := $xor.i32($i1723,$i1724);
  $i1725.dup := $or.i1($i1723.dup,$i1724.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1726 := $add.i32($i1716,$i1725);
  $i1726.dup := $or.i1($i1716.dup,$i1725.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1727 := $add.i32($i1726,$i783);
  $i1727.dup := $or.i1($i1726.dup,$i783.dup);
  call {:cexpr "w4"} boogie_si_record_i32($i1727);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1728 := $lshr.i32($i1706,17);
  $i1728.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1729 := $shl.i32($i1706,15);
  $i1729.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1730 := $or.i32($i1728,$i1729);
  $i1730.dup := $or.i1($i1728.dup,$i1729.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1731 := $lshr.i32($i1706,19);
  $i1731.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1732 := $shl.i32($i1706,13);
  $i1732.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1733 := $or.i32($i1731,$i1732);
  $i1733.dup := $or.i1($i1731.dup,$i1732.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1734 := $xor.i32($i1730,$i1733);
  $i1734.dup := $or.i1($i1730.dup,$i1733.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1735 := $lshr.i32($i1706,10);
  $i1735.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1736 := $xor.i32($i1734,$i1735);
  $i1736.dup := $or.i1($i1734.dup,$i1735.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1737 := $add.i32($i1736,$i993);
  $i1737.dup := $or.i1($i1736.dup,$i993.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1738 := $lshr.i32($i825,7);
  $i1738.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1739 := $shl.i32($i825,25);
  $i1739.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1740 := $or.i32($i1738,$i1739);
  $i1740.dup := $or.i1($i1738.dup,$i1739.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1741 := $lshr.i32($i825,18);
  $i1741.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1742 := $shl.i32($i825,14);
  $i1742.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1743 := $or.i32($i1741,$i1742);
  $i1743.dup := $or.i1($i1741.dup,$i1742.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1744 := $xor.i32($i1740,$i1743);
  $i1744.dup := $or.i1($i1740.dup,$i1743.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1745 := $lshr.i32($i825,3);
  $i1745.dup := $or.i1($i825.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1746 := $xor.i32($i1744,$i1745);
  $i1746.dup := $or.i1($i1744.dup,$i1745.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1747 := $add.i32($i1737,$i1746);
  $i1747.dup := $or.i1($i1737.dup,$i1746.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1748 := $add.i32($i1747,$i804);
  $i1748.dup := $or.i1($i1747.dup,$i804.dup);
  call {:cexpr "w5"} boogie_si_record_i32($i1748);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1749 := $lshr.i32($i1727,17);
  $i1749.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1750 := $shl.i32($i1727,15);
  $i1750.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1751 := $or.i32($i1749,$i1750);
  $i1751.dup := $or.i1($i1749.dup,$i1750.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1752 := $lshr.i32($i1727,19);
  $i1752.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1753 := $shl.i32($i1727,13);
  $i1753.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1754 := $or.i32($i1752,$i1753);
  $i1754.dup := $or.i1($i1752.dup,$i1753.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1755 := $xor.i32($i1751,$i1754);
  $i1755.dup := $or.i1($i1751.dup,$i1754.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1756 := $lshr.i32($i1727,10);
  $i1756.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1757 := $xor.i32($i1755,$i1756);
  $i1757.dup := $or.i1($i1755.dup,$i1756.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1758 := $add.i32($i1757,$i1014);
  $i1758.dup := $or.i1($i1757.dup,$i1014.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1759 := $lshr.i32($i846,7);
  $i1759.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1760 := $shl.i32($i846,25);
  $i1760.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1761 := $or.i32($i1759,$i1760);
  $i1761.dup := $or.i1($i1759.dup,$i1760.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1762 := $lshr.i32($i846,18);
  $i1762.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1763 := $shl.i32($i846,14);
  $i1763.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1764 := $or.i32($i1762,$i1763);
  $i1764.dup := $or.i1($i1762.dup,$i1763.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1765 := $xor.i32($i1761,$i1764);
  $i1765.dup := $or.i1($i1761.dup,$i1764.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1766 := $lshr.i32($i846,3);
  $i1766.dup := $or.i1($i846.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1767 := $xor.i32($i1765,$i1766);
  $i1767.dup := $or.i1($i1765.dup,$i1766.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1768 := $add.i32($i1758,$i1767);
  $i1768.dup := $or.i1($i1758.dup,$i1767.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1769 := $add.i32($i1768,$i825);
  $i1769.dup := $or.i1($i1768.dup,$i825.dup);
  call {:cexpr "w6"} boogie_si_record_i32($i1769);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1770 := $lshr.i32($i1748,17);
  $i1770.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1771 := $shl.i32($i1748,15);
  $i1771.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1772 := $or.i32($i1770,$i1771);
  $i1772.dup := $or.i1($i1770.dup,$i1771.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1773 := $lshr.i32($i1748,19);
  $i1773.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1774 := $shl.i32($i1748,13);
  $i1774.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1775 := $or.i32($i1773,$i1774);
  $i1775.dup := $or.i1($i1773.dup,$i1774.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1776 := $xor.i32($i1772,$i1775);
  $i1776.dup := $or.i1($i1772.dup,$i1775.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1777 := $lshr.i32($i1748,10);
  $i1777.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1778 := $xor.i32($i1776,$i1777);
  $i1778.dup := $or.i1($i1776.dup,$i1777.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1779 := $add.i32($i1778,$i1643);
  $i1779.dup := $or.i1($i1778.dup,$i1643.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1780 := $lshr.i32($i867,7);
  $i1780.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1781 := $shl.i32($i867,25);
  $i1781.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1782 := $or.i32($i1780,$i1781);
  $i1782.dup := $or.i1($i1780.dup,$i1781.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1783 := $lshr.i32($i867,18);
  $i1783.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1784 := $shl.i32($i867,14);
  $i1784.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1785 := $or.i32($i1783,$i1784);
  $i1785.dup := $or.i1($i1783.dup,$i1784.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1786 := $xor.i32($i1782,$i1785);
  $i1786.dup := $or.i1($i1782.dup,$i1785.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1787 := $lshr.i32($i867,3);
  $i1787.dup := $or.i1($i867.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1788 := $xor.i32($i1786,$i1787);
  $i1788.dup := $or.i1($i1786.dup,$i1787.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1789 := $add.i32($i1779,$i1788);
  $i1789.dup := $or.i1($i1779.dup,$i1788.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1790 := $add.i32($i1789,$i846);
  $i1790.dup := $or.i1($i1789.dup,$i846.dup);
  call {:cexpr "w7"} boogie_si_record_i32($i1790);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1791 := $lshr.i32($i1769,17);
  $i1791.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1792 := $shl.i32($i1769,15);
  $i1792.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1793 := $or.i32($i1791,$i1792);
  $i1793.dup := $or.i1($i1791.dup,$i1792.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1794 := $lshr.i32($i1769,19);
  $i1794.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1795 := $shl.i32($i1769,13);
  $i1795.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1796 := $or.i32($i1794,$i1795);
  $i1796.dup := $or.i1($i1794.dup,$i1795.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1797 := $xor.i32($i1793,$i1796);
  $i1797.dup := $or.i1($i1793.dup,$i1796.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1798 := $lshr.i32($i1769,10);
  $i1798.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1799 := $xor.i32($i1797,$i1798);
  $i1799.dup := $or.i1($i1797.dup,$i1798.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1800 := $add.i32($i1799,$i1664);
  $i1800.dup := $or.i1($i1799.dup,$i1664.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1801 := $lshr.i32($i888,7);
  $i1801.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1802 := $shl.i32($i888,25);
  $i1802.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1803 := $or.i32($i1801,$i1802);
  $i1803.dup := $or.i1($i1801.dup,$i1802.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1804 := $lshr.i32($i888,18);
  $i1804.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1805 := $shl.i32($i888,14);
  $i1805.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1806 := $or.i32($i1804,$i1805);
  $i1806.dup := $or.i1($i1804.dup,$i1805.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1807 := $xor.i32($i1803,$i1806);
  $i1807.dup := $or.i1($i1803.dup,$i1806.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1808 := $lshr.i32($i888,3);
  $i1808.dup := $or.i1($i888.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1809 := $xor.i32($i1807,$i1808);
  $i1809.dup := $or.i1($i1807.dup,$i1808.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1810 := $add.i32($i1800,$i1809);
  $i1810.dup := $or.i1($i1800.dup,$i1809.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1811 := $add.i32($i1810,$i867);
  $i1811.dup := $or.i1($i1810.dup,$i867.dup);
  call {:cexpr "w8"} boogie_si_record_i32($i1811);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1812 := $lshr.i32($i1790,17);
  $i1812.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1813 := $shl.i32($i1790,15);
  $i1813.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1814 := $or.i32($i1812,$i1813);
  $i1814.dup := $or.i1($i1812.dup,$i1813.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1815 := $lshr.i32($i1790,19);
  $i1815.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1816 := $shl.i32($i1790,13);
  $i1816.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1817 := $or.i32($i1815,$i1816);
  $i1817.dup := $or.i1($i1815.dup,$i1816.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1818 := $xor.i32($i1814,$i1817);
  $i1818.dup := $or.i1($i1814.dup,$i1817.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1819 := $lshr.i32($i1790,10);
  $i1819.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1820 := $xor.i32($i1818,$i1819);
  $i1820.dup := $or.i1($i1818.dup,$i1819.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1821 := $add.i32($i1820,$i1685);
  $i1821.dup := $or.i1($i1820.dup,$i1685.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1822 := $lshr.i32($i909,7);
  $i1822.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1823 := $shl.i32($i909,25);
  $i1823.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1824 := $or.i32($i1822,$i1823);
  $i1824.dup := $or.i1($i1822.dup,$i1823.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1825 := $lshr.i32($i909,18);
  $i1825.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1826 := $shl.i32($i909,14);
  $i1826.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1827 := $or.i32($i1825,$i1826);
  $i1827.dup := $or.i1($i1825.dup,$i1826.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1828 := $xor.i32($i1824,$i1827);
  $i1828.dup := $or.i1($i1824.dup,$i1827.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1829 := $lshr.i32($i909,3);
  $i1829.dup := $or.i1($i909.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1830 := $xor.i32($i1828,$i1829);
  $i1830.dup := $or.i1($i1828.dup,$i1829.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1831 := $add.i32($i1821,$i1830);
  $i1831.dup := $or.i1($i1821.dup,$i1830.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1832 := $add.i32($i1831,$i888);
  $i1832.dup := $or.i1($i1831.dup,$i888.dup);
  call {:cexpr "w9"} boogie_si_record_i32($i1832);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1833 := $lshr.i32($i1811,17);
  $i1833.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1834 := $shl.i32($i1811,15);
  $i1834.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1835 := $or.i32($i1833,$i1834);
  $i1835.dup := $or.i1($i1833.dup,$i1834.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1836 := $lshr.i32($i1811,19);
  $i1836.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1837 := $shl.i32($i1811,13);
  $i1837.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1838 := $or.i32($i1836,$i1837);
  $i1838.dup := $or.i1($i1836.dup,$i1837.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1839 := $xor.i32($i1835,$i1838);
  $i1839.dup := $or.i1($i1835.dup,$i1838.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1840 := $lshr.i32($i1811,10);
  $i1840.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1841 := $xor.i32($i1839,$i1840);
  $i1841.dup := $or.i1($i1839.dup,$i1840.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1842 := $add.i32($i1841,$i1706);
  $i1842.dup := $or.i1($i1841.dup,$i1706.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1843 := $lshr.i32($i930,7);
  $i1843.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1844 := $shl.i32($i930,25);
  $i1844.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1845 := $or.i32($i1843,$i1844);
  $i1845.dup := $or.i1($i1843.dup,$i1844.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1846 := $lshr.i32($i930,18);
  $i1846.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1847 := $shl.i32($i930,14);
  $i1847.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1848 := $or.i32($i1846,$i1847);
  $i1848.dup := $or.i1($i1846.dup,$i1847.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1849 := $xor.i32($i1845,$i1848);
  $i1849.dup := $or.i1($i1845.dup,$i1848.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1850 := $lshr.i32($i930,3);
  $i1850.dup := $or.i1($i930.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1851 := $xor.i32($i1849,$i1850);
  $i1851.dup := $or.i1($i1849.dup,$i1850.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1852 := $add.i32($i1842,$i1851);
  $i1852.dup := $or.i1($i1842.dup,$i1851.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1853 := $add.i32($i1852,$i909);
  $i1853.dup := $or.i1($i1852.dup,$i909.dup);
  call {:cexpr "w10"} boogie_si_record_i32($i1853);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1854 := $lshr.i32($i1832,17);
  $i1854.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1855 := $shl.i32($i1832,15);
  $i1855.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1856 := $or.i32($i1854,$i1855);
  $i1856.dup := $or.i1($i1854.dup,$i1855.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1857 := $lshr.i32($i1832,19);
  $i1857.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1858 := $shl.i32($i1832,13);
  $i1858.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1859 := $or.i32($i1857,$i1858);
  $i1859.dup := $or.i1($i1857.dup,$i1858.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1860 := $xor.i32($i1856,$i1859);
  $i1860.dup := $or.i1($i1856.dup,$i1859.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1861 := $lshr.i32($i1832,10);
  $i1861.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1862 := $xor.i32($i1860,$i1861);
  $i1862.dup := $or.i1($i1860.dup,$i1861.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1863 := $add.i32($i1862,$i1727);
  $i1863.dup := $or.i1($i1862.dup,$i1727.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1864 := $lshr.i32($i951,7);
  $i1864.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1865 := $shl.i32($i951,25);
  $i1865.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1866 := $or.i32($i1864,$i1865);
  $i1866.dup := $or.i1($i1864.dup,$i1865.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1867 := $lshr.i32($i951,18);
  $i1867.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1868 := $shl.i32($i951,14);
  $i1868.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1869 := $or.i32($i1867,$i1868);
  $i1869.dup := $or.i1($i1867.dup,$i1868.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1870 := $xor.i32($i1866,$i1869);
  $i1870.dup := $or.i1($i1866.dup,$i1869.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1871 := $lshr.i32($i951,3);
  $i1871.dup := $or.i1($i951.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1872 := $xor.i32($i1870,$i1871);
  $i1872.dup := $or.i1($i1870.dup,$i1871.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1873 := $add.i32($i1863,$i1872);
  $i1873.dup := $or.i1($i1863.dup,$i1872.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1874 := $add.i32($i1873,$i930);
  $i1874.dup := $or.i1($i1873.dup,$i930.dup);
  call {:cexpr "w11"} boogie_si_record_i32($i1874);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1875 := $lshr.i32($i1853,17);
  $i1875.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1876 := $shl.i32($i1853,15);
  $i1876.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1877 := $or.i32($i1875,$i1876);
  $i1877.dup := $or.i1($i1875.dup,$i1876.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1878 := $lshr.i32($i1853,19);
  $i1878.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1879 := $shl.i32($i1853,13);
  $i1879.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1880 := $or.i32($i1878,$i1879);
  $i1880.dup := $or.i1($i1878.dup,$i1879.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1881 := $xor.i32($i1877,$i1880);
  $i1881.dup := $or.i1($i1877.dup,$i1880.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1882 := $lshr.i32($i1853,10);
  $i1882.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1883 := $xor.i32($i1881,$i1882);
  $i1883.dup := $or.i1($i1881.dup,$i1882.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1884 := $add.i32($i1883,$i1748);
  $i1884.dup := $or.i1($i1883.dup,$i1748.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1885 := $lshr.i32($i972,7);
  $i1885.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1886 := $shl.i32($i972,25);
  $i1886.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1887 := $or.i32($i1885,$i1886);
  $i1887.dup := $or.i1($i1885.dup,$i1886.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1888 := $lshr.i32($i972,18);
  $i1888.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1889 := $shl.i32($i972,14);
  $i1889.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1890 := $or.i32($i1888,$i1889);
  $i1890.dup := $or.i1($i1888.dup,$i1889.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1891 := $xor.i32($i1887,$i1890);
  $i1891.dup := $or.i1($i1887.dup,$i1890.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1892 := $lshr.i32($i972,3);
  $i1892.dup := $or.i1($i972.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1893 := $xor.i32($i1891,$i1892);
  $i1893.dup := $or.i1($i1891.dup,$i1892.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1894 := $add.i32($i1884,$i1893);
  $i1894.dup := $or.i1($i1884.dup,$i1893.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1895 := $add.i32($i1894,$i951);
  $i1895.dup := $or.i1($i1894.dup,$i951.dup);
  call {:cexpr "w12"} boogie_si_record_i32($i1895);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1896 := $lshr.i32($i1874,17);
  $i1896.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1897 := $shl.i32($i1874,15);
  $i1897.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1898 := $or.i32($i1896,$i1897);
  $i1898.dup := $or.i1($i1896.dup,$i1897.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1899 := $lshr.i32($i1874,19);
  $i1899.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1900 := $shl.i32($i1874,13);
  $i1900.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1901 := $or.i32($i1899,$i1900);
  $i1901.dup := $or.i1($i1899.dup,$i1900.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1902 := $xor.i32($i1898,$i1901);
  $i1902.dup := $or.i1($i1898.dup,$i1901.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1903 := $lshr.i32($i1874,10);
  $i1903.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1904 := $xor.i32($i1902,$i1903);
  $i1904.dup := $or.i1($i1902.dup,$i1903.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1905 := $add.i32($i1904,$i1769);
  $i1905.dup := $or.i1($i1904.dup,$i1769.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1906 := $lshr.i32($i993,7);
  $i1906.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1907 := $shl.i32($i993,25);
  $i1907.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1908 := $or.i32($i1906,$i1907);
  $i1908.dup := $or.i1($i1906.dup,$i1907.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1909 := $lshr.i32($i993,18);
  $i1909.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1910 := $shl.i32($i993,14);
  $i1910.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1911 := $or.i32($i1909,$i1910);
  $i1911.dup := $or.i1($i1909.dup,$i1910.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1912 := $xor.i32($i1908,$i1911);
  $i1912.dup := $or.i1($i1908.dup,$i1911.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1913 := $lshr.i32($i993,3);
  $i1913.dup := $or.i1($i993.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1914 := $xor.i32($i1912,$i1913);
  $i1914.dup := $or.i1($i1912.dup,$i1913.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1915 := $add.i32($i1905,$i1914);
  $i1915.dup := $or.i1($i1905.dup,$i1914.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1916 := $add.i32($i1915,$i972);
  $i1916.dup := $or.i1($i1915.dup,$i972.dup);
  call {:cexpr "w13"} boogie_si_record_i32($i1916);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1917 := $lshr.i32($i1895,17);
  $i1917.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1918 := $shl.i32($i1895,15);
  $i1918.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1919 := $or.i32($i1917,$i1918);
  $i1919.dup := $or.i1($i1917.dup,$i1918.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1920 := $lshr.i32($i1895,19);
  $i1920.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1921 := $shl.i32($i1895,13);
  $i1921.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1922 := $or.i32($i1920,$i1921);
  $i1922.dup := $or.i1($i1920.dup,$i1921.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1923 := $xor.i32($i1919,$i1922);
  $i1923.dup := $or.i1($i1919.dup,$i1922.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1924 := $lshr.i32($i1895,10);
  $i1924.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1925 := $xor.i32($i1923,$i1924);
  $i1925.dup := $or.i1($i1923.dup,$i1924.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1926 := $add.i32($i1925,$i1790);
  $i1926.dup := $or.i1($i1925.dup,$i1790.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1927 := $lshr.i32($i1014,7);
  $i1927.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1928 := $shl.i32($i1014,25);
  $i1928.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1929 := $or.i32($i1927,$i1928);
  $i1929.dup := $or.i1($i1927.dup,$i1928.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1930 := $lshr.i32($i1014,18);
  $i1930.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1931 := $shl.i32($i1014,14);
  $i1931.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1932 := $or.i32($i1930,$i1931);
  $i1932.dup := $or.i1($i1930.dup,$i1931.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1933 := $xor.i32($i1929,$i1932);
  $i1933.dup := $or.i1($i1929.dup,$i1932.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1934 := $lshr.i32($i1014,3);
  $i1934.dup := $or.i1($i1014.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1935 := $xor.i32($i1933,$i1934);
  $i1935.dup := $or.i1($i1933.dup,$i1934.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1936 := $add.i32($i1926,$i1935);
  $i1936.dup := $or.i1($i1926.dup,$i1935.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1937 := $add.i32($i1936,$i993);
  $i1937.dup := $or.i1($i1936.dup,$i993.dup);
  call {:cexpr "w14"} boogie_si_record_i32($i1937);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1938 := $lshr.i32($i1916,17);
  $i1938.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1939 := $shl.i32($i1916,15);
  $i1939.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1940 := $or.i32($i1938,$i1939);
  $i1940.dup := $or.i1($i1938.dup,$i1939.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1941 := $lshr.i32($i1916,19);
  $i1941.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1942 := $shl.i32($i1916,13);
  $i1942.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1943 := $or.i32($i1941,$i1942);
  $i1943.dup := $or.i1($i1941.dup,$i1942.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1944 := $xor.i32($i1940,$i1943);
  $i1944.dup := $or.i1($i1940.dup,$i1943.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1945 := $lshr.i32($i1916,10);
  $i1945.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1946 := $xor.i32($i1944,$i1945);
  $i1946.dup := $or.i1($i1944.dup,$i1945.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1947 := $add.i32($i1946,$i1811);
  $i1947.dup := $or.i1($i1946.dup,$i1811.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1948 := $lshr.i32($i1643,7);
  $i1948.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1949 := $shl.i32($i1643,25);
  $i1949.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1950 := $or.i32($i1948,$i1949);
  $i1950.dup := $or.i1($i1948.dup,$i1949.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1951 := $lshr.i32($i1643,18);
  $i1951.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1952 := $shl.i32($i1643,14);
  $i1952.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1953 := $or.i32($i1951,$i1952);
  $i1953.dup := $or.i1($i1951.dup,$i1952.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1954 := $xor.i32($i1950,$i1953);
  $i1954.dup := $or.i1($i1950.dup,$i1953.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1955 := $lshr.i32($i1643,3);
  $i1955.dup := $or.i1($i1643.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1956 := $xor.i32($i1954,$i1955);
  $i1956.dup := $or.i1($i1954.dup,$i1955.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1957 := $add.i32($i1947,$i1956);
  $i1957.dup := $or.i1($i1947.dup,$i1956.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i1958 := $add.i32($i1957,$i1014);
  $i1958.dup := $or.i1($i1957.dup,$i1014.dup);
  call {:cexpr "w15"} boogie_si_record_i32($i1958);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1959 := $lshr.i32($i1621,6);
  $i1959.dup := $or.i1($i1621.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1960 := $shl.i32($i1621,26);
  $i1960.dup := $or.i1($i1621.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1961 := $or.i32($i1959,$i1960);
  $i1961.dup := $or.i1($i1959.dup,$i1960.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1962 := $lshr.i32($i1621,11);
  $i1962.dup := $or.i1($i1621.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1963 := $shl.i32($i1621,21);
  $i1963.dup := $or.i1($i1621.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1964 := $or.i32($i1962,$i1963);
  $i1964.dup := $or.i1($i1962.dup,$i1963.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1965 := $xor.i32($i1961,$i1964);
  $i1965.dup := $or.i1($i1961.dup,$i1964.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1966 := $lshr.i32($i1621,25);
  $i1966.dup := $or.i1($i1621.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1967 := $shl.i32($i1621,7);
  $i1967.dup := $or.i1($i1621.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1968 := $or.i32($i1966,$i1967);
  $i1968.dup := $or.i1($i1966.dup,$i1967.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1969 := $xor.i32($i1965,$i1968);
  $i1969.dup := $or.i1($i1965.dup,$i1968.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1970 := $add.i32($i1507,$i1969);
  $i1970.dup := $or.i1($i1507.dup,$i1969.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1971 := $and.i32($i1621,$i1583);
  $i1971.dup := $or.i1($i1621.dup,$i1583.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1972 := $xor.i32($i1621,$sub.i32(0,1));
  $i1972.dup := $or.i1($i1621.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1973 := $and.i32($i1972,$i1545);
  $i1973.dup := $or.i1($i1972.dup,$i1545.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1974 := $xor.i32($i1971,$i1973);
  $i1974.dup := $or.i1($i1971.dup,$i1973.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1975 := $add.i32($i1970,$i1974);
  $i1975.dup := $or.i1($i1970.dup,$i1974.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1976 := $add.i32($i1975,666307205);
  $i1976.dup := $or.i1($i1975.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1977 := $add.i32($i1976,$i1643);
  $i1977.dup := $or.i1($i1976.dup,$i1643.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i1977);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1978 := $lshr.i32($i1622,2);
  $i1978.dup := $or.i1($i1622.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1979 := $shl.i32($i1622,30);
  $i1979.dup := $or.i1($i1622.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1980 := $or.i32($i1978,$i1979);
  $i1980.dup := $or.i1($i1978.dup,$i1979.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1981 := $lshr.i32($i1622,13);
  $i1981.dup := $or.i1($i1622.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1982 := $shl.i32($i1622,19);
  $i1982.dup := $or.i1($i1622.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1983 := $or.i32($i1981,$i1982);
  $i1983.dup := $or.i1($i1981.dup,$i1982.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1984 := $xor.i32($i1980,$i1983);
  $i1984.dup := $or.i1($i1980.dup,$i1983.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1985 := $lshr.i32($i1622,22);
  $i1985.dup := $or.i1($i1622.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1986 := $shl.i32($i1622,10);
  $i1986.dup := $or.i1($i1622.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1987 := $or.i32($i1985,$i1986);
  $i1987.dup := $or.i1($i1985.dup,$i1986.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1988 := $xor.i32($i1984,$i1987);
  $i1988.dup := $or.i1($i1984.dup,$i1987.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1989 := $and.i32($i1622,$i1584);
  $i1989.dup := $or.i1($i1622.dup,$i1584.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1990 := $and.i32($i1622,$i1546);
  $i1990.dup := $or.i1($i1622.dup,$i1546.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1991 := $xor.i32($i1989,$i1990);
  $i1991.dup := $or.i1($i1989.dup,$i1990.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1992 := $and.i32($i1584,$i1546);
  $i1992.dup := $or.i1($i1584.dup,$i1546.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1993 := $xor.i32($i1991,$i1992);
  $i1993.dup := $or.i1($i1991.dup,$i1992.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1994 := $add.i32($i1988,$i1993);
  $i1994.dup := $or.i1($i1988.dup,$i1993.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i1994);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1995 := $add.i32($i1508,$i1977);
  $i1995.dup := $or.i1($i1508.dup,$i1977.dup);
  call {:cexpr "e"} boogie_si_record_i32($i1995);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i1996 := $add.i32($i1977,$i1994);
  $i1996.dup := $or.i1($i1977.dup,$i1994.dup);
  call {:cexpr "a"} boogie_si_record_i32($i1996);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i1997 := $lshr.i32($i1995,6);
  $i1997.dup := $or.i1($i1995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i1998 := $shl.i32($i1995,26);
  $i1998.dup := $or.i1($i1995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i1999 := $or.i32($i1997,$i1998);
  $i1999.dup := $or.i1($i1997.dup,$i1998.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2000 := $lshr.i32($i1995,11);
  $i2000.dup := $or.i1($i1995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2001 := $shl.i32($i1995,21);
  $i2001.dup := $or.i1($i1995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2002 := $or.i32($i2000,$i2001);
  $i2002.dup := $or.i1($i2000.dup,$i2001.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2003 := $xor.i32($i1999,$i2002);
  $i2003.dup := $or.i1($i1999.dup,$i2002.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2004 := $lshr.i32($i1995,25);
  $i2004.dup := $or.i1($i1995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2005 := $shl.i32($i1995,7);
  $i2005.dup := $or.i1($i1995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2006 := $or.i32($i2004,$i2005);
  $i2006.dup := $or.i1($i2004.dup,$i2005.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2007 := $xor.i32($i2003,$i2006);
  $i2007.dup := $or.i1($i2003.dup,$i2006.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2008 := $add.i32($i1545,$i2007);
  $i2008.dup := $or.i1($i1545.dup,$i2007.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2009 := $and.i32($i1995,$i1621);
  $i2009.dup := $or.i1($i1995.dup,$i1621.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2010 := $xor.i32($i1995,$sub.i32(0,1));
  $i2010.dup := $or.i1($i1995.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2011 := $and.i32($i2010,$i1583);
  $i2011.dup := $or.i1($i2010.dup,$i1583.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2012 := $xor.i32($i2009,$i2011);
  $i2012.dup := $or.i1($i2009.dup,$i2011.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2013 := $add.i32($i2008,$i2012);
  $i2013.dup := $or.i1($i2008.dup,$i2012.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2014 := $add.i32($i2013,773529912);
  $i2014.dup := $or.i1($i2013.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2015 := $add.i32($i2014,$i1664);
  $i2015.dup := $or.i1($i2014.dup,$i1664.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2015);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2016 := $lshr.i32($i1996,2);
  $i2016.dup := $or.i1($i1996.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2017 := $shl.i32($i1996,30);
  $i2017.dup := $or.i1($i1996.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2018 := $or.i32($i2016,$i2017);
  $i2018.dup := $or.i1($i2016.dup,$i2017.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2019 := $lshr.i32($i1996,13);
  $i2019.dup := $or.i1($i1996.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2020 := $shl.i32($i1996,19);
  $i2020.dup := $or.i1($i1996.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2021 := $or.i32($i2019,$i2020);
  $i2021.dup := $or.i1($i2019.dup,$i2020.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2022 := $xor.i32($i2018,$i2021);
  $i2022.dup := $or.i1($i2018.dup,$i2021.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2023 := $lshr.i32($i1996,22);
  $i2023.dup := $or.i1($i1996.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2024 := $shl.i32($i1996,10);
  $i2024.dup := $or.i1($i1996.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2025 := $or.i32($i2023,$i2024);
  $i2025.dup := $or.i1($i2023.dup,$i2024.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2026 := $xor.i32($i2022,$i2025);
  $i2026.dup := $or.i1($i2022.dup,$i2025.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2027 := $and.i32($i1996,$i1622);
  $i2027.dup := $or.i1($i1996.dup,$i1622.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2028 := $and.i32($i1996,$i1584);
  $i2028.dup := $or.i1($i1996.dup,$i1584.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2029 := $xor.i32($i2027,$i2028);
  $i2029.dup := $or.i1($i2027.dup,$i2028.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2030 := $and.i32($i1622,$i1584);
  $i2030.dup := $or.i1($i1622.dup,$i1584.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2031 := $xor.i32($i2029,$i2030);
  $i2031.dup := $or.i1($i2029.dup,$i2030.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2032 := $add.i32($i2026,$i2031);
  $i2032.dup := $or.i1($i2026.dup,$i2031.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2032);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2033 := $add.i32($i1546,$i2015);
  $i2033.dup := $or.i1($i1546.dup,$i2015.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2033);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 143, 5} true;
  assume {:verifier.code 0} true;
  $i2034 := $add.i32($i2015,$i2032);
  $i2034.dup := $or.i1($i2015.dup,$i2032.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2034);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2035 := $lshr.i32($i2033,6);
  $i2035.dup := $or.i1($i2033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2036 := $shl.i32($i2033,26);
  $i2036.dup := $or.i1($i2033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2037 := $or.i32($i2035,$i2036);
  $i2037.dup := $or.i1($i2035.dup,$i2036.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2038 := $lshr.i32($i2033,11);
  $i2038.dup := $or.i1($i2033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2039 := $shl.i32($i2033,21);
  $i2039.dup := $or.i1($i2033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2040 := $or.i32($i2038,$i2039);
  $i2040.dup := $or.i1($i2038.dup,$i2039.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2041 := $xor.i32($i2037,$i2040);
  $i2041.dup := $or.i1($i2037.dup,$i2040.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2042 := $lshr.i32($i2033,25);
  $i2042.dup := $or.i1($i2033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2043 := $shl.i32($i2033,7);
  $i2043.dup := $or.i1($i2033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2044 := $or.i32($i2042,$i2043);
  $i2044.dup := $or.i1($i2042.dup,$i2043.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2045 := $xor.i32($i2041,$i2044);
  $i2045.dup := $or.i1($i2041.dup,$i2044.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2046 := $add.i32($i1583,$i2045);
  $i2046.dup := $or.i1($i1583.dup,$i2045.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2047 := $and.i32($i2033,$i1995);
  $i2047.dup := $or.i1($i2033.dup,$i1995.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2048 := $xor.i32($i2033,$sub.i32(0,1));
  $i2048.dup := $or.i1($i2033.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2049 := $and.i32($i2048,$i1621);
  $i2049.dup := $or.i1($i2048.dup,$i1621.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2050 := $xor.i32($i2047,$i2049);
  $i2050.dup := $or.i1($i2047.dup,$i2049.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2051 := $add.i32($i2046,$i2050);
  $i2051.dup := $or.i1($i2046.dup,$i2050.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2052 := $add.i32($i2051,1294757372);
  $i2052.dup := $or.i1($i2051.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2053 := $add.i32($i2052,$i1685);
  $i2053.dup := $or.i1($i2052.dup,$i1685.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2053);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2054 := $lshr.i32($i2034,2);
  $i2054.dup := $or.i1($i2034.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2055 := $shl.i32($i2034,30);
  $i2055.dup := $or.i1($i2034.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2056 := $or.i32($i2054,$i2055);
  $i2056.dup := $or.i1($i2054.dup,$i2055.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2057 := $lshr.i32($i2034,13);
  $i2057.dup := $or.i1($i2034.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2058 := $shl.i32($i2034,19);
  $i2058.dup := $or.i1($i2034.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2059 := $or.i32($i2057,$i2058);
  $i2059.dup := $or.i1($i2057.dup,$i2058.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2060 := $xor.i32($i2056,$i2059);
  $i2060.dup := $or.i1($i2056.dup,$i2059.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2061 := $lshr.i32($i2034,22);
  $i2061.dup := $or.i1($i2034.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2062 := $shl.i32($i2034,10);
  $i2062.dup := $or.i1($i2034.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2063 := $or.i32($i2061,$i2062);
  $i2063.dup := $or.i1($i2061.dup,$i2062.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2064 := $xor.i32($i2060,$i2063);
  $i2064.dup := $or.i1($i2060.dup,$i2063.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2065 := $and.i32($i2034,$i1996);
  $i2065.dup := $or.i1($i2034.dup,$i1996.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2066 := $and.i32($i2034,$i1622);
  $i2066.dup := $or.i1($i2034.dup,$i1622.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2067 := $xor.i32($i2065,$i2066);
  $i2067.dup := $or.i1($i2065.dup,$i2066.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2068 := $and.i32($i1996,$i1622);
  $i2068.dup := $or.i1($i1996.dup,$i1622.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2069 := $xor.i32($i2067,$i2068);
  $i2069.dup := $or.i1($i2067.dup,$i2068.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2070 := $add.i32($i2064,$i2069);
  $i2070.dup := $or.i1($i2064.dup,$i2069.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2070);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2071 := $add.i32($i1584,$i2053);
  $i2071.dup := $or.i1($i1584.dup,$i2053.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2071);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i2072 := $add.i32($i2053,$i2070);
  $i2072.dup := $or.i1($i2053.dup,$i2070.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2072);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2073 := $lshr.i32($i2071,6);
  $i2073.dup := $or.i1($i2071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2074 := $shl.i32($i2071,26);
  $i2074.dup := $or.i1($i2071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2075 := $or.i32($i2073,$i2074);
  $i2075.dup := $or.i1($i2073.dup,$i2074.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2076 := $lshr.i32($i2071,11);
  $i2076.dup := $or.i1($i2071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2077 := $shl.i32($i2071,21);
  $i2077.dup := $or.i1($i2071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2078 := $or.i32($i2076,$i2077);
  $i2078.dup := $or.i1($i2076.dup,$i2077.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2079 := $xor.i32($i2075,$i2078);
  $i2079.dup := $or.i1($i2075.dup,$i2078.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2080 := $lshr.i32($i2071,25);
  $i2080.dup := $or.i1($i2071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2081 := $shl.i32($i2071,7);
  $i2081.dup := $or.i1($i2071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2082 := $or.i32($i2080,$i2081);
  $i2082.dup := $or.i1($i2080.dup,$i2081.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2083 := $xor.i32($i2079,$i2082);
  $i2083.dup := $or.i1($i2079.dup,$i2082.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2084 := $add.i32($i1621,$i2083);
  $i2084.dup := $or.i1($i1621.dup,$i2083.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2085 := $and.i32($i2071,$i2033);
  $i2085.dup := $or.i1($i2071.dup,$i2033.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2086 := $xor.i32($i2071,$sub.i32(0,1));
  $i2086.dup := $or.i1($i2071.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2087 := $and.i32($i2086,$i1995);
  $i2087.dup := $or.i1($i2086.dup,$i1995.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2088 := $xor.i32($i2085,$i2087);
  $i2088.dup := $or.i1($i2085.dup,$i2087.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2089 := $add.i32($i2084,$i2088);
  $i2089.dup := $or.i1($i2084.dup,$i2088.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2090 := $add.i32($i2089,1396182291);
  $i2090.dup := $or.i1($i2089.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2091 := $add.i32($i2090,$i1706);
  $i2091.dup := $or.i1($i2090.dup,$i1706.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2091);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2092 := $lshr.i32($i2072,2);
  $i2092.dup := $or.i1($i2072.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2093 := $shl.i32($i2072,30);
  $i2093.dup := $or.i1($i2072.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2094 := $or.i32($i2092,$i2093);
  $i2094.dup := $or.i1($i2092.dup,$i2093.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2095 := $lshr.i32($i2072,13);
  $i2095.dup := $or.i1($i2072.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2096 := $shl.i32($i2072,19);
  $i2096.dup := $or.i1($i2072.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2097 := $or.i32($i2095,$i2096);
  $i2097.dup := $or.i1($i2095.dup,$i2096.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2098 := $xor.i32($i2094,$i2097);
  $i2098.dup := $or.i1($i2094.dup,$i2097.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2099 := $lshr.i32($i2072,22);
  $i2099.dup := $or.i1($i2072.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2100 := $shl.i32($i2072,10);
  $i2100.dup := $or.i1($i2072.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2101 := $or.i32($i2099,$i2100);
  $i2101.dup := $or.i1($i2099.dup,$i2100.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2102 := $xor.i32($i2098,$i2101);
  $i2102.dup := $or.i1($i2098.dup,$i2101.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2103 := $and.i32($i2072,$i2034);
  $i2103.dup := $or.i1($i2072.dup,$i2034.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2104 := $and.i32($i2072,$i1996);
  $i2104.dup := $or.i1($i2072.dup,$i1996.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2105 := $xor.i32($i2103,$i2104);
  $i2105.dup := $or.i1($i2103.dup,$i2104.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2106 := $and.i32($i2034,$i1996);
  $i2106.dup := $or.i1($i2034.dup,$i1996.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2107 := $xor.i32($i2105,$i2106);
  $i2107.dup := $or.i1($i2105.dup,$i2106.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2108 := $add.i32($i2102,$i2107);
  $i2108.dup := $or.i1($i2102.dup,$i2107.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2108);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2109 := $add.i32($i1622,$i2091);
  $i2109.dup := $or.i1($i1622.dup,$i2091.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2109);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i2110 := $add.i32($i2091,$i2108);
  $i2110.dup := $or.i1($i2091.dup,$i2108.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2110);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2111 := $lshr.i32($i2109,6);
  $i2111.dup := $or.i1($i2109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2112 := $shl.i32($i2109,26);
  $i2112.dup := $or.i1($i2109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2113 := $or.i32($i2111,$i2112);
  $i2113.dup := $or.i1($i2111.dup,$i2112.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2114 := $lshr.i32($i2109,11);
  $i2114.dup := $or.i1($i2109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2115 := $shl.i32($i2109,21);
  $i2115.dup := $or.i1($i2109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2116 := $or.i32($i2114,$i2115);
  $i2116.dup := $or.i1($i2114.dup,$i2115.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2117 := $xor.i32($i2113,$i2116);
  $i2117.dup := $or.i1($i2113.dup,$i2116.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2118 := $lshr.i32($i2109,25);
  $i2118.dup := $or.i1($i2109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2119 := $shl.i32($i2109,7);
  $i2119.dup := $or.i1($i2109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2120 := $or.i32($i2118,$i2119);
  $i2120.dup := $or.i1($i2118.dup,$i2119.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2121 := $xor.i32($i2117,$i2120);
  $i2121.dup := $or.i1($i2117.dup,$i2120.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2122 := $add.i32($i1995,$i2121);
  $i2122.dup := $or.i1($i1995.dup,$i2121.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2123 := $and.i32($i2109,$i2071);
  $i2123.dup := $or.i1($i2109.dup,$i2071.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2124 := $xor.i32($i2109,$sub.i32(0,1));
  $i2124.dup := $or.i1($i2109.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2125 := $and.i32($i2124,$i2033);
  $i2125.dup := $or.i1($i2124.dup,$i2033.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2126 := $xor.i32($i2123,$i2125);
  $i2126.dup := $or.i1($i2123.dup,$i2125.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2127 := $add.i32($i2122,$i2126);
  $i2127.dup := $or.i1($i2122.dup,$i2126.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2128 := $add.i32($i2127,1695183700);
  $i2128.dup := $or.i1($i2127.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2129 := $add.i32($i2128,$i1727);
  $i2129.dup := $or.i1($i2128.dup,$i1727.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2129);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2130 := $lshr.i32($i2110,2);
  $i2130.dup := $or.i1($i2110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2131 := $shl.i32($i2110,30);
  $i2131.dup := $or.i1($i2110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2132 := $or.i32($i2130,$i2131);
  $i2132.dup := $or.i1($i2130.dup,$i2131.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2133 := $lshr.i32($i2110,13);
  $i2133.dup := $or.i1($i2110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2134 := $shl.i32($i2110,19);
  $i2134.dup := $or.i1($i2110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2135 := $or.i32($i2133,$i2134);
  $i2135.dup := $or.i1($i2133.dup,$i2134.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2136 := $xor.i32($i2132,$i2135);
  $i2136.dup := $or.i1($i2132.dup,$i2135.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2137 := $lshr.i32($i2110,22);
  $i2137.dup := $or.i1($i2110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2138 := $shl.i32($i2110,10);
  $i2138.dup := $or.i1($i2110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2139 := $or.i32($i2137,$i2138);
  $i2139.dup := $or.i1($i2137.dup,$i2138.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2140 := $xor.i32($i2136,$i2139);
  $i2140.dup := $or.i1($i2136.dup,$i2139.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2141 := $and.i32($i2110,$i2072);
  $i2141.dup := $or.i1($i2110.dup,$i2072.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2142 := $and.i32($i2110,$i2034);
  $i2142.dup := $or.i1($i2110.dup,$i2034.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2143 := $xor.i32($i2141,$i2142);
  $i2143.dup := $or.i1($i2141.dup,$i2142.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2144 := $and.i32($i2072,$i2034);
  $i2144.dup := $or.i1($i2072.dup,$i2034.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2145 := $xor.i32($i2143,$i2144);
  $i2145.dup := $or.i1($i2143.dup,$i2144.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2146 := $add.i32($i2140,$i2145);
  $i2146.dup := $or.i1($i2140.dup,$i2145.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2146);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2147 := $add.i32($i1996,$i2129);
  $i2147.dup := $or.i1($i1996.dup,$i2129.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2147);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i2148 := $add.i32($i2129,$i2146);
  $i2148.dup := $or.i1($i2129.dup,$i2146.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2148);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2149 := $lshr.i32($i2147,6);
  $i2149.dup := $or.i1($i2147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2150 := $shl.i32($i2147,26);
  $i2150.dup := $or.i1($i2147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2151 := $or.i32($i2149,$i2150);
  $i2151.dup := $or.i1($i2149.dup,$i2150.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2152 := $lshr.i32($i2147,11);
  $i2152.dup := $or.i1($i2147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2153 := $shl.i32($i2147,21);
  $i2153.dup := $or.i1($i2147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2154 := $or.i32($i2152,$i2153);
  $i2154.dup := $or.i1($i2152.dup,$i2153.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2155 := $xor.i32($i2151,$i2154);
  $i2155.dup := $or.i1($i2151.dup,$i2154.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2156 := $lshr.i32($i2147,25);
  $i2156.dup := $or.i1($i2147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2157 := $shl.i32($i2147,7);
  $i2157.dup := $or.i1($i2147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2158 := $or.i32($i2156,$i2157);
  $i2158.dup := $or.i1($i2156.dup,$i2157.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2159 := $xor.i32($i2155,$i2158);
  $i2159.dup := $or.i1($i2155.dup,$i2158.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2160 := $add.i32($i2033,$i2159);
  $i2160.dup := $or.i1($i2033.dup,$i2159.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2161 := $and.i32($i2147,$i2109);
  $i2161.dup := $or.i1($i2147.dup,$i2109.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2162 := $xor.i32($i2147,$sub.i32(0,1));
  $i2162.dup := $or.i1($i2147.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2163 := $and.i32($i2162,$i2071);
  $i2163.dup := $or.i1($i2162.dup,$i2071.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2164 := $xor.i32($i2161,$i2163);
  $i2164.dup := $or.i1($i2161.dup,$i2163.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2165 := $add.i32($i2160,$i2164);
  $i2165.dup := $or.i1($i2160.dup,$i2164.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2166 := $add.i32($i2165,1986661051);
  $i2166.dup := $or.i1($i2165.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2167 := $add.i32($i2166,$i1748);
  $i2167.dup := $or.i1($i2166.dup,$i1748.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2167);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2168 := $lshr.i32($i2148,2);
  $i2168.dup := $or.i1($i2148.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2169 := $shl.i32($i2148,30);
  $i2169.dup := $or.i1($i2148.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2170 := $or.i32($i2168,$i2169);
  $i2170.dup := $or.i1($i2168.dup,$i2169.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2171 := $lshr.i32($i2148,13);
  $i2171.dup := $or.i1($i2148.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2172 := $shl.i32($i2148,19);
  $i2172.dup := $or.i1($i2148.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2173 := $or.i32($i2171,$i2172);
  $i2173.dup := $or.i1($i2171.dup,$i2172.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2174 := $xor.i32($i2170,$i2173);
  $i2174.dup := $or.i1($i2170.dup,$i2173.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2175 := $lshr.i32($i2148,22);
  $i2175.dup := $or.i1($i2148.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2176 := $shl.i32($i2148,10);
  $i2176.dup := $or.i1($i2148.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2177 := $or.i32($i2175,$i2176);
  $i2177.dup := $or.i1($i2175.dup,$i2176.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2178 := $xor.i32($i2174,$i2177);
  $i2178.dup := $or.i1($i2174.dup,$i2177.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2179 := $and.i32($i2148,$i2110);
  $i2179.dup := $or.i1($i2148.dup,$i2110.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2180 := $and.i32($i2148,$i2072);
  $i2180.dup := $or.i1($i2148.dup,$i2072.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2181 := $xor.i32($i2179,$i2180);
  $i2181.dup := $or.i1($i2179.dup,$i2180.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2182 := $and.i32($i2110,$i2072);
  $i2182.dup := $or.i1($i2110.dup,$i2072.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2183 := $xor.i32($i2181,$i2182);
  $i2183.dup := $or.i1($i2181.dup,$i2182.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2184 := $add.i32($i2178,$i2183);
  $i2184.dup := $or.i1($i2178.dup,$i2183.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2184);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2185 := $add.i32($i2034,$i2167);
  $i2185.dup := $or.i1($i2034.dup,$i2167.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2185);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i2186 := $add.i32($i2167,$i2184);
  $i2186.dup := $or.i1($i2167.dup,$i2184.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2186);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2187 := $lshr.i32($i2185,6);
  $i2187.dup := $or.i1($i2185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2188 := $shl.i32($i2185,26);
  $i2188.dup := $or.i1($i2185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2189 := $or.i32($i2187,$i2188);
  $i2189.dup := $or.i1($i2187.dup,$i2188.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2190 := $lshr.i32($i2185,11);
  $i2190.dup := $or.i1($i2185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2191 := $shl.i32($i2185,21);
  $i2191.dup := $or.i1($i2185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2192 := $or.i32($i2190,$i2191);
  $i2192.dup := $or.i1($i2190.dup,$i2191.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2193 := $xor.i32($i2189,$i2192);
  $i2193.dup := $or.i1($i2189.dup,$i2192.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2194 := $lshr.i32($i2185,25);
  $i2194.dup := $or.i1($i2185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2195 := $shl.i32($i2185,7);
  $i2195.dup := $or.i1($i2185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2196 := $or.i32($i2194,$i2195);
  $i2196.dup := $or.i1($i2194.dup,$i2195.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2197 := $xor.i32($i2193,$i2196);
  $i2197.dup := $or.i1($i2193.dup,$i2196.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2198 := $add.i32($i2071,$i2197);
  $i2198.dup := $or.i1($i2071.dup,$i2197.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2199 := $and.i32($i2185,$i2147);
  $i2199.dup := $or.i1($i2185.dup,$i2147.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2200 := $xor.i32($i2185,$sub.i32(0,1));
  $i2200.dup := $or.i1($i2185.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2201 := $and.i32($i2200,$i2109);
  $i2201.dup := $or.i1($i2200.dup,$i2109.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2202 := $xor.i32($i2199,$i2201);
  $i2202.dup := $or.i1($i2199.dup,$i2201.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2203 := $add.i32($i2198,$i2202);
  $i2203.dup := $or.i1($i2198.dup,$i2202.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2204 := $add.i32($i2203,2177026350);
  $i2204.dup := $or.i1($i2203.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2205 := $add.i32($i2204,$i1769);
  $i2205.dup := $or.i1($i2204.dup,$i1769.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2205);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2206 := $lshr.i32($i2186,2);
  $i2206.dup := $or.i1($i2186.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2207 := $shl.i32($i2186,30);
  $i2207.dup := $or.i1($i2186.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2208 := $or.i32($i2206,$i2207);
  $i2208.dup := $or.i1($i2206.dup,$i2207.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2209 := $lshr.i32($i2186,13);
  $i2209.dup := $or.i1($i2186.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2210 := $shl.i32($i2186,19);
  $i2210.dup := $or.i1($i2186.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2211 := $or.i32($i2209,$i2210);
  $i2211.dup := $or.i1($i2209.dup,$i2210.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2212 := $xor.i32($i2208,$i2211);
  $i2212.dup := $or.i1($i2208.dup,$i2211.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2213 := $lshr.i32($i2186,22);
  $i2213.dup := $or.i1($i2186.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2214 := $shl.i32($i2186,10);
  $i2214.dup := $or.i1($i2186.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2215 := $or.i32($i2213,$i2214);
  $i2215.dup := $or.i1($i2213.dup,$i2214.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2216 := $xor.i32($i2212,$i2215);
  $i2216.dup := $or.i1($i2212.dup,$i2215.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2217 := $and.i32($i2186,$i2148);
  $i2217.dup := $or.i1($i2186.dup,$i2148.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2218 := $and.i32($i2186,$i2110);
  $i2218.dup := $or.i1($i2186.dup,$i2110.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2219 := $xor.i32($i2217,$i2218);
  $i2219.dup := $or.i1($i2217.dup,$i2218.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2220 := $and.i32($i2148,$i2110);
  $i2220.dup := $or.i1($i2148.dup,$i2110.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2221 := $xor.i32($i2219,$i2220);
  $i2221.dup := $or.i1($i2219.dup,$i2220.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2222 := $add.i32($i2216,$i2221);
  $i2222.dup := $or.i1($i2216.dup,$i2221.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2222);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2223 := $add.i32($i2072,$i2205);
  $i2223.dup := $or.i1($i2072.dup,$i2205.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2223);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i2224 := $add.i32($i2205,$i2222);
  $i2224.dup := $or.i1($i2205.dup,$i2222.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2224);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2225 := $lshr.i32($i2223,6);
  $i2225.dup := $or.i1($i2223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2226 := $shl.i32($i2223,26);
  $i2226.dup := $or.i1($i2223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2227 := $or.i32($i2225,$i2226);
  $i2227.dup := $or.i1($i2225.dup,$i2226.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2228 := $lshr.i32($i2223,11);
  $i2228.dup := $or.i1($i2223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2229 := $shl.i32($i2223,21);
  $i2229.dup := $or.i1($i2223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2230 := $or.i32($i2228,$i2229);
  $i2230.dup := $or.i1($i2228.dup,$i2229.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2231 := $xor.i32($i2227,$i2230);
  $i2231.dup := $or.i1($i2227.dup,$i2230.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2232 := $lshr.i32($i2223,25);
  $i2232.dup := $or.i1($i2223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2233 := $shl.i32($i2223,7);
  $i2233.dup := $or.i1($i2223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2234 := $or.i32($i2232,$i2233);
  $i2234.dup := $or.i1($i2232.dup,$i2233.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2235 := $xor.i32($i2231,$i2234);
  $i2235.dup := $or.i1($i2231.dup,$i2234.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2236 := $add.i32($i2109,$i2235);
  $i2236.dup := $or.i1($i2109.dup,$i2235.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2237 := $and.i32($i2223,$i2185);
  $i2237.dup := $or.i1($i2223.dup,$i2185.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2238 := $xor.i32($i2223,$sub.i32(0,1));
  $i2238.dup := $or.i1($i2223.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2239 := $and.i32($i2238,$i2147);
  $i2239.dup := $or.i1($i2238.dup,$i2147.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2240 := $xor.i32($i2237,$i2239);
  $i2240.dup := $or.i1($i2237.dup,$i2239.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2241 := $add.i32($i2236,$i2240);
  $i2241.dup := $or.i1($i2236.dup,$i2240.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2242 := $add.i32($i2241,2456956037);
  $i2242.dup := $or.i1($i2241.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2243 := $add.i32($i2242,$i1790);
  $i2243.dup := $or.i1($i2242.dup,$i1790.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2243);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2244 := $lshr.i32($i2224,2);
  $i2244.dup := $or.i1($i2224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2245 := $shl.i32($i2224,30);
  $i2245.dup := $or.i1($i2224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2246 := $or.i32($i2244,$i2245);
  $i2246.dup := $or.i1($i2244.dup,$i2245.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2247 := $lshr.i32($i2224,13);
  $i2247.dup := $or.i1($i2224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2248 := $shl.i32($i2224,19);
  $i2248.dup := $or.i1($i2224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2249 := $or.i32($i2247,$i2248);
  $i2249.dup := $or.i1($i2247.dup,$i2248.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2250 := $xor.i32($i2246,$i2249);
  $i2250.dup := $or.i1($i2246.dup,$i2249.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2251 := $lshr.i32($i2224,22);
  $i2251.dup := $or.i1($i2224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2252 := $shl.i32($i2224,10);
  $i2252.dup := $or.i1($i2224.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2253 := $or.i32($i2251,$i2252);
  $i2253.dup := $or.i1($i2251.dup,$i2252.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2254 := $xor.i32($i2250,$i2253);
  $i2254.dup := $or.i1($i2250.dup,$i2253.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2255 := $and.i32($i2224,$i2186);
  $i2255.dup := $or.i1($i2224.dup,$i2186.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2256 := $and.i32($i2224,$i2148);
  $i2256.dup := $or.i1($i2224.dup,$i2148.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2257 := $xor.i32($i2255,$i2256);
  $i2257.dup := $or.i1($i2255.dup,$i2256.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2258 := $and.i32($i2186,$i2148);
  $i2258.dup := $or.i1($i2186.dup,$i2148.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2259 := $xor.i32($i2257,$i2258);
  $i2259.dup := $or.i1($i2257.dup,$i2258.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2260 := $add.i32($i2254,$i2259);
  $i2260.dup := $or.i1($i2254.dup,$i2259.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2260);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2261 := $add.i32($i2110,$i2243);
  $i2261.dup := $or.i1($i2110.dup,$i2243.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2261);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 149, 5} true;
  assume {:verifier.code 0} true;
  $i2262 := $add.i32($i2243,$i2260);
  $i2262.dup := $or.i1($i2243.dup,$i2260.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2262);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2263 := $lshr.i32($i2261,6);
  $i2263.dup := $or.i1($i2261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2264 := $shl.i32($i2261,26);
  $i2264.dup := $or.i1($i2261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2265 := $or.i32($i2263,$i2264);
  $i2265.dup := $or.i1($i2263.dup,$i2264.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2266 := $lshr.i32($i2261,11);
  $i2266.dup := $or.i1($i2261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2267 := $shl.i32($i2261,21);
  $i2267.dup := $or.i1($i2261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2268 := $or.i32($i2266,$i2267);
  $i2268.dup := $or.i1($i2266.dup,$i2267.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2269 := $xor.i32($i2265,$i2268);
  $i2269.dup := $or.i1($i2265.dup,$i2268.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2270 := $lshr.i32($i2261,25);
  $i2270.dup := $or.i1($i2261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2271 := $shl.i32($i2261,7);
  $i2271.dup := $or.i1($i2261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2272 := $or.i32($i2270,$i2271);
  $i2272.dup := $or.i1($i2270.dup,$i2271.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2273 := $xor.i32($i2269,$i2272);
  $i2273.dup := $or.i1($i2269.dup,$i2272.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2274 := $add.i32($i2147,$i2273);
  $i2274.dup := $or.i1($i2147.dup,$i2273.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2275 := $and.i32($i2261,$i2223);
  $i2275.dup := $or.i1($i2261.dup,$i2223.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2276 := $xor.i32($i2261,$sub.i32(0,1));
  $i2276.dup := $or.i1($i2261.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2277 := $and.i32($i2276,$i2185);
  $i2277.dup := $or.i1($i2276.dup,$i2185.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2278 := $xor.i32($i2275,$i2277);
  $i2278.dup := $or.i1($i2275.dup,$i2277.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2279 := $add.i32($i2274,$i2278);
  $i2279.dup := $or.i1($i2274.dup,$i2278.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2280 := $add.i32($i2279,2730485921);
  $i2280.dup := $or.i1($i2279.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2281 := $add.i32($i2280,$i1811);
  $i2281.dup := $or.i1($i2280.dup,$i1811.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2281);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2282 := $lshr.i32($i2262,2);
  $i2282.dup := $or.i1($i2262.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2283 := $shl.i32($i2262,30);
  $i2283.dup := $or.i1($i2262.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2284 := $or.i32($i2282,$i2283);
  $i2284.dup := $or.i1($i2282.dup,$i2283.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2285 := $lshr.i32($i2262,13);
  $i2285.dup := $or.i1($i2262.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2286 := $shl.i32($i2262,19);
  $i2286.dup := $or.i1($i2262.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2287 := $or.i32($i2285,$i2286);
  $i2287.dup := $or.i1($i2285.dup,$i2286.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2288 := $xor.i32($i2284,$i2287);
  $i2288.dup := $or.i1($i2284.dup,$i2287.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2289 := $lshr.i32($i2262,22);
  $i2289.dup := $or.i1($i2262.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2290 := $shl.i32($i2262,10);
  $i2290.dup := $or.i1($i2262.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2291 := $or.i32($i2289,$i2290);
  $i2291.dup := $or.i1($i2289.dup,$i2290.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2292 := $xor.i32($i2288,$i2291);
  $i2292.dup := $or.i1($i2288.dup,$i2291.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2293 := $and.i32($i2262,$i2224);
  $i2293.dup := $or.i1($i2262.dup,$i2224.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2294 := $and.i32($i2262,$i2186);
  $i2294.dup := $or.i1($i2262.dup,$i2186.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2295 := $xor.i32($i2293,$i2294);
  $i2295.dup := $or.i1($i2293.dup,$i2294.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2296 := $and.i32($i2224,$i2186);
  $i2296.dup := $or.i1($i2224.dup,$i2186.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2297 := $xor.i32($i2295,$i2296);
  $i2297.dup := $or.i1($i2295.dup,$i2296.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2298 := $add.i32($i2292,$i2297);
  $i2298.dup := $or.i1($i2292.dup,$i2297.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2298);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2299 := $add.i32($i2148,$i2281);
  $i2299.dup := $or.i1($i2148.dup,$i2281.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2299);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i2300 := $add.i32($i2281,$i2298);
  $i2300.dup := $or.i1($i2281.dup,$i2298.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2300);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2301 := $lshr.i32($i2299,6);
  $i2301.dup := $or.i1($i2299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2302 := $shl.i32($i2299,26);
  $i2302.dup := $or.i1($i2299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2303 := $or.i32($i2301,$i2302);
  $i2303.dup := $or.i1($i2301.dup,$i2302.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2304 := $lshr.i32($i2299,11);
  $i2304.dup := $or.i1($i2299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2305 := $shl.i32($i2299,21);
  $i2305.dup := $or.i1($i2299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2306 := $or.i32($i2304,$i2305);
  $i2306.dup := $or.i1($i2304.dup,$i2305.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2307 := $xor.i32($i2303,$i2306);
  $i2307.dup := $or.i1($i2303.dup,$i2306.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2308 := $lshr.i32($i2299,25);
  $i2308.dup := $or.i1($i2299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2309 := $shl.i32($i2299,7);
  $i2309.dup := $or.i1($i2299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2310 := $or.i32($i2308,$i2309);
  $i2310.dup := $or.i1($i2308.dup,$i2309.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2311 := $xor.i32($i2307,$i2310);
  $i2311.dup := $or.i1($i2307.dup,$i2310.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2312 := $add.i32($i2185,$i2311);
  $i2312.dup := $or.i1($i2185.dup,$i2311.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2313 := $and.i32($i2299,$i2261);
  $i2313.dup := $or.i1($i2299.dup,$i2261.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2314 := $xor.i32($i2299,$sub.i32(0,1));
  $i2314.dup := $or.i1($i2299.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2315 := $and.i32($i2314,$i2223);
  $i2315.dup := $or.i1($i2314.dup,$i2223.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2316 := $xor.i32($i2313,$i2315);
  $i2316.dup := $or.i1($i2313.dup,$i2315.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2317 := $add.i32($i2312,$i2316);
  $i2317.dup := $or.i1($i2312.dup,$i2316.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2318 := $add.i32($i2317,2820302411);
  $i2318.dup := $or.i1($i2317.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2319 := $add.i32($i2318,$i1832);
  $i2319.dup := $or.i1($i2318.dup,$i1832.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2319);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2320 := $lshr.i32($i2300,2);
  $i2320.dup := $or.i1($i2300.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2321 := $shl.i32($i2300,30);
  $i2321.dup := $or.i1($i2300.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2322 := $or.i32($i2320,$i2321);
  $i2322.dup := $or.i1($i2320.dup,$i2321.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2323 := $lshr.i32($i2300,13);
  $i2323.dup := $or.i1($i2300.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2324 := $shl.i32($i2300,19);
  $i2324.dup := $or.i1($i2300.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2325 := $or.i32($i2323,$i2324);
  $i2325.dup := $or.i1($i2323.dup,$i2324.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2326 := $xor.i32($i2322,$i2325);
  $i2326.dup := $or.i1($i2322.dup,$i2325.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2327 := $lshr.i32($i2300,22);
  $i2327.dup := $or.i1($i2300.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2328 := $shl.i32($i2300,10);
  $i2328.dup := $or.i1($i2300.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2329 := $or.i32($i2327,$i2328);
  $i2329.dup := $or.i1($i2327.dup,$i2328.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2330 := $xor.i32($i2326,$i2329);
  $i2330.dup := $or.i1($i2326.dup,$i2329.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2331 := $and.i32($i2300,$i2262);
  $i2331.dup := $or.i1($i2300.dup,$i2262.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2332 := $and.i32($i2300,$i2224);
  $i2332.dup := $or.i1($i2300.dup,$i2224.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2333 := $xor.i32($i2331,$i2332);
  $i2333.dup := $or.i1($i2331.dup,$i2332.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2334 := $and.i32($i2262,$i2224);
  $i2334.dup := $or.i1($i2262.dup,$i2224.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2335 := $xor.i32($i2333,$i2334);
  $i2335.dup := $or.i1($i2333.dup,$i2334.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2336 := $add.i32($i2330,$i2335);
  $i2336.dup := $or.i1($i2330.dup,$i2335.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2336);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2337 := $add.i32($i2186,$i2319);
  $i2337.dup := $or.i1($i2186.dup,$i2319.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2337);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i2338 := $add.i32($i2319,$i2336);
  $i2338.dup := $or.i1($i2319.dup,$i2336.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2338);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2339 := $lshr.i32($i2337,6);
  $i2339.dup := $or.i1($i2337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2340 := $shl.i32($i2337,26);
  $i2340.dup := $or.i1($i2337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2341 := $or.i32($i2339,$i2340);
  $i2341.dup := $or.i1($i2339.dup,$i2340.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2342 := $lshr.i32($i2337,11);
  $i2342.dup := $or.i1($i2337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2343 := $shl.i32($i2337,21);
  $i2343.dup := $or.i1($i2337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2344 := $or.i32($i2342,$i2343);
  $i2344.dup := $or.i1($i2342.dup,$i2343.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2345 := $xor.i32($i2341,$i2344);
  $i2345.dup := $or.i1($i2341.dup,$i2344.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2346 := $lshr.i32($i2337,25);
  $i2346.dup := $or.i1($i2337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2347 := $shl.i32($i2337,7);
  $i2347.dup := $or.i1($i2337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2348 := $or.i32($i2346,$i2347);
  $i2348.dup := $or.i1($i2346.dup,$i2347.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2349 := $xor.i32($i2345,$i2348);
  $i2349.dup := $or.i1($i2345.dup,$i2348.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2350 := $add.i32($i2223,$i2349);
  $i2350.dup := $or.i1($i2223.dup,$i2349.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2351 := $and.i32($i2337,$i2299);
  $i2351.dup := $or.i1($i2337.dup,$i2299.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2352 := $xor.i32($i2337,$sub.i32(0,1));
  $i2352.dup := $or.i1($i2337.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2353 := $and.i32($i2352,$i2261);
  $i2353.dup := $or.i1($i2352.dup,$i2261.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2354 := $xor.i32($i2351,$i2353);
  $i2354.dup := $or.i1($i2351.dup,$i2353.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2355 := $add.i32($i2350,$i2354);
  $i2355.dup := $or.i1($i2350.dup,$i2354.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2356 := $add.i32($i2355,3259730800);
  $i2356.dup := $or.i1($i2355.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2357 := $add.i32($i2356,$i1853);
  $i2357.dup := $or.i1($i2356.dup,$i1853.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2357);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2358 := $lshr.i32($i2338,2);
  $i2358.dup := $or.i1($i2338.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2359 := $shl.i32($i2338,30);
  $i2359.dup := $or.i1($i2338.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2360 := $or.i32($i2358,$i2359);
  $i2360.dup := $or.i1($i2358.dup,$i2359.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2361 := $lshr.i32($i2338,13);
  $i2361.dup := $or.i1($i2338.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2362 := $shl.i32($i2338,19);
  $i2362.dup := $or.i1($i2338.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2363 := $or.i32($i2361,$i2362);
  $i2363.dup := $or.i1($i2361.dup,$i2362.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2364 := $xor.i32($i2360,$i2363);
  $i2364.dup := $or.i1($i2360.dup,$i2363.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2365 := $lshr.i32($i2338,22);
  $i2365.dup := $or.i1($i2338.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2366 := $shl.i32($i2338,10);
  $i2366.dup := $or.i1($i2338.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2367 := $or.i32($i2365,$i2366);
  $i2367.dup := $or.i1($i2365.dup,$i2366.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2368 := $xor.i32($i2364,$i2367);
  $i2368.dup := $or.i1($i2364.dup,$i2367.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2369 := $and.i32($i2338,$i2300);
  $i2369.dup := $or.i1($i2338.dup,$i2300.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2370 := $and.i32($i2338,$i2262);
  $i2370.dup := $or.i1($i2338.dup,$i2262.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2371 := $xor.i32($i2369,$i2370);
  $i2371.dup := $or.i1($i2369.dup,$i2370.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2372 := $and.i32($i2300,$i2262);
  $i2372.dup := $or.i1($i2300.dup,$i2262.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2373 := $xor.i32($i2371,$i2372);
  $i2373.dup := $or.i1($i2371.dup,$i2372.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2374 := $add.i32($i2368,$i2373);
  $i2374.dup := $or.i1($i2368.dup,$i2373.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2374);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2375 := $add.i32($i2224,$i2357);
  $i2375.dup := $or.i1($i2224.dup,$i2357.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2375);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i2376 := $add.i32($i2357,$i2374);
  $i2376.dup := $or.i1($i2357.dup,$i2374.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2376);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2377 := $lshr.i32($i2375,6);
  $i2377.dup := $or.i1($i2375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2378 := $shl.i32($i2375,26);
  $i2378.dup := $or.i1($i2375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2379 := $or.i32($i2377,$i2378);
  $i2379.dup := $or.i1($i2377.dup,$i2378.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2380 := $lshr.i32($i2375,11);
  $i2380.dup := $or.i1($i2375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2381 := $shl.i32($i2375,21);
  $i2381.dup := $or.i1($i2375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2382 := $or.i32($i2380,$i2381);
  $i2382.dup := $or.i1($i2380.dup,$i2381.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2383 := $xor.i32($i2379,$i2382);
  $i2383.dup := $or.i1($i2379.dup,$i2382.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2384 := $lshr.i32($i2375,25);
  $i2384.dup := $or.i1($i2375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2385 := $shl.i32($i2375,7);
  $i2385.dup := $or.i1($i2375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2386 := $or.i32($i2384,$i2385);
  $i2386.dup := $or.i1($i2384.dup,$i2385.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2387 := $xor.i32($i2383,$i2386);
  $i2387.dup := $or.i1($i2383.dup,$i2386.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2388 := $add.i32($i2261,$i2387);
  $i2388.dup := $or.i1($i2261.dup,$i2387.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2389 := $and.i32($i2375,$i2337);
  $i2389.dup := $or.i1($i2375.dup,$i2337.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2390 := $xor.i32($i2375,$sub.i32(0,1));
  $i2390.dup := $or.i1($i2375.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2391 := $and.i32($i2390,$i2299);
  $i2391.dup := $or.i1($i2390.dup,$i2299.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2392 := $xor.i32($i2389,$i2391);
  $i2392.dup := $or.i1($i2389.dup,$i2391.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2393 := $add.i32($i2388,$i2392);
  $i2393.dup := $or.i1($i2388.dup,$i2392.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2394 := $add.i32($i2393,3345764771);
  $i2394.dup := $or.i1($i2393.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2395 := $add.i32($i2394,$i1874);
  $i2395.dup := $or.i1($i2394.dup,$i1874.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2395);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2396 := $lshr.i32($i2376,2);
  $i2396.dup := $or.i1($i2376.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2397 := $shl.i32($i2376,30);
  $i2397.dup := $or.i1($i2376.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2398 := $or.i32($i2396,$i2397);
  $i2398.dup := $or.i1($i2396.dup,$i2397.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2399 := $lshr.i32($i2376,13);
  $i2399.dup := $or.i1($i2376.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2400 := $shl.i32($i2376,19);
  $i2400.dup := $or.i1($i2376.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2401 := $or.i32($i2399,$i2400);
  $i2401.dup := $or.i1($i2399.dup,$i2400.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2402 := $xor.i32($i2398,$i2401);
  $i2402.dup := $or.i1($i2398.dup,$i2401.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2403 := $lshr.i32($i2376,22);
  $i2403.dup := $or.i1($i2376.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2404 := $shl.i32($i2376,10);
  $i2404.dup := $or.i1($i2376.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2405 := $or.i32($i2403,$i2404);
  $i2405.dup := $or.i1($i2403.dup,$i2404.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2406 := $xor.i32($i2402,$i2405);
  $i2406.dup := $or.i1($i2402.dup,$i2405.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2407 := $and.i32($i2376,$i2338);
  $i2407.dup := $or.i1($i2376.dup,$i2338.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2408 := $and.i32($i2376,$i2300);
  $i2408.dup := $or.i1($i2376.dup,$i2300.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2409 := $xor.i32($i2407,$i2408);
  $i2409.dup := $or.i1($i2407.dup,$i2408.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2410 := $and.i32($i2338,$i2300);
  $i2410.dup := $or.i1($i2338.dup,$i2300.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2411 := $xor.i32($i2409,$i2410);
  $i2411.dup := $or.i1($i2409.dup,$i2410.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2412 := $add.i32($i2406,$i2411);
  $i2412.dup := $or.i1($i2406.dup,$i2411.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2412);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2413 := $add.i32($i2262,$i2395);
  $i2413.dup := $or.i1($i2262.dup,$i2395.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2413);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i2414 := $add.i32($i2395,$i2412);
  $i2414.dup := $or.i1($i2395.dup,$i2412.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2414);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2415 := $lshr.i32($i2413,6);
  $i2415.dup := $or.i1($i2413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2416 := $shl.i32($i2413,26);
  $i2416.dup := $or.i1($i2413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2417 := $or.i32($i2415,$i2416);
  $i2417.dup := $or.i1($i2415.dup,$i2416.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2418 := $lshr.i32($i2413,11);
  $i2418.dup := $or.i1($i2413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2419 := $shl.i32($i2413,21);
  $i2419.dup := $or.i1($i2413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2420 := $or.i32($i2418,$i2419);
  $i2420.dup := $or.i1($i2418.dup,$i2419.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2421 := $xor.i32($i2417,$i2420);
  $i2421.dup := $or.i1($i2417.dup,$i2420.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2422 := $lshr.i32($i2413,25);
  $i2422.dup := $or.i1($i2413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2423 := $shl.i32($i2413,7);
  $i2423.dup := $or.i1($i2413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2424 := $or.i32($i2422,$i2423);
  $i2424.dup := $or.i1($i2422.dup,$i2423.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2425 := $xor.i32($i2421,$i2424);
  $i2425.dup := $or.i1($i2421.dup,$i2424.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2426 := $add.i32($i2299,$i2425);
  $i2426.dup := $or.i1($i2299.dup,$i2425.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2427 := $and.i32($i2413,$i2375);
  $i2427.dup := $or.i1($i2413.dup,$i2375.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2428 := $xor.i32($i2413,$sub.i32(0,1));
  $i2428.dup := $or.i1($i2413.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2429 := $and.i32($i2428,$i2337);
  $i2429.dup := $or.i1($i2428.dup,$i2337.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2430 := $xor.i32($i2427,$i2429);
  $i2430.dup := $or.i1($i2427.dup,$i2429.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2431 := $add.i32($i2426,$i2430);
  $i2431.dup := $or.i1($i2426.dup,$i2430.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2432 := $add.i32($i2431,3516065817);
  $i2432.dup := $or.i1($i2431.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2433 := $add.i32($i2432,$i1895);
  $i2433.dup := $or.i1($i2432.dup,$i1895.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2433);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2434 := $lshr.i32($i2414,2);
  $i2434.dup := $or.i1($i2414.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2435 := $shl.i32($i2414,30);
  $i2435.dup := $or.i1($i2414.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2436 := $or.i32($i2434,$i2435);
  $i2436.dup := $or.i1($i2434.dup,$i2435.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2437 := $lshr.i32($i2414,13);
  $i2437.dup := $or.i1($i2414.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2438 := $shl.i32($i2414,19);
  $i2438.dup := $or.i1($i2414.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2439 := $or.i32($i2437,$i2438);
  $i2439.dup := $or.i1($i2437.dup,$i2438.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2440 := $xor.i32($i2436,$i2439);
  $i2440.dup := $or.i1($i2436.dup,$i2439.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2441 := $lshr.i32($i2414,22);
  $i2441.dup := $or.i1($i2414.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2442 := $shl.i32($i2414,10);
  $i2442.dup := $or.i1($i2414.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2443 := $or.i32($i2441,$i2442);
  $i2443.dup := $or.i1($i2441.dup,$i2442.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2444 := $xor.i32($i2440,$i2443);
  $i2444.dup := $or.i1($i2440.dup,$i2443.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2445 := $and.i32($i2414,$i2376);
  $i2445.dup := $or.i1($i2414.dup,$i2376.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2446 := $and.i32($i2414,$i2338);
  $i2446.dup := $or.i1($i2414.dup,$i2338.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2447 := $xor.i32($i2445,$i2446);
  $i2447.dup := $or.i1($i2445.dup,$i2446.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2448 := $and.i32($i2376,$i2338);
  $i2448.dup := $or.i1($i2376.dup,$i2338.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2449 := $xor.i32($i2447,$i2448);
  $i2449.dup := $or.i1($i2447.dup,$i2448.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2450 := $add.i32($i2444,$i2449);
  $i2450.dup := $or.i1($i2444.dup,$i2449.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2450);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2451 := $add.i32($i2300,$i2433);
  $i2451.dup := $or.i1($i2300.dup,$i2433.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2451);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i2452 := $add.i32($i2433,$i2450);
  $i2452.dup := $or.i1($i2433.dup,$i2450.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2452);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2453 := $lshr.i32($i2451,6);
  $i2453.dup := $or.i1($i2451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2454 := $shl.i32($i2451,26);
  $i2454.dup := $or.i1($i2451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2455 := $or.i32($i2453,$i2454);
  $i2455.dup := $or.i1($i2453.dup,$i2454.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2456 := $lshr.i32($i2451,11);
  $i2456.dup := $or.i1($i2451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2457 := $shl.i32($i2451,21);
  $i2457.dup := $or.i1($i2451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2458 := $or.i32($i2456,$i2457);
  $i2458.dup := $or.i1($i2456.dup,$i2457.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2459 := $xor.i32($i2455,$i2458);
  $i2459.dup := $or.i1($i2455.dup,$i2458.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2460 := $lshr.i32($i2451,25);
  $i2460.dup := $or.i1($i2451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2461 := $shl.i32($i2451,7);
  $i2461.dup := $or.i1($i2451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2462 := $or.i32($i2460,$i2461);
  $i2462.dup := $or.i1($i2460.dup,$i2461.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2463 := $xor.i32($i2459,$i2462);
  $i2463.dup := $or.i1($i2459.dup,$i2462.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2464 := $add.i32($i2337,$i2463);
  $i2464.dup := $or.i1($i2337.dup,$i2463.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2465 := $and.i32($i2451,$i2413);
  $i2465.dup := $or.i1($i2451.dup,$i2413.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2466 := $xor.i32($i2451,$sub.i32(0,1));
  $i2466.dup := $or.i1($i2451.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2467 := $and.i32($i2466,$i2375);
  $i2467.dup := $or.i1($i2466.dup,$i2375.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2468 := $xor.i32($i2465,$i2467);
  $i2468.dup := $or.i1($i2465.dup,$i2467.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2469 := $add.i32($i2464,$i2468);
  $i2469.dup := $or.i1($i2464.dup,$i2468.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2470 := $add.i32($i2469,3600352804);
  $i2470.dup := $or.i1($i2469.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2471 := $add.i32($i2470,$i1916);
  $i2471.dup := $or.i1($i2470.dup,$i1916.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2471);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2472 := $lshr.i32($i2452,2);
  $i2472.dup := $or.i1($i2452.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2473 := $shl.i32($i2452,30);
  $i2473.dup := $or.i1($i2452.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2474 := $or.i32($i2472,$i2473);
  $i2474.dup := $or.i1($i2472.dup,$i2473.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2475 := $lshr.i32($i2452,13);
  $i2475.dup := $or.i1($i2452.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2476 := $shl.i32($i2452,19);
  $i2476.dup := $or.i1($i2452.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2477 := $or.i32($i2475,$i2476);
  $i2477.dup := $or.i1($i2475.dup,$i2476.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2478 := $xor.i32($i2474,$i2477);
  $i2478.dup := $or.i1($i2474.dup,$i2477.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2479 := $lshr.i32($i2452,22);
  $i2479.dup := $or.i1($i2452.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2480 := $shl.i32($i2452,10);
  $i2480.dup := $or.i1($i2452.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2481 := $or.i32($i2479,$i2480);
  $i2481.dup := $or.i1($i2479.dup,$i2480.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2482 := $xor.i32($i2478,$i2481);
  $i2482.dup := $or.i1($i2478.dup,$i2481.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2483 := $and.i32($i2452,$i2414);
  $i2483.dup := $or.i1($i2452.dup,$i2414.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2484 := $and.i32($i2452,$i2376);
  $i2484.dup := $or.i1($i2452.dup,$i2376.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2485 := $xor.i32($i2483,$i2484);
  $i2485.dup := $or.i1($i2483.dup,$i2484.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2486 := $and.i32($i2414,$i2376);
  $i2486.dup := $or.i1($i2414.dup,$i2376.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2487 := $xor.i32($i2485,$i2486);
  $i2487.dup := $or.i1($i2485.dup,$i2486.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2488 := $add.i32($i2482,$i2487);
  $i2488.dup := $or.i1($i2482.dup,$i2487.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2488);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2489 := $add.i32($i2338,$i2471);
  $i2489.dup := $or.i1($i2338.dup,$i2471.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2489);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i2490 := $add.i32($i2471,$i2488);
  $i2490.dup := $or.i1($i2471.dup,$i2488.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2490);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2491 := $lshr.i32($i2489,6);
  $i2491.dup := $or.i1($i2489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2492 := $shl.i32($i2489,26);
  $i2492.dup := $or.i1($i2489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2493 := $or.i32($i2491,$i2492);
  $i2493.dup := $or.i1($i2491.dup,$i2492.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2494 := $lshr.i32($i2489,11);
  $i2494.dup := $or.i1($i2489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2495 := $shl.i32($i2489,21);
  $i2495.dup := $or.i1($i2489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2496 := $or.i32($i2494,$i2495);
  $i2496.dup := $or.i1($i2494.dup,$i2495.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2497 := $xor.i32($i2493,$i2496);
  $i2497.dup := $or.i1($i2493.dup,$i2496.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2498 := $lshr.i32($i2489,25);
  $i2498.dup := $or.i1($i2489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2499 := $shl.i32($i2489,7);
  $i2499.dup := $or.i1($i2489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2500 := $or.i32($i2498,$i2499);
  $i2500.dup := $or.i1($i2498.dup,$i2499.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2501 := $xor.i32($i2497,$i2500);
  $i2501.dup := $or.i1($i2497.dup,$i2500.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2502 := $add.i32($i2375,$i2501);
  $i2502.dup := $or.i1($i2375.dup,$i2501.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2503 := $and.i32($i2489,$i2451);
  $i2503.dup := $or.i1($i2489.dup,$i2451.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2504 := $xor.i32($i2489,$sub.i32(0,1));
  $i2504.dup := $or.i1($i2489.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2505 := $and.i32($i2504,$i2413);
  $i2505.dup := $or.i1($i2504.dup,$i2413.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2506 := $xor.i32($i2503,$i2505);
  $i2506.dup := $or.i1($i2503.dup,$i2505.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2507 := $add.i32($i2502,$i2506);
  $i2507.dup := $or.i1($i2502.dup,$i2506.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2508 := $add.i32($i2507,4094571909);
  $i2508.dup := $or.i1($i2507.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2509 := $add.i32($i2508,$i1937);
  $i2509.dup := $or.i1($i2508.dup,$i1937.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2509);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2510 := $lshr.i32($i2490,2);
  $i2510.dup := $or.i1($i2490.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2511 := $shl.i32($i2490,30);
  $i2511.dup := $or.i1($i2490.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2512 := $or.i32($i2510,$i2511);
  $i2512.dup := $or.i1($i2510.dup,$i2511.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2513 := $lshr.i32($i2490,13);
  $i2513.dup := $or.i1($i2490.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2514 := $shl.i32($i2490,19);
  $i2514.dup := $or.i1($i2490.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2515 := $or.i32($i2513,$i2514);
  $i2515.dup := $or.i1($i2513.dup,$i2514.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2516 := $xor.i32($i2512,$i2515);
  $i2516.dup := $or.i1($i2512.dup,$i2515.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2517 := $lshr.i32($i2490,22);
  $i2517.dup := $or.i1($i2490.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2518 := $shl.i32($i2490,10);
  $i2518.dup := $or.i1($i2490.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2519 := $or.i32($i2517,$i2518);
  $i2519.dup := $or.i1($i2517.dup,$i2518.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2520 := $xor.i32($i2516,$i2519);
  $i2520.dup := $or.i1($i2516.dup,$i2519.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2521 := $and.i32($i2490,$i2452);
  $i2521.dup := $or.i1($i2490.dup,$i2452.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2522 := $and.i32($i2490,$i2414);
  $i2522.dup := $or.i1($i2490.dup,$i2414.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2523 := $xor.i32($i2521,$i2522);
  $i2523.dup := $or.i1($i2521.dup,$i2522.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2524 := $and.i32($i2452,$i2414);
  $i2524.dup := $or.i1($i2452.dup,$i2414.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2525 := $xor.i32($i2523,$i2524);
  $i2525.dup := $or.i1($i2523.dup,$i2524.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2526 := $add.i32($i2520,$i2525);
  $i2526.dup := $or.i1($i2520.dup,$i2525.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2526);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2527 := $add.i32($i2376,$i2509);
  $i2527.dup := $or.i1($i2376.dup,$i2509.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2527);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 156, 5} true;
  assume {:verifier.code 0} true;
  $i2528 := $add.i32($i2509,$i2526);
  $i2528.dup := $or.i1($i2509.dup,$i2526.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2528);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2529 := $lshr.i32($i2527,6);
  $i2529.dup := $or.i1($i2527.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2530 := $shl.i32($i2527,26);
  $i2530.dup := $or.i1($i2527.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2531 := $or.i32($i2529,$i2530);
  $i2531.dup := $or.i1($i2529.dup,$i2530.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2532 := $lshr.i32($i2527,11);
  $i2532.dup := $or.i1($i2527.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2533 := $shl.i32($i2527,21);
  $i2533.dup := $or.i1($i2527.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2534 := $or.i32($i2532,$i2533);
  $i2534.dup := $or.i1($i2532.dup,$i2533.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2535 := $xor.i32($i2531,$i2534);
  $i2535.dup := $or.i1($i2531.dup,$i2534.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2536 := $lshr.i32($i2527,25);
  $i2536.dup := $or.i1($i2527.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2537 := $shl.i32($i2527,7);
  $i2537.dup := $or.i1($i2527.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2538 := $or.i32($i2536,$i2537);
  $i2538.dup := $or.i1($i2536.dup,$i2537.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2539 := $xor.i32($i2535,$i2538);
  $i2539.dup := $or.i1($i2535.dup,$i2538.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2540 := $add.i32($i2413,$i2539);
  $i2540.dup := $or.i1($i2413.dup,$i2539.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2541 := $and.i32($i2527,$i2489);
  $i2541.dup := $or.i1($i2527.dup,$i2489.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2542 := $xor.i32($i2527,$sub.i32(0,1));
  $i2542.dup := $or.i1($i2527.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2543 := $and.i32($i2542,$i2451);
  $i2543.dup := $or.i1($i2542.dup,$i2451.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2544 := $xor.i32($i2541,$i2543);
  $i2544.dup := $or.i1($i2541.dup,$i2543.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2545 := $add.i32($i2540,$i2544);
  $i2545.dup := $or.i1($i2540.dup,$i2544.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2546 := $add.i32($i2545,275423344);
  $i2546.dup := $or.i1($i2545.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2547 := $add.i32($i2546,$i1958);
  $i2547.dup := $or.i1($i2546.dup,$i1958.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2547);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2548 := $lshr.i32($i2528,2);
  $i2548.dup := $or.i1($i2528.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2549 := $shl.i32($i2528,30);
  $i2549.dup := $or.i1($i2528.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2550 := $or.i32($i2548,$i2549);
  $i2550.dup := $or.i1($i2548.dup,$i2549.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2551 := $lshr.i32($i2528,13);
  $i2551.dup := $or.i1($i2528.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2552 := $shl.i32($i2528,19);
  $i2552.dup := $or.i1($i2528.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2553 := $or.i32($i2551,$i2552);
  $i2553.dup := $or.i1($i2551.dup,$i2552.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2554 := $xor.i32($i2550,$i2553);
  $i2554.dup := $or.i1($i2550.dup,$i2553.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2555 := $lshr.i32($i2528,22);
  $i2555.dup := $or.i1($i2528.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2556 := $shl.i32($i2528,10);
  $i2556.dup := $or.i1($i2528.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2557 := $or.i32($i2555,$i2556);
  $i2557.dup := $or.i1($i2555.dup,$i2556.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2558 := $xor.i32($i2554,$i2557);
  $i2558.dup := $or.i1($i2554.dup,$i2557.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2559 := $and.i32($i2528,$i2490);
  $i2559.dup := $or.i1($i2528.dup,$i2490.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2560 := $and.i32($i2528,$i2452);
  $i2560.dup := $or.i1($i2528.dup,$i2452.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2561 := $xor.i32($i2559,$i2560);
  $i2561.dup := $or.i1($i2559.dup,$i2560.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2562 := $and.i32($i2490,$i2452);
  $i2562.dup := $or.i1($i2490.dup,$i2452.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2563 := $xor.i32($i2561,$i2562);
  $i2563.dup := $or.i1($i2561.dup,$i2562.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2564 := $add.i32($i2558,$i2563);
  $i2564.dup := $or.i1($i2558.dup,$i2563.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2564);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2565 := $add.i32($i2414,$i2547);
  $i2565.dup := $or.i1($i2414.dup,$i2547.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2565);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i2566 := $add.i32($i2547,$i2564);
  $i2566.dup := $or.i1($i2547.dup,$i2564.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2566);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2567 := $lshr.i32($i1937,17);
  $i2567.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2568 := $shl.i32($i1937,15);
  $i2568.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2569 := $or.i32($i2567,$i2568);
  $i2569.dup := $or.i1($i2567.dup,$i2568.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2570 := $lshr.i32($i1937,19);
  $i2570.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2571 := $shl.i32($i1937,13);
  $i2571.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2572 := $or.i32($i2570,$i2571);
  $i2572.dup := $or.i1($i2570.dup,$i2571.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2573 := $xor.i32($i2569,$i2572);
  $i2573.dup := $or.i1($i2569.dup,$i2572.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2574 := $lshr.i32($i1937,10);
  $i2574.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2575 := $xor.i32($i2573,$i2574);
  $i2575.dup := $or.i1($i2573.dup,$i2574.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2576 := $add.i32($i2575,$i1832);
  $i2576.dup := $or.i1($i2575.dup,$i1832.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2577 := $lshr.i32($i1664,7);
  $i2577.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2578 := $shl.i32($i1664,25);
  $i2578.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2579 := $or.i32($i2577,$i2578);
  $i2579.dup := $or.i1($i2577.dup,$i2578.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2580 := $lshr.i32($i1664,18);
  $i2580.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2581 := $shl.i32($i1664,14);
  $i2581.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2582 := $or.i32($i2580,$i2581);
  $i2582.dup := $or.i1($i2580.dup,$i2581.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2583 := $xor.i32($i2579,$i2582);
  $i2583.dup := $or.i1($i2579.dup,$i2582.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2584 := $lshr.i32($i1664,3);
  $i2584.dup := $or.i1($i1664.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2585 := $xor.i32($i2583,$i2584);
  $i2585.dup := $or.i1($i2583.dup,$i2584.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2586 := $add.i32($i2576,$i2585);
  $i2586.dup := $or.i1($i2576.dup,$i2585.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2587 := $add.i32($i2586,$i1643);
  $i2587.dup := $or.i1($i2586.dup,$i1643.dup);
  call {:cexpr "w0"} boogie_si_record_i32($i2587);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2588 := $lshr.i32($i1958,17);
  $i2588.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2589 := $shl.i32($i1958,15);
  $i2589.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2590 := $or.i32($i2588,$i2589);
  $i2590.dup := $or.i1($i2588.dup,$i2589.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2591 := $lshr.i32($i1958,19);
  $i2591.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2592 := $shl.i32($i1958,13);
  $i2592.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2593 := $or.i32($i2591,$i2592);
  $i2593.dup := $or.i1($i2591.dup,$i2592.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2594 := $xor.i32($i2590,$i2593);
  $i2594.dup := $or.i1($i2590.dup,$i2593.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2595 := $lshr.i32($i1958,10);
  $i2595.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2596 := $xor.i32($i2594,$i2595);
  $i2596.dup := $or.i1($i2594.dup,$i2595.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2597 := $add.i32($i2596,$i1853);
  $i2597.dup := $or.i1($i2596.dup,$i1853.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2598 := $lshr.i32($i1685,7);
  $i2598.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2599 := $shl.i32($i1685,25);
  $i2599.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2600 := $or.i32($i2598,$i2599);
  $i2600.dup := $or.i1($i2598.dup,$i2599.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2601 := $lshr.i32($i1685,18);
  $i2601.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2602 := $shl.i32($i1685,14);
  $i2602.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2603 := $or.i32($i2601,$i2602);
  $i2603.dup := $or.i1($i2601.dup,$i2602.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2604 := $xor.i32($i2600,$i2603);
  $i2604.dup := $or.i1($i2600.dup,$i2603.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2605 := $lshr.i32($i1685,3);
  $i2605.dup := $or.i1($i1685.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2606 := $xor.i32($i2604,$i2605);
  $i2606.dup := $or.i1($i2604.dup,$i2605.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2607 := $add.i32($i2597,$i2606);
  $i2607.dup := $or.i1($i2597.dup,$i2606.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2608 := $add.i32($i2607,$i1664);
  $i2608.dup := $or.i1($i2607.dup,$i1664.dup);
  call {:cexpr "w1"} boogie_si_record_i32($i2608);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2609 := $lshr.i32($i2587,17);
  $i2609.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2610 := $shl.i32($i2587,15);
  $i2610.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2611 := $or.i32($i2609,$i2610);
  $i2611.dup := $or.i1($i2609.dup,$i2610.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2612 := $lshr.i32($i2587,19);
  $i2612.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2613 := $shl.i32($i2587,13);
  $i2613.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2614 := $or.i32($i2612,$i2613);
  $i2614.dup := $or.i1($i2612.dup,$i2613.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2615 := $xor.i32($i2611,$i2614);
  $i2615.dup := $or.i1($i2611.dup,$i2614.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2616 := $lshr.i32($i2587,10);
  $i2616.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2617 := $xor.i32($i2615,$i2616);
  $i2617.dup := $or.i1($i2615.dup,$i2616.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2618 := $add.i32($i2617,$i1874);
  $i2618.dup := $or.i1($i2617.dup,$i1874.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2619 := $lshr.i32($i1706,7);
  $i2619.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2620 := $shl.i32($i1706,25);
  $i2620.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2621 := $or.i32($i2619,$i2620);
  $i2621.dup := $or.i1($i2619.dup,$i2620.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2622 := $lshr.i32($i1706,18);
  $i2622.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2623 := $shl.i32($i1706,14);
  $i2623.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2624 := $or.i32($i2622,$i2623);
  $i2624.dup := $or.i1($i2622.dup,$i2623.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2625 := $xor.i32($i2621,$i2624);
  $i2625.dup := $or.i1($i2621.dup,$i2624.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2626 := $lshr.i32($i1706,3);
  $i2626.dup := $or.i1($i1706.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2627 := $xor.i32($i2625,$i2626);
  $i2627.dup := $or.i1($i2625.dup,$i2626.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2628 := $add.i32($i2618,$i2627);
  $i2628.dup := $or.i1($i2618.dup,$i2627.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2629 := $add.i32($i2628,$i1685);
  $i2629.dup := $or.i1($i2628.dup,$i1685.dup);
  call {:cexpr "w2"} boogie_si_record_i32($i2629);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2630 := $lshr.i32($i2608,17);
  $i2630.dup := $or.i1($i2608.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2631 := $shl.i32($i2608,15);
  $i2631.dup := $or.i1($i2608.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2632 := $or.i32($i2630,$i2631);
  $i2632.dup := $or.i1($i2630.dup,$i2631.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2633 := $lshr.i32($i2608,19);
  $i2633.dup := $or.i1($i2608.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2634 := $shl.i32($i2608,13);
  $i2634.dup := $or.i1($i2608.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2635 := $or.i32($i2633,$i2634);
  $i2635.dup := $or.i1($i2633.dup,$i2634.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2636 := $xor.i32($i2632,$i2635);
  $i2636.dup := $or.i1($i2632.dup,$i2635.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2637 := $lshr.i32($i2608,10);
  $i2637.dup := $or.i1($i2608.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2638 := $xor.i32($i2636,$i2637);
  $i2638.dup := $or.i1($i2636.dup,$i2637.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2639 := $add.i32($i2638,$i1895);
  $i2639.dup := $or.i1($i2638.dup,$i1895.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2640 := $lshr.i32($i1727,7);
  $i2640.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2641 := $shl.i32($i1727,25);
  $i2641.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2642 := $or.i32($i2640,$i2641);
  $i2642.dup := $or.i1($i2640.dup,$i2641.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2643 := $lshr.i32($i1727,18);
  $i2643.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2644 := $shl.i32($i1727,14);
  $i2644.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2645 := $or.i32($i2643,$i2644);
  $i2645.dup := $or.i1($i2643.dup,$i2644.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2646 := $xor.i32($i2642,$i2645);
  $i2646.dup := $or.i1($i2642.dup,$i2645.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2647 := $lshr.i32($i1727,3);
  $i2647.dup := $or.i1($i1727.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2648 := $xor.i32($i2646,$i2647);
  $i2648.dup := $or.i1($i2646.dup,$i2647.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2649 := $add.i32($i2639,$i2648);
  $i2649.dup := $or.i1($i2639.dup,$i2648.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2650 := $add.i32($i2649,$i1706);
  $i2650.dup := $or.i1($i2649.dup,$i1706.dup);
  call {:cexpr "w3"} boogie_si_record_i32($i2650);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2651 := $lshr.i32($i2629,17);
  $i2651.dup := $or.i1($i2629.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2652 := $shl.i32($i2629,15);
  $i2652.dup := $or.i1($i2629.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2653 := $or.i32($i2651,$i2652);
  $i2653.dup := $or.i1($i2651.dup,$i2652.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2654 := $lshr.i32($i2629,19);
  $i2654.dup := $or.i1($i2629.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2655 := $shl.i32($i2629,13);
  $i2655.dup := $or.i1($i2629.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2656 := $or.i32($i2654,$i2655);
  $i2656.dup := $or.i1($i2654.dup,$i2655.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2657 := $xor.i32($i2653,$i2656);
  $i2657.dup := $or.i1($i2653.dup,$i2656.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2658 := $lshr.i32($i2629,10);
  $i2658.dup := $or.i1($i2629.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2659 := $xor.i32($i2657,$i2658);
  $i2659.dup := $or.i1($i2657.dup,$i2658.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2660 := $add.i32($i2659,$i1916);
  $i2660.dup := $or.i1($i2659.dup,$i1916.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2661 := $lshr.i32($i1748,7);
  $i2661.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2662 := $shl.i32($i1748,25);
  $i2662.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2663 := $or.i32($i2661,$i2662);
  $i2663.dup := $or.i1($i2661.dup,$i2662.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2664 := $lshr.i32($i1748,18);
  $i2664.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2665 := $shl.i32($i1748,14);
  $i2665.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2666 := $or.i32($i2664,$i2665);
  $i2666.dup := $or.i1($i2664.dup,$i2665.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2667 := $xor.i32($i2663,$i2666);
  $i2667.dup := $or.i1($i2663.dup,$i2666.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2668 := $lshr.i32($i1748,3);
  $i2668.dup := $or.i1($i1748.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2669 := $xor.i32($i2667,$i2668);
  $i2669.dup := $or.i1($i2667.dup,$i2668.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2670 := $add.i32($i2660,$i2669);
  $i2670.dup := $or.i1($i2660.dup,$i2669.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2671 := $add.i32($i2670,$i1727);
  $i2671.dup := $or.i1($i2670.dup,$i1727.dup);
  call {:cexpr "w4"} boogie_si_record_i32($i2671);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2672 := $lshr.i32($i2650,17);
  $i2672.dup := $or.i1($i2650.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2673 := $shl.i32($i2650,15);
  $i2673.dup := $or.i1($i2650.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2674 := $or.i32($i2672,$i2673);
  $i2674.dup := $or.i1($i2672.dup,$i2673.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2675 := $lshr.i32($i2650,19);
  $i2675.dup := $or.i1($i2650.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2676 := $shl.i32($i2650,13);
  $i2676.dup := $or.i1($i2650.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2677 := $or.i32($i2675,$i2676);
  $i2677.dup := $or.i1($i2675.dup,$i2676.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2678 := $xor.i32($i2674,$i2677);
  $i2678.dup := $or.i1($i2674.dup,$i2677.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2679 := $lshr.i32($i2650,10);
  $i2679.dup := $or.i1($i2650.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2680 := $xor.i32($i2678,$i2679);
  $i2680.dup := $or.i1($i2678.dup,$i2679.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2681 := $add.i32($i2680,$i1937);
  $i2681.dup := $or.i1($i2680.dup,$i1937.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2682 := $lshr.i32($i1769,7);
  $i2682.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2683 := $shl.i32($i1769,25);
  $i2683.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2684 := $or.i32($i2682,$i2683);
  $i2684.dup := $or.i1($i2682.dup,$i2683.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2685 := $lshr.i32($i1769,18);
  $i2685.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2686 := $shl.i32($i1769,14);
  $i2686.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2687 := $or.i32($i2685,$i2686);
  $i2687.dup := $or.i1($i2685.dup,$i2686.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2688 := $xor.i32($i2684,$i2687);
  $i2688.dup := $or.i1($i2684.dup,$i2687.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2689 := $lshr.i32($i1769,3);
  $i2689.dup := $or.i1($i1769.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2690 := $xor.i32($i2688,$i2689);
  $i2690.dup := $or.i1($i2688.dup,$i2689.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2691 := $add.i32($i2681,$i2690);
  $i2691.dup := $or.i1($i2681.dup,$i2690.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2692 := $add.i32($i2691,$i1748);
  $i2692.dup := $or.i1($i2691.dup,$i1748.dup);
  call {:cexpr "w5"} boogie_si_record_i32($i2692);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2693 := $lshr.i32($i2671,17);
  $i2693.dup := $or.i1($i2671.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2694 := $shl.i32($i2671,15);
  $i2694.dup := $or.i1($i2671.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2695 := $or.i32($i2693,$i2694);
  $i2695.dup := $or.i1($i2693.dup,$i2694.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2696 := $lshr.i32($i2671,19);
  $i2696.dup := $or.i1($i2671.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2697 := $shl.i32($i2671,13);
  $i2697.dup := $or.i1($i2671.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2698 := $or.i32($i2696,$i2697);
  $i2698.dup := $or.i1($i2696.dup,$i2697.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2699 := $xor.i32($i2695,$i2698);
  $i2699.dup := $or.i1($i2695.dup,$i2698.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2700 := $lshr.i32($i2671,10);
  $i2700.dup := $or.i1($i2671.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2701 := $xor.i32($i2699,$i2700);
  $i2701.dup := $or.i1($i2699.dup,$i2700.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2702 := $add.i32($i2701,$i1958);
  $i2702.dup := $or.i1($i2701.dup,$i1958.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2703 := $lshr.i32($i1790,7);
  $i2703.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2704 := $shl.i32($i1790,25);
  $i2704.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2705 := $or.i32($i2703,$i2704);
  $i2705.dup := $or.i1($i2703.dup,$i2704.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2706 := $lshr.i32($i1790,18);
  $i2706.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2707 := $shl.i32($i1790,14);
  $i2707.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2708 := $or.i32($i2706,$i2707);
  $i2708.dup := $or.i1($i2706.dup,$i2707.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2709 := $xor.i32($i2705,$i2708);
  $i2709.dup := $or.i1($i2705.dup,$i2708.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2710 := $lshr.i32($i1790,3);
  $i2710.dup := $or.i1($i1790.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2711 := $xor.i32($i2709,$i2710);
  $i2711.dup := $or.i1($i2709.dup,$i2710.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2712 := $add.i32($i2702,$i2711);
  $i2712.dup := $or.i1($i2702.dup,$i2711.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2713 := $add.i32($i2712,$i1769);
  $i2713.dup := $or.i1($i2712.dup,$i1769.dup);
  call {:cexpr "w6"} boogie_si_record_i32($i2713);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2714 := $lshr.i32($i2692,17);
  $i2714.dup := $or.i1($i2692.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2715 := $shl.i32($i2692,15);
  $i2715.dup := $or.i1($i2692.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2716 := $or.i32($i2714,$i2715);
  $i2716.dup := $or.i1($i2714.dup,$i2715.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2717 := $lshr.i32($i2692,19);
  $i2717.dup := $or.i1($i2692.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2718 := $shl.i32($i2692,13);
  $i2718.dup := $or.i1($i2692.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2719 := $or.i32($i2717,$i2718);
  $i2719.dup := $or.i1($i2717.dup,$i2718.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2720 := $xor.i32($i2716,$i2719);
  $i2720.dup := $or.i1($i2716.dup,$i2719.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2721 := $lshr.i32($i2692,10);
  $i2721.dup := $or.i1($i2692.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2722 := $xor.i32($i2720,$i2721);
  $i2722.dup := $or.i1($i2720.dup,$i2721.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2723 := $add.i32($i2722,$i2587);
  $i2723.dup := $or.i1($i2722.dup,$i2587.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2724 := $lshr.i32($i1811,7);
  $i2724.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2725 := $shl.i32($i1811,25);
  $i2725.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2726 := $or.i32($i2724,$i2725);
  $i2726.dup := $or.i1($i2724.dup,$i2725.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2727 := $lshr.i32($i1811,18);
  $i2727.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2728 := $shl.i32($i1811,14);
  $i2728.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2729 := $or.i32($i2727,$i2728);
  $i2729.dup := $or.i1($i2727.dup,$i2728.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2730 := $xor.i32($i2726,$i2729);
  $i2730.dup := $or.i1($i2726.dup,$i2729.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2731 := $lshr.i32($i1811,3);
  $i2731.dup := $or.i1($i1811.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2732 := $xor.i32($i2730,$i2731);
  $i2732.dup := $or.i1($i2730.dup,$i2731.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2733 := $add.i32($i2723,$i2732);
  $i2733.dup := $or.i1($i2723.dup,$i2732.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2734 := $add.i32($i2733,$i1790);
  $i2734.dup := $or.i1($i2733.dup,$i1790.dup);
  call {:cexpr "w7"} boogie_si_record_i32($i2734);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2735 := $lshr.i32($i2713,17);
  $i2735.dup := $or.i1($i2713.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2736 := $shl.i32($i2713,15);
  $i2736.dup := $or.i1($i2713.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2737 := $or.i32($i2735,$i2736);
  $i2737.dup := $or.i1($i2735.dup,$i2736.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2738 := $lshr.i32($i2713,19);
  $i2738.dup := $or.i1($i2713.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2739 := $shl.i32($i2713,13);
  $i2739.dup := $or.i1($i2713.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2740 := $or.i32($i2738,$i2739);
  $i2740.dup := $or.i1($i2738.dup,$i2739.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2741 := $xor.i32($i2737,$i2740);
  $i2741.dup := $or.i1($i2737.dup,$i2740.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2742 := $lshr.i32($i2713,10);
  $i2742.dup := $or.i1($i2713.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2743 := $xor.i32($i2741,$i2742);
  $i2743.dup := $or.i1($i2741.dup,$i2742.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2744 := $add.i32($i2743,$i2608);
  $i2744.dup := $or.i1($i2743.dup,$i2608.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2745 := $lshr.i32($i1832,7);
  $i2745.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2746 := $shl.i32($i1832,25);
  $i2746.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2747 := $or.i32($i2745,$i2746);
  $i2747.dup := $or.i1($i2745.dup,$i2746.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2748 := $lshr.i32($i1832,18);
  $i2748.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2749 := $shl.i32($i1832,14);
  $i2749.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2750 := $or.i32($i2748,$i2749);
  $i2750.dup := $or.i1($i2748.dup,$i2749.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2751 := $xor.i32($i2747,$i2750);
  $i2751.dup := $or.i1($i2747.dup,$i2750.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2752 := $lshr.i32($i1832,3);
  $i2752.dup := $or.i1($i1832.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2753 := $xor.i32($i2751,$i2752);
  $i2753.dup := $or.i1($i2751.dup,$i2752.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2754 := $add.i32($i2744,$i2753);
  $i2754.dup := $or.i1($i2744.dup,$i2753.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2755 := $add.i32($i2754,$i1811);
  $i2755.dup := $or.i1($i2754.dup,$i1811.dup);
  call {:cexpr "w8"} boogie_si_record_i32($i2755);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2756 := $lshr.i32($i2734,17);
  $i2756.dup := $or.i1($i2734.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2757 := $shl.i32($i2734,15);
  $i2757.dup := $or.i1($i2734.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2758 := $or.i32($i2756,$i2757);
  $i2758.dup := $or.i1($i2756.dup,$i2757.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2759 := $lshr.i32($i2734,19);
  $i2759.dup := $or.i1($i2734.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2760 := $shl.i32($i2734,13);
  $i2760.dup := $or.i1($i2734.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2761 := $or.i32($i2759,$i2760);
  $i2761.dup := $or.i1($i2759.dup,$i2760.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2762 := $xor.i32($i2758,$i2761);
  $i2762.dup := $or.i1($i2758.dup,$i2761.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2763 := $lshr.i32($i2734,10);
  $i2763.dup := $or.i1($i2734.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2764 := $xor.i32($i2762,$i2763);
  $i2764.dup := $or.i1($i2762.dup,$i2763.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2765 := $add.i32($i2764,$i2629);
  $i2765.dup := $or.i1($i2764.dup,$i2629.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2766 := $lshr.i32($i1853,7);
  $i2766.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2767 := $shl.i32($i1853,25);
  $i2767.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2768 := $or.i32($i2766,$i2767);
  $i2768.dup := $or.i1($i2766.dup,$i2767.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2769 := $lshr.i32($i1853,18);
  $i2769.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2770 := $shl.i32($i1853,14);
  $i2770.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2771 := $or.i32($i2769,$i2770);
  $i2771.dup := $or.i1($i2769.dup,$i2770.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2772 := $xor.i32($i2768,$i2771);
  $i2772.dup := $or.i1($i2768.dup,$i2771.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2773 := $lshr.i32($i1853,3);
  $i2773.dup := $or.i1($i1853.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2774 := $xor.i32($i2772,$i2773);
  $i2774.dup := $or.i1($i2772.dup,$i2773.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2775 := $add.i32($i2765,$i2774);
  $i2775.dup := $or.i1($i2765.dup,$i2774.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2776 := $add.i32($i2775,$i1832);
  $i2776.dup := $or.i1($i2775.dup,$i1832.dup);
  call {:cexpr "w9"} boogie_si_record_i32($i2776);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2777 := $lshr.i32($i2755,17);
  $i2777.dup := $or.i1($i2755.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2778 := $shl.i32($i2755,15);
  $i2778.dup := $or.i1($i2755.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2779 := $or.i32($i2777,$i2778);
  $i2779.dup := $or.i1($i2777.dup,$i2778.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2780 := $lshr.i32($i2755,19);
  $i2780.dup := $or.i1($i2755.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2781 := $shl.i32($i2755,13);
  $i2781.dup := $or.i1($i2755.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2782 := $or.i32($i2780,$i2781);
  $i2782.dup := $or.i1($i2780.dup,$i2781.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2783 := $xor.i32($i2779,$i2782);
  $i2783.dup := $or.i1($i2779.dup,$i2782.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2784 := $lshr.i32($i2755,10);
  $i2784.dup := $or.i1($i2755.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2785 := $xor.i32($i2783,$i2784);
  $i2785.dup := $or.i1($i2783.dup,$i2784.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2786 := $add.i32($i2785,$i2650);
  $i2786.dup := $or.i1($i2785.dup,$i2650.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2787 := $lshr.i32($i1874,7);
  $i2787.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2788 := $shl.i32($i1874,25);
  $i2788.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2789 := $or.i32($i2787,$i2788);
  $i2789.dup := $or.i1($i2787.dup,$i2788.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2790 := $lshr.i32($i1874,18);
  $i2790.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2791 := $shl.i32($i1874,14);
  $i2791.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2792 := $or.i32($i2790,$i2791);
  $i2792.dup := $or.i1($i2790.dup,$i2791.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2793 := $xor.i32($i2789,$i2792);
  $i2793.dup := $or.i1($i2789.dup,$i2792.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2794 := $lshr.i32($i1874,3);
  $i2794.dup := $or.i1($i1874.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2795 := $xor.i32($i2793,$i2794);
  $i2795.dup := $or.i1($i2793.dup,$i2794.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2796 := $add.i32($i2786,$i2795);
  $i2796.dup := $or.i1($i2786.dup,$i2795.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2797 := $add.i32($i2796,$i1853);
  $i2797.dup := $or.i1($i2796.dup,$i1853.dup);
  call {:cexpr "w10"} boogie_si_record_i32($i2797);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2798 := $lshr.i32($i2776,17);
  $i2798.dup := $or.i1($i2776.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2799 := $shl.i32($i2776,15);
  $i2799.dup := $or.i1($i2776.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2800 := $or.i32($i2798,$i2799);
  $i2800.dup := $or.i1($i2798.dup,$i2799.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2801 := $lshr.i32($i2776,19);
  $i2801.dup := $or.i1($i2776.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2802 := $shl.i32($i2776,13);
  $i2802.dup := $or.i1($i2776.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2803 := $or.i32($i2801,$i2802);
  $i2803.dup := $or.i1($i2801.dup,$i2802.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2804 := $xor.i32($i2800,$i2803);
  $i2804.dup := $or.i1($i2800.dup,$i2803.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2805 := $lshr.i32($i2776,10);
  $i2805.dup := $or.i1($i2776.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2806 := $xor.i32($i2804,$i2805);
  $i2806.dup := $or.i1($i2804.dup,$i2805.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2807 := $add.i32($i2806,$i2671);
  $i2807.dup := $or.i1($i2806.dup,$i2671.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2808 := $lshr.i32($i1895,7);
  $i2808.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2809 := $shl.i32($i1895,25);
  $i2809.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2810 := $or.i32($i2808,$i2809);
  $i2810.dup := $or.i1($i2808.dup,$i2809.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2811 := $lshr.i32($i1895,18);
  $i2811.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2812 := $shl.i32($i1895,14);
  $i2812.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2813 := $or.i32($i2811,$i2812);
  $i2813.dup := $or.i1($i2811.dup,$i2812.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2814 := $xor.i32($i2810,$i2813);
  $i2814.dup := $or.i1($i2810.dup,$i2813.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2815 := $lshr.i32($i1895,3);
  $i2815.dup := $or.i1($i1895.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2816 := $xor.i32($i2814,$i2815);
  $i2816.dup := $or.i1($i2814.dup,$i2815.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2817 := $add.i32($i2807,$i2816);
  $i2817.dup := $or.i1($i2807.dup,$i2816.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2818 := $add.i32($i2817,$i1874);
  $i2818.dup := $or.i1($i2817.dup,$i1874.dup);
  call {:cexpr "w11"} boogie_si_record_i32($i2818);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2819 := $lshr.i32($i2797,17);
  $i2819.dup := $or.i1($i2797.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2820 := $shl.i32($i2797,15);
  $i2820.dup := $or.i1($i2797.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2821 := $or.i32($i2819,$i2820);
  $i2821.dup := $or.i1($i2819.dup,$i2820.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2822 := $lshr.i32($i2797,19);
  $i2822.dup := $or.i1($i2797.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2823 := $shl.i32($i2797,13);
  $i2823.dup := $or.i1($i2797.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2824 := $or.i32($i2822,$i2823);
  $i2824.dup := $or.i1($i2822.dup,$i2823.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2825 := $xor.i32($i2821,$i2824);
  $i2825.dup := $or.i1($i2821.dup,$i2824.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2826 := $lshr.i32($i2797,10);
  $i2826.dup := $or.i1($i2797.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2827 := $xor.i32($i2825,$i2826);
  $i2827.dup := $or.i1($i2825.dup,$i2826.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2828 := $add.i32($i2827,$i2692);
  $i2828.dup := $or.i1($i2827.dup,$i2692.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2829 := $lshr.i32($i1916,7);
  $i2829.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2830 := $shl.i32($i1916,25);
  $i2830.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2831 := $or.i32($i2829,$i2830);
  $i2831.dup := $or.i1($i2829.dup,$i2830.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2832 := $lshr.i32($i1916,18);
  $i2832.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2833 := $shl.i32($i1916,14);
  $i2833.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2834 := $or.i32($i2832,$i2833);
  $i2834.dup := $or.i1($i2832.dup,$i2833.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2835 := $xor.i32($i2831,$i2834);
  $i2835.dup := $or.i1($i2831.dup,$i2834.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2836 := $lshr.i32($i1916,3);
  $i2836.dup := $or.i1($i1916.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2837 := $xor.i32($i2835,$i2836);
  $i2837.dup := $or.i1($i2835.dup,$i2836.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2838 := $add.i32($i2828,$i2837);
  $i2838.dup := $or.i1($i2828.dup,$i2837.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2839 := $add.i32($i2838,$i1895);
  $i2839.dup := $or.i1($i2838.dup,$i1895.dup);
  call {:cexpr "w12"} boogie_si_record_i32($i2839);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2840 := $lshr.i32($i2818,17);
  $i2840.dup := $or.i1($i2818.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2841 := $shl.i32($i2818,15);
  $i2841.dup := $or.i1($i2818.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2842 := $or.i32($i2840,$i2841);
  $i2842.dup := $or.i1($i2840.dup,$i2841.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2843 := $lshr.i32($i2818,19);
  $i2843.dup := $or.i1($i2818.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2844 := $shl.i32($i2818,13);
  $i2844.dup := $or.i1($i2818.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2845 := $or.i32($i2843,$i2844);
  $i2845.dup := $or.i1($i2843.dup,$i2844.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2846 := $xor.i32($i2842,$i2845);
  $i2846.dup := $or.i1($i2842.dup,$i2845.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2847 := $lshr.i32($i2818,10);
  $i2847.dup := $or.i1($i2818.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2848 := $xor.i32($i2846,$i2847);
  $i2848.dup := $or.i1($i2846.dup,$i2847.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2849 := $add.i32($i2848,$i2713);
  $i2849.dup := $or.i1($i2848.dup,$i2713.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2850 := $lshr.i32($i1937,7);
  $i2850.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2851 := $shl.i32($i1937,25);
  $i2851.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2852 := $or.i32($i2850,$i2851);
  $i2852.dup := $or.i1($i2850.dup,$i2851.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2853 := $lshr.i32($i1937,18);
  $i2853.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2854 := $shl.i32($i1937,14);
  $i2854.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2855 := $or.i32($i2853,$i2854);
  $i2855.dup := $or.i1($i2853.dup,$i2854.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2856 := $xor.i32($i2852,$i2855);
  $i2856.dup := $or.i1($i2852.dup,$i2855.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2857 := $lshr.i32($i1937,3);
  $i2857.dup := $or.i1($i1937.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2858 := $xor.i32($i2856,$i2857);
  $i2858.dup := $or.i1($i2856.dup,$i2857.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2859 := $add.i32($i2849,$i2858);
  $i2859.dup := $or.i1($i2849.dup,$i2858.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2860 := $add.i32($i2859,$i1916);
  $i2860.dup := $or.i1($i2859.dup,$i1916.dup);
  call {:cexpr "w13"} boogie_si_record_i32($i2860);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2861 := $lshr.i32($i2839,17);
  $i2861.dup := $or.i1($i2839.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2862 := $shl.i32($i2839,15);
  $i2862.dup := $or.i1($i2839.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2863 := $or.i32($i2861,$i2862);
  $i2863.dup := $or.i1($i2861.dup,$i2862.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2864 := $lshr.i32($i2839,19);
  $i2864.dup := $or.i1($i2839.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2865 := $shl.i32($i2839,13);
  $i2865.dup := $or.i1($i2839.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2866 := $or.i32($i2864,$i2865);
  $i2866.dup := $or.i1($i2864.dup,$i2865.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2867 := $xor.i32($i2863,$i2866);
  $i2867.dup := $or.i1($i2863.dup,$i2866.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2868 := $lshr.i32($i2839,10);
  $i2868.dup := $or.i1($i2839.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2869 := $xor.i32($i2867,$i2868);
  $i2869.dup := $or.i1($i2867.dup,$i2868.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2870 := $add.i32($i2869,$i2734);
  $i2870.dup := $or.i1($i2869.dup,$i2734.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2871 := $lshr.i32($i1958,7);
  $i2871.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2872 := $shl.i32($i1958,25);
  $i2872.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2873 := $or.i32($i2871,$i2872);
  $i2873.dup := $or.i1($i2871.dup,$i2872.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2874 := $lshr.i32($i1958,18);
  $i2874.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2875 := $shl.i32($i1958,14);
  $i2875.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2876 := $or.i32($i2874,$i2875);
  $i2876.dup := $or.i1($i2874.dup,$i2875.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2877 := $xor.i32($i2873,$i2876);
  $i2877.dup := $or.i1($i2873.dup,$i2876.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2878 := $lshr.i32($i1958,3);
  $i2878.dup := $or.i1($i1958.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2879 := $xor.i32($i2877,$i2878);
  $i2879.dup := $or.i1($i2877.dup,$i2878.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2880 := $add.i32($i2870,$i2879);
  $i2880.dup := $or.i1($i2870.dup,$i2879.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2881 := $add.i32($i2880,$i1937);
  $i2881.dup := $or.i1($i2880.dup,$i1937.dup);
  call {:cexpr "w14"} boogie_si_record_i32($i2881);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2882 := $lshr.i32($i2860,17);
  $i2882.dup := $or.i1($i2860.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2883 := $shl.i32($i2860,15);
  $i2883.dup := $or.i1($i2860.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2884 := $or.i32($i2882,$i2883);
  $i2884.dup := $or.i1($i2882.dup,$i2883.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2885 := $lshr.i32($i2860,19);
  $i2885.dup := $or.i1($i2860.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2886 := $shl.i32($i2860,13);
  $i2886.dup := $or.i1($i2860.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2887 := $or.i32($i2885,$i2886);
  $i2887.dup := $or.i1($i2885.dup,$i2886.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2888 := $xor.i32($i2884,$i2887);
  $i2888.dup := $or.i1($i2884.dup,$i2887.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2889 := $lshr.i32($i2860,10);
  $i2889.dup := $or.i1($i2860.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2890 := $xor.i32($i2888,$i2889);
  $i2890.dup := $or.i1($i2888.dup,$i2889.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2891 := $add.i32($i2890,$i2755);
  $i2891.dup := $or.i1($i2890.dup,$i2755.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2892 := $lshr.i32($i2587,7);
  $i2892.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2893 := $shl.i32($i2587,25);
  $i2893.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2894 := $or.i32($i2892,$i2893);
  $i2894.dup := $or.i1($i2892.dup,$i2893.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2895 := $lshr.i32($i2587,18);
  $i2895.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2896 := $shl.i32($i2587,14);
  $i2896.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2897 := $or.i32($i2895,$i2896);
  $i2897.dup := $or.i1($i2895.dup,$i2896.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2898 := $xor.i32($i2894,$i2897);
  $i2898.dup := $or.i1($i2894.dup,$i2897.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2899 := $lshr.i32($i2587,3);
  $i2899.dup := $or.i1($i2587.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2900 := $xor.i32($i2898,$i2899);
  $i2900.dup := $or.i1($i2898.dup,$i2899.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2901 := $add.i32($i2891,$i2900);
  $i2901.dup := $or.i1($i2891.dup,$i2900.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i2902 := $add.i32($i2901,$i1958);
  $i2902.dup := $or.i1($i2901.dup,$i1958.dup);
  call {:cexpr "w15"} boogie_si_record_i32($i2902);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2903 := $lshr.i32($i2565,6);
  $i2903.dup := $or.i1($i2565.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2904 := $shl.i32($i2565,26);
  $i2904.dup := $or.i1($i2565.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2905 := $or.i32($i2903,$i2904);
  $i2905.dup := $or.i1($i2903.dup,$i2904.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2906 := $lshr.i32($i2565,11);
  $i2906.dup := $or.i1($i2565.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2907 := $shl.i32($i2565,21);
  $i2907.dup := $or.i1($i2565.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2908 := $or.i32($i2906,$i2907);
  $i2908.dup := $or.i1($i2906.dup,$i2907.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2909 := $xor.i32($i2905,$i2908);
  $i2909.dup := $or.i1($i2905.dup,$i2908.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2910 := $lshr.i32($i2565,25);
  $i2910.dup := $or.i1($i2565.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2911 := $shl.i32($i2565,7);
  $i2911.dup := $or.i1($i2565.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2912 := $or.i32($i2910,$i2911);
  $i2912.dup := $or.i1($i2910.dup,$i2911.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2913 := $xor.i32($i2909,$i2912);
  $i2913.dup := $or.i1($i2909.dup,$i2912.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2914 := $add.i32($i2451,$i2913);
  $i2914.dup := $or.i1($i2451.dup,$i2913.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2915 := $and.i32($i2565,$i2527);
  $i2915.dup := $or.i1($i2565.dup,$i2527.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2916 := $xor.i32($i2565,$sub.i32(0,1));
  $i2916.dup := $or.i1($i2565.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2917 := $and.i32($i2916,$i2489);
  $i2917.dup := $or.i1($i2916.dup,$i2489.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2918 := $xor.i32($i2915,$i2917);
  $i2918.dup := $or.i1($i2915.dup,$i2917.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2919 := $add.i32($i2914,$i2918);
  $i2919.dup := $or.i1($i2914.dup,$i2918.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2920 := $add.i32($i2919,430227734);
  $i2920.dup := $or.i1($i2919.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2921 := $add.i32($i2920,$i2587);
  $i2921.dup := $or.i1($i2920.dup,$i2587.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2921);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2922 := $lshr.i32($i2566,2);
  $i2922.dup := $or.i1($i2566.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2923 := $shl.i32($i2566,30);
  $i2923.dup := $or.i1($i2566.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2924 := $or.i32($i2922,$i2923);
  $i2924.dup := $or.i1($i2922.dup,$i2923.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2925 := $lshr.i32($i2566,13);
  $i2925.dup := $or.i1($i2566.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2926 := $shl.i32($i2566,19);
  $i2926.dup := $or.i1($i2566.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2927 := $or.i32($i2925,$i2926);
  $i2927.dup := $or.i1($i2925.dup,$i2926.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2928 := $xor.i32($i2924,$i2927);
  $i2928.dup := $or.i1($i2924.dup,$i2927.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2929 := $lshr.i32($i2566,22);
  $i2929.dup := $or.i1($i2566.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2930 := $shl.i32($i2566,10);
  $i2930.dup := $or.i1($i2566.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2931 := $or.i32($i2929,$i2930);
  $i2931.dup := $or.i1($i2929.dup,$i2930.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2932 := $xor.i32($i2928,$i2931);
  $i2932.dup := $or.i1($i2928.dup,$i2931.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2933 := $and.i32($i2566,$i2528);
  $i2933.dup := $or.i1($i2566.dup,$i2528.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2934 := $and.i32($i2566,$i2490);
  $i2934.dup := $or.i1($i2566.dup,$i2490.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2935 := $xor.i32($i2933,$i2934);
  $i2935.dup := $or.i1($i2933.dup,$i2934.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2936 := $and.i32($i2528,$i2490);
  $i2936.dup := $or.i1($i2528.dup,$i2490.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2937 := $xor.i32($i2935,$i2936);
  $i2937.dup := $or.i1($i2935.dup,$i2936.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2938 := $add.i32($i2932,$i2937);
  $i2938.dup := $or.i1($i2932.dup,$i2937.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2938);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2939 := $add.i32($i2452,$i2921);
  $i2939.dup := $or.i1($i2452.dup,$i2921.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2939);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i2940 := $add.i32($i2921,$i2938);
  $i2940.dup := $or.i1($i2921.dup,$i2938.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2940);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2941 := $lshr.i32($i2939,6);
  $i2941.dup := $or.i1($i2939.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2942 := $shl.i32($i2939,26);
  $i2942.dup := $or.i1($i2939.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2943 := $or.i32($i2941,$i2942);
  $i2943.dup := $or.i1($i2941.dup,$i2942.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2944 := $lshr.i32($i2939,11);
  $i2944.dup := $or.i1($i2939.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2945 := $shl.i32($i2939,21);
  $i2945.dup := $or.i1($i2939.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2946 := $or.i32($i2944,$i2945);
  $i2946.dup := $or.i1($i2944.dup,$i2945.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2947 := $xor.i32($i2943,$i2946);
  $i2947.dup := $or.i1($i2943.dup,$i2946.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2948 := $lshr.i32($i2939,25);
  $i2948.dup := $or.i1($i2939.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2949 := $shl.i32($i2939,7);
  $i2949.dup := $or.i1($i2939.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2950 := $or.i32($i2948,$i2949);
  $i2950.dup := $or.i1($i2948.dup,$i2949.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2951 := $xor.i32($i2947,$i2950);
  $i2951.dup := $or.i1($i2947.dup,$i2950.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2952 := $add.i32($i2489,$i2951);
  $i2952.dup := $or.i1($i2489.dup,$i2951.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2953 := $and.i32($i2939,$i2565);
  $i2953.dup := $or.i1($i2939.dup,$i2565.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2954 := $xor.i32($i2939,$sub.i32(0,1));
  $i2954.dup := $or.i1($i2939.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2955 := $and.i32($i2954,$i2527);
  $i2955.dup := $or.i1($i2954.dup,$i2527.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2956 := $xor.i32($i2953,$i2955);
  $i2956.dup := $or.i1($i2953.dup,$i2955.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2957 := $add.i32($i2952,$i2956);
  $i2957.dup := $or.i1($i2952.dup,$i2956.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2958 := $add.i32($i2957,506948616);
  $i2958.dup := $or.i1($i2957.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2959 := $add.i32($i2958,$i2608);
  $i2959.dup := $or.i1($i2958.dup,$i2608.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2959);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2960 := $lshr.i32($i2940,2);
  $i2960.dup := $or.i1($i2940.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2961 := $shl.i32($i2940,30);
  $i2961.dup := $or.i1($i2940.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2962 := $or.i32($i2960,$i2961);
  $i2962.dup := $or.i1($i2960.dup,$i2961.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2963 := $lshr.i32($i2940,13);
  $i2963.dup := $or.i1($i2940.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2964 := $shl.i32($i2940,19);
  $i2964.dup := $or.i1($i2940.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2965 := $or.i32($i2963,$i2964);
  $i2965.dup := $or.i1($i2963.dup,$i2964.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2966 := $xor.i32($i2962,$i2965);
  $i2966.dup := $or.i1($i2962.dup,$i2965.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2967 := $lshr.i32($i2940,22);
  $i2967.dup := $or.i1($i2940.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2968 := $shl.i32($i2940,10);
  $i2968.dup := $or.i1($i2940.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2969 := $or.i32($i2967,$i2968);
  $i2969.dup := $or.i1($i2967.dup,$i2968.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2970 := $xor.i32($i2966,$i2969);
  $i2970.dup := $or.i1($i2966.dup,$i2969.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2971 := $and.i32($i2940,$i2566);
  $i2971.dup := $or.i1($i2940.dup,$i2566.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2972 := $and.i32($i2940,$i2528);
  $i2972.dup := $or.i1($i2940.dup,$i2528.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2973 := $xor.i32($i2971,$i2972);
  $i2973.dup := $or.i1($i2971.dup,$i2972.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2974 := $and.i32($i2566,$i2528);
  $i2974.dup := $or.i1($i2566.dup,$i2528.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2975 := $xor.i32($i2973,$i2974);
  $i2975.dup := $or.i1($i2973.dup,$i2974.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2976 := $add.i32($i2970,$i2975);
  $i2976.dup := $or.i1($i2970.dup,$i2975.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i2976);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2977 := $add.i32($i2490,$i2959);
  $i2977.dup := $or.i1($i2490.dup,$i2959.dup);
  call {:cexpr "e"} boogie_si_record_i32($i2977);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i2978 := $add.i32($i2959,$i2976);
  $i2978.dup := $or.i1($i2959.dup,$i2976.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2978);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2979 := $lshr.i32($i2977,6);
  $i2979.dup := $or.i1($i2977.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2980 := $shl.i32($i2977,26);
  $i2980.dup := $or.i1($i2977.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2981 := $or.i32($i2979,$i2980);
  $i2981.dup := $or.i1($i2979.dup,$i2980.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2982 := $lshr.i32($i2977,11);
  $i2982.dup := $or.i1($i2977.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2983 := $shl.i32($i2977,21);
  $i2983.dup := $or.i1($i2977.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2984 := $or.i32($i2982,$i2983);
  $i2984.dup := $or.i1($i2982.dup,$i2983.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2985 := $xor.i32($i2981,$i2984);
  $i2985.dup := $or.i1($i2981.dup,$i2984.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2986 := $lshr.i32($i2977,25);
  $i2986.dup := $or.i1($i2977.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2987 := $shl.i32($i2977,7);
  $i2987.dup := $or.i1($i2977.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2988 := $or.i32($i2986,$i2987);
  $i2988.dup := $or.i1($i2986.dup,$i2987.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2989 := $xor.i32($i2985,$i2988);
  $i2989.dup := $or.i1($i2985.dup,$i2988.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2990 := $add.i32($i2527,$i2989);
  $i2990.dup := $or.i1($i2527.dup,$i2989.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2991 := $and.i32($i2977,$i2939);
  $i2991.dup := $or.i1($i2977.dup,$i2939.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2992 := $xor.i32($i2977,$sub.i32(0,1));
  $i2992.dup := $or.i1($i2977.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2993 := $and.i32($i2992,$i2565);
  $i2993.dup := $or.i1($i2992.dup,$i2565.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2994 := $xor.i32($i2991,$i2993);
  $i2994.dup := $or.i1($i2991.dup,$i2993.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2995 := $add.i32($i2990,$i2994);
  $i2995.dup := $or.i1($i2990.dup,$i2994.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2996 := $add.i32($i2995,659060556);
  $i2996.dup := $or.i1($i2995.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2997 := $add.i32($i2996,$i2629);
  $i2997.dup := $or.i1($i2996.dup,$i2629.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i2997);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2998 := $lshr.i32($i2978,2);
  $i2998.dup := $or.i1($i2978.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i2999 := $shl.i32($i2978,30);
  $i2999.dup := $or.i1($i2978.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3000 := $or.i32($i2998,$i2999);
  $i3000.dup := $or.i1($i2998.dup,$i2999.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3001 := $lshr.i32($i2978,13);
  $i3001.dup := $or.i1($i2978.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3002 := $shl.i32($i2978,19);
  $i3002.dup := $or.i1($i2978.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3003 := $or.i32($i3001,$i3002);
  $i3003.dup := $or.i1($i3001.dup,$i3002.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3004 := $xor.i32($i3000,$i3003);
  $i3004.dup := $or.i1($i3000.dup,$i3003.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3005 := $lshr.i32($i2978,22);
  $i3005.dup := $or.i1($i2978.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3006 := $shl.i32($i2978,10);
  $i3006.dup := $or.i1($i2978.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3007 := $or.i32($i3005,$i3006);
  $i3007.dup := $or.i1($i3005.dup,$i3006.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3008 := $xor.i32($i3004,$i3007);
  $i3008.dup := $or.i1($i3004.dup,$i3007.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3009 := $and.i32($i2978,$i2940);
  $i3009.dup := $or.i1($i2978.dup,$i2940.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3010 := $and.i32($i2978,$i2566);
  $i3010.dup := $or.i1($i2978.dup,$i2566.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3011 := $xor.i32($i3009,$i3010);
  $i3011.dup := $or.i1($i3009.dup,$i3010.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3012 := $and.i32($i2940,$i2566);
  $i3012.dup := $or.i1($i2940.dup,$i2566.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3013 := $xor.i32($i3011,$i3012);
  $i3013.dup := $or.i1($i3011.dup,$i3012.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3014 := $add.i32($i3008,$i3013);
  $i3014.dup := $or.i1($i3008.dup,$i3013.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3014);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3015 := $add.i32($i2528,$i2997);
  $i3015.dup := $or.i1($i2528.dup,$i2997.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3015);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i3016 := $add.i32($i2997,$i3014);
  $i3016.dup := $or.i1($i2997.dup,$i3014.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3016);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3017 := $lshr.i32($i3015,6);
  $i3017.dup := $or.i1($i3015.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3018 := $shl.i32($i3015,26);
  $i3018.dup := $or.i1($i3015.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3019 := $or.i32($i3017,$i3018);
  $i3019.dup := $or.i1($i3017.dup,$i3018.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3020 := $lshr.i32($i3015,11);
  $i3020.dup := $or.i1($i3015.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3021 := $shl.i32($i3015,21);
  $i3021.dup := $or.i1($i3015.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3022 := $or.i32($i3020,$i3021);
  $i3022.dup := $or.i1($i3020.dup,$i3021.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3023 := $xor.i32($i3019,$i3022);
  $i3023.dup := $or.i1($i3019.dup,$i3022.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3024 := $lshr.i32($i3015,25);
  $i3024.dup := $or.i1($i3015.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3025 := $shl.i32($i3015,7);
  $i3025.dup := $or.i1($i3015.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3026 := $or.i32($i3024,$i3025);
  $i3026.dup := $or.i1($i3024.dup,$i3025.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3027 := $xor.i32($i3023,$i3026);
  $i3027.dup := $or.i1($i3023.dup,$i3026.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3028 := $add.i32($i2565,$i3027);
  $i3028.dup := $or.i1($i2565.dup,$i3027.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3029 := $and.i32($i3015,$i2977);
  $i3029.dup := $or.i1($i3015.dup,$i2977.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3030 := $xor.i32($i3015,$sub.i32(0,1));
  $i3030.dup := $or.i1($i3015.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3031 := $and.i32($i3030,$i2939);
  $i3031.dup := $or.i1($i3030.dup,$i2939.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3032 := $xor.i32($i3029,$i3031);
  $i3032.dup := $or.i1($i3029.dup,$i3031.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3033 := $add.i32($i3028,$i3032);
  $i3033.dup := $or.i1($i3028.dup,$i3032.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3034 := $add.i32($i3033,883997877);
  $i3034.dup := $or.i1($i3033.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3035 := $add.i32($i3034,$i2650);
  $i3035.dup := $or.i1($i3034.dup,$i2650.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3035);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3036 := $lshr.i32($i3016,2);
  $i3036.dup := $or.i1($i3016.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3037 := $shl.i32($i3016,30);
  $i3037.dup := $or.i1($i3016.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3038 := $or.i32($i3036,$i3037);
  $i3038.dup := $or.i1($i3036.dup,$i3037.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3039 := $lshr.i32($i3016,13);
  $i3039.dup := $or.i1($i3016.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3040 := $shl.i32($i3016,19);
  $i3040.dup := $or.i1($i3016.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3041 := $or.i32($i3039,$i3040);
  $i3041.dup := $or.i1($i3039.dup,$i3040.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3042 := $xor.i32($i3038,$i3041);
  $i3042.dup := $or.i1($i3038.dup,$i3041.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3043 := $lshr.i32($i3016,22);
  $i3043.dup := $or.i1($i3016.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3044 := $shl.i32($i3016,10);
  $i3044.dup := $or.i1($i3016.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3045 := $or.i32($i3043,$i3044);
  $i3045.dup := $or.i1($i3043.dup,$i3044.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3046 := $xor.i32($i3042,$i3045);
  $i3046.dup := $or.i1($i3042.dup,$i3045.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3047 := $and.i32($i3016,$i2978);
  $i3047.dup := $or.i1($i3016.dup,$i2978.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3048 := $and.i32($i3016,$i2940);
  $i3048.dup := $or.i1($i3016.dup,$i2940.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3049 := $xor.i32($i3047,$i3048);
  $i3049.dup := $or.i1($i3047.dup,$i3048.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3050 := $and.i32($i2978,$i2940);
  $i3050.dup := $or.i1($i2978.dup,$i2940.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3051 := $xor.i32($i3049,$i3050);
  $i3051.dup := $or.i1($i3049.dup,$i3050.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3052 := $add.i32($i3046,$i3051);
  $i3052.dup := $or.i1($i3046.dup,$i3051.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3052);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3053 := $add.i32($i2566,$i3035);
  $i3053.dup := $or.i1($i2566.dup,$i3035.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3053);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 164, 5} true;
  assume {:verifier.code 0} true;
  $i3054 := $add.i32($i3035,$i3052);
  $i3054.dup := $or.i1($i3035.dup,$i3052.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3054);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3055 := $lshr.i32($i3053,6);
  $i3055.dup := $or.i1($i3053.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3056 := $shl.i32($i3053,26);
  $i3056.dup := $or.i1($i3053.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3057 := $or.i32($i3055,$i3056);
  $i3057.dup := $or.i1($i3055.dup,$i3056.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3058 := $lshr.i32($i3053,11);
  $i3058.dup := $or.i1($i3053.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3059 := $shl.i32($i3053,21);
  $i3059.dup := $or.i1($i3053.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3060 := $or.i32($i3058,$i3059);
  $i3060.dup := $or.i1($i3058.dup,$i3059.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3061 := $xor.i32($i3057,$i3060);
  $i3061.dup := $or.i1($i3057.dup,$i3060.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3062 := $lshr.i32($i3053,25);
  $i3062.dup := $or.i1($i3053.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3063 := $shl.i32($i3053,7);
  $i3063.dup := $or.i1($i3053.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3064 := $or.i32($i3062,$i3063);
  $i3064.dup := $or.i1($i3062.dup,$i3063.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3065 := $xor.i32($i3061,$i3064);
  $i3065.dup := $or.i1($i3061.dup,$i3064.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3066 := $add.i32($i2939,$i3065);
  $i3066.dup := $or.i1($i2939.dup,$i3065.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3067 := $and.i32($i3053,$i3015);
  $i3067.dup := $or.i1($i3053.dup,$i3015.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3068 := $xor.i32($i3053,$sub.i32(0,1));
  $i3068.dup := $or.i1($i3053.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3069 := $and.i32($i3068,$i2977);
  $i3069.dup := $or.i1($i3068.dup,$i2977.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3070 := $xor.i32($i3067,$i3069);
  $i3070.dup := $or.i1($i3067.dup,$i3069.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3071 := $add.i32($i3066,$i3070);
  $i3071.dup := $or.i1($i3066.dup,$i3070.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3072 := $add.i32($i3071,958139571);
  $i3072.dup := $or.i1($i3071.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3073 := $add.i32($i3072,$i2671);
  $i3073.dup := $or.i1($i3072.dup,$i2671.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3073);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3074 := $lshr.i32($i3054,2);
  $i3074.dup := $or.i1($i3054.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3075 := $shl.i32($i3054,30);
  $i3075.dup := $or.i1($i3054.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3076 := $or.i32($i3074,$i3075);
  $i3076.dup := $or.i1($i3074.dup,$i3075.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3077 := $lshr.i32($i3054,13);
  $i3077.dup := $or.i1($i3054.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3078 := $shl.i32($i3054,19);
  $i3078.dup := $or.i1($i3054.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3079 := $or.i32($i3077,$i3078);
  $i3079.dup := $or.i1($i3077.dup,$i3078.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3080 := $xor.i32($i3076,$i3079);
  $i3080.dup := $or.i1($i3076.dup,$i3079.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3081 := $lshr.i32($i3054,22);
  $i3081.dup := $or.i1($i3054.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3082 := $shl.i32($i3054,10);
  $i3082.dup := $or.i1($i3054.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3083 := $or.i32($i3081,$i3082);
  $i3083.dup := $or.i1($i3081.dup,$i3082.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3084 := $xor.i32($i3080,$i3083);
  $i3084.dup := $or.i1($i3080.dup,$i3083.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3085 := $and.i32($i3054,$i3016);
  $i3085.dup := $or.i1($i3054.dup,$i3016.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3086 := $and.i32($i3054,$i2978);
  $i3086.dup := $or.i1($i3054.dup,$i2978.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3087 := $xor.i32($i3085,$i3086);
  $i3087.dup := $or.i1($i3085.dup,$i3086.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3088 := $and.i32($i3016,$i2978);
  $i3088.dup := $or.i1($i3016.dup,$i2978.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3089 := $xor.i32($i3087,$i3088);
  $i3089.dup := $or.i1($i3087.dup,$i3088.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3090 := $add.i32($i3084,$i3089);
  $i3090.dup := $or.i1($i3084.dup,$i3089.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3090);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3091 := $add.i32($i2940,$i3073);
  $i3091.dup := $or.i1($i2940.dup,$i3073.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3091);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i3092 := $add.i32($i3073,$i3090);
  $i3092.dup := $or.i1($i3073.dup,$i3090.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3092);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3093 := $lshr.i32($i3091,6);
  $i3093.dup := $or.i1($i3091.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3094 := $shl.i32($i3091,26);
  $i3094.dup := $or.i1($i3091.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3095 := $or.i32($i3093,$i3094);
  $i3095.dup := $or.i1($i3093.dup,$i3094.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3096 := $lshr.i32($i3091,11);
  $i3096.dup := $or.i1($i3091.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3097 := $shl.i32($i3091,21);
  $i3097.dup := $or.i1($i3091.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3098 := $or.i32($i3096,$i3097);
  $i3098.dup := $or.i1($i3096.dup,$i3097.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3099 := $xor.i32($i3095,$i3098);
  $i3099.dup := $or.i1($i3095.dup,$i3098.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3100 := $lshr.i32($i3091,25);
  $i3100.dup := $or.i1($i3091.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3101 := $shl.i32($i3091,7);
  $i3101.dup := $or.i1($i3091.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3102 := $or.i32($i3100,$i3101);
  $i3102.dup := $or.i1($i3100.dup,$i3101.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3103 := $xor.i32($i3099,$i3102);
  $i3103.dup := $or.i1($i3099.dup,$i3102.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3104 := $add.i32($i2977,$i3103);
  $i3104.dup := $or.i1($i2977.dup,$i3103.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3105 := $and.i32($i3091,$i3053);
  $i3105.dup := $or.i1($i3091.dup,$i3053.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3106 := $xor.i32($i3091,$sub.i32(0,1));
  $i3106.dup := $or.i1($i3091.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3107 := $and.i32($i3106,$i3015);
  $i3107.dup := $or.i1($i3106.dup,$i3015.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3108 := $xor.i32($i3105,$i3107);
  $i3108.dup := $or.i1($i3105.dup,$i3107.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3109 := $add.i32($i3104,$i3108);
  $i3109.dup := $or.i1($i3104.dup,$i3108.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3110 := $add.i32($i3109,1322822218);
  $i3110.dup := $or.i1($i3109.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3111 := $add.i32($i3110,$i2692);
  $i3111.dup := $or.i1($i3110.dup,$i2692.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3111);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3112 := $lshr.i32($i3092,2);
  $i3112.dup := $or.i1($i3092.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3113 := $shl.i32($i3092,30);
  $i3113.dup := $or.i1($i3092.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3114 := $or.i32($i3112,$i3113);
  $i3114.dup := $or.i1($i3112.dup,$i3113.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3115 := $lshr.i32($i3092,13);
  $i3115.dup := $or.i1($i3092.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3116 := $shl.i32($i3092,19);
  $i3116.dup := $or.i1($i3092.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3117 := $or.i32($i3115,$i3116);
  $i3117.dup := $or.i1($i3115.dup,$i3116.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3118 := $xor.i32($i3114,$i3117);
  $i3118.dup := $or.i1($i3114.dup,$i3117.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3119 := $lshr.i32($i3092,22);
  $i3119.dup := $or.i1($i3092.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3120 := $shl.i32($i3092,10);
  $i3120.dup := $or.i1($i3092.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3121 := $or.i32($i3119,$i3120);
  $i3121.dup := $or.i1($i3119.dup,$i3120.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3122 := $xor.i32($i3118,$i3121);
  $i3122.dup := $or.i1($i3118.dup,$i3121.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3123 := $and.i32($i3092,$i3054);
  $i3123.dup := $or.i1($i3092.dup,$i3054.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3124 := $and.i32($i3092,$i3016);
  $i3124.dup := $or.i1($i3092.dup,$i3016.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3125 := $xor.i32($i3123,$i3124);
  $i3125.dup := $or.i1($i3123.dup,$i3124.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3126 := $and.i32($i3054,$i3016);
  $i3126.dup := $or.i1($i3054.dup,$i3016.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3127 := $xor.i32($i3125,$i3126);
  $i3127.dup := $or.i1($i3125.dup,$i3126.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3128 := $add.i32($i3122,$i3127);
  $i3128.dup := $or.i1($i3122.dup,$i3127.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3128);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3129 := $add.i32($i2978,$i3111);
  $i3129.dup := $or.i1($i2978.dup,$i3111.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3129);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i3130 := $add.i32($i3111,$i3128);
  $i3130.dup := $or.i1($i3111.dup,$i3128.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3130);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3131 := $lshr.i32($i3129,6);
  $i3131.dup := $or.i1($i3129.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3132 := $shl.i32($i3129,26);
  $i3132.dup := $or.i1($i3129.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3133 := $or.i32($i3131,$i3132);
  $i3133.dup := $or.i1($i3131.dup,$i3132.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3134 := $lshr.i32($i3129,11);
  $i3134.dup := $or.i1($i3129.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3135 := $shl.i32($i3129,21);
  $i3135.dup := $or.i1($i3129.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3136 := $or.i32($i3134,$i3135);
  $i3136.dup := $or.i1($i3134.dup,$i3135.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3137 := $xor.i32($i3133,$i3136);
  $i3137.dup := $or.i1($i3133.dup,$i3136.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3138 := $lshr.i32($i3129,25);
  $i3138.dup := $or.i1($i3129.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3139 := $shl.i32($i3129,7);
  $i3139.dup := $or.i1($i3129.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3140 := $or.i32($i3138,$i3139);
  $i3140.dup := $or.i1($i3138.dup,$i3139.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3141 := $xor.i32($i3137,$i3140);
  $i3141.dup := $or.i1($i3137.dup,$i3140.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3142 := $add.i32($i3015,$i3141);
  $i3142.dup := $or.i1($i3015.dup,$i3141.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3143 := $and.i32($i3129,$i3091);
  $i3143.dup := $or.i1($i3129.dup,$i3091.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3144 := $xor.i32($i3129,$sub.i32(0,1));
  $i3144.dup := $or.i1($i3129.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3145 := $and.i32($i3144,$i3053);
  $i3145.dup := $or.i1($i3144.dup,$i3053.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3146 := $xor.i32($i3143,$i3145);
  $i3146.dup := $or.i1($i3143.dup,$i3145.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3147 := $add.i32($i3142,$i3146);
  $i3147.dup := $or.i1($i3142.dup,$i3146.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3148 := $add.i32($i3147,1537002063);
  $i3148.dup := $or.i1($i3147.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3149 := $add.i32($i3148,$i2713);
  $i3149.dup := $or.i1($i3148.dup,$i2713.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3149);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3150 := $lshr.i32($i3130,2);
  $i3150.dup := $or.i1($i3130.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3151 := $shl.i32($i3130,30);
  $i3151.dup := $or.i1($i3130.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3152 := $or.i32($i3150,$i3151);
  $i3152.dup := $or.i1($i3150.dup,$i3151.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3153 := $lshr.i32($i3130,13);
  $i3153.dup := $or.i1($i3130.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3154 := $shl.i32($i3130,19);
  $i3154.dup := $or.i1($i3130.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3155 := $or.i32($i3153,$i3154);
  $i3155.dup := $or.i1($i3153.dup,$i3154.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3156 := $xor.i32($i3152,$i3155);
  $i3156.dup := $or.i1($i3152.dup,$i3155.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3157 := $lshr.i32($i3130,22);
  $i3157.dup := $or.i1($i3130.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3158 := $shl.i32($i3130,10);
  $i3158.dup := $or.i1($i3130.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3159 := $or.i32($i3157,$i3158);
  $i3159.dup := $or.i1($i3157.dup,$i3158.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3160 := $xor.i32($i3156,$i3159);
  $i3160.dup := $or.i1($i3156.dup,$i3159.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3161 := $and.i32($i3130,$i3092);
  $i3161.dup := $or.i1($i3130.dup,$i3092.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3162 := $and.i32($i3130,$i3054);
  $i3162.dup := $or.i1($i3130.dup,$i3054.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3163 := $xor.i32($i3161,$i3162);
  $i3163.dup := $or.i1($i3161.dup,$i3162.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3164 := $and.i32($i3092,$i3054);
  $i3164.dup := $or.i1($i3092.dup,$i3054.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3165 := $xor.i32($i3163,$i3164);
  $i3165.dup := $or.i1($i3163.dup,$i3164.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3166 := $add.i32($i3160,$i3165);
  $i3166.dup := $or.i1($i3160.dup,$i3165.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3166);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3167 := $add.i32($i3016,$i3149);
  $i3167.dup := $or.i1($i3016.dup,$i3149.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3167);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i3168 := $add.i32($i3149,$i3166);
  $i3168.dup := $or.i1($i3149.dup,$i3166.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3168);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3169 := $lshr.i32($i3167,6);
  $i3169.dup := $or.i1($i3167.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3170 := $shl.i32($i3167,26);
  $i3170.dup := $or.i1($i3167.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3171 := $or.i32($i3169,$i3170);
  $i3171.dup := $or.i1($i3169.dup,$i3170.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3172 := $lshr.i32($i3167,11);
  $i3172.dup := $or.i1($i3167.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3173 := $shl.i32($i3167,21);
  $i3173.dup := $or.i1($i3167.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3174 := $or.i32($i3172,$i3173);
  $i3174.dup := $or.i1($i3172.dup,$i3173.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3175 := $xor.i32($i3171,$i3174);
  $i3175.dup := $or.i1($i3171.dup,$i3174.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3176 := $lshr.i32($i3167,25);
  $i3176.dup := $or.i1($i3167.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3177 := $shl.i32($i3167,7);
  $i3177.dup := $or.i1($i3167.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3178 := $or.i32($i3176,$i3177);
  $i3178.dup := $or.i1($i3176.dup,$i3177.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3179 := $xor.i32($i3175,$i3178);
  $i3179.dup := $or.i1($i3175.dup,$i3178.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3180 := $add.i32($i3053,$i3179);
  $i3180.dup := $or.i1($i3053.dup,$i3179.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3181 := $and.i32($i3167,$i3129);
  $i3181.dup := $or.i1($i3167.dup,$i3129.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3182 := $xor.i32($i3167,$sub.i32(0,1));
  $i3182.dup := $or.i1($i3167.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3183 := $and.i32($i3182,$i3091);
  $i3183.dup := $or.i1($i3182.dup,$i3091.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3184 := $xor.i32($i3181,$i3183);
  $i3184.dup := $or.i1($i3181.dup,$i3183.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3185 := $add.i32($i3180,$i3184);
  $i3185.dup := $or.i1($i3180.dup,$i3184.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3186 := $add.i32($i3185,1747873779);
  $i3186.dup := $or.i1($i3185.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3187 := $add.i32($i3186,$i2734);
  $i3187.dup := $or.i1($i3186.dup,$i2734.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3187);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3188 := $lshr.i32($i3168,2);
  $i3188.dup := $or.i1($i3168.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3189 := $shl.i32($i3168,30);
  $i3189.dup := $or.i1($i3168.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3190 := $or.i32($i3188,$i3189);
  $i3190.dup := $or.i1($i3188.dup,$i3189.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3191 := $lshr.i32($i3168,13);
  $i3191.dup := $or.i1($i3168.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3192 := $shl.i32($i3168,19);
  $i3192.dup := $or.i1($i3168.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3193 := $or.i32($i3191,$i3192);
  $i3193.dup := $or.i1($i3191.dup,$i3192.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3194 := $xor.i32($i3190,$i3193);
  $i3194.dup := $or.i1($i3190.dup,$i3193.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3195 := $lshr.i32($i3168,22);
  $i3195.dup := $or.i1($i3168.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3196 := $shl.i32($i3168,10);
  $i3196.dup := $or.i1($i3168.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3197 := $or.i32($i3195,$i3196);
  $i3197.dup := $or.i1($i3195.dup,$i3196.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3198 := $xor.i32($i3194,$i3197);
  $i3198.dup := $or.i1($i3194.dup,$i3197.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3199 := $and.i32($i3168,$i3130);
  $i3199.dup := $or.i1($i3168.dup,$i3130.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3200 := $and.i32($i3168,$i3092);
  $i3200.dup := $or.i1($i3168.dup,$i3092.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3201 := $xor.i32($i3199,$i3200);
  $i3201.dup := $or.i1($i3199.dup,$i3200.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3202 := $and.i32($i3130,$i3092);
  $i3202.dup := $or.i1($i3130.dup,$i3092.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3203 := $xor.i32($i3201,$i3202);
  $i3203.dup := $or.i1($i3201.dup,$i3202.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3204 := $add.i32($i3198,$i3203);
  $i3204.dup := $or.i1($i3198.dup,$i3203.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3204);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3205 := $add.i32($i3054,$i3187);
  $i3205.dup := $or.i1($i3054.dup,$i3187.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3205);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i3206 := $add.i32($i3187,$i3204);
  $i3206.dup := $or.i1($i3187.dup,$i3204.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3206);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3207 := $lshr.i32($i3205,6);
  $i3207.dup := $or.i1($i3205.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3208 := $shl.i32($i3205,26);
  $i3208.dup := $or.i1($i3205.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3209 := $or.i32($i3207,$i3208);
  $i3209.dup := $or.i1($i3207.dup,$i3208.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3210 := $lshr.i32($i3205,11);
  $i3210.dup := $or.i1($i3205.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3211 := $shl.i32($i3205,21);
  $i3211.dup := $or.i1($i3205.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3212 := $or.i32($i3210,$i3211);
  $i3212.dup := $or.i1($i3210.dup,$i3211.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3213 := $xor.i32($i3209,$i3212);
  $i3213.dup := $or.i1($i3209.dup,$i3212.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3214 := $lshr.i32($i3205,25);
  $i3214.dup := $or.i1($i3205.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3215 := $shl.i32($i3205,7);
  $i3215.dup := $or.i1($i3205.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3216 := $or.i32($i3214,$i3215);
  $i3216.dup := $or.i1($i3214.dup,$i3215.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3217 := $xor.i32($i3213,$i3216);
  $i3217.dup := $or.i1($i3213.dup,$i3216.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3218 := $add.i32($i3091,$i3217);
  $i3218.dup := $or.i1($i3091.dup,$i3217.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3219 := $and.i32($i3205,$i3167);
  $i3219.dup := $or.i1($i3205.dup,$i3167.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3220 := $xor.i32($i3205,$sub.i32(0,1));
  $i3220.dup := $or.i1($i3205.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3221 := $and.i32($i3220,$i3129);
  $i3221.dup := $or.i1($i3220.dup,$i3129.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3222 := $xor.i32($i3219,$i3221);
  $i3222.dup := $or.i1($i3219.dup,$i3221.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3223 := $add.i32($i3218,$i3222);
  $i3223.dup := $or.i1($i3218.dup,$i3222.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3224 := $add.i32($i3223,1955562222);
  $i3224.dup := $or.i1($i3223.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3225 := $add.i32($i3224,$i2755);
  $i3225.dup := $or.i1($i3224.dup,$i2755.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3225);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3226 := $lshr.i32($i3206,2);
  $i3226.dup := $or.i1($i3206.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3227 := $shl.i32($i3206,30);
  $i3227.dup := $or.i1($i3206.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3228 := $or.i32($i3226,$i3227);
  $i3228.dup := $or.i1($i3226.dup,$i3227.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3229 := $lshr.i32($i3206,13);
  $i3229.dup := $or.i1($i3206.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3230 := $shl.i32($i3206,19);
  $i3230.dup := $or.i1($i3206.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3231 := $or.i32($i3229,$i3230);
  $i3231.dup := $or.i1($i3229.dup,$i3230.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3232 := $xor.i32($i3228,$i3231);
  $i3232.dup := $or.i1($i3228.dup,$i3231.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3233 := $lshr.i32($i3206,22);
  $i3233.dup := $or.i1($i3206.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3234 := $shl.i32($i3206,10);
  $i3234.dup := $or.i1($i3206.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3235 := $or.i32($i3233,$i3234);
  $i3235.dup := $or.i1($i3233.dup,$i3234.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3236 := $xor.i32($i3232,$i3235);
  $i3236.dup := $or.i1($i3232.dup,$i3235.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3237 := $and.i32($i3206,$i3168);
  $i3237.dup := $or.i1($i3206.dup,$i3168.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3238 := $and.i32($i3206,$i3130);
  $i3238.dup := $or.i1($i3206.dup,$i3130.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3239 := $xor.i32($i3237,$i3238);
  $i3239.dup := $or.i1($i3237.dup,$i3238.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3240 := $and.i32($i3168,$i3130);
  $i3240.dup := $or.i1($i3168.dup,$i3130.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3241 := $xor.i32($i3239,$i3240);
  $i3241.dup := $or.i1($i3239.dup,$i3240.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3242 := $add.i32($i3236,$i3241);
  $i3242.dup := $or.i1($i3236.dup,$i3241.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3242);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3243 := $add.i32($i3092,$i3225);
  $i3243.dup := $or.i1($i3092.dup,$i3225.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3243);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i3244 := $add.i32($i3225,$i3242);
  $i3244.dup := $or.i1($i3225.dup,$i3242.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3244);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3245 := $lshr.i32($i3243,6);
  $i3245.dup := $or.i1($i3243.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3246 := $shl.i32($i3243,26);
  $i3246.dup := $or.i1($i3243.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3247 := $or.i32($i3245,$i3246);
  $i3247.dup := $or.i1($i3245.dup,$i3246.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3248 := $lshr.i32($i3243,11);
  $i3248.dup := $or.i1($i3243.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3249 := $shl.i32($i3243,21);
  $i3249.dup := $or.i1($i3243.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3250 := $or.i32($i3248,$i3249);
  $i3250.dup := $or.i1($i3248.dup,$i3249.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3251 := $xor.i32($i3247,$i3250);
  $i3251.dup := $or.i1($i3247.dup,$i3250.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3252 := $lshr.i32($i3243,25);
  $i3252.dup := $or.i1($i3243.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3253 := $shl.i32($i3243,7);
  $i3253.dup := $or.i1($i3243.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3254 := $or.i32($i3252,$i3253);
  $i3254.dup := $or.i1($i3252.dup,$i3253.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3255 := $xor.i32($i3251,$i3254);
  $i3255.dup := $or.i1($i3251.dup,$i3254.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3256 := $add.i32($i3129,$i3255);
  $i3256.dup := $or.i1($i3129.dup,$i3255.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3257 := $and.i32($i3243,$i3205);
  $i3257.dup := $or.i1($i3243.dup,$i3205.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3258 := $xor.i32($i3243,$sub.i32(0,1));
  $i3258.dup := $or.i1($i3243.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3259 := $and.i32($i3258,$i3167);
  $i3259.dup := $or.i1($i3258.dup,$i3167.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3260 := $xor.i32($i3257,$i3259);
  $i3260.dup := $or.i1($i3257.dup,$i3259.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3261 := $add.i32($i3256,$i3260);
  $i3261.dup := $or.i1($i3256.dup,$i3260.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3262 := $add.i32($i3261,2024104815);
  $i3262.dup := $or.i1($i3261.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3263 := $add.i32($i3262,$i2776);
  $i3263.dup := $or.i1($i3262.dup,$i2776.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3263);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3264 := $lshr.i32($i3244,2);
  $i3264.dup := $or.i1($i3244.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3265 := $shl.i32($i3244,30);
  $i3265.dup := $or.i1($i3244.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3266 := $or.i32($i3264,$i3265);
  $i3266.dup := $or.i1($i3264.dup,$i3265.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3267 := $lshr.i32($i3244,13);
  $i3267.dup := $or.i1($i3244.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3268 := $shl.i32($i3244,19);
  $i3268.dup := $or.i1($i3244.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3269 := $or.i32($i3267,$i3268);
  $i3269.dup := $or.i1($i3267.dup,$i3268.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3270 := $xor.i32($i3266,$i3269);
  $i3270.dup := $or.i1($i3266.dup,$i3269.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3271 := $lshr.i32($i3244,22);
  $i3271.dup := $or.i1($i3244.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3272 := $shl.i32($i3244,10);
  $i3272.dup := $or.i1($i3244.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3273 := $or.i32($i3271,$i3272);
  $i3273.dup := $or.i1($i3271.dup,$i3272.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3274 := $xor.i32($i3270,$i3273);
  $i3274.dup := $or.i1($i3270.dup,$i3273.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3275 := $and.i32($i3244,$i3206);
  $i3275.dup := $or.i1($i3244.dup,$i3206.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3276 := $and.i32($i3244,$i3168);
  $i3276.dup := $or.i1($i3244.dup,$i3168.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3277 := $xor.i32($i3275,$i3276);
  $i3277.dup := $or.i1($i3275.dup,$i3276.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3278 := $and.i32($i3206,$i3168);
  $i3278.dup := $or.i1($i3206.dup,$i3168.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3279 := $xor.i32($i3277,$i3278);
  $i3279.dup := $or.i1($i3277.dup,$i3278.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3280 := $add.i32($i3274,$i3279);
  $i3280.dup := $or.i1($i3274.dup,$i3279.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3280);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3281 := $add.i32($i3130,$i3263);
  $i3281.dup := $or.i1($i3130.dup,$i3263.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3281);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i3282 := $add.i32($i3263,$i3280);
  $i3282.dup := $or.i1($i3263.dup,$i3280.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3282);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3283 := $lshr.i32($i3281,6);
  $i3283.dup := $or.i1($i3281.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3284 := $shl.i32($i3281,26);
  $i3284.dup := $or.i1($i3281.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3285 := $or.i32($i3283,$i3284);
  $i3285.dup := $or.i1($i3283.dup,$i3284.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3286 := $lshr.i32($i3281,11);
  $i3286.dup := $or.i1($i3281.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3287 := $shl.i32($i3281,21);
  $i3287.dup := $or.i1($i3281.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3288 := $or.i32($i3286,$i3287);
  $i3288.dup := $or.i1($i3286.dup,$i3287.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3289 := $xor.i32($i3285,$i3288);
  $i3289.dup := $or.i1($i3285.dup,$i3288.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3290 := $lshr.i32($i3281,25);
  $i3290.dup := $or.i1($i3281.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3291 := $shl.i32($i3281,7);
  $i3291.dup := $or.i1($i3281.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3292 := $or.i32($i3290,$i3291);
  $i3292.dup := $or.i1($i3290.dup,$i3291.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3293 := $xor.i32($i3289,$i3292);
  $i3293.dup := $or.i1($i3289.dup,$i3292.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3294 := $add.i32($i3167,$i3293);
  $i3294.dup := $or.i1($i3167.dup,$i3293.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3295 := $and.i32($i3281,$i3243);
  $i3295.dup := $or.i1($i3281.dup,$i3243.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3296 := $xor.i32($i3281,$sub.i32(0,1));
  $i3296.dup := $or.i1($i3281.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3297 := $and.i32($i3296,$i3205);
  $i3297.dup := $or.i1($i3296.dup,$i3205.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3298 := $xor.i32($i3295,$i3297);
  $i3298.dup := $or.i1($i3295.dup,$i3297.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3299 := $add.i32($i3294,$i3298);
  $i3299.dup := $or.i1($i3294.dup,$i3298.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3300 := $add.i32($i3299,2227730452);
  $i3300.dup := $or.i1($i3299.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3301 := $add.i32($i3300,$i2797);
  $i3301.dup := $or.i1($i3300.dup,$i2797.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3301);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3302 := $lshr.i32($i3282,2);
  $i3302.dup := $or.i1($i3282.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3303 := $shl.i32($i3282,30);
  $i3303.dup := $or.i1($i3282.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3304 := $or.i32($i3302,$i3303);
  $i3304.dup := $or.i1($i3302.dup,$i3303.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3305 := $lshr.i32($i3282,13);
  $i3305.dup := $or.i1($i3282.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3306 := $shl.i32($i3282,19);
  $i3306.dup := $or.i1($i3282.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3307 := $or.i32($i3305,$i3306);
  $i3307.dup := $or.i1($i3305.dup,$i3306.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3308 := $xor.i32($i3304,$i3307);
  $i3308.dup := $or.i1($i3304.dup,$i3307.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3309 := $lshr.i32($i3282,22);
  $i3309.dup := $or.i1($i3282.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3310 := $shl.i32($i3282,10);
  $i3310.dup := $or.i1($i3282.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3311 := $or.i32($i3309,$i3310);
  $i3311.dup := $or.i1($i3309.dup,$i3310.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3312 := $xor.i32($i3308,$i3311);
  $i3312.dup := $or.i1($i3308.dup,$i3311.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3313 := $and.i32($i3282,$i3244);
  $i3313.dup := $or.i1($i3282.dup,$i3244.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3314 := $and.i32($i3282,$i3206);
  $i3314.dup := $or.i1($i3282.dup,$i3206.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3315 := $xor.i32($i3313,$i3314);
  $i3315.dup := $or.i1($i3313.dup,$i3314.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3316 := $and.i32($i3244,$i3206);
  $i3316.dup := $or.i1($i3244.dup,$i3206.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3317 := $xor.i32($i3315,$i3316);
  $i3317.dup := $or.i1($i3315.dup,$i3316.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3318 := $add.i32($i3312,$i3317);
  $i3318.dup := $or.i1($i3312.dup,$i3317.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3318);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3319 := $add.i32($i3168,$i3301);
  $i3319.dup := $or.i1($i3168.dup,$i3301.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3319);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i3320 := $add.i32($i3301,$i3318);
  $i3320.dup := $or.i1($i3301.dup,$i3318.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3320);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3321 := $lshr.i32($i3319,6);
  $i3321.dup := $or.i1($i3319.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3322 := $shl.i32($i3319,26);
  $i3322.dup := $or.i1($i3319.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3323 := $or.i32($i3321,$i3322);
  $i3323.dup := $or.i1($i3321.dup,$i3322.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3324 := $lshr.i32($i3319,11);
  $i3324.dup := $or.i1($i3319.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3325 := $shl.i32($i3319,21);
  $i3325.dup := $or.i1($i3319.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3326 := $or.i32($i3324,$i3325);
  $i3326.dup := $or.i1($i3324.dup,$i3325.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3327 := $xor.i32($i3323,$i3326);
  $i3327.dup := $or.i1($i3323.dup,$i3326.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3328 := $lshr.i32($i3319,25);
  $i3328.dup := $or.i1($i3319.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3329 := $shl.i32($i3319,7);
  $i3329.dup := $or.i1($i3319.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3330 := $or.i32($i3328,$i3329);
  $i3330.dup := $or.i1($i3328.dup,$i3329.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3331 := $xor.i32($i3327,$i3330);
  $i3331.dup := $or.i1($i3327.dup,$i3330.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3332 := $add.i32($i3205,$i3331);
  $i3332.dup := $or.i1($i3205.dup,$i3331.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3333 := $and.i32($i3319,$i3281);
  $i3333.dup := $or.i1($i3319.dup,$i3281.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3334 := $xor.i32($i3319,$sub.i32(0,1));
  $i3334.dup := $or.i1($i3319.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3335 := $and.i32($i3334,$i3243);
  $i3335.dup := $or.i1($i3334.dup,$i3243.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3336 := $xor.i32($i3333,$i3335);
  $i3336.dup := $or.i1($i3333.dup,$i3335.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3337 := $add.i32($i3332,$i3336);
  $i3337.dup := $or.i1($i3332.dup,$i3336.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3338 := $add.i32($i3337,2361852424);
  $i3338.dup := $or.i1($i3337.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3339 := $add.i32($i3338,$i2818);
  $i3339.dup := $or.i1($i3338.dup,$i2818.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3339);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3340 := $lshr.i32($i3320,2);
  $i3340.dup := $or.i1($i3320.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3341 := $shl.i32($i3320,30);
  $i3341.dup := $or.i1($i3320.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3342 := $or.i32($i3340,$i3341);
  $i3342.dup := $or.i1($i3340.dup,$i3341.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3343 := $lshr.i32($i3320,13);
  $i3343.dup := $or.i1($i3320.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3344 := $shl.i32($i3320,19);
  $i3344.dup := $or.i1($i3320.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3345 := $or.i32($i3343,$i3344);
  $i3345.dup := $or.i1($i3343.dup,$i3344.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3346 := $xor.i32($i3342,$i3345);
  $i3346.dup := $or.i1($i3342.dup,$i3345.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3347 := $lshr.i32($i3320,22);
  $i3347.dup := $or.i1($i3320.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3348 := $shl.i32($i3320,10);
  $i3348.dup := $or.i1($i3320.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3349 := $or.i32($i3347,$i3348);
  $i3349.dup := $or.i1($i3347.dup,$i3348.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3350 := $xor.i32($i3346,$i3349);
  $i3350.dup := $or.i1($i3346.dup,$i3349.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3351 := $and.i32($i3320,$i3282);
  $i3351.dup := $or.i1($i3320.dup,$i3282.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3352 := $and.i32($i3320,$i3244);
  $i3352.dup := $or.i1($i3320.dup,$i3244.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3353 := $xor.i32($i3351,$i3352);
  $i3353.dup := $or.i1($i3351.dup,$i3352.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3354 := $and.i32($i3282,$i3244);
  $i3354.dup := $or.i1($i3282.dup,$i3244.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3355 := $xor.i32($i3353,$i3354);
  $i3355.dup := $or.i1($i3353.dup,$i3354.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3356 := $add.i32($i3350,$i3355);
  $i3356.dup := $or.i1($i3350.dup,$i3355.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3356);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3357 := $add.i32($i3206,$i3339);
  $i3357.dup := $or.i1($i3206.dup,$i3339.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3357);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i3358 := $add.i32($i3339,$i3356);
  $i3358.dup := $or.i1($i3339.dup,$i3356.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3358);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3359 := $lshr.i32($i3357,6);
  $i3359.dup := $or.i1($i3357.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3360 := $shl.i32($i3357,26);
  $i3360.dup := $or.i1($i3357.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3361 := $or.i32($i3359,$i3360);
  $i3361.dup := $or.i1($i3359.dup,$i3360.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3362 := $lshr.i32($i3357,11);
  $i3362.dup := $or.i1($i3357.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3363 := $shl.i32($i3357,21);
  $i3363.dup := $or.i1($i3357.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3364 := $or.i32($i3362,$i3363);
  $i3364.dup := $or.i1($i3362.dup,$i3363.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3365 := $xor.i32($i3361,$i3364);
  $i3365.dup := $or.i1($i3361.dup,$i3364.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3366 := $lshr.i32($i3357,25);
  $i3366.dup := $or.i1($i3357.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3367 := $shl.i32($i3357,7);
  $i3367.dup := $or.i1($i3357.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3368 := $or.i32($i3366,$i3367);
  $i3368.dup := $or.i1($i3366.dup,$i3367.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3369 := $xor.i32($i3365,$i3368);
  $i3369.dup := $or.i1($i3365.dup,$i3368.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3370 := $add.i32($i3243,$i3369);
  $i3370.dup := $or.i1($i3243.dup,$i3369.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3371 := $and.i32($i3357,$i3319);
  $i3371.dup := $or.i1($i3357.dup,$i3319.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3372 := $xor.i32($i3357,$sub.i32(0,1));
  $i3372.dup := $or.i1($i3357.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3373 := $and.i32($i3372,$i3281);
  $i3373.dup := $or.i1($i3372.dup,$i3281.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3374 := $xor.i32($i3371,$i3373);
  $i3374.dup := $or.i1($i3371.dup,$i3373.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3375 := $add.i32($i3370,$i3374);
  $i3375.dup := $or.i1($i3370.dup,$i3374.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3376 := $add.i32($i3375,2428436474);
  $i3376.dup := $or.i1($i3375.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3377 := $add.i32($i3376,$i2839);
  $i3377.dup := $or.i1($i3376.dup,$i2839.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3377);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3378 := $lshr.i32($i3358,2);
  $i3378.dup := $or.i1($i3358.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3379 := $shl.i32($i3358,30);
  $i3379.dup := $or.i1($i3358.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3380 := $or.i32($i3378,$i3379);
  $i3380.dup := $or.i1($i3378.dup,$i3379.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3381 := $lshr.i32($i3358,13);
  $i3381.dup := $or.i1($i3358.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3382 := $shl.i32($i3358,19);
  $i3382.dup := $or.i1($i3358.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3383 := $or.i32($i3381,$i3382);
  $i3383.dup := $or.i1($i3381.dup,$i3382.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3384 := $xor.i32($i3380,$i3383);
  $i3384.dup := $or.i1($i3380.dup,$i3383.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3385 := $lshr.i32($i3358,22);
  $i3385.dup := $or.i1($i3358.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3386 := $shl.i32($i3358,10);
  $i3386.dup := $or.i1($i3358.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3387 := $or.i32($i3385,$i3386);
  $i3387.dup := $or.i1($i3385.dup,$i3386.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3388 := $xor.i32($i3384,$i3387);
  $i3388.dup := $or.i1($i3384.dup,$i3387.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3389 := $and.i32($i3358,$i3320);
  $i3389.dup := $or.i1($i3358.dup,$i3320.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3390 := $and.i32($i3358,$i3282);
  $i3390.dup := $or.i1($i3358.dup,$i3282.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3391 := $xor.i32($i3389,$i3390);
  $i3391.dup := $or.i1($i3389.dup,$i3390.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3392 := $and.i32($i3320,$i3282);
  $i3392.dup := $or.i1($i3320.dup,$i3282.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3393 := $xor.i32($i3391,$i3392);
  $i3393.dup := $or.i1($i3391.dup,$i3392.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3394 := $add.i32($i3388,$i3393);
  $i3394.dup := $or.i1($i3388.dup,$i3393.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3394);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3395 := $add.i32($i3244,$i3377);
  $i3395.dup := $or.i1($i3244.dup,$i3377.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3395);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 173, 5} true;
  assume {:verifier.code 0} true;
  $i3396 := $add.i32($i3377,$i3394);
  $i3396.dup := $or.i1($i3377.dup,$i3394.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3396);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3397 := $lshr.i32($i3395,6);
  $i3397.dup := $or.i1($i3395.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3398 := $shl.i32($i3395,26);
  $i3398.dup := $or.i1($i3395.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3399 := $or.i32($i3397,$i3398);
  $i3399.dup := $or.i1($i3397.dup,$i3398.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3400 := $lshr.i32($i3395,11);
  $i3400.dup := $or.i1($i3395.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3401 := $shl.i32($i3395,21);
  $i3401.dup := $or.i1($i3395.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3402 := $or.i32($i3400,$i3401);
  $i3402.dup := $or.i1($i3400.dup,$i3401.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3403 := $xor.i32($i3399,$i3402);
  $i3403.dup := $or.i1($i3399.dup,$i3402.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3404 := $lshr.i32($i3395,25);
  $i3404.dup := $or.i1($i3395.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3405 := $shl.i32($i3395,7);
  $i3405.dup := $or.i1($i3395.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3406 := $or.i32($i3404,$i3405);
  $i3406.dup := $or.i1($i3404.dup,$i3405.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3407 := $xor.i32($i3403,$i3406);
  $i3407.dup := $or.i1($i3403.dup,$i3406.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3408 := $add.i32($i3281,$i3407);
  $i3408.dup := $or.i1($i3281.dup,$i3407.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3409 := $and.i32($i3395,$i3357);
  $i3409.dup := $or.i1($i3395.dup,$i3357.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3410 := $xor.i32($i3395,$sub.i32(0,1));
  $i3410.dup := $or.i1($i3395.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3411 := $and.i32($i3410,$i3319);
  $i3411.dup := $or.i1($i3410.dup,$i3319.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3412 := $xor.i32($i3409,$i3411);
  $i3412.dup := $or.i1($i3409.dup,$i3411.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3413 := $add.i32($i3408,$i3412);
  $i3413.dup := $or.i1($i3408.dup,$i3412.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3414 := $add.i32($i3413,2756734187);
  $i3414.dup := $or.i1($i3413.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3415 := $add.i32($i3414,$i2860);
  $i3415.dup := $or.i1($i3414.dup,$i2860.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3415);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3416 := $lshr.i32($i3396,2);
  $i3416.dup := $or.i1($i3396.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3417 := $shl.i32($i3396,30);
  $i3417.dup := $or.i1($i3396.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3418 := $or.i32($i3416,$i3417);
  $i3418.dup := $or.i1($i3416.dup,$i3417.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3419 := $lshr.i32($i3396,13);
  $i3419.dup := $or.i1($i3396.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3420 := $shl.i32($i3396,19);
  $i3420.dup := $or.i1($i3396.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3421 := $or.i32($i3419,$i3420);
  $i3421.dup := $or.i1($i3419.dup,$i3420.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3422 := $xor.i32($i3418,$i3421);
  $i3422.dup := $or.i1($i3418.dup,$i3421.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3423 := $lshr.i32($i3396,22);
  $i3423.dup := $or.i1($i3396.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3424 := $shl.i32($i3396,10);
  $i3424.dup := $or.i1($i3396.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3425 := $or.i32($i3423,$i3424);
  $i3425.dup := $or.i1($i3423.dup,$i3424.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3426 := $xor.i32($i3422,$i3425);
  $i3426.dup := $or.i1($i3422.dup,$i3425.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3427 := $and.i32($i3396,$i3358);
  $i3427.dup := $or.i1($i3396.dup,$i3358.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3428 := $and.i32($i3396,$i3320);
  $i3428.dup := $or.i1($i3396.dup,$i3320.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3429 := $xor.i32($i3427,$i3428);
  $i3429.dup := $or.i1($i3427.dup,$i3428.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3430 := $and.i32($i3358,$i3320);
  $i3430.dup := $or.i1($i3358.dup,$i3320.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3431 := $xor.i32($i3429,$i3430);
  $i3431.dup := $or.i1($i3429.dup,$i3430.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3432 := $add.i32($i3426,$i3431);
  $i3432.dup := $or.i1($i3426.dup,$i3431.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3432);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3433 := $add.i32($i3282,$i3415);
  $i3433.dup := $or.i1($i3282.dup,$i3415.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3433);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i3434 := $add.i32($i3415,$i3432);
  $i3434.dup := $or.i1($i3415.dup,$i3432.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3434);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3435 := $lshr.i32($i3433,6);
  $i3435.dup := $or.i1($i3433.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3436 := $shl.i32($i3433,26);
  $i3436.dup := $or.i1($i3433.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3437 := $or.i32($i3435,$i3436);
  $i3437.dup := $or.i1($i3435.dup,$i3436.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3438 := $lshr.i32($i3433,11);
  $i3438.dup := $or.i1($i3433.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3439 := $shl.i32($i3433,21);
  $i3439.dup := $or.i1($i3433.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3440 := $or.i32($i3438,$i3439);
  $i3440.dup := $or.i1($i3438.dup,$i3439.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3441 := $xor.i32($i3437,$i3440);
  $i3441.dup := $or.i1($i3437.dup,$i3440.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3442 := $lshr.i32($i3433,25);
  $i3442.dup := $or.i1($i3433.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3443 := $shl.i32($i3433,7);
  $i3443.dup := $or.i1($i3433.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3444 := $or.i32($i3442,$i3443);
  $i3444.dup := $or.i1($i3442.dup,$i3443.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3445 := $xor.i32($i3441,$i3444);
  $i3445.dup := $or.i1($i3441.dup,$i3444.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3446 := $add.i32($i3319,$i3445);
  $i3446.dup := $or.i1($i3319.dup,$i3445.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3447 := $and.i32($i3433,$i3395);
  $i3447.dup := $or.i1($i3433.dup,$i3395.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3448 := $xor.i32($i3433,$sub.i32(0,1));
  $i3448.dup := $or.i1($i3433.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3449 := $and.i32($i3448,$i3357);
  $i3449.dup := $or.i1($i3448.dup,$i3357.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3450 := $xor.i32($i3447,$i3449);
  $i3450.dup := $or.i1($i3447.dup,$i3449.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3451 := $add.i32($i3446,$i3450);
  $i3451.dup := $or.i1($i3446.dup,$i3450.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3452 := $add.i32($i3451,3204031479);
  $i3452.dup := $or.i1($i3451.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3453 := $add.i32($i3452,$i2881);
  $i3453.dup := $or.i1($i3452.dup,$i2881.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3453);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3454 := $lshr.i32($i3434,2);
  $i3454.dup := $or.i1($i3434.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3455 := $shl.i32($i3434,30);
  $i3455.dup := $or.i1($i3434.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3456 := $or.i32($i3454,$i3455);
  $i3456.dup := $or.i1($i3454.dup,$i3455.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3457 := $lshr.i32($i3434,13);
  $i3457.dup := $or.i1($i3434.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3458 := $shl.i32($i3434,19);
  $i3458.dup := $or.i1($i3434.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3459 := $or.i32($i3457,$i3458);
  $i3459.dup := $or.i1($i3457.dup,$i3458.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3460 := $xor.i32($i3456,$i3459);
  $i3460.dup := $or.i1($i3456.dup,$i3459.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3461 := $lshr.i32($i3434,22);
  $i3461.dup := $or.i1($i3434.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3462 := $shl.i32($i3434,10);
  $i3462.dup := $or.i1($i3434.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3463 := $or.i32($i3461,$i3462);
  $i3463.dup := $or.i1($i3461.dup,$i3462.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3464 := $xor.i32($i3460,$i3463);
  $i3464.dup := $or.i1($i3460.dup,$i3463.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3465 := $and.i32($i3434,$i3396);
  $i3465.dup := $or.i1($i3434.dup,$i3396.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3466 := $and.i32($i3434,$i3358);
  $i3466.dup := $or.i1($i3434.dup,$i3358.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3467 := $xor.i32($i3465,$i3466);
  $i3467.dup := $or.i1($i3465.dup,$i3466.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3468 := $and.i32($i3396,$i3358);
  $i3468.dup := $or.i1($i3396.dup,$i3358.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3469 := $xor.i32($i3467,$i3468);
  $i3469.dup := $or.i1($i3467.dup,$i3468.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3470 := $add.i32($i3464,$i3469);
  $i3470.dup := $or.i1($i3464.dup,$i3469.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3470);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3471 := $add.i32($i3320,$i3453);
  $i3471.dup := $or.i1($i3320.dup,$i3453.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3471);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i3472 := $add.i32($i3453,$i3470);
  $i3472.dup := $or.i1($i3453.dup,$i3470.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3472);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3473 := $lshr.i32($i3471,6);
  $i3473.dup := $or.i1($i3471.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3474 := $shl.i32($i3471,26);
  $i3474.dup := $or.i1($i3471.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3475 := $or.i32($i3473,$i3474);
  $i3475.dup := $or.i1($i3473.dup,$i3474.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3476 := $lshr.i32($i3471,11);
  $i3476.dup := $or.i1($i3471.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3477 := $shl.i32($i3471,21);
  $i3477.dup := $or.i1($i3471.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3478 := $or.i32($i3476,$i3477);
  $i3478.dup := $or.i1($i3476.dup,$i3477.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3479 := $xor.i32($i3475,$i3478);
  $i3479.dup := $or.i1($i3475.dup,$i3478.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3480 := $lshr.i32($i3471,25);
  $i3480.dup := $or.i1($i3471.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3481 := $shl.i32($i3471,7);
  $i3481.dup := $or.i1($i3471.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3482 := $or.i32($i3480,$i3481);
  $i3482.dup := $or.i1($i3480.dup,$i3481.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3483 := $xor.i32($i3479,$i3482);
  $i3483.dup := $or.i1($i3479.dup,$i3482.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3484 := $add.i32($i3357,$i3483);
  $i3484.dup := $or.i1($i3357.dup,$i3483.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3485 := $and.i32($i3471,$i3433);
  $i3485.dup := $or.i1($i3471.dup,$i3433.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3486 := $xor.i32($i3471,$sub.i32(0,1));
  $i3486.dup := $or.i1($i3471.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3487 := $and.i32($i3486,$i3395);
  $i3487.dup := $or.i1($i3486.dup,$i3395.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3488 := $xor.i32($i3485,$i3487);
  $i3488.dup := $or.i1($i3485.dup,$i3487.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3489 := $add.i32($i3484,$i3488);
  $i3489.dup := $or.i1($i3484.dup,$i3488.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3490 := $add.i32($i3489,3329325298);
  $i3490.dup := $or.i1($i3489.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3491 := $add.i32($i3490,$i2902);
  $i3491.dup := $or.i1($i3490.dup,$i2902.dup);
  call {:cexpr "T1"} boogie_si_record_i32($i3491);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3492 := $lshr.i32($i3472,2);
  $i3492.dup := $or.i1($i3472.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3493 := $shl.i32($i3472,30);
  $i3493.dup := $or.i1($i3472.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3494 := $or.i32($i3492,$i3493);
  $i3494.dup := $or.i1($i3492.dup,$i3493.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3495 := $lshr.i32($i3472,13);
  $i3495.dup := $or.i1($i3472.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3496 := $shl.i32($i3472,19);
  $i3496.dup := $or.i1($i3472.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3497 := $or.i32($i3495,$i3496);
  $i3497.dup := $or.i1($i3495.dup,$i3496.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3498 := $xor.i32($i3494,$i3497);
  $i3498.dup := $or.i1($i3494.dup,$i3497.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3499 := $lshr.i32($i3472,22);
  $i3499.dup := $or.i1($i3472.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3500 := $shl.i32($i3472,10);
  $i3500.dup := $or.i1($i3472.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3501 := $or.i32($i3499,$i3500);
  $i3501.dup := $or.i1($i3499.dup,$i3500.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3502 := $xor.i32($i3498,$i3501);
  $i3502.dup := $or.i1($i3498.dup,$i3501.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3503 := $and.i32($i3472,$i3434);
  $i3503.dup := $or.i1($i3472.dup,$i3434.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3504 := $and.i32($i3472,$i3396);
  $i3504.dup := $or.i1($i3472.dup,$i3396.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3505 := $xor.i32($i3503,$i3504);
  $i3505.dup := $or.i1($i3503.dup,$i3504.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3506 := $and.i32($i3434,$i3396);
  $i3506.dup := $or.i1($i3434.dup,$i3396.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3507 := $xor.i32($i3505,$i3506);
  $i3507.dup := $or.i1($i3505.dup,$i3506.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3508 := $add.i32($i3502,$i3507);
  $i3508.dup := $or.i1($i3502.dup,$i3507.dup);
  call {:cexpr "T2"} boogie_si_record_i32($i3508);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3509 := $add.i32($i3358,$i3491);
  $i3509.dup := $or.i1($i3358.dup,$i3491.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3509);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i3510 := $add.i32($i3491,$i3508);
  $i3510.dup := $or.i1($i3491.dup,$i3508.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3510);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 178, 10} true;
  assume {:verifier.code 0} true;
  $p3511 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(0,4));
  $p3511.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 178, 10} true;
  assume {:verifier.code 0} true;
  $p3511.dup := 0;
  $i3512 := $load.i32($M.16,$p3511);
  $i3512.dup := $load.i1($M.16.dup,$p3511);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i3513 := $add.i32($i3510,$i3512);
  $i3513.dup := $or.i1($i3510.dup,$i3512.dup);
  call {:cexpr "a"} boogie_si_record_i32($i3513);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 179, 10} true;
  assume {:verifier.code 0} true;
  $p3514 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(1,4));
  $p3514.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 179, 10} true;
  assume {:verifier.code 0} true;
  $p3514.dup := 0;
  $i3515 := $load.i32($M.17,$p3514);
  $i3515.dup := $load.i1($M.17.dup,$p3514);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 179, 7} true;
  assume {:verifier.code 0} true;
  $i3516 := $add.i32($i3472,$i3515);
  $i3516.dup := $or.i1($i3472.dup,$i3515.dup);
  call {:cexpr "b"} boogie_si_record_i32($i3516);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 180, 10} true;
  assume {:verifier.code 0} true;
  $p3517 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(2,4));
  $p3517.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 180, 10} true;
  assume {:verifier.code 0} true;
  $p3517.dup := 0;
  $i3518 := $load.i32($M.18,$p3517);
  $i3518.dup := $load.i1($M.18.dup,$p3517);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 180, 7} true;
  assume {:verifier.code 0} true;
  $i3519 := $add.i32($i3434,$i3518);
  $i3519.dup := $or.i1($i3434.dup,$i3518.dup);
  call {:cexpr "c"} boogie_si_record_i32($i3519);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $p3520 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(3,4));
  $p3520.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $p3520.dup := 0;
  $i3521 := $load.i32($M.19,$p3520);
  $i3521.dup := $load.i1($M.19.dup,$p3520);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 181, 7} true;
  assume {:verifier.code 0} true;
  $i3522 := $add.i32($i3396,$i3521);
  $i3522.dup := $or.i1($i3396.dup,$i3521.dup);
  call {:cexpr "d"} boogie_si_record_i32($i3522);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 182, 10} true;
  assume {:verifier.code 0} true;
  $p3523 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(4,4));
  $p3523.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 182, 10} true;
  assume {:verifier.code 0} true;
  $p3523.dup := 0;
  $i3524 := $load.i32($M.20,$p3523);
  $i3524.dup := $load.i1($M.20.dup,$p3523);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 182, 7} true;
  assume {:verifier.code 0} true;
  $i3525 := $add.i32($i3509,$i3524);
  $i3525.dup := $or.i1($i3509.dup,$i3524.dup);
  call {:cexpr "e"} boogie_si_record_i32($i3525);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 183, 10} true;
  assume {:verifier.code 0} true;
  $p3526 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(5,4));
  $p3526.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 183, 10} true;
  assume {:verifier.code 0} true;
  $p3526.dup := 0;
  $i3527 := $load.i32($M.21,$p3526);
  $i3527.dup := $load.i1($M.21.dup,$p3526);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 183, 7} true;
  assume {:verifier.code 0} true;
  $i3528 := $add.i32($i3471,$i3527);
  $i3528.dup := $or.i1($i3471.dup,$i3527.dup);
  call {:cexpr "f"} boogie_si_record_i32($i3528);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 184, 10} true;
  assume {:verifier.code 0} true;
  $p3529 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(6,4));
  $p3529.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 184, 10} true;
  assume {:verifier.code 0} true;
  $p3529.dup := 0;
  $i3530 := $load.i32($M.22,$p3529);
  $i3530.dup := $load.i1($M.22.dup,$p3529);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 184, 7} true;
  assume {:verifier.code 0} true;
  $i3531 := $add.i32($i3433,$i3530);
  $i3531.dup := $or.i1($i3433.dup,$i3530.dup);
  call {:cexpr "g"} boogie_si_record_i32($i3531);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 185, 10} true;
  assume {:verifier.code 0} true;
  $p3532 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(7,4));
  $p3532.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 185, 10} true;
  assume {:verifier.code 0} true;
  $p3532.dup := 0;
  $i3533 := $load.i32($M.23,$p3532);
  $i3533.dup := $load.i1($M.23.dup,$p3532);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 185, 7} true;
  assume {:verifier.code 0} true;
  $i3534 := $add.i32($i3395,$i3533);
  $i3534.dup := $or.i1($i3395.dup,$i3533.dup);
  call {:cexpr "h"} boogie_si_record_i32($i3534);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 187, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3535 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(0,4));
  $p3535.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 187, 16} true;
  assume {:verifier.code 0} true;
  $p3535.dup := 0;
  $M.16 := $store.i32($M.16,$p3535,$i3513);
  $M.16.dup := $store.i1($M.16.dup,$p3535,$i3513.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 188, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3536 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(1,4));
  $p3536.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 188, 16} true;
  assume {:verifier.code 0} true;
  $p3536.dup := 0;
  $M.17 := $store.i32($M.17,$p3536,$i3516);
  $M.17.dup := $store.i1($M.17.dup,$p3536,$i3516.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 189, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3537 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(2,4));
  $p3537.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 189, 16} true;
  assume {:verifier.code 0} true;
  $p3537.dup := 0;
  $M.18 := $store.i32($M.18,$p3537,$i3519);
  $M.18.dup := $store.i1($M.18.dup,$p3537,$i3519.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 190, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3538 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(3,4));
  $p3538.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 190, 16} true;
  assume {:verifier.code 0} true;
  $p3538.dup := 0;
  $M.19 := $store.i32($M.19,$p3538,$i3522);
  $M.19.dup := $store.i1($M.19.dup,$p3538,$i3522.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 191, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3539 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(4,4));
  $p3539.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 191, 16} true;
  assume {:verifier.code 0} true;
  $p3539.dup := 0;
  $M.20 := $store.i32($M.20,$p3539,$i3525);
  $M.20.dup := $store.i1($M.20.dup,$p3539,$i3525.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 192, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3540 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(5,4));
  $p3540.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 192, 16} true;
  assume {:verifier.code 0} true;
  $p3540.dup := 0;
  $M.21 := $store.i32($M.21,$p3540,$i3528);
  $M.21.dup := $store.i1($M.21.dup,$p3540,$i3528.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 193, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3541 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(6,4));
  $p3541.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 193, 16} true;
  assume {:verifier.code 0} true;
  $p3541.dup := 0;
  $M.22 := $store.i32($M.22,$p3541,$i3531);
  $M.22.dup := $store.i1($M.22.dup,$p3541,$i3531.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 194, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3542 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(7,4));
  $p3542.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 194, 16} true;
  assume {:verifier.code 0} true;
  $p3542.dup := 0;
  $M.23 := $store.i32($M.23,$p3542,$i3534);
  $M.23.dup := $store.i1($M.23.dup,$p3542,$i3534.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 196, 8} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p3543 := $add.ref($p36,$mul.ref(64,1));
  $p3543.dup := $or.i1($p36.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 197, 11} true;
  assume {:verifier.code 0} true;
  $i3544 := $sub.i64($i35,64);
  $i3544.dup := $or.i1($i35.dup,0);
  call {:cexpr "inlen"} boogie_si_record_i64($i3544);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 86, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i3531;
  $i28.dup := 0;
  $i29 := $i3528;
  $i29.dup := 0;
  $i30 := $i3525;
  $i30.dup := 0;
  $i31 := $i3522;
  $i31.dup := 0;
  $i32 := $i3519;
  $i32.dup := 0;
  $i33 := $i3516;
  $i33.dup := 0;
  $i34 := $i3513;
  $i34.dup := 0;
  $i35 := $i3544;
  $i35.dup := 0;
  $p36 := $p3543;
  $p36.dup := 0;
  $i37 := $i3534;
  $i37.dup := 0;
  goto $bb1;
$bb3:
  assume !($i38 == 1);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 199, 30} true;
  assume {:verifier.code 0} true;
  $p3545 := $add.ref($p0,$mul.ref(0,1));
  $p3545.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 199, 35} true;
  assume {:verifier.code 0} true;
  $p3546 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(0,4));
  $p3546.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 199, 35} true;
  assume {:verifier.code 0} true;
  $p3546.dup := 0;
  $i3547 := $load.i32($M.16,$p3546);
  $i3547.dup := $load.i1($M.16.dup,$p3546);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 199, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3545, $p3545.dup, $i3547, $i3547.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 200, 30} true;
  assume {:verifier.code 0} true;
  $p3548 := $add.ref($p0,$mul.ref(4,1));
  $p3548.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 200, 35} true;
  assume {:verifier.code 0} true;
  $p3549 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(1,4));
  $p3549.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 200, 35} true;
  assume {:verifier.code 0} true;
  $p3549.dup := 0;
  $i3550 := $load.i32($M.17,$p3549);
  $i3550.dup := $load.i1($M.17.dup,$p3549);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 200, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3548, $p3548.dup, $i3550, $i3550.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 201, 30} true;
  assume {:verifier.code 0} true;
  $p3551 := $add.ref($p0,$mul.ref(8,1));
  $p3551.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 201, 35} true;
  assume {:verifier.code 0} true;
  $p3552 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(2,4));
  $p3552.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 201, 35} true;
  assume {:verifier.code 0} true;
  $p3552.dup := 0;
  $i3553 := $load.i32($M.18,$p3552);
  $i3553.dup := $load.i1($M.18.dup,$p3552);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 201, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3551, $p3551.dup, $i3553, $i3553.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 202, 30} true;
  assume {:verifier.code 0} true;
  $p3554 := $add.ref($p0,$mul.ref(12,1));
  $p3554.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 202, 35} true;
  assume {:verifier.code 0} true;
  $p3555 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(3,4));
  $p3555.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 202, 35} true;
  assume {:verifier.code 0} true;
  $p3555.dup := 0;
  $i3556 := $load.i32($M.19,$p3555);
  $i3556.dup := $load.i1($M.19.dup,$p3555);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 202, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3554, $p3554.dup, $i3556, $i3556.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 203, 30} true;
  assume {:verifier.code 0} true;
  $p3557 := $add.ref($p0,$mul.ref(16,1));
  $p3557.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 203, 35} true;
  assume {:verifier.code 0} true;
  $p3558 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(4,4));
  $p3558.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 203, 35} true;
  assume {:verifier.code 0} true;
  $p3558.dup := 0;
  $i3559 := $load.i32($M.20,$p3558);
  $i3559.dup := $load.i1($M.20.dup,$p3558);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 203, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3557, $p3557.dup, $i3559, $i3559.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 204, 30} true;
  assume {:verifier.code 0} true;
  $p3560 := $add.ref($p0,$mul.ref(20,1));
  $p3560.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 204, 35} true;
  assume {:verifier.code 0} true;
  $p3561 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(5,4));
  $p3561.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 204, 35} true;
  assume {:verifier.code 0} true;
  $p3561.dup := 0;
  $i3562 := $load.i32($M.21,$p3561);
  $i3562.dup := $load.i1($M.21.dup,$p3561);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 204, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3560, $p3560.dup, $i3562, $i3562.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 205, 30} true;
  assume {:verifier.code 0} true;
  $p3563 := $add.ref($p0,$mul.ref(24,1));
  $p3563.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 205, 35} true;
  assume {:verifier.code 0} true;
  $p3564 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(6,4));
  $p3564.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 205, 35} true;
  assume {:verifier.code 0} true;
  $p3564.dup := 0;
  $i3565 := $load.i32($M.22,$p3564);
  $i3565.dup := $load.i1($M.22.dup,$p3564);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 205, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3563, $p3563.dup, $i3565, $i3565.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 206, 30} true;
  assume {:verifier.code 0} true;
  $p3566 := $add.ref($p0,$mul.ref(28,1));
  $p3566.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 206, 35} true;
  assume {:verifier.code 0} true;
  $p3567 := $add.ref($add.ref($p3,$mul.ref(0,32)),$mul.ref(7,4));
  $p3567.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 206, 35} true;
  assume {:verifier.code 0} true;
  $p3567.dup := 0;
  $i3568 := $load.i32($M.23,$p3567);
  $i3568.dup := $load.i1($M.23.dup,$p3567);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 206, 3} true;
  assume {:verifier.code 0} true;
  call store_bigendian($p3566, $p3566.dup, $i3568, $i3568.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 208, 3} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
}
const load_bigendian: ref;
axiom (load_bigendian == $sub.ref(0,13440));
procedure {:inline 1} load_bigendian($p0: ref, $p0.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn;
{
  var $p1: ref;
  var $p1.dup: i1;
  var $i2: i8;
  var $i2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $i5: i8;
  var $i5.dup: i1;
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $i10: i8;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $i15: i8;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i32;
  var $i17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 6, 23} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 6, 23} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p1 := $add.ref($p0,$mul.ref(3,1));
  $p1.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 6, 23} true;
  assume {:verifier.code 0} true;
  $p1.dup := 0;
  $i2 := $load.i8($M.11,$p1);
  $i2.dup := $load.i1($M.11.dup,$p1);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 6, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  $i3.dup := $i2.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 7, 23} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p4 := $add.ref($p0,$mul.ref(2,1));
  $p4.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 7, 23} true;
  assume {:verifier.code 0} true;
  $p4.dup := 0;
  $i5 := $load.i8($M.11,$p4);
  $i5.dup := $load.i1($M.11.dup,$p4);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 7, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  $i6.dup := $i5.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 7, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $shl.i32($i6,8);
  $i7.dup := $or.i1($i6.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $or.i32($i3,$i7);
  $i8.dup := $or.i1($i3.dup,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 8, 23} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p9 := $add.ref($p0,$mul.ref(1,1));
  $p9.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 8, 23} true;
  assume {:verifier.code 0} true;
  $p9.dup := 0;
  $i10 := $load.i8($M.11,$p9);
  $i10.dup := $load.i1($M.11.dup,$p9);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 8, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  $i11.dup := $i10.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 8, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $shl.i32($i11,16);
  $i12.dup := $or.i1($i11.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i8,$i12);
  $i13.dup := $or.i1($i8.dup,$i12.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 9, 23} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p14 := $add.ref($p0,$mul.ref(0,1));
  $p14.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 9, 23} true;
  assume {:verifier.code 0} true;
  $p14.dup := 0;
  $i15 := $load.i8($M.11,$p14);
  $i15.dup := $load.i1($M.11.dup,$p14);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 9, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  $i16.dup := $i15.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 9, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $shl.i32($i16,24);
  $i17.dup := $or.i1($i16.dup,0);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $or.i32($i13,$i17);
  $i18.dup := $or.i1($i13.dup,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 5, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
}
const store_bigendian: ref;
axiom (store_bigendian == $sub.ref(0,14472));
procedure {:inline 1} store_bigendian($p0: ref, $p0.dup: i1, $i1: i32, $i1.dup: i1)
modifies $M.11, $exn;
{
  var $i2: i8;
  var $i2.dup: i1;
  var $p3: ref;
  var $p3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i8;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i8;
  var $i8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $i10: i32;
  var $i10.dup: i1;
  var $i11: i8;
  var $i11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 15, 10} true;
  assume {:verifier.code 0} true;
  call {:cexpr "store_bigendian:arg:u"} boogie_si_record_i32($i1);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 15, 10} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i8($i1);
  $i2.dup := $i1.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0,$mul.ref(3,1));
  $p3.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 15, 8} true;
  assume {:verifier.code 0} true;
  $p3.dup := 0;
  $M.11 := $store.i8($M.11,$p3,$i2);
  $M.11.dup := $store.i1($M.11.dup,$p3,$i2.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 15, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $lshr.i32($i1,8);
  $i4.dup := $or.i1($i1.dup,0);
  call {:cexpr "u"} boogie_si_record_i32($i4);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 16, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  $i5.dup := $i4.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 16, 3} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p6 := $add.ref($p0,$mul.ref(2,1));
  $p6.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 16, 8} true;
  assume {:verifier.code 0} true;
  $p6.dup := 0;
  $M.11 := $store.i8($M.11,$p6,$i5);
  $M.11.dup := $store.i1($M.11.dup,$p6,$i5.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 16, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $lshr.i32($i4,8);
  $i7.dup := $or.i1($i4.dup,0);
  call {:cexpr "u"} boogie_si_record_i32($i7);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 17, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  $i8.dup := $i7.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0,$mul.ref(1,1));
  $p9.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 17, 8} true;
  assume {:verifier.code 0} true;
  $p9.dup := 0;
  $M.11 := $store.i8($M.11,$p9,$i8);
  $M.11.dup := $store.i1($M.11.dup,$p9,$i8.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 17, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $lshr.i32($i7,8);
  $i10.dup := $or.i1($i7.dup,0);
  call {:cexpr "u"} boogie_si_record_i32($i10);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 18, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i8($i10);
  $i11.dup := $i10.dup;
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0,$mul.ref(0,1));
  $p12.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 18, 8} true;
  assume {:verifier.code 0} true;
  $p12.dup := 0;
  $M.11 := $store.i8($M.11,$p12,$i11);
  $M.11.dup := $store.i1($M.11.dup,$p12,$i11.dup);
  assume {:sourceloc "../mac-then-encrypt/sha256blocks.c", 19, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const crypto_auth_ct: ref;
axiom (crypto_auth_ct == $sub.ref(0,15504));
procedure {:inline 1} crypto_auth_ct($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1, $i3: i64, $i3.dup: i1, $p4: ref, $p4.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $M.11, $M.26, $exn;
modifies $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23;
modifies $CurrAddr;
{
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i64;
  var $i12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $i15: i64;
  var $i15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $i17: i32;
  var $i17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i32;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i1;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $i32: i8;
  var $i32.dup: i1;
  var $i33: i64;
  var $i33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $i35: i32;
  var $i35.dup: i1;
  var $i36: i32;
  var $i36.dup: i1;
  var $i37: i1;
  var $i37.dup: i1;
  var $i38: i64;
  var $i38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $i40: i8;
  var $i40.dup: i1;
  var $i41: i32;
  var $i41.dup: i1;
  var $i42: i32;
  var $i42.dup: i1;
  var $i43: i8;
  var $i43.dup: i1;
  var $i44: i64;
  var $i44.dup: i1;
  var $p45: ref;
  var $p45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i32;
  var $i47.dup: i1;
  var $i48: i1;
  var $i48.dup: i1;
  var $i49: i64;
  var $i49.dup: i1;
  var $p50: ref;
  var $p50.dup: i1;
  var $i51: i32;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $i54: i32;
  var $i54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $i56: i32;
  var $i56.dup: i1;
  var $i57: i64;
  var $i57.dup: i1;
  var $i58: i32;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $i60: i64;
  var $i60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $i62: i32;
  var $i62.dup: i1;
  var $i63: i1;
  var $i63.dup: i1;
  var $i64: i64;
  var $i64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i67: i64;
  var $i67.dup: i1;
  var $i68: i64;
  var $i68.dup: i1;
  var $i69: i64;
  var $i69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $p71: ref;
  var $p71.dup: i1;
  var $i72: i32;
  var $i72.dup: i1;
  var $i73: i1;
  var $i73.dup: i1;
  var $i74: i32;
  var $i74.dup: i1;
  var $i75: i32;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $i77: i32;
  var $i77.dup: i1;
  var $i78: i32;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $i81: i8;
  var $i81.dup: i1;
  var $i82: i32;
  var $i82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i32;
  var $i84.dup: i1;
  var $i85: i32;
  var $i85.dup: i1;
  var $i86: i32;
  var $i86.dup: i1;
  var $i87: i32;
  var $i87.dup: i1;
  var $i88: i32;
  var $i88.dup: i1;
  var $i89: i8;
  var $i89.dup: i1;
  var $i90: i32;
  var $i90.dup: i1;
  var $i91: i1;
  var $i91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $i93: i32;
  var $i93.dup: i1;
  var $i94: i32;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i32;
  var $i97.dup: i1;
  var $i98: i32;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $i100: i32;
  var $i100.dup: i1;
  var $i101: i32;
  var $i101.dup: i1;
  var $i102: i8;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $i104: i32;
  var $i104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $i106: i32;
  var $i106.dup: i1;
  var $i107: i32;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $i109: i32;
  var $i109.dup: i1;
  var $i110: i32;
  var $i110.dup: i1;
  var $i111: i32;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $i113: i32;
  var $i113.dup: i1;
  var $i114: i32;
  var $i114.dup: i1;
  var $i115: i32;
  var $i115.dup: i1;
  var $i116: i8;
  var $i116.dup: i1;
  var $i117: i64;
  var $i117.dup: i1;
  var $p118: ref;
  var $p118.dup: i1;
  var $i119: i8;
  var $i119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $i121: i32;
  var $i121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
  var $i123: i32;
  var $i123.dup: i1;
  var $i124: i32;
  var $i124.dup: i1;
  var $i125: i32;
  var $i125.dup: i1;
  var $i126: i32;
  var $i126.dup: i1;
  var $i127: i8;
  var $i127.dup: i1;
  var $i128: i32;
  var $i128.dup: i1;
  var $i129: i32;
  var $i129.dup: i1;
  var $i130: i32;
  var $i130.dup: i1;
  var $i131: i32;
  var $i131.dup: i1;
  var $i132: i8;
  var $i132.dup: i1;
  var $i133: i32;
  var $i133.dup: i1;
  var $i134: i32;
  var $i134.dup: i1;
  var $i135: i32;
  var $i135.dup: i1;
  var $i136: i32;
  var $i136.dup: i1;
  var $i137: i32;
  var $i137.dup: i1;
  var $i138: i32;
  var $i138.dup: i1;
  var $i139: i8;
  var $i139.dup: i1;
  var $i140: i1;
  var $i140.dup: i1;
  var $i142: i32;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i32;
  var $i144.dup: i1;
  var $i145: i32;
  var $i145.dup: i1;
  var $i146: i64;
  var $i146.dup: i1;
  var $i147: i64;
  var $i147.dup: i1;
  var $i148: i64;
  var $i148.dup: i1;
  var $i149: i64;
  var $i149.dup: i1;
  var $i150: i64;
  var $i150.dup: i1;
  var $i151: i8;
  var $i151.dup: i1;
  var $i141: i8;
  var $i141.dup: i1;
  var $i152: i1;
  var $i152.dup: i1;
  var $i154: i32;
  var $i154.dup: i1;
  var $i155: i32;
  var $i155.dup: i1;
  var $i156: i32;
  var $i156.dup: i1;
  var $i157: i32;
  var $i157.dup: i1;
  var $i158: i64;
  var $i158.dup: i1;
  var $i159: i64;
  var $i159.dup: i1;
  var $i160: i64;
  var $i160.dup: i1;
  var $i161: i64;
  var $i161.dup: i1;
  var $i162: i64;
  var $i162.dup: i1;
  var $i163: i8;
  var $i163.dup: i1;
  var $i153: i8;
  var $i153.dup: i1;
  var $i164: i1;
  var $i164.dup: i1;
  var $i166: i32;
  var $i166.dup: i1;
  var $i167: i32;
  var $i167.dup: i1;
  var $i168: i32;
  var $i168.dup: i1;
  var $i169: i32;
  var $i169.dup: i1;
  var $i170: i64;
  var $i170.dup: i1;
  var $i171: i64;
  var $i171.dup: i1;
  var $i172: i64;
  var $i172.dup: i1;
  var $i173: i64;
  var $i173.dup: i1;
  var $i174: i64;
  var $i174.dup: i1;
  var $i175: i8;
  var $i175.dup: i1;
  var $i165: i8;
  var $i165.dup: i1;
  var $i176: i1;
  var $i176.dup: i1;
  var $i178: i32;
  var $i178.dup: i1;
  var $i179: i32;
  var $i179.dup: i1;
  var $i180: i32;
  var $i180.dup: i1;
  var $i181: i32;
  var $i181.dup: i1;
  var $i182: i64;
  var $i182.dup: i1;
  var $i183: i64;
  var $i183.dup: i1;
  var $i184: i64;
  var $i184.dup: i1;
  var $i185: i64;
  var $i185.dup: i1;
  var $i186: i64;
  var $i186.dup: i1;
  var $i187: i8;
  var $i187.dup: i1;
  var $i177: i8;
  var $i177.dup: i1;
  var $i188: i1;
  var $i188.dup: i1;
  var $i190: i32;
  var $i190.dup: i1;
  var $i191: i32;
  var $i191.dup: i1;
  var $i192: i32;
  var $i192.dup: i1;
  var $i193: i32;
  var $i193.dup: i1;
  var $i194: i64;
  var $i194.dup: i1;
  var $i195: i64;
  var $i195.dup: i1;
  var $i196: i64;
  var $i196.dup: i1;
  var $i197: i64;
  var $i197.dup: i1;
  var $i198: i64;
  var $i198.dup: i1;
  var $i199: i8;
  var $i199.dup: i1;
  var $i189: i8;
  var $i189.dup: i1;
  var $i200: i1;
  var $i200.dup: i1;
  var $i202: i32;
  var $i202.dup: i1;
  var $i203: i32;
  var $i203.dup: i1;
  var $i204: i32;
  var $i204.dup: i1;
  var $i205: i32;
  var $i205.dup: i1;
  var $i206: i64;
  var $i206.dup: i1;
  var $i207: i64;
  var $i207.dup: i1;
  var $i208: i64;
  var $i208.dup: i1;
  var $i209: i64;
  var $i209.dup: i1;
  var $i210: i64;
  var $i210.dup: i1;
  var $i211: i8;
  var $i211.dup: i1;
  var $i201: i8;
  var $i201.dup: i1;
  var $i212: i1;
  var $i212.dup: i1;
  var $i214: i32;
  var $i214.dup: i1;
  var $i215: i32;
  var $i215.dup: i1;
  var $i216: i32;
  var $i216.dup: i1;
  var $i217: i32;
  var $i217.dup: i1;
  var $i218: i64;
  var $i218.dup: i1;
  var $i219: i64;
  var $i219.dup: i1;
  var $i220: i64;
  var $i220.dup: i1;
  var $i221: i64;
  var $i221.dup: i1;
  var $i222: i64;
  var $i222.dup: i1;
  var $i223: i8;
  var $i223.dup: i1;
  var $i213: i8;
  var $i213.dup: i1;
  var $i224: i1;
  var $i224.dup: i1;
  var $i226: i32;
  var $i226.dup: i1;
  var $i227: i32;
  var $i227.dup: i1;
  var $i228: i32;
  var $i228.dup: i1;
  var $i229: i32;
  var $i229.dup: i1;
  var $i230: i64;
  var $i230.dup: i1;
  var $i231: i64;
  var $i231.dup: i1;
  var $i232: i64;
  var $i232.dup: i1;
  var $i233: i64;
  var $i233.dup: i1;
  var $i234: i8;
  var $i234.dup: i1;
  var $i225: i8;
  var $i225.dup: i1;
  var $i235: i64;
  var $i235.dup: i1;
  var $p236: ref;
  var $p236.dup: i1;
  var $i237: i32;
  var $i237.dup: i1;
  var $p238: ref;
  var $p238.dup: i1;
  var $p239: ref;
  var $p239.dup: i1;
  var $p240: ref;
  var $p240.dup: i1;
  var $i241: i32;
  var $i241.dup: i1;
  var $i242: i32;
  var $i242.dup: i1;
  var $i243: i1;
  var $i243.dup: i1;
  var $i244: i64;
  var $i244.dup: i1;
  var $p245: ref;
  var $p245.dup: i1;
  var $i246: i8;
  var $i246.dup: i1;
  var $i247: i32;
  var $i247.dup: i1;
  var $i248: i32;
  var $i248.dup: i1;
  var $i249: i32;
  var $i249.dup: i1;
  var $i250: i64;
  var $i250.dup: i1;
  var $p251: ref;
  var $p251.dup: i1;
  var $i252: i8;
  var $i252.dup: i1;
  var $i253: i32;
  var $i253.dup: i1;
  var $i254: i32;
  var $i254.dup: i1;
  var $i255: i8;
  var $i255.dup: i1;
  var $i256: i32;
  var $i256.dup: i1;
  var $i257: i32;
  var $i257.dup: i1;
  var $i258: i32;
  var $i258.dup: i1;
  var $i259: i1;
  var $i259.dup: i1;
  var $i260: i64;
  var $i260.dup: i1;
  var $p261: ref;
  var $p261.dup: i1;
  var $i262: i8;
  var $i262.dup: i1;
  var $i263: i32;
  var $i263.dup: i1;
  var $i264: i32;
  var $i264.dup: i1;
  var $i265: i8;
  var $i265.dup: i1;
  var $i266: i64;
  var $i266.dup: i1;
  var $p267: ref;
  var $p267.dup: i1;
  var $i268: i32;
  var $i268.dup: i1;
  var $i269: i32;
  var $i269.dup: i1;
  var $i270: i1;
  var $i270.dup: i1;
  var $i271: i64;
  var $i271.dup: i1;
  var $p272: ref;
  var $p272.dup: i1;
  var $i273: i32;
  var $i273.dup: i1;
  var $i274: i32;
  var $i274.dup: i1;
  var $i275: i1;
  var $i275.dup: i1;
  var $i276: i64;
  var $i276.dup: i1;
  var $p277: ref;
  var $p277.dup: i1;
  var $i278: i8;
  var $i278.dup: i1;
  var $i279: i64;
  var $i279.dup: i1;
  var $p280: ref;
  var $p280.dup: i1;
  var $i281: i32;
  var $i281.dup: i1;
  var $p282: ref;
  var $p282.dup: i1;
  var $i283: i32;
  var $i283.dup: i1;
  var $i284: i32;
  var $i284.dup: i1;
  var $i285: i1;
  var $i285.dup: i1;
  var $i286: i64;
  var $i286.dup: i1;
  var $p287: ref;
  var $p287.dup: i1;
  var $i288: i8;
  var $i288.dup: i1;
  var $i289: i64;
  var $i289.dup: i1;
  var $p290: ref;
  var $p290.dup: i1;
  var $i291: i32;
  var $i291.dup: i1;
  var $i292: i32;
  var $i292.dup: i1;
  var $i293: i1;
  var $i293.dup: i1;
  var $i294: i64;
  var $i294.dup: i1;
  var $p295: ref;
  var $p295.dup: i1;
  var $i296: i32;
  var $i296.dup: i1;
  var $p297: ref;
  var $p297.dup: i1;
  var $p298: ref;
  var $p298.dup: i1;
  var $p299: ref;
  var $p299.dup: i1;
  var $i300: i32;
  var $i300.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 92, 24} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  $p5.dup := 0;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  $p6.dup := 0;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(64,$zext.i32.i64(1)));
  $p7.dup := 0;
  call {:cexpr "crypto_auth_ct:arg:publen"} boogie_si_record_i64($i2);
  call {:cexpr "crypto_auth_ct:arg:inlen"} boogie_si_record_i64($i3);
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 92, 24} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64($i2,32);
  $i8.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 92, 39} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64($i8,2);
  $i9.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 92, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $udiv.i64($i9,64);
  $i10.dup := $or.i1($i9.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 92, 16} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  $i11.dup := 0;
  call {:cexpr "pub_blocks"} boogie_si_record_i32($i11);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 93, 23} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64($i3,32);
  $i12.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 93, 41} true;
  assume {:verifier.code 0} true;
  $i13 := $udiv.i64($i12,64);
  $i13.dup := $or.i1($i12.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 93, 16} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i13);
  $i14.dup := $i13.dup;
  call {:cexpr "index_a"} boogie_si_record_i32($i14);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 94, 23} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i64($i3,32);
  $i15.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 94, 41} true;
  assume {:verifier.code 0} true;
  $i16 := $urem.i64($i15,64);
  $i16.dup := $or.i1($i15.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 94, 16} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i64.i32($i16);
  $i17.dup := $i16.dup;
  call {:cexpr "index_c"} boogie_si_record_i32($i17);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $xor.i32($i17,56);
  $i18.dup := $or.i1($i17.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32($i17,56);
  $i19.dup := $or.i1($i17.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $xor.i32($i19,56);
  $i20.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $or.i32($i18,$i20);
  $i21.dup := $or.i1($i18.dup,$i20.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $ashr.i32($i21,31);
  $i22.dup := $or.i1($i21.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $xor.i32($i17,$i22);
  $i23.dup := $or.i1($i17.dup,$i22.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0,$i23);
  $i24.dup := $or.i1(0,$i23.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $xor.i32($i24,$sub.i32(0,1));
  $i25.dup := $or.i1($i24.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32(1,$i25);
  $i26.dup := $or.i1(0,$i25.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 95, 24} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i14,$i26);
  $i27.dup := $or.i1($i14.dup,$i26.dup);
  call {:cexpr "index_b"} boogie_si_record_i32($i27);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 98, 8} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  $i28.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 98, 16} true;
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i28,32);
  $i29.dup := $or.i1($i28.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 98, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  $i29.dup := 0;
  goto $bb2, $bb3;
$bb2:
  assume ($i29 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 99, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i28);
  $i30.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 99, 21} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref($i30,1));
  $p31.dup := $or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1($i30.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 99, 21} true;
  assume {:verifier.code 0} true;
  $p31.dup := 0;
  $i32 := $load.i8($M.24,$p31);
  $i32.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 99, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i28);
  $i33.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 99, 5} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p6,$mul.ref(0,32)),$mul.ref($i33,1));
  $p34.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1($i33.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 99, 19} true;
  assume {:verifier.code 0} true;
  $p34.dup := 0;
  $M.11 := $store.i8($M.11,$p34,$i32);
  $M.11.dup := $store.i1($M.11.dup,$p34,$i32.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 100, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i29 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 103, 8} true;
  assume {:verifier.code 0} true;
  $i36 := 0;
  $i36.dup := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 98, 32} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i28,1);
  $i35.dup := $or.i1($i28.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i35);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 98, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i35;
  $i28.dup := 0;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 103, 16} true;
  assume {:verifier.code 0} true;
  $i37 := $slt.i32($i36,32);
  $i37.dup := $or.i1($i36.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 103, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  $i37.dup := 0;
  goto $bb6, $bb7;
$bb6:
  assume ($i37 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i36);
  $i38.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 18} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p39 := $add.ref($p4,$mul.ref($i38,1));
  $p39.dup := $or.i1($p4.dup,$or.i1($i38.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 18} true;
  assume {:verifier.code 0} true;
  $p39.dup := 0;
  $i40 := $load.i8($M.25,$p39);
  $i40.dup := $load.i1($M.25.dup,$p39);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 18} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  $i41.dup := $i40.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $xor.i32($i41,54);
  $i42.dup := $or.i1($i41.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 18} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i8($i42);
  $i43.dup := $i42.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i36);
  $i44.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p45 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i44,1));
  $p45.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i44.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 104, 16} true;
  assume {:verifier.code 0} true;
  $p45.dup := 0;
  $M.11 := $store.i8($M.11,$p45,$i43);
  $M.11.dup := $store.i1($M.11.dup,$p45,$i43.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 105, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i37 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 106, 3} true;
  assume {:verifier.code 0} true;
  $i47 := $i36;
  $i47.dup := 0;
  goto $bb9;
$bb8:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 103, 32} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i36,1);
  $i46.dup := $or.i1($i36.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i46);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 103, 3} true;
  assume {:verifier.code 0} true;
  $i36 := $i46;
  $i36.dup := 0;
  goto $bb5;
$bb9:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 106, 11} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i47,64);
  $i48.dup := $or.i1($i47.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 106, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  $i48.dup := 0;
  goto $bb10, $bb11;
$bb10:
  assume ($i48 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i32.i64($i47);
  $i49.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 107, 5} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i49,1));
  $p50.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i49.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 107, 16} true;
  assume {:verifier.code 0} true;
  $p50.dup := 0;
  $M.11 := $store.i8($M.11,$p50,54);
  $M.11.dup := $store.i1($M.11.dup,$p50,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 108, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !($i48 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 109, 21} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p6,$mul.ref(0,32)),$mul.ref(0,1));
  $p52.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 109, 32} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref(0,1));
  $p53.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 109, 3} true;
  assume {:verifier.code 0} true;
  call $i54, $i54.dup := crypto_hashblocks($p52, $p52.dup, $p53, $p53.dup, 64, 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 113, 21} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p6,$mul.ref(0,32)),$mul.ref(0,1));
  $p55.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 113, 46} true;
  assume {:verifier.code 0} true;
  $i56 := $mul.i32($i11,64);
  $i56.dup := $or.i1($i11.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 113, 35} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i32.i64($i56);
  $i57.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 113, 3} true;
  assume {:verifier.code 0} true;
  call $i58, $i58.dup := crypto_hashblocks($p55, $p55.dup, $p1, $p1.dup, $i57, $i57.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 114, 20} true;
  assume {:verifier.code 0} true;
  $i59 := $mul.i32($i11,64);
  $i59.dup := $or.i1($i11.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 114, 6} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i59);
  $i60.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 114, 6} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p61 := $add.ref($p1,$mul.ref($i60,1));
  $p61.dup := $or.i1($p1.dup,$or.i1($i60.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 119, 8} true;
  assume {:verifier.code 0} true;
  $i62 := 0;
  $i62.dup := 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 106, 25} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i47,1);
  $i51.dup := $or.i1($i47.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i51);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 106, 3} true;
  assume {:verifier.code 0} true;
  $i47 := $i51;
  $i47.dup := 0;
  goto $bb9;
$bb13:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 119, 16} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i62,32);
  $i63.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 119, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  $i63.dup := 0;
  goto $bb14, $bb15;
$bb14:
  assume ($i63 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 120, 5} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i62);
  $i64.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 120, 5} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p5,$mul.ref(0,32)),$mul.ref($i64,1));
  $p65.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i64.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 120, 21} true;
  assume {:verifier.code 0} true;
  $p65.dup := 0;
  $M.26 := $store.i8($M.26,$p65,0);
  $M.26.dup := $store.i1($M.26.dup,$p65,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 121, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !($i63 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 122, 24} true;
  assume {:verifier.code 0} true;
  $i67 := $sub.i64($i3,32);
  $i67.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 122, 40} true;
  assume {:verifier.code 0} true;
  $i68 := $shl.i64($i67,3);
  $i68.dup := $or.i1($i67.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 122, 14} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i64(512,$i68);
  $i69.dup := $or.i1(0,$i68.dup);
  call {:cexpr "bits"} boogie_si_record_i64($i69);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 123, 8} true;
  assume {:verifier.code 0} true;
  $i70 := $i11;
  $i70.dup := 0;
  $p71 := $p61;
  $p71.dup := 0;
  goto $bb17;
$bb16:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 119, 32} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i32($i62,1);
  $i66.dup := $or.i1($i62.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i66);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 119, 3} true;
  assume {:verifier.code 0} true;
  $i62 := $i66;
  $i62.dup := 0;
  goto $bb13;
$bb17:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 123, 38} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i11,2);
  $i72.dup := $or.i1($i11.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 123, 25} true;
  assume {:verifier.code 0} true;
  $i73 := $slt.i32($i70,$i72);
  $i73.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 123, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  $i73.dup := 0;
  goto $bb18, $bb19;
$bb18:
  assume ($i73 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i74 := $xor.i32($i70,$sub.i32(0,1));
  $i74.dup := $or.i1($i70.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32($i14,1);
  $i75.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i76 := $xor.i32($i70,$i75);
  $i76.dup := $or.i1($i70.dup,$i75.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i77 := $ashr.i32($i76,31);
  $i77.dup := $or.i1($i76.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i78 := $and.i32($i14,$i77);
  $i78.dup := $or.i1($i14.dup,$i77.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i79 := $xor.i32($i74,$i78);
  $i79.dup := $or.i1($i74.dup,$i78.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i80 := $sub.i32(0,$i79);
  $i80.dup := $or.i1(0,$i79.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 126, 32} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i8($i80);
  $i81.dup := $i80.dup;
  call {:cexpr "is_block_a"} boogie_si_record_i8($i81);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i82 := $xor.i32($i70,$sub.i32(0,1));
  $i82.dup := $or.i1($i70.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i83 := $sub.i32($i27,1);
  $i83.dup := $or.i1($i27.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i84 := $xor.i32($i70,$i83);
  $i84.dup := $or.i1($i70.dup,$i83.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i85 := $ashr.i32($i84,31);
  $i85.dup := $or.i1($i84.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i86 := $and.i32($i27,$i85);
  $i86.dup := $or.i1($i27.dup,$i85.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i87 := $xor.i32($i82,$i86);
  $i87.dup := $or.i1($i82.dup,$i86.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i88 := $sub.i32(0,$i87);
  $i88.dup := $or.i1(0,$i87.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 127, 32} true;
  assume {:verifier.code 0} true;
  $i89 := $trunc.i32.i8($i88);
  $i89.dup := $i88.dup;
  call {:cexpr "is_block_b"} boogie_si_record_i8($i89);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $i90 := 0;
  $i90.dup := 0;
  goto $bb20;
$bb19:
  assume !($i73 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 175, 8} true;
  assume {:verifier.code 0} true;
  $i258 := 0;
  $i258.dup := 0;
  goto $bb53;
$bb20:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 128, 18} true;
  assume {:verifier.code 0} true;
  $i91 := $slt.i32($i90,64);
  $i91.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 128, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  $i91.dup := 0;
  goto $bb21, $bb22;
$bb21:
  assume ($i91 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 33} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i8.i32($i81);
  $i92.dup := $i81.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i93 := $xor.i32($i90,$i17);
  $i93.dup := $or.i1($i90.dup,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i32($i90,$i17);
  $i94.dup := $or.i1($i90.dup,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i95 := $xor.i32($i94,$i17);
  $i95.dup := $or.i1($i94.dup,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i96 := $or.i32($i93,$i95);
  $i96.dup := $or.i1($i93.dup,$i95.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i97 := $ashr.i32($i96,31);
  $i97.dup := $or.i1($i96.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i98 := $xor.i32($i90,$i97);
  $i98.dup := $or.i1($i90.dup,$i97.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i99 := $sub.i32(0,$i98);
  $i99.dup := $or.i1(0,$i98.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 46} true;
  assume {:verifier.code 0} true;
  $i100 := $xor.i32($i99,$sub.i32(0,1));
  $i100.dup := $or.i1($i99.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 44} true;
  assume {:verifier.code 0} true;
  $i101 := $and.i32($i92,$i100);
  $i101.dup := $or.i1($i92.dup,$i100.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 130, 33} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i32.i8($i101);
  $i102.dup := $i101.dup;
  call {:cexpr "is_past_c"} boogie_si_record_i8($i102);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 35} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32($i81);
  $i103.dup := $i81.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i32($i17,1);
  $i104.dup := $or.i1($i17.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i105 := $xor.i32($i90,$i104);
  $i105.dup := $or.i1($i90.dup,$i104.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.i32($i90,$i17);
  $i106.dup := $or.i1($i90.dup,$i17.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i106,1);
  $i107.dup := $or.i1($i106.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i32($i17,1);
  $i108.dup := $or.i1($i17.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i109 := $xor.i32($i107,$i108);
  $i109.dup := $or.i1($i107.dup,$i108.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i110 := $or.i32($i105,$i109);
  $i110.dup := $or.i1($i105.dup,$i109.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i111 := $ashr.i32($i110,31);
  $i111.dup := $or.i1($i110.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i112 := $xor.i32($i90,$i111);
  $i112.dup := $or.i1($i90.dup,$i111.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i113 := $sub.i32(0,$i112);
  $i113.dup := $or.i1(0,$i112.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i114 := $xor.i32($i113,$sub.i32(0,1));
  $i114.dup := $or.i1($i113.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 46} true;
  assume {:verifier.code 0} true;
  $i115 := $and.i32($i103,$i114);
  $i115.dup := $or.i1($i103.dup,$i114.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 131, 35} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i32.i8($i115);
  $i116.dup := $i115.dup;
  call {:cexpr "is_past_cp1"} boogie_si_record_i8($i116);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 136, 11} true;
  assume {:verifier.code 0} true;
  $i117 := $sext.i32.i64($i90);
  $i117.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 136, 11} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p118 := $add.ref($p71,$mul.ref($i117,1));
  $p118.dup := $or.i1($p71.dup,$or.i1($i117.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 136, 11} true;
  assume {:verifier.code 0} true;
  $p118.dup := 0;
  $i119 := $load.i8($M.11,$p118);
  $i119.dup := $load.i1($M.11.dup,$p118);
  call {:cexpr "b"} boogie_si_record_i8($i119);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 12} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i8.i32($i119);
  $i120.dup := $i119.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 17} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.i8.i32($i102);
  $i121.dup := $i102.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 16} true;
  assume {:verifier.code 0} true;
  $i122 := $xor.i32($i121,$sub.i32(0,1));
  $i122.dup := $or.i1($i121.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 14} true;
  assume {:verifier.code 0} true;
  $i123 := $and.i32($i120,$i122);
  $i123.dup := $or.i1($i120.dup,$i122.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 38} true;
  assume {:verifier.code 0} true;
  $i124 := $zext.i8.i32($i102);
  $i124.dup := $i102.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 36} true;
  assume {:verifier.code 0} true;
  $i125 := $and.i32(128,$i124);
  $i125.dup := $or.i1(0,$i124.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 28} true;
  assume {:verifier.code 0} true;
  $i126 := $or.i32($i123,$i125);
  $i126.dup := $or.i1($i123.dup,$i125.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 139, 11} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.i32.i8($i126);
  $i127.dup := $i126.dup;
  call {:cexpr "b"} boogie_si_record_i8($i127);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 142, 11} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i32($i127);
  $i128.dup := $i127.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 142, 16} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i8.i32($i116);
  $i129.dup := $i116.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 142, 15} true;
  assume {:verifier.code 0} true;
  $i130 := $xor.i32($i129,$sub.i32(0,1));
  $i130.dup := $or.i1($i129.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 142, 13} true;
  assume {:verifier.code 0} true;
  $i131 := $and.i32($i128,$i130);
  $i131.dup := $or.i1($i128.dup,$i130.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 142, 11} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i8($i131);
  $i132.dup := $i131.dup;
  call {:cexpr "b"} boogie_si_record_i8($i132);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 13} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i8.i32($i89);
  $i133.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 12} true;
  assume {:verifier.code 0} true;
  $i134 := $xor.i32($i133,$sub.i32(0,1));
  $i134.dup := $or.i1($i133.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 26} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i8.i32($i81);
  $i135.dup := $i81.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 24} true;
  assume {:verifier.code 0} true;
  $i136 := $or.i32($i134,$i135);
  $i136.dup := $or.i1($i134.dup,$i135.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i137 := $zext.i8.i32($i132);
  $i137.dup := $i132.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $and.i32($i137,$i136);
  $i138.dup := $or.i1($i137.dup,$i136.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  $i139.dup := $i138.dup;
  call {:cexpr "b"} boogie_si_record_i8($i139);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 13} true;
  assume {:verifier.code 0} true;
  $i140 := $eq.i32($i90,56);
  $i140.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 11} true;
  assume {:verifier.code 0} true;
  $i141 := $i139;
  $i141.dup := 0;
  assume {:branchcond $i140} true;
  $i140.dup := 0;
  goto $bb23, $bb24;
$bb22:
  assume !($i91 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 161, 8} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p238 := $add.ref($p71,$mul.ref(64,1));
  $p238.dup := $or.i1($p71.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 164, 23} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($add.ref($p6,$mul.ref(0,32)),$mul.ref(0,1));
  $p239.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 164, 34} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref(0,1));
  $p240.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 164, 5} true;
  assume {:verifier.code 0} true;
  call $i241, $i241.dup := crypto_hashblocks($p239, $p239.dup, $p240, $p240.dup, 64, 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 168, 10} true;
  assume {:verifier.code 0} true;
  $i242 := 0;
  $i242.dup := 0;
  goto $bb48;
$bb23:
  assume ($i140 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 27} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i8.i32($i139);
  $i142.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 32} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i8.i32($i89);
  $i143.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 31} true;
  assume {:verifier.code 0} true;
  $i144 := $xor.i32($i143,$sub.i32(0,1));
  $i144.dup := $or.i1($i143.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 29} true;
  assume {:verifier.code 0} true;
  $i145 := $and.i32($i142,$i144);
  $i145.dup := $or.i1($i142.dup,$i144.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 26} true;
  assume {:verifier.code 0} true;
  $i146 := $sext.i32.i64($i145);
  $i146.dup := $i145.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 47} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i64($i89);
  $i147.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 65} true;
  assume {:verifier.code 0} true;
  $i148 := $lshr.i64($i69,56);
  $i148.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 58} true;
  assume {:verifier.code 0} true;
  $i149 := $and.i64($i147,$i148);
  $i149.dup := $or.i1($i147.dup,$i148.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 44} true;
  assume {:verifier.code 0} true;
  $i150 := $or.i64($i146,$i149);
  $i150.dup := $or.i1($i146.dup,$i149.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 26} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i64.i8($i150);
  $i151.dup := $i150.dup;
  call {:cexpr "b"} boogie_si_record_i8($i151);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 73} true;
  assume {:verifier.code 0} true;
  $i141 := $i151;
  $i141.dup := 0;
  goto $bb25;
$bb24:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 150, 11} true;
  assume {:verifier.code 0} true;
  assume !($i140 == 1);
  goto $bb25;
$bb25:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 13} true;
  assume {:verifier.code 0} true;
  $i152 := $eq.i32($i90,57);
  $i152.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 11} true;
  assume {:verifier.code 0} true;
  $i153 := $i141;
  $i153.dup := 0;
  assume {:branchcond $i152} true;
  $i152.dup := 0;
  goto $bb26, $bb27;
$bb26:
  assume ($i152 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 27} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i8.i32($i141);
  $i154.dup := $i141.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 32} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.i8.i32($i89);
  $i155.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 31} true;
  assume {:verifier.code 0} true;
  $i156 := $xor.i32($i155,$sub.i32(0,1));
  $i156.dup := $or.i1($i155.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 29} true;
  assume {:verifier.code 0} true;
  $i157 := $and.i32($i154,$i156);
  $i157.dup := $or.i1($i154.dup,$i156.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 26} true;
  assume {:verifier.code 0} true;
  $i158 := $sext.i32.i64($i157);
  $i158.dup := $i157.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 47} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i8.i64($i89);
  $i159.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 65} true;
  assume {:verifier.code 0} true;
  $i160 := $lshr.i64($i69,48);
  $i160.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 58} true;
  assume {:verifier.code 0} true;
  $i161 := $and.i64($i159,$i160);
  $i161.dup := $or.i1($i159.dup,$i160.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 44} true;
  assume {:verifier.code 0} true;
  $i162 := $or.i64($i158,$i161);
  $i162.dup := $or.i1($i158.dup,$i161.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 26} true;
  assume {:verifier.code 0} true;
  $i163 := $trunc.i64.i8($i162);
  $i163.dup := $i162.dup;
  call {:cexpr "b"} boogie_si_record_i8($i163);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 73} true;
  assume {:verifier.code 0} true;
  $i153 := $i163;
  $i153.dup := 0;
  goto $bb28;
$bb27:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 151, 11} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb28;
$bb28:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 13} true;
  assume {:verifier.code 0} true;
  $i164 := $eq.i32($i90,58);
  $i164.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 11} true;
  assume {:verifier.code 0} true;
  $i165 := $i153;
  $i165.dup := 0;
  assume {:branchcond $i164} true;
  $i164.dup := 0;
  goto $bb29, $bb30;
$bb29:
  assume ($i164 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 27} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.i8.i32($i153);
  $i166.dup := $i153.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 32} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i8.i32($i89);
  $i167.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 31} true;
  assume {:verifier.code 0} true;
  $i168 := $xor.i32($i167,$sub.i32(0,1));
  $i168.dup := $or.i1($i167.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 29} true;
  assume {:verifier.code 0} true;
  $i169 := $and.i32($i166,$i168);
  $i169.dup := $or.i1($i166.dup,$i168.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 26} true;
  assume {:verifier.code 0} true;
  $i170 := $sext.i32.i64($i169);
  $i170.dup := $i169.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 47} true;
  assume {:verifier.code 0} true;
  $i171 := $zext.i8.i64($i89);
  $i171.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 65} true;
  assume {:verifier.code 0} true;
  $i172 := $lshr.i64($i69,40);
  $i172.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 58} true;
  assume {:verifier.code 0} true;
  $i173 := $and.i64($i171,$i172);
  $i173.dup := $or.i1($i171.dup,$i172.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 44} true;
  assume {:verifier.code 0} true;
  $i174 := $or.i64($i170,$i173);
  $i174.dup := $or.i1($i170.dup,$i173.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 26} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i64.i8($i174);
  $i175.dup := $i174.dup;
  call {:cexpr "b"} boogie_si_record_i8($i175);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 73} true;
  assume {:verifier.code 0} true;
  $i165 := $i175;
  $i165.dup := 0;
  goto $bb31;
$bb30:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 152, 11} true;
  assume {:verifier.code 0} true;
  assume !($i164 == 1);
  goto $bb31;
$bb31:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 13} true;
  assume {:verifier.code 0} true;
  $i176 := $eq.i32($i90,59);
  $i176.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 11} true;
  assume {:verifier.code 0} true;
  $i177 := $i165;
  $i177.dup := 0;
  assume {:branchcond $i176} true;
  $i176.dup := 0;
  goto $bb32, $bb33;
$bb32:
  assume ($i176 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 27} true;
  assume {:verifier.code 0} true;
  $i178 := $zext.i8.i32($i165);
  $i178.dup := $i165.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 32} true;
  assume {:verifier.code 0} true;
  $i179 := $zext.i8.i32($i89);
  $i179.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 31} true;
  assume {:verifier.code 0} true;
  $i180 := $xor.i32($i179,$sub.i32(0,1));
  $i180.dup := $or.i1($i179.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 29} true;
  assume {:verifier.code 0} true;
  $i181 := $and.i32($i178,$i180);
  $i181.dup := $or.i1($i178.dup,$i180.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 26} true;
  assume {:verifier.code 0} true;
  $i182 := $sext.i32.i64($i181);
  $i182.dup := $i181.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 47} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i8.i64($i89);
  $i183.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 65} true;
  assume {:verifier.code 0} true;
  $i184 := $lshr.i64($i69,32);
  $i184.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 58} true;
  assume {:verifier.code 0} true;
  $i185 := $and.i64($i183,$i184);
  $i185.dup := $or.i1($i183.dup,$i184.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 44} true;
  assume {:verifier.code 0} true;
  $i186 := $or.i64($i182,$i185);
  $i186.dup := $or.i1($i182.dup,$i185.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 26} true;
  assume {:verifier.code 0} true;
  $i187 := $trunc.i64.i8($i186);
  $i187.dup := $i186.dup;
  call {:cexpr "b"} boogie_si_record_i8($i187);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 73} true;
  assume {:verifier.code 0} true;
  $i177 := $i187;
  $i177.dup := 0;
  goto $bb34;
$bb33:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 153, 11} true;
  assume {:verifier.code 0} true;
  assume !($i176 == 1);
  goto $bb34;
$bb34:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 13} true;
  assume {:verifier.code 0} true;
  $i188 := $eq.i32($i90,60);
  $i188.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 11} true;
  assume {:verifier.code 0} true;
  $i189 := $i177;
  $i189.dup := 0;
  assume {:branchcond $i188} true;
  $i188.dup := 0;
  goto $bb35, $bb36;
$bb35:
  assume ($i188 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 27} true;
  assume {:verifier.code 0} true;
  $i190 := $zext.i8.i32($i177);
  $i190.dup := $i177.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 32} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i8.i32($i89);
  $i191.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 31} true;
  assume {:verifier.code 0} true;
  $i192 := $xor.i32($i191,$sub.i32(0,1));
  $i192.dup := $or.i1($i191.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 29} true;
  assume {:verifier.code 0} true;
  $i193 := $and.i32($i190,$i192);
  $i193.dup := $or.i1($i190.dup,$i192.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 26} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i32.i64($i193);
  $i194.dup := $i193.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 47} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.i8.i64($i89);
  $i195.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 65} true;
  assume {:verifier.code 0} true;
  $i196 := $lshr.i64($i69,24);
  $i196.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 58} true;
  assume {:verifier.code 0} true;
  $i197 := $and.i64($i195,$i196);
  $i197.dup := $or.i1($i195.dup,$i196.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 44} true;
  assume {:verifier.code 0} true;
  $i198 := $or.i64($i194,$i197);
  $i198.dup := $or.i1($i194.dup,$i197.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 26} true;
  assume {:verifier.code 0} true;
  $i199 := $trunc.i64.i8($i198);
  $i199.dup := $i198.dup;
  call {:cexpr "b"} boogie_si_record_i8($i199);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 73} true;
  assume {:verifier.code 0} true;
  $i189 := $i199;
  $i189.dup := 0;
  goto $bb37;
$bb36:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 154, 11} true;
  assume {:verifier.code 0} true;
  assume !($i188 == 1);
  goto $bb37;
$bb37:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 13} true;
  assume {:verifier.code 0} true;
  $i200 := $eq.i32($i90,61);
  $i200.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 11} true;
  assume {:verifier.code 0} true;
  $i201 := $i189;
  $i201.dup := 0;
  assume {:branchcond $i200} true;
  $i200.dup := 0;
  goto $bb38, $bb39;
$bb38:
  assume ($i200 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 27} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i8.i32($i189);
  $i202.dup := $i189.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 32} true;
  assume {:verifier.code 0} true;
  $i203 := $zext.i8.i32($i89);
  $i203.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 31} true;
  assume {:verifier.code 0} true;
  $i204 := $xor.i32($i203,$sub.i32(0,1));
  $i204.dup := $or.i1($i203.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 29} true;
  assume {:verifier.code 0} true;
  $i205 := $and.i32($i202,$i204);
  $i205.dup := $or.i1($i202.dup,$i204.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 26} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i32.i64($i205);
  $i206.dup := $i205.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 47} true;
  assume {:verifier.code 0} true;
  $i207 := $zext.i8.i64($i89);
  $i207.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 65} true;
  assume {:verifier.code 0} true;
  $i208 := $lshr.i64($i69,16);
  $i208.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 58} true;
  assume {:verifier.code 0} true;
  $i209 := $and.i64($i207,$i208);
  $i209.dup := $or.i1($i207.dup,$i208.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 44} true;
  assume {:verifier.code 0} true;
  $i210 := $or.i64($i206,$i209);
  $i210.dup := $or.i1($i206.dup,$i209.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 26} true;
  assume {:verifier.code 0} true;
  $i211 := $trunc.i64.i8($i210);
  $i211.dup := $i210.dup;
  call {:cexpr "b"} boogie_si_record_i8($i211);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 73} true;
  assume {:verifier.code 0} true;
  $i201 := $i211;
  $i201.dup := 0;
  goto $bb40;
$bb39:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 155, 11} true;
  assume {:verifier.code 0} true;
  assume !($i200 == 1);
  goto $bb40;
$bb40:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 13} true;
  assume {:verifier.code 0} true;
  $i212 := $eq.i32($i90,62);
  $i212.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $i201;
  $i213.dup := 0;
  assume {:branchcond $i212} true;
  $i212.dup := 0;
  goto $bb41, $bb42;
$bb41:
  assume ($i212 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 27} true;
  assume {:verifier.code 0} true;
  $i214 := $zext.i8.i32($i201);
  $i214.dup := $i201.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 32} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.i8.i32($i89);
  $i215.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 31} true;
  assume {:verifier.code 0} true;
  $i216 := $xor.i32($i215,$sub.i32(0,1));
  $i216.dup := $or.i1($i215.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 29} true;
  assume {:verifier.code 0} true;
  $i217 := $and.i32($i214,$i216);
  $i217.dup := $or.i1($i214.dup,$i216.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 26} true;
  assume {:verifier.code 0} true;
  $i218 := $sext.i32.i64($i217);
  $i218.dup := $i217.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 47} true;
  assume {:verifier.code 0} true;
  $i219 := $zext.i8.i64($i89);
  $i219.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 65} true;
  assume {:verifier.code 0} true;
  $i220 := $lshr.i64($i69,8);
  $i220.dup := $or.i1($i69.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 58} true;
  assume {:verifier.code 0} true;
  $i221 := $and.i64($i219,$i220);
  $i221.dup := $or.i1($i219.dup,$i220.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 44} true;
  assume {:verifier.code 0} true;
  $i222 := $or.i64($i218,$i221);
  $i222.dup := $or.i1($i218.dup,$i221.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 26} true;
  assume {:verifier.code 0} true;
  $i223 := $trunc.i64.i8($i222);
  $i223.dup := $i222.dup;
  call {:cexpr "b"} boogie_si_record_i8($i223);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 73} true;
  assume {:verifier.code 0} true;
  $i213 := $i223;
  $i213.dup := 0;
  goto $bb43;
$bb42:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 156, 11} true;
  assume {:verifier.code 0} true;
  assume !($i212 == 1);
  goto $bb43;
$bb43:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 13} true;
  assume {:verifier.code 0} true;
  $i224 := $eq.i32($i90,63);
  $i224.dup := $or.i1($i90.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 11} true;
  assume {:verifier.code 0} true;
  $i225 := $i213;
  $i225.dup := 0;
  assume {:branchcond $i224} true;
  $i224.dup := 0;
  goto $bb44, $bb45;
$bb44:
  assume ($i224 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 27} true;
  assume {:verifier.code 0} true;
  $i226 := $zext.i8.i32($i213);
  $i226.dup := $i213.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 32} true;
  assume {:verifier.code 0} true;
  $i227 := $zext.i8.i32($i89);
  $i227.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 31} true;
  assume {:verifier.code 0} true;
  $i228 := $xor.i32($i227,$sub.i32(0,1));
  $i228.dup := $or.i1($i227.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 29} true;
  assume {:verifier.code 0} true;
  $i229 := $and.i32($i226,$i228);
  $i229.dup := $or.i1($i226.dup,$i228.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 26} true;
  assume {:verifier.code 0} true;
  $i230 := $sext.i32.i64($i229);
  $i230.dup := $i229.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 47} true;
  assume {:verifier.code 0} true;
  $i231 := $zext.i8.i64($i89);
  $i231.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 58} true;
  assume {:verifier.code 0} true;
  $i232 := $and.i64($i231,$i69);
  $i232.dup := $or.i1($i231.dup,$i69.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 44} true;
  assume {:verifier.code 0} true;
  $i233 := $or.i64($i230,$i232);
  $i233.dup := $or.i1($i230.dup,$i232.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 26} true;
  assume {:verifier.code 0} true;
  $i234 := $trunc.i64.i8($i233);
  $i234.dup := $i233.dup;
  call {:cexpr "b"} boogie_si_record_i8($i234);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 73} true;
  assume {:verifier.code 0} true;
  $i225 := $i234;
  $i225.dup := 0;
  goto $bb46;
$bb45:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 157, 11} true;
  assume {:verifier.code 0} true;
  assume !($i224 == 1);
  goto $bb46;
$bb46:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 159, 7} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i90);
  $i235.dup := $i90.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 159, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p236 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i235,1));
  $p236.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i235.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 159, 18} true;
  assume {:verifier.code 0} true;
  $p236.dup := 0;
  $M.11 := $store.i8($M.11,$p236,$i225);
  $M.11.dup := $store.i1($M.11.dup,$p236,$i225.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 160, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 128, 32} true;
  assume {:verifier.code 0} true;
  $i237 := $add.i32($i90,1);
  $i237.dup := $or.i1($i90.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i237);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 128, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $i237;
  $i90.dup := 0;
  goto $bb20;
$bb48:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:unlikely_shadow_invariant ($i11.dup == 0)} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 168, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i242,32);
  $i243.dup := $or.i1($i242.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 168, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  $i243.dup := 0;
  goto $bb49, $bb50;
$bb49:
  assume ($i243 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 26} true;
  assume {:verifier.code 0} true;
  $i244 := $sext.i32.i64($i242);
  $i244.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 26} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($add.ref($p6,$mul.ref(0,32)),$mul.ref($i244,1));
  $p245.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1($i244.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 26} true;
  assume {:verifier.code 0} true;
  $p245.dup := 0;
  $i246 := $load.i8($M.11,$p245);
  $i246.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 26} true;
  assume {:verifier.code 0} true;
  $i247 := $zext.i8.i32($i246);
  $i247.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 42} true;
  assume {:verifier.code 0} true;
  $i248 := $zext.i8.i32($i89);
  $i248.dup := $i89.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 40} true;
  assume {:verifier.code 0} true;
  $i249 := $and.i32($i247,$i248);
  $i249.dup := $or.i1($i247.dup,$i248.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 7} true;
  assume {:verifier.code 0} true;
  $i250 := $sext.i32.i64($i242);
  $i250.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p251 := $add.ref($add.ref($p5,$mul.ref(0,32)),$mul.ref($i250,1));
  $p251.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i250.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 23} true;
  assume {:verifier.code 0} true;
  $p251.dup := 0;
  $i252 := $load.i8($M.26,$p251);
  $i252.dup := $load.i1($M.26.dup,$p251);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 23} true;
  assume {:verifier.code 0} true;
  $i253 := $zext.i8.i32($i252);
  $i253.dup := $i252.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 23} true;
  assume {:verifier.code 0} true;
  $i254 := $or.i32($i253,$i249);
  $i254.dup := $or.i1($i253.dup,$i249.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 23} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i32.i8($i254);
  $i255.dup := $i254.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 169, 23} true;
  assume {:verifier.code 0} true;
  $p251.dup := 0;
  $M.26 := $store.i8($M.26,$p251,$i255);
  $M.26.dup := $store.i1($M.26.dup,$p251,$i255.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 170, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !($i243 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 171, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 168, 34} true;
  assume {:verifier.code 0} true;
  $i256 := $add.i32($i242,1);
  $i256.dup := $or.i1($i242.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i256);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $i256;
  $i242.dup := 0;
  goto $bb48;
$bb52:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 123, 43} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i70,1);
  $i257.dup := $or.i1($i70.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i257);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 123, 3} true;
  assume {:verifier.code 0} true;
  $i70 := $i257;
  $i70.dup := 0;
  $p71 := $p238;
  $p71.dup := 0;
  goto $bb17;
$bb53:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 175, 16} true;
  assume {:verifier.code 0} true;
  $i259 := $slt.i32($i258,32);
  $i259.dup := $or.i1($i258.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 175, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i259} true;
  $i259.dup := 0;
  goto $bb54, $bb55;
$bb54:
  assume ($i259 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 18} true;
  assume {:verifier.code 0} true;
  $i260 := $sext.i32.i64($i258);
  $i260.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 18} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p261 := $add.ref($p4,$mul.ref($i260,1));
  $p261.dup := $or.i1($p4.dup,$or.i1($i260.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 18} true;
  assume {:verifier.code 0} true;
  $p261.dup := 0;
  $i262 := $load.i8($M.25,$p261);
  $i262.dup := $load.i1($M.25.dup,$p261);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 18} true;
  assume {:verifier.code 0} true;
  $i263 := $zext.i8.i32($i262);
  $i263.dup := $i262.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 23} true;
  assume {:verifier.code 0} true;
  $i264 := $xor.i32($i263,92);
  $i264.dup := $or.i1($i263.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 18} true;
  assume {:verifier.code 0} true;
  $i265 := $trunc.i32.i8($i264);
  $i265.dup := $i264.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i266 := $sext.i32.i64($i258);
  $i266.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p267 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i266,1));
  $p267.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i266.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 176, 16} true;
  assume {:verifier.code 0} true;
  $p267.dup := 0;
  $M.11 := $store.i8($M.11,$p267,$i265);
  $M.11.dup := $store.i1($M.11.dup,$p267,$i265.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 177, 3} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !($i259 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 178, 3} true;
  assume {:verifier.code 0} true;
  $i269 := $i258;
  $i269.dup := 0;
  goto $bb57;
$bb56:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 175, 32} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i258,1);
  $i268.dup := $or.i1($i258.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i268);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 175, 3} true;
  assume {:verifier.code 0} true;
  $i258 := $i268;
  $i258.dup := 0;
  goto $bb53;
$bb57:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 178, 11} true;
  assume {:verifier.code 0} true;
  $i270 := $slt.i32($i269,64);
  $i270.dup := $or.i1($i269.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 178, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i270} true;
  $i270.dup := 0;
  goto $bb58, $bb59;
$bb58:
  assume ($i270 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $sext.i32.i64($i269);
  $i271.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $p272 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i271,1));
  $p272.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i271.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 179, 16} true;
  assume {:verifier.code 0} true;
  $p272.dup := 0;
  $M.11 := $store.i8($M.11,$p272,92);
  $M.11.dup := $store.i1($M.11.dup,$p272,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 180, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume !($i270 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 181, 8} true;
  assume {:verifier.code 0} true;
  $i274 := 0;
  $i274.dup := 0;
  goto $bb61;
$bb60:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 178, 25} true;
  assume {:verifier.code 0} true;
  $i273 := $add.i32($i269,1);
  $i273.dup := $or.i1($i269.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i273);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 178, 3} true;
  assume {:verifier.code 0} true;
  $i269 := $i273;
  $i269.dup := 0;
  goto $bb57;
$bb61:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 181, 16} true;
  assume {:verifier.code 0} true;
  $i275 := $slt.i32($i274,32);
  $i275.dup := $or.i1($i274.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 181, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  $i275.dup := 0;
  goto $bb62, $bb63;
$bb62:
  assume ($i275 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 182, 14} true;
  assume {:verifier.code 0} true;
  $i276 := $sext.i32.i64($i274);
  $i276.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 182, 14} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref($i276,1));
  $p277.dup := $or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1($i276.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 182, 14} true;
  assume {:verifier.code 0} true;
  $p277.dup := 0;
  $i278 := $load.i8($M.24,$p277);
  $i278.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i32.i64($i274);
  $i279.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p0,$mul.ref($i279,1));
  $p280.dup := $or.i1($p0.dup,$or.i1($i279.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 182, 12} true;
  assume {:verifier.code 0} true;
  $p280.dup := 0;
  $M.11 := $store.i8($M.11,$p280,$i278);
  $M.11.dup := $store.i1($M.11.dup,$p280,$i278.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 183, 3} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume !($i275 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 184, 25} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref(0,1));
  $p282.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 184, 3} true;
  assume {:verifier.code 0} true;
  call $i283, $i283.dup := crypto_hashblocks($p0, $p0.dup, $p282, $p282.dup, 64, 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 185, 8} true;
  assume {:verifier.code 0} true;
  $i284 := 0;
  $i284.dup := 0;
  goto $bb65;
$bb64:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 181, 32} true;
  assume {:verifier.code 0} true;
  $i281 := $add.i32($i274,1);
  $i281.dup := $or.i1($i274.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i281);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 181, 3} true;
  assume {:verifier.code 0} true;
  $i274 := $i281;
  $i274.dup := 0;
  goto $bb61;
$bb65:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 185, 16} true;
  assume {:verifier.code 0} true;
  $i285 := $slt.i32($i284,32);
  $i285.dup := $or.i1($i284.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 185, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i285} true;
  $i285.dup := 0;
  goto $bb66, $bb67;
$bb66:
  assume ($i285 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 186, 18} true;
  assume {:verifier.code 0} true;
  $i286 := $sext.i32.i64($i284);
  $i286.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 186, 18} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($add.ref($p5,$mul.ref(0,32)),$mul.ref($i286,1));
  $p287.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i286.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 186, 18} true;
  assume {:verifier.code 0} true;
  $p287.dup := 0;
  $i288 := $load.i8($M.26,$p287);
  $i288.dup := $load.i1($M.26.dup,$p287);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i32.i64($i284);
  $i289.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 186, 5} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p290 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i289,1));
  $p290.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i289.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 186, 16} true;
  assume {:verifier.code 0} true;
  $p290.dup := 0;
  $M.11 := $store.i8($M.11,$p290,$i288);
  $M.11.dup := $store.i1($M.11.dup,$p290,$i288.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 187, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !($i285 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 188, 3} true;
  assume {:verifier.code 0} true;
  $i292 := $i284;
  $i292.dup := 0;
  goto $bb69;
$bb68:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 185, 32} true;
  assume {:verifier.code 0} true;
  $i291 := $add.i32($i284,1);
  $i291.dup := $or.i1($i284.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i291);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 185, 3} true;
  assume {:verifier.code 0} true;
  $i284 := $i291;
  $i284.dup := 0;
  goto $bb65;
$bb69:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 188, 11} true;
  assume {:verifier.code 0} true;
  $i293 := $slt.i32($i292,64);
  $i293.dup := $or.i1($i292.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 188, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i293} true;
  $i293.dup := 0;
  goto $bb70, $bb71;
$bb70:
  assume ($i293 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $sext.i32.i64($i292);
  $i294.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref($i294,1));
  $p295.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i294.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 189, 16} true;
  assume {:verifier.code 0} true;
  $p295.dup := 0;
  $M.11 := $store.i8($M.11,$p295,0);
  $M.11.dup := $store.i1($M.11.dup,$p295,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 190, 3} true;
  assume {:verifier.code 0} true;
  goto $bb72;
$bb71:
  assume !($i293 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 191, 3} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref(32,1));
  $p297.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 191, 15} true;
  assume {:verifier.code 0} true;
  $p297.dup := 0;
  $M.11 := $store.i8($M.11,$p297,$sub.i8(0,128));
  $M.11.dup := $store.i1($M.11.dup,$p297,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 192, 3} true;
  assume {:verifier.code 0} true;
  $p298 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref(62,1));
  $p298.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 192, 15} true;
  assume {:verifier.code 0} true;
  $p298.dup := 0;
  $M.11 := $store.i8($M.11,$p298,3);
  $M.11.dup := $store.i1($M.11.dup,$p298,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 193, 25} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($add.ref($p7,$mul.ref(0,64)),$mul.ref(0,1));
  $p299.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 193, 3} true;
  assume {:verifier.code 0} true;
  call $i300, $i300.dup := crypto_hashblocks($p0, $p0.dup, $p299, $p299.dup, 64, 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 194, 3} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb72:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 188, 25} true;
  assume {:verifier.code 0} true;
  $i296 := $add.i32($i292,1);
  $i296.dup := $or.i1($i292.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i296);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 188, 3} true;
  assume {:verifier.code 0} true;
  $i292 := $i296;
  $i292.dup := 0;
  goto $bb69;
}
const crypto_auth_verify: ref;
axiom (crypto_auth_verify == $sub.ref(0,16536));
procedure {:inline 1} crypto_auth_verify($p0: ref, $p0.dup: i1, $i1: i64, $i1.dup: i1, $i2: i64, $i2.dup: i1, $p3: ref, $p3.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $M.11, $M.27, $exn;
modifies $M.26, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23;
modifies $CurrAddr;
{
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i1;
  var $i8.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i8;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i1;
  var $i16.dup: i1;
  var $i17: i64;
  var $i17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i64;
  var $i21.dup: i1;
  var $i22: i1;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $i24: i1;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i32;
  var $i30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i32;
  var $i32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $i35: i32;
  var $i35.dup: i1;
  var $i36: i8;
  var $i36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $i38: i32;
  var $i38.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $i41: i32;
  var $i41.dup: i1;
  var $i42: i32;
  var $i42.dup: i1;
  var $i43: i32;
  var $i43.dup: i1;
  var $i44: i32;
  var $i44.dup: i1;
  var $i45: i32;
  var $i45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i32;
  var $i47.dup: i1;
  var $i48: i8;
  var $i48.dup: i1;
  var $i49: i32;
  var $i49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $i51: i1;
  var $i51.dup: i1;
  var $i53: i32;
  var $i53.dup: i1;
  var $i54: i64;
  var $i54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $i56: i8;
  var $i56.dup: i1;
  var $i52: i8;
  var $i52.dup: i1;
  var $i57: i32;
  var $i57.dup: i1;
  var $i58: i32;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $i61: i32;
  var $i61.dup: i1;
  var $i62: i32;
  var $i62.dup: i1;
  var $i63: i64;
  var $i63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $i65: i8;
  var $i65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i67: i32;
  var $i67.dup: i1;
  var $i68: i8;
  var $i68.dup: i1;
  var $i69: i32;
  var $i69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $i72: i1;
  var $i72.dup: i1;
  var $i73: i64;
  var $i73.dup: i1;
  var $p74: ref;
  var $p74.dup: i1;
  var $i75: i32;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $i77: i1;
  var $i77.dup: i1;
  var $i78: i32;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $i81: i32;
  var $i81.dup: i1;
  var $i82: i8;
  var $i82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i1;
  var $i84.dup: i1;
  var $i85: i64;
  var $i85.dup: i1;
  var $p86: ref;
  var $p86.dup: i1;
  var $i87: i8;
  var $i87.dup: i1;
  var $i88: i32;
  var $i88.dup: i1;
  var $i89: i32;
  var $i89.dup: i1;
  var $i90: i32;
  var $i90.dup: i1;
  var $i91: i32;
  var $i91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $i93: i32;
  var $i93.dup: i1;
  var $i94: i32;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i32;
  var $i97.dup: i1;
  var $i98: i8;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $i100: i32;
  var $i100.dup: i1;
  var $i101: i64;
  var $i101.dup: i1;
  var $p102: ref;
  var $p102.dup: i1;
  var $i103: i8;
  var $i103.dup: i1;
  var $i104: i32;
  var $i104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $i106: i8;
  var $i106.dup: i1;
  var $i107: i32;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $p109: ref;
  var $p109.dup: i1;
  var $i110: i32;
  var $i110.dup: i1;
  var $p111: ref;
  var $p111.dup: i1;
  var $p112: ref;
  var $p112.dup: i1;
  var $i113: i32;
  var $i113.dup: i1;
  var $i114: i32;
  var $i114.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 207, 26} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  $p4.dup := 0;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  $p5.dup := 0;
  call {:cexpr "crypto_auth_verify:arg:publen"} boogie_si_record_i64($i1);
  call {:cexpr "crypto_auth_verify:arg:inlen"} boogie_si_record_i64($i2);
  assume true;
  assume true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 207, 26} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i2);
  $i6.dup := $i2.dup;
  call {:cexpr "mac_end"} boogie_si_record_i32($i6);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 208, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i6,32);
  $i7.dup := $or.i1($i6.dup,0);
  call {:cexpr "mac_start"} boogie_si_record_i32($i7);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 213, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $ugt.i64($i1,288);
  $i8.dup := $or.i1($i1.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 213, 7} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  $i9.dup := 0;
  assume {:branchcond $i8} true;
  $i8.dup := 0;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 214, 25} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64($i1,288);
  $i10.dup := $or.i1($i1.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 214, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  $i11.dup := 0;
  call {:cexpr "scan_start"} boogie_si_record_i32($i11);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 215, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i11;
  $i9.dup := 0;
  goto $bb3;
$bb2:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 213, 7} true;
  assume {:verifier.code 0} true;
  assume !($i8 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 218, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32($i7,$i9);
  $i12.dup := $or.i1($i7.dup,$i9.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 218, 44} true;
  assume {:verifier.code 0} true;
  $i13 := $urem.i32($i12,32);
  $i13.dup := $or.i1($i12.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 218, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  $i14.dup := $i13.dup;
  call {:cexpr "rotate_offset"} boogie_si_record_i8($i14);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 221, 8} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  $i15.dup := 0;
  goto $bb4;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 221, 16} true;
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15,32);
  $i16.dup := $or.i1($i15.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 221, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  $i16.dup := 0;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 222, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i15);
  $i17.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 222, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4,$mul.ref(0,32)),$mul.ref($i17,1));
  $p18.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i17.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 222, 16} true;
  assume {:verifier.code 0} true;
  $p18.dup := 0;
  $M.11 := $store.i8($M.11,$p18,0);
  $M.11.dup := $store.i1($M.11.dup,$p18,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 223, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i16 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 226, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $i9;
  $i20.dup := 0;
  goto $bb8;
$bb7:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 221, 32} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i15,1);
  $i19.dup := $or.i1($i15.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i19);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 221, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i19;
  $i15.dup := 0;
  goto $bb4;
$bb8:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 226, 23} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i20);
  $i21.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 226, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $ult.i64($i21,$i1);
  $i22.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 226, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  $i22.dup := 0;
  goto $bb9, $bb10;
$bb9:
  assume ($i22 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 227, 10} true;
  assume {:verifier.code 0} true;
  $i23 := 0;
  $i23.dup := 0;
  goto $bb11;
$bb10:
  assume !($i22 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 239, 8} true;
  assume {:verifier.code 0} true;
  $i71 := 0;
  $i71.dup := 0;
  goto $bb19;
$bb11:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 227, 18} true;
  assume {:verifier.code 0} true;
  $i24 := $slt.i32($i23,32);
  $i24.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 227, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  $i24.dup := 0;
  goto $bb12, $bb13;
$bb12:
  assume ($i24 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i20,$i23);
  $i25.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i20,$i23);
  $i26.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i27 := $xor.i32($i26,$i7);
  $i27.dup := $or.i1($i26.dup,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i20,$i23);
  $i28.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32($i28,$i7);
  $i29.dup := $or.i1($i28.dup,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i30 := $xor.i32($i29,$i7);
  $i30.dup := $or.i1($i29.dup,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $or.i32($i27,$i30);
  $i31.dup := $or.i1($i27.dup,$i30.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i32 := $lshr.i32($i31,31);
  $i32.dup := $or.i1($i31.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i33 := $xor.i32($i25,$i32);
  $i33.dup := $or.i1($i25.dup,$i32.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0,$i33);
  $i34.dup := $or.i1(0,$i33.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i35 := $xor.i32($i34,$sub.i32(0,1));
  $i35.dup := $or.i1($i34.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 228, 35} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i8($i35);
  $i36.dup := $i35.dup;
  call {:cexpr "mac_started"} boogie_si_record_i8($i36);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i32($i20,$i23);
  $i37.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i20,$i23);
  $i38.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i39 := $xor.i32($i38,$i6);
  $i39.dup := $or.i1($i38.dup,$i6.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i20,$i23);
  $i40.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i41 := $sub.i32($i40,$i6);
  $i41.dup := $or.i1($i40.dup,$i6.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i42 := $xor.i32($i41,$i6);
  $i42.dup := $or.i1($i41.dup,$i6.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i43 := $or.i32($i39,$i42);
  $i43.dup := $or.i1($i39.dup,$i42.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i44 := $lshr.i32($i43,31);
  $i44.dup := $or.i1($i43.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i45 := $xor.i32($i37,$i44);
  $i45.dup := $or.i1($i37.dup,$i44.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i46 := $sub.i32(0,$i45);
  $i46.dup := $or.i1(0,$i45.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i47 := $xor.i32($i46,$sub.i32(0,1));
  $i47.dup := $or.i1($i46.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 229, 35} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  $i48.dup := $i47.dup;
  call {:cexpr "mac_ended"} boogie_si_record_i8($i48);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 231, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i20,$i23);
  $i49.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 231, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  $i50.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 231, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $ult.i64($i50,$i1);
  $i51.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 231, 11} true;
  assume {:verifier.code 0} true;
  $i52 := 0;
  $i52.dup := 0;
  assume {:branchcond $i51} true;
  $i51.dup := 0;
  goto $bb14, $bb15;
$bb13:
  assume !($i24 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb14:
  assume ($i51 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 232, 18} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i20,$i23);
  $i53.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 232, 13} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  $i54.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 232, 13} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p55 := $add.ref($p0,$mul.ref($i54,1));
  $p55.dup := $or.i1($p0.dup,$or.i1($i54.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 232, 13} true;
  assume {:verifier.code 0} true;
  $p55.dup := 0;
  $i56 := $load.i8($M.11,$p55);
  $i56.dup := $load.i1($M.11.dup,$p55);
  call {:cexpr "b"} boogie_si_record_i8($i56);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $i56;
  $i52.dup := 0;
  goto $bb16;
$bb15:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 231, 11} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb16;
$bb16:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 21} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i52);
  $i57.dup := $i52.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i32($i36);
  $i58.dup := $i36.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 23} true;
  assume {:verifier.code 0} true;
  $i59 := $and.i32($i57,$i58);
  $i59.dup := $or.i1($i57.dup,$i58.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 40} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i48);
  $i60.dup := $i48.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 39} true;
  assume {:verifier.code 0} true;
  $i61 := $xor.i32($i60,$sub.i32(0,1));
  $i61.dup := $or.i1($i60.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 37} true;
  assume {:verifier.code 0} true;
  $i62 := $and.i32($i59,$i61);
  $i62.dup := $or.i1($i59.dup,$i61.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $sext.i32.i64($i23);
  $i63.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p64 := $add.ref($add.ref($p4,$mul.ref(0,32)),$mul.ref($i63,1));
  $p64.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i63.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 18} true;
  assume {:verifier.code 0} true;
  $p64.dup := 0;
  $i65 := $load.i8($M.11,$p64);
  $i65.dup := $load.i1($M.11.dup,$p64);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 18} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  $i66.dup := $i65.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 18} true;
  assume {:verifier.code 0} true;
  $i67 := $or.i32($i66,$i62);
  $i67.dup := $or.i1($i66.dup,$i62.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 18} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i8($i67);
  $i68.dup := $i67.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 234, 18} true;
  assume {:verifier.code 0} true;
  $p64.dup := 0;
  $M.11 := $store.i8($M.11,$p64,$i68);
  $M.11.dup := $store.i1($M.11.dup,$p64,$i68.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 235, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 227, 34} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i23,1);
  $i69.dup := $or.i1($i23.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i69);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 227, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $i69;
  $i23.dup := 0;
  goto $bb11;
$bb18:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 226, 36} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i32($i20,32);
  $i70.dup := $or.i1($i20.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i70);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 226, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i70;
  $i20.dup := 0;
  goto $bb8;
$bb19:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 239, 16} true;
  assume {:verifier.code 0} true;
  $i72 := $slt.i32($i71,32);
  $i72.dup := $or.i1($i71.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 239, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  $i72.dup := 0;
  goto $bb20, $bb21;
$bb20:
  assume ($i72 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i71);
  $i73.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p5,$mul.ref(0,32)),$mul.ref($i73,1));
  $p74.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i73.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 240, 12} true;
  assume {:verifier.code 0} true;
  $p74.dup := 0;
  $M.27 := $store.i8($M.27,$p74,0);
  $M.27.dup := $store.i1($M.27.dup,$p74,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 241, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !($i72 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 242, 8} true;
  assume {:verifier.code 0} true;
  $i76 := 0;
  $i76.dup := 0;
  goto $bb23;
$bb22:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 239, 32} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i32($i71,1);
  $i75.dup := $or.i1($i71.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i75);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 239, 3} true;
  assume {:verifier.code 0} true;
  $i71 := $i75;
  $i71.dup := 0;
  goto $bb19;
$bb23:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 242, 16} true;
  assume {:verifier.code 0} true;
  $i77 := $slt.i32($i76,32);
  $i77.dup := $or.i1($i76.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 242, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  $i77.dup := 0;
  goto $bb24, $bb25;
$bb24:
  assume ($i77 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 243, 44} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i14);
  $i78.dup := $i14.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 243, 42} true;
  assume {:verifier.code 0} true;
  $i79 := $sub.i32(32,$i78);
  $i79.dup := $or.i1(0,$i78.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 243, 58} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i76);
  $i80.dup := $or.i1($i79.dup,$i76.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 243, 63} true;
  assume {:verifier.code 0} true;
  $i81 := $srem.i32($i80,32);
  $i81.dup := $or.i1($i80.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 243, 28} true;
  assume {:verifier.code 0} true;
  $i82 := $trunc.i32.i8($i81);
  $i82.dup := $i81.dup;
  call {:cexpr "offset"} boogie_si_record_i8($i82);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 244, 10} true;
  assume {:verifier.code 0} true;
  $i83 := 0;
  $i83.dup := 0;
  goto $bb26;
$bb25:
  assume !($i77 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 249, 18} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p4,$mul.ref(0,32)),$mul.ref(0,1));
  $p109.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 249, 3} true;
  assume {:verifier.code 0} true;
  call $i110, $i110.dup := crypto_auth_ct($p109, $p109.dup, $p0, $p0.dup, $i1, $i1.dup, $i2, $i2.dup, $p3, $p3.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 250, 31} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($add.ref($p5,$mul.ref(0,32)),$mul.ref(0,1));
  $p111.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 250, 35} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p4,$mul.ref(0,32)),$mul.ref(0,1));
  $p112.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 250, 14} true;
  assume {:verifier.code 0} true;
  call $i113, $i113.dup := crypto_verify_32($p111, $p111.dup, $p112, $p112.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 250, 12} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i32(1,$i113);
  $i114.dup := $or.i1(0,$i113.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $r := $i114;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb26:
  assert {:shadow_invariant} $shadow_ok;
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 244, 18} true;
  assume {:verifier.code 0} true;
  $i84 := $slt.i32($i83,32);
  $i84.dup := $or.i1($i83.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 244, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  $i84.dup := 0;
  goto $bb27, $bb28;
$bb27:
  assume ($i84 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i76);
  $i85.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 17} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p4,$mul.ref(0,32)),$mul.ref($i85,1));
  $p86.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1($i85.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 17} true;
  assume {:verifier.code 0} true;
  $p86.dup := 0;
  $i87 := $load.i8($M.11,$p86);
  $i87.dup := $load.i1($M.11.dup,$p86);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 17} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i32($i87);
  $i88.dup := $i87.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i89 := $xor.i32($i83,$sub.i32(0,1));
  $i89.dup := $or.i1($i83.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i82);
  $i90.dup := $i82.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i82);
  $i91.dup := $i82.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i92 := $sub.i32($i91,1);
  $i92.dup := $or.i1($i91.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i93 := $xor.i32($i83,$i92);
  $i93.dup := $or.i1($i83.dup,$i92.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i94 := $ashr.i32($i93,31);
  $i94.dup := $or.i1($i93.dup,0);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i95 := $and.i32($i90,$i94);
  $i95.dup := $or.i1($i90.dup,$i94.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i96 := $xor.i32($i89,$i95);
  $i96.dup := $or.i1($i89.dup,$i95.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i97 := $sub.i32(0,$i96);
  $i97.dup := $or.i1(0,$i96.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i32.i8($i97);
  $i98.dup := $i97.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 30} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i8.i32($i98);
  $i99.dup := $i98.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 28} true;
  assume {:verifier.code 0} true;
  $i100 := $and.i32($i88,$i99);
  $i100.dup := $or.i1($i88.dup,$i99.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 7} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i32.i64($i83);
  $i101.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 7} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p102 := $add.ref($add.ref($p5,$mul.ref(0,32)),$mul.ref($i101,1));
  $p102.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1($i101.dup,0));
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 14} true;
  assume {:verifier.code 0} true;
  $p102.dup := 0;
  $i103 := $load.i8($M.27,$p102);
  $i103.dup := $load.i1($M.27.dup,$p102);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 14} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i8.i32($i103);
  $i104.dup := $i103.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 14} true;
  assume {:verifier.code 0} true;
  $i105 := $or.i32($i104,$i100);
  $i105.dup := $or.i1($i104.dup,$i100.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 14} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i8($i105);
  $i106.dup := $i105.dup;
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 245, 14} true;
  assume {:verifier.code 0} true;
  $p102.dup := 0;
  $M.27 := $store.i8($M.27,$p102,$i106);
  $M.27.dup := $store.i1($M.27.dup,$p102,$i106.dup);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 246, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !($i84 == 1);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 247, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 244, 34} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i83,1);
  $i107.dup := $or.i1($i83.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i107);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 244, 5} true;
  assume {:verifier.code 0} true;
  $i83 := $i107;
  $i83.dup := 0;
  goto $bb26;
$bb30:
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 242, 32} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i32($i76,1);
  $i108.dup := $or.i1($i76.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i108);
  assume {:sourceloc "../mac-then-encrypt/hmac.c", 242, 3} true;
  assume {:verifier.code 0} true;
  $i76 := $i108;
  $i76.dup := 0;
  goto $bb23;
}
const crypto_verify_32: ref;
axiom (crypto_verify_32 == $sub.ref(0,17568));
procedure {:inline 1} crypto_verify_32($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $i3: i8;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i8;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i8;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $i14: i8;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i32;
  var $i17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $i19: i8;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $i22: i8;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i8;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $p29: ref;
  var $p29.dup: i1;
  var $i30: i8;
  var $i30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i32;
  var $i32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $i35: i8;
  var $i35.dup: i1;
  var $i36: i32;
  var $i36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $i38: i8;
  var $i38.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $i41: i32;
  var $i41.dup: i1;
  var $p42: ref;
  var $p42.dup: i1;
  var $i43: i8;
  var $i43.dup: i1;
  var $i44: i32;
  var $i44.dup: i1;
  var $p45: ref;
  var $p45.dup: i1;
  var $i46: i8;
  var $i46.dup: i1;
  var $i47: i32;
  var $i47.dup: i1;
  var $i48: i32;
  var $i48.dup: i1;
  var $i49: i32;
  var $i49.dup: i1;
  var $p50: ref;
  var $p50.dup: i1;
  var $i51: i8;
  var $i51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $i54: i8;
  var $i54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i32;
  var $i56.dup: i1;
  var $i57: i32;
  var $i57.dup: i1;
  var $p58: ref;
  var $p58.dup: i1;
  var $i59: i8;
  var $i59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $i62: i8;
  var $i62.dup: i1;
  var $i63: i32;
  var $i63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $i65: i32;
  var $i65.dup: i1;
  var $p66: ref;
  var $p66.dup: i1;
  var $i67: i8;
  var $i67.dup: i1;
  var $i68: i32;
  var $i68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $i70: i8;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $i72: i32;
  var $i72.dup: i1;
  var $i73: i32;
  var $i73.dup: i1;
  var $p74: ref;
  var $p74.dup: i1;
  var $i75: i8;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $p77: ref;
  var $p77.dup: i1;
  var $i78: i8;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $i81: i32;
  var $i81.dup: i1;
  var $p82: ref;
  var $p82.dup: i1;
  var $i83: i8;
  var $i83.dup: i1;
  var $i84: i32;
  var $i84.dup: i1;
  var $p85: ref;
  var $p85.dup: i1;
  var $i86: i8;
  var $i86.dup: i1;
  var $i87: i32;
  var $i87.dup: i1;
  var $i88: i32;
  var $i88.dup: i1;
  var $i89: i32;
  var $i89.dup: i1;
  var $p90: ref;
  var $p90.dup: i1;
  var $i91: i8;
  var $i91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $p93: ref;
  var $p93.dup: i1;
  var $i94: i8;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i32;
  var $i96.dup: i1;
  var $i97: i32;
  var $i97.dup: i1;
  var $p98: ref;
  var $p98.dup: i1;
  var $i99: i8;
  var $i99.dup: i1;
  var $i100: i32;
  var $i100.dup: i1;
  var $p101: ref;
  var $p101.dup: i1;
  var $i102: i8;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $i104: i32;
  var $i104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $p106: ref;
  var $p106.dup: i1;
  var $i107: i8;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $p109: ref;
  var $p109.dup: i1;
  var $i110: i8;
  var $i110.dup: i1;
  var $i111: i32;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $i113: i32;
  var $i113.dup: i1;
  var $p114: ref;
  var $p114.dup: i1;
  var $i115: i8;
  var $i115.dup: i1;
  var $i116: i32;
  var $i116.dup: i1;
  var $p117: ref;
  var $p117.dup: i1;
  var $i118: i8;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $i121: i32;
  var $i121.dup: i1;
  var $p122: ref;
  var $p122.dup: i1;
  var $i123: i8;
  var $i123.dup: i1;
  var $i124: i32;
  var $i124.dup: i1;
  var $p125: ref;
  var $p125.dup: i1;
  var $i126: i8;
  var $i126.dup: i1;
  var $i127: i32;
  var $i127.dup: i1;
  var $i128: i32;
  var $i128.dup: i1;
  var $i129: i32;
  var $i129.dup: i1;
  var $p130: ref;
  var $p130.dup: i1;
  var $i131: i8;
  var $i131.dup: i1;
  var $i132: i32;
  var $i132.dup: i1;
  var $p133: ref;
  var $p133.dup: i1;
  var $i134: i8;
  var $i134.dup: i1;
  var $i135: i32;
  var $i135.dup: i1;
  var $i136: i32;
  var $i136.dup: i1;
  var $i137: i32;
  var $i137.dup: i1;
  var $p138: ref;
  var $p138.dup: i1;
  var $i139: i8;
  var $i139.dup: i1;
  var $i140: i32;
  var $i140.dup: i1;
  var $p141: ref;
  var $p141.dup: i1;
  var $i142: i8;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i32;
  var $i144.dup: i1;
  var $i145: i32;
  var $i145.dup: i1;
  var $p146: ref;
  var $p146.dup: i1;
  var $i147: i8;
  var $i147.dup: i1;
  var $i148: i32;
  var $i148.dup: i1;
  var $p149: ref;
  var $p149.dup: i1;
  var $i150: i8;
  var $i150.dup: i1;
  var $i151: i32;
  var $i151.dup: i1;
  var $i152: i32;
  var $i152.dup: i1;
  var $i153: i32;
  var $i153.dup: i1;
  var $p154: ref;
  var $p154.dup: i1;
  var $i155: i8;
  var $i155.dup: i1;
  var $i156: i32;
  var $i156.dup: i1;
  var $p157: ref;
  var $p157.dup: i1;
  var $i158: i8;
  var $i158.dup: i1;
  var $i159: i32;
  var $i159.dup: i1;
  var $i160: i32;
  var $i160.dup: i1;
  var $i161: i32;
  var $i161.dup: i1;
  var $p162: ref;
  var $p162.dup: i1;
  var $i163: i8;
  var $i163.dup: i1;
  var $i164: i32;
  var $i164.dup: i1;
  var $p165: ref;
  var $p165.dup: i1;
  var $i166: i8;
  var $i166.dup: i1;
  var $i167: i32;
  var $i167.dup: i1;
  var $i168: i32;
  var $i168.dup: i1;
  var $i169: i32;
  var $i169.dup: i1;
  var $p170: ref;
  var $p170.dup: i1;
  var $i171: i8;
  var $i171.dup: i1;
  var $i172: i32;
  var $i172.dup: i1;
  var $p173: ref;
  var $p173.dup: i1;
  var $i174: i8;
  var $i174.dup: i1;
  var $i175: i32;
  var $i175.dup: i1;
  var $i176: i32;
  var $i176.dup: i1;
  var $i177: i32;
  var $i177.dup: i1;
  var $p178: ref;
  var $p178.dup: i1;
  var $i179: i8;
  var $i179.dup: i1;
  var $i180: i32;
  var $i180.dup: i1;
  var $p181: ref;
  var $p181.dup: i1;
  var $i182: i8;
  var $i182.dup: i1;
  var $i183: i32;
  var $i183.dup: i1;
  var $i184: i32;
  var $i184.dup: i1;
  var $i185: i32;
  var $i185.dup: i1;
  var $p186: ref;
  var $p186.dup: i1;
  var $i187: i8;
  var $i187.dup: i1;
  var $i188: i32;
  var $i188.dup: i1;
  var $p189: ref;
  var $p189.dup: i1;
  var $i190: i8;
  var $i190.dup: i1;
  var $i191: i32;
  var $i191.dup: i1;
  var $i192: i32;
  var $i192.dup: i1;
  var $i193: i32;
  var $i193.dup: i1;
  var $p194: ref;
  var $p194.dup: i1;
  var $i195: i8;
  var $i195.dup: i1;
  var $i196: i32;
  var $i196.dup: i1;
  var $p197: ref;
  var $p197.dup: i1;
  var $i198: i8;
  var $i198.dup: i1;
  var $i199: i32;
  var $i199.dup: i1;
  var $i200: i32;
  var $i200.dup: i1;
  var $i201: i32;
  var $i201.dup: i1;
  var $p202: ref;
  var $p202.dup: i1;
  var $i203: i8;
  var $i203.dup: i1;
  var $i204: i32;
  var $i204.dup: i1;
  var $p205: ref;
  var $p205.dup: i1;
  var $i206: i8;
  var $i206.dup: i1;
  var $i207: i32;
  var $i207.dup: i1;
  var $i208: i32;
  var $i208.dup: i1;
  var $i209: i32;
  var $i209.dup: i1;
  var $p210: ref;
  var $p210.dup: i1;
  var $i211: i8;
  var $i211.dup: i1;
  var $i212: i32;
  var $i212.dup: i1;
  var $p213: ref;
  var $p213.dup: i1;
  var $i214: i8;
  var $i214.dup: i1;
  var $i215: i32;
  var $i215.dup: i1;
  var $i216: i32;
  var $i216.dup: i1;
  var $i217: i32;
  var $i217.dup: i1;
  var $p218: ref;
  var $p218.dup: i1;
  var $i219: i8;
  var $i219.dup: i1;
  var $i220: i32;
  var $i220.dup: i1;
  var $p221: ref;
  var $p221.dup: i1;
  var $i222: i8;
  var $i222.dup: i1;
  var $i223: i32;
  var $i223.dup: i1;
  var $i224: i32;
  var $i224.dup: i1;
  var $i225: i32;
  var $i225.dup: i1;
  var $p226: ref;
  var $p226.dup: i1;
  var $i227: i8;
  var $i227.dup: i1;
  var $i228: i32;
  var $i228.dup: i1;
  var $p229: ref;
  var $p229.dup: i1;
  var $i230: i8;
  var $i230.dup: i1;
  var $i231: i32;
  var $i231.dup: i1;
  var $i232: i32;
  var $i232.dup: i1;
  var $i233: i32;
  var $i233.dup: i1;
  var $p234: ref;
  var $p234.dup: i1;
  var $i235: i8;
  var $i235.dup: i1;
  var $i236: i32;
  var $i236.dup: i1;
  var $p237: ref;
  var $p237.dup: i1;
  var $i238: i8;
  var $i238.dup: i1;
  var $i239: i32;
  var $i239.dup: i1;
  var $i240: i32;
  var $i240.dup: i1;
  var $i241: i32;
  var $i241.dup: i1;
  var $p242: ref;
  var $p242.dup: i1;
  var $i243: i8;
  var $i243.dup: i1;
  var $i244: i32;
  var $i244.dup: i1;
  var $p245: ref;
  var $p245.dup: i1;
  var $i246: i8;
  var $i246.dup: i1;
  var $i247: i32;
  var $i247.dup: i1;
  var $i248: i32;
  var $i248.dup: i1;
  var $i249: i32;
  var $i249.dup: i1;
  var $p250: ref;
  var $p250.dup: i1;
  var $i251: i8;
  var $i251.dup: i1;
  var $i252: i32;
  var $i252.dup: i1;
  var $p253: ref;
  var $p253.dup: i1;
  var $i254: i8;
  var $i254.dup: i1;
  var $i255: i32;
  var $i255.dup: i1;
  var $i256: i32;
  var $i256.dup: i1;
  var $i257: i32;
  var $i257.dup: i1;
  var $i258: i32;
  var $i258.dup: i1;
  var $i259: i32;
  var $i259.dup: i1;
  var $i260: i32;
  var $i260.dup: i1;
  var $i261: i32;
  var $i261.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0,$mul.ref(0,1));
  $p2.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $p2.dup := 0;
  $i3 := $load.i8($M.27,$p2);
  $i3.dup := $load.i1($M.27.dup,$p2);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  $i4.dup := $i3.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1,$mul.ref(0,1));
  $p5.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $p5.dup := 0;
  $i6 := $load.i8($M.11,$p5);
  $i6.dup := $load.i1($M.11.dup,$p5);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  $i7.dup := $i6.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $xor.i32($i4,$i7);
  $i8.dup := $or.i1($i4.dup,$i7.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 7, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32(0,$i8);
  $i9.dup := $or.i1(0,$i8.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i9);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0,$mul.ref(1,1));
  $p10.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $p10.dup := 0;
  $i11 := $load.i8($M.27,$p10);
  $i11.dup := $load.i1($M.27.dup,$p10);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  $i12.dup := $i11.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1,$mul.ref(1,1));
  $p13.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $p13.dup := 0;
  $i14 := $load.i8($M.11,$p13);
  $i14.dup := $load.i1($M.11.dup,$p13);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  $i15.dup := $i14.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $xor.i32($i12,$i15);
  $i16.dup := $or.i1($i12.dup,$i15.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 8, 3} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i9,$i16);
  $i17.dup := $or.i1($i9.dup,$i16.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i17);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0,$mul.ref(2,1));
  $p18.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $p18.dup := 0;
  $i19 := $load.i8($M.27,$p18);
  $i19.dup := $load.i1($M.27.dup,$p18);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  $i20.dup := $i19.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1,$mul.ref(2,1));
  $p21.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $p21.dup := 0;
  $i22 := $load.i8($M.11,$p21);
  $i22.dup := $load.i1($M.11.dup,$p21);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  $i23.dup := $i22.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $xor.i32($i20,$i23);
  $i24.dup := $or.i1($i20.dup,$i23.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 9, 3} true;
  assume {:verifier.code 0} true;
  $i25 := $or.i32($i17,$i24);
  $i25.dup := $or.i1($i17.dup,$i24.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i25);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0,$mul.ref(3,1));
  $p26.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $p26.dup := 0;
  $i27 := $load.i8($M.27,$p26);
  $i27.dup := $load.i1($M.27.dup,$p26);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  $i28.dup := $i27.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1,$mul.ref(3,1));
  $p29.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $p29.dup := 0;
  $i30 := $load.i8($M.11,$p29);
  $i30.dup := $load.i1($M.11.dup,$p29);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i8.i32($i30);
  $i31.dup := $i30.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $xor.i32($i28,$i31);
  $i32.dup := $or.i1($i28.dup,$i31.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 10, 3} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i32($i25,$i32);
  $i33.dup := $or.i1($i25.dup,$i32.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i33);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0,$mul.ref(4,1));
  $p34.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $p34.dup := 0;
  $i35 := $load.i8($M.27,$p34);
  $i35.dup := $load.i1($M.27.dup,$p34);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  $i36.dup := $i35.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1,$mul.ref(4,1));
  $p37.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $p37.dup := 0;
  $i38 := $load.i8($M.11,$p37);
  $i38.dup := $load.i1($M.11.dup,$p37);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i38);
  $i39.dup := $i38.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $xor.i32($i36,$i39);
  $i40.dup := $or.i1($i36.dup,$i39.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 11, 3} true;
  assume {:verifier.code 0} true;
  $i41 := $or.i32($i33,$i40);
  $i41.dup := $or.i1($i33.dup,$i40.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i41);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0,$mul.ref(5,1));
  $p42.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $p42.dup := 0;
  $i43 := $load.i8($M.27,$p42);
  $i43.dup := $load.i1($M.27.dup,$p42);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  $i44.dup := $i43.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1,$mul.ref(5,1));
  $p45.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $p45.dup := 0;
  $i46 := $load.i8($M.11,$p45);
  $i46.dup := $load.i1($M.11.dup,$p45);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  $i47.dup := $i46.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $xor.i32($i44,$i47);
  $i48.dup := $or.i1($i44.dup,$i47.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 12, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $or.i32($i41,$i48);
  $i49.dup := $or.i1($i41.dup,$i48.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i49);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0,$mul.ref(6,1));
  $p50.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $p50.dup := 0;
  $i51 := $load.i8($M.27,$p50);
  $i51.dup := $load.i1($M.27.dup,$p50);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  $i52.dup := $i51.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1,$mul.ref(6,1));
  $p53.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $p53.dup := 0;
  $i54 := $load.i8($M.11,$p53);
  $i54.dup := $load.i1($M.11.dup,$p53);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i54);
  $i55.dup := $i54.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $i56 := $xor.i32($i52,$i55);
  $i56.dup := $or.i1($i52.dup,$i55.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 13, 3} true;
  assume {:verifier.code 0} true;
  $i57 := $or.i32($i49,$i56);
  $i57.dup := $or.i1($i49.dup,$i56.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i57);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0,$mul.ref(7,1));
  $p58.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $p58.dup := 0;
  $i59 := $load.i8($M.27,$p58);
  $i59.dup := $load.i1($M.27.dup,$p58);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  $i60.dup := $i59.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1,$mul.ref(7,1));
  $p61.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $p61.dup := 0;
  $i62 := $load.i8($M.11,$p61);
  $i62.dup := $load.i1($M.11.dup,$p61);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i62);
  $i63.dup := $i62.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $xor.i32($i60,$i63);
  $i64.dup := $or.i1($i60.dup,$i63.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 14, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $or.i32($i57,$i64);
  $i65.dup := $or.i1($i57.dup,$i64.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i65);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0,$mul.ref(8,1));
  $p66.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $p66.dup := 0;
  $i67 := $load.i8($M.27,$p66);
  $i67.dup := $load.i1($M.27.dup,$p66);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  $i68.dup := $i67.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p1,$mul.ref(8,1));
  $p69.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $p69.dup := 0;
  $i70 := $load.i8($M.11,$p69);
  $i70.dup := $load.i1($M.11.dup,$p69);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i8.i32($i70);
  $i71.dup := $i70.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $i72 := $xor.i32($i68,$i71);
  $i72.dup := $or.i1($i68.dup,$i71.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 15, 3} true;
  assume {:verifier.code 0} true;
  $i73 := $or.i32($i65,$i72);
  $i73.dup := $or.i1($i65.dup,$i72.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i73);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0,$mul.ref(9,1));
  $p74.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $p74.dup := 0;
  $i75 := $load.i8($M.27,$p74);
  $i75.dup := $load.i1($M.27.dup,$p74);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i8.i32($i75);
  $i76.dup := $i75.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p1,$mul.ref(9,1));
  $p77.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $p77.dup := 0;
  $i78 := $load.i8($M.11,$p77);
  $i78.dup := $load.i1($M.11.dup,$p77);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i8.i32($i78);
  $i79.dup := $i78.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $xor.i32($i76,$i79);
  $i80.dup := $or.i1($i76.dup,$i79.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i81 := $or.i32($i73,$i80);
  $i81.dup := $or.i1($i73.dup,$i80.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i81);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0,$mul.ref(10,1));
  $p82.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p82.dup := 0;
  $i83 := $load.i8($M.27,$p82);
  $i83.dup := $load.i1($M.27.dup,$p82);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  $i84.dup := $i83.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p1,$mul.ref(10,1));
  $p85.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p85.dup := 0;
  $i86 := $load.i8($M.11,$p85);
  $i86.dup := $load.i1($M.11.dup,$p85);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i8.i32($i86);
  $i87.dup := $i86.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i88 := $xor.i32($i84,$i87);
  $i88.dup := $or.i1($i84.dup,$i87.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i89 := $or.i32($i81,$i88);
  $i89.dup := $or.i1($i81.dup,$i88.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i89);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0,$mul.ref(11,1));
  $p90.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p90.dup := 0;
  $i91 := $load.i8($M.27,$p90);
  $i91.dup := $load.i1($M.27.dup,$p90);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i8.i32($i91);
  $i92.dup := $i91.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p1,$mul.ref(11,1));
  $p93.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p93.dup := 0;
  $i94 := $load.i8($M.11,$p93);
  $i94.dup := $load.i1($M.11.dup,$p93);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i94);
  $i95.dup := $i94.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $i96 := $xor.i32($i92,$i95);
  $i96.dup := $or.i1($i92.dup,$i95.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $i97 := $or.i32($i89,$i96);
  $i97.dup := $or.i1($i89.dup,$i96.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i97);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p0,$mul.ref(12,1));
  $p98.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $p98.dup := 0;
  $i99 := $load.i8($M.27,$p98);
  $i99.dup := $load.i1($M.27.dup,$p98);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i8.i32($i99);
  $i100.dup := $i99.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p1,$mul.ref(12,1));
  $p101.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $p101.dup := 0;
  $i102 := $load.i8($M.11,$p101);
  $i102.dup := $load.i1($M.11.dup,$p101);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32($i102);
  $i103.dup := $i102.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $i104 := $xor.i32($i100,$i103);
  $i104.dup := $or.i1($i100.dup,$i103.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 19, 3} true;
  assume {:verifier.code 0} true;
  $i105 := $or.i32($i97,$i104);
  $i105.dup := $or.i1($i97.dup,$i104.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i105);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0,$mul.ref(13,1));
  $p106.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $p106.dup := 0;
  $i107 := $load.i8($M.27,$p106);
  $i107.dup := $load.i1($M.27.dup,$p106);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $i108 := $zext.i8.i32($i107);
  $i108.dup := $i107.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p1,$mul.ref(13,1));
  $p109.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $p109.dup := 0;
  $i110 := $load.i8($M.11,$p109);
  $i110.dup := $load.i1($M.11.dup,$p109);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $i111 := $zext.i8.i32($i110);
  $i111.dup := $i110.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $i112 := $xor.i32($i108,$i111);
  $i112.dup := $or.i1($i108.dup,$i111.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 20, 3} true;
  assume {:verifier.code 0} true;
  $i113 := $or.i32($i105,$i112);
  $i113.dup := $or.i1($i105.dup,$i112.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i113);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0,$mul.ref(14,1));
  $p114.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $p114.dup := 0;
  $i115 := $load.i8($M.27,$p114);
  $i115.dup := $load.i1($M.27.dup,$p114);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.i8.i32($i115);
  $i116.dup := $i115.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p1,$mul.ref(14,1));
  $p117.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $p117.dup := 0;
  $i118 := $load.i8($M.11,$p117);
  $i118.dup := $load.i1($M.11.dup,$p117);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i118);
  $i119.dup := $i118.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $i120 := $xor.i32($i116,$i119);
  $i120.dup := $or.i1($i116.dup,$i119.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $i121 := $or.i32($i113,$i120);
  $i121.dup := $or.i1($i113.dup,$i120.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i121);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p0,$mul.ref(15,1));
  $p122.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $p122.dup := 0;
  $i123 := $load.i8($M.27,$p122);
  $i123.dup := $load.i1($M.27.dup,$p122);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $zext.i8.i32($i123);
  $i124.dup := $i123.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p1,$mul.ref(15,1));
  $p125.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $p125.dup := 0;
  $i126 := $load.i8($M.11,$p125);
  $i126.dup := $load.i1($M.11.dup,$p125);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i8.i32($i126);
  $i127.dup := $i126.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $i128 := $xor.i32($i124,$i127);
  $i128.dup := $or.i1($i124.dup,$i127.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 22, 3} true;
  assume {:verifier.code 0} true;
  $i129 := $or.i32($i121,$i128);
  $i129.dup := $or.i1($i121.dup,$i128.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i129);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0,$mul.ref(16,1));
  $p130.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $p130.dup := 0;
  $i131 := $load.i8($M.27,$p130);
  $i131.dup := $load.i1($M.27.dup,$p130);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i32($i131);
  $i132.dup := $i131.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p1,$mul.ref(16,1));
  $p133.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $p133.dup := 0;
  $i134 := $load.i8($M.11,$p133);
  $i134.dup := $load.i1($M.11.dup,$p133);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i8.i32($i134);
  $i135.dup := $i134.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $i136 := $xor.i32($i132,$i135);
  $i136.dup := $or.i1($i132.dup,$i135.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 23, 3} true;
  assume {:verifier.code 0} true;
  $i137 := $or.i32($i129,$i136);
  $i137.dup := $or.i1($i129.dup,$i136.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i137);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0,$mul.ref(17,1));
  $p138.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $p138.dup := 0;
  $i139 := $load.i8($M.27,$p138);
  $i139.dup := $load.i1($M.27.dup,$p138);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i8.i32($i139);
  $i140.dup := $i139.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p1,$mul.ref(17,1));
  $p141.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $p141.dup := 0;
  $i142 := $load.i8($M.11,$p141);
  $i142.dup := $load.i1($M.11.dup,$p141);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i8.i32($i142);
  $i143.dup := $i142.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i144 := $xor.i32($i140,$i143);
  $i144.dup := $or.i1($i140.dup,$i143.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i145 := $or.i32($i137,$i144);
  $i145.dup := $or.i1($i137.dup,$i144.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i145);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p0,$mul.ref(18,1));
  $p146.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $p146.dup := 0;
  $i147 := $load.i8($M.27,$p146);
  $i147.dup := $load.i1($M.27.dup,$p146);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $i148 := $zext.i8.i32($i147);
  $i148.dup := $i147.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p1,$mul.ref(18,1));
  $p149.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $p149.dup := 0;
  $i150 := $load.i8($M.11,$p149);
  $i150.dup := $load.i1($M.11.dup,$p149);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i8.i32($i150);
  $i151.dup := $i150.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $i152 := $xor.i32($i148,$i151);
  $i152.dup := $or.i1($i148.dup,$i151.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 25, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $or.i32($i145,$i152);
  $i153.dup := $or.i1($i145.dup,$i152.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i153);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0,$mul.ref(19,1));
  $p154.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $p154.dup := 0;
  $i155 := $load.i8($M.27,$p154);
  $i155.dup := $load.i1($M.27.dup,$p154);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $i156 := $zext.i8.i32($i155);
  $i156.dup := $i155.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p1,$mul.ref(19,1));
  $p157.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $p157.dup := 0;
  $i158 := $load.i8($M.11,$p157);
  $i158.dup := $load.i1($M.11.dup,$p157);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i8.i32($i158);
  $i159.dup := $i158.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $i160 := $xor.i32($i156,$i159);
  $i160.dup := $or.i1($i156.dup,$i159.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 26, 3} true;
  assume {:verifier.code 0} true;
  $i161 := $or.i32($i153,$i160);
  $i161.dup := $or.i1($i153.dup,$i160.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i161);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p0,$mul.ref(20,1));
  $p162.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $p162.dup := 0;
  $i163 := $load.i8($M.27,$p162);
  $i163.dup := $load.i1($M.27.dup,$p162);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i8.i32($i163);
  $i164.dup := $i163.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p1,$mul.ref(20,1));
  $p165.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $p165.dup := 0;
  $i166 := $load.i8($M.11,$p165);
  $i166.dup := $load.i1($M.11.dup,$p165);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i8.i32($i166);
  $i167.dup := $i166.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $i168 := $xor.i32($i164,$i167);
  $i168.dup := $or.i1($i164.dup,$i167.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $i169 := $or.i32($i161,$i168);
  $i169.dup := $or.i1($i161.dup,$i168.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i169);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p0,$mul.ref(21,1));
  $p170.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $p170.dup := 0;
  $i171 := $load.i8($M.27,$p170);
  $i171.dup := $load.i1($M.27.dup,$p170);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i32($i171);
  $i172.dup := $i171.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p1,$mul.ref(21,1));
  $p173.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $p173.dup := 0;
  $i174 := $load.i8($M.11,$p173);
  $i174.dup := $load.i1($M.11.dup,$p173);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i8.i32($i174);
  $i175.dup := $i174.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $i176 := $xor.i32($i172,$i175);
  $i176.dup := $or.i1($i172.dup,$i175.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 28, 3} true;
  assume {:verifier.code 0} true;
  $i177 := $or.i32($i169,$i176);
  $i177.dup := $or.i1($i169.dup,$i176.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i177);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p0,$mul.ref(22,1));
  $p178.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $p178.dup := 0;
  $i179 := $load.i8($M.27,$p178);
  $i179.dup := $load.i1($M.27.dup,$p178);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i8.i32($i179);
  $i180.dup := $i179.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p1,$mul.ref(22,1));
  $p181.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $p181.dup := 0;
  $i182 := $load.i8($M.11,$p181);
  $i182.dup := $load.i1($M.11.dup,$p181);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i8.i32($i182);
  $i183.dup := $i182.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $i184 := $xor.i32($i180,$i183);
  $i184.dup := $or.i1($i180.dup,$i183.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 29, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $or.i32($i177,$i184);
  $i185.dup := $or.i1($i177.dup,$i184.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i185);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p0,$mul.ref(23,1));
  $p186.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $p186.dup := 0;
  $i187 := $load.i8($M.27,$p186);
  $i187.dup := $load.i1($M.27.dup,$p186);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.i8.i32($i187);
  $i188.dup := $i187.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p1,$mul.ref(23,1));
  $p189.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $p189.dup := 0;
  $i190 := $load.i8($M.11,$p189);
  $i190.dup := $load.i1($M.11.dup,$p189);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i8.i32($i190);
  $i191.dup := $i190.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $i192 := $xor.i32($i188,$i191);
  $i192.dup := $or.i1($i188.dup,$i191.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $i193 := $or.i32($i185,$i192);
  $i193.dup := $or.i1($i185.dup,$i192.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i193);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p0,$mul.ref(24,1));
  $p194.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $p194.dup := 0;
  $i195 := $load.i8($M.27,$p194);
  $i195.dup := $load.i1($M.27.dup,$p194);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $i196 := $zext.i8.i32($i195);
  $i196.dup := $i195.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p1,$mul.ref(24,1));
  $p197.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $p197.dup := 0;
  $i198 := $load.i8($M.11,$p197);
  $i198.dup := $load.i1($M.11.dup,$p197);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $i199 := $zext.i8.i32($i198);
  $i199.dup := $i198.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $i200 := $xor.i32($i196,$i199);
  $i200.dup := $or.i1($i196.dup,$i199.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 31, 3} true;
  assume {:verifier.code 0} true;
  $i201 := $or.i32($i193,$i200);
  $i201.dup := $or.i1($i193.dup,$i200.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i201);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p0,$mul.ref(25,1));
  $p202.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $p202.dup := 0;
  $i203 := $load.i8($M.27,$p202);
  $i203.dup := $load.i1($M.27.dup,$p202);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $i204 := $zext.i8.i32($i203);
  $i204.dup := $i203.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p1,$mul.ref(25,1));
  $p205.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $p205.dup := 0;
  $i206 := $load.i8($M.11,$p205);
  $i206.dup := $load.i1($M.11.dup,$p205);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $i207 := $zext.i8.i32($i206);
  $i207.dup := $i206.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $i208 := $xor.i32($i204,$i207);
  $i208.dup := $or.i1($i204.dup,$i207.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $i209 := $or.i32($i201,$i208);
  $i209.dup := $or.i1($i201.dup,$i208.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i209);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p0,$mul.ref(26,1));
  $p210.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $p210.dup := 0;
  $i211 := $load.i8($M.27,$p210);
  $i211.dup := $load.i1($M.27.dup,$p210);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $i212 := $zext.i8.i32($i211);
  $i212.dup := $i211.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p1,$mul.ref(26,1));
  $p213.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $p213.dup := 0;
  $i214 := $load.i8($M.11,$p213);
  $i214.dup := $load.i1($M.11.dup,$p213);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.i8.i32($i214);
  $i215.dup := $i214.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $i216 := $xor.i32($i212,$i215);
  $i216.dup := $or.i1($i212.dup,$i215.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 33, 3} true;
  assume {:verifier.code 0} true;
  $i217 := $or.i32($i209,$i216);
  $i217.dup := $or.i1($i209.dup,$i216.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i217);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p0,$mul.ref(27,1));
  $p218.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $p218.dup := 0;
  $i219 := $load.i8($M.27,$p218);
  $i219.dup := $load.i1($M.27.dup,$p218);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $i220 := $zext.i8.i32($i219);
  $i220.dup := $i219.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p1,$mul.ref(27,1));
  $p221.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $p221.dup := 0;
  $i222 := $load.i8($M.11,$p221);
  $i222.dup := $load.i1($M.11.dup,$p221);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $i223 := $zext.i8.i32($i222);
  $i223.dup := $i222.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $i224 := $xor.i32($i220,$i223);
  $i224.dup := $or.i1($i220.dup,$i223.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 34, 3} true;
  assume {:verifier.code 0} true;
  $i225 := $or.i32($i217,$i224);
  $i225.dup := $or.i1($i217.dup,$i224.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i225);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p0,$mul.ref(28,1));
  $p226.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $p226.dup := 0;
  $i227 := $load.i8($M.27,$p226);
  $i227.dup := $load.i1($M.27.dup,$p226);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $i228 := $zext.i8.i32($i227);
  $i228.dup := $i227.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p1,$mul.ref(28,1));
  $p229.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $p229.dup := 0;
  $i230 := $load.i8($M.11,$p229);
  $i230.dup := $load.i1($M.11.dup,$p229);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $i231 := $zext.i8.i32($i230);
  $i231.dup := $i230.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $i232 := $xor.i32($i228,$i231);
  $i232.dup := $or.i1($i228.dup,$i231.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 35, 3} true;
  assume {:verifier.code 0} true;
  $i233 := $or.i32($i225,$i232);
  $i233.dup := $or.i1($i225.dup,$i232.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i233);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p0,$mul.ref(29,1));
  $p234.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $p234.dup := 0;
  $i235 := $load.i8($M.27,$p234);
  $i235.dup := $load.i1($M.27.dup,$p234);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $i236 := $zext.i8.i32($i235);
  $i236.dup := $i235.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p1,$mul.ref(29,1));
  $p237.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $p237.dup := 0;
  $i238 := $load.i8($M.11,$p237);
  $i238.dup := $load.i1($M.11.dup,$p237);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $i239 := $zext.i8.i32($i238);
  $i239.dup := $i238.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $i240 := $xor.i32($i236,$i239);
  $i240.dup := $or.i1($i236.dup,$i239.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 36, 3} true;
  assume {:verifier.code 0} true;
  $i241 := $or.i32($i233,$i240);
  $i241.dup := $or.i1($i233.dup,$i240.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i241);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p0,$mul.ref(30,1));
  $p242.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $p242.dup := 0;
  $i243 := $load.i8($M.27,$p242);
  $i243.dup := $load.i1($M.27.dup,$p242);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $i244 := $zext.i8.i32($i243);
  $i244.dup := $i243.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p1,$mul.ref(30,1));
  $p245.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $p245.dup := 0;
  $i246 := $load.i8($M.11,$p245);
  $i246.dup := $load.i1($M.11.dup,$p245);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $i247 := $zext.i8.i32($i246);
  $i247.dup := $i246.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $i248 := $xor.i32($i244,$i247);
  $i248.dup := $or.i1($i244.dup,$i247.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $i249 := $or.i32($i241,$i248);
  $i249.dup := $or.i1($i241.dup,$i248.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i249);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($p0,$mul.ref(31,1));
  $p250.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $p250.dup := 0;
  $i251 := $load.i8($M.27,$p250);
  $i251.dup := $load.i1($M.27.dup,$p250);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $i252 := $zext.i8.i32($i251);
  $i252.dup := $i251.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p1,$mul.ref(31,1));
  $p253.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $p253.dup := 0;
  $i254 := $load.i8($M.11,$p253);
  $i254.dup := $load.i1($M.11.dup,$p253);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $i255 := $zext.i8.i32($i254);
  $i255.dup := $i254.dup;
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $i256 := $xor.i32($i252,$i255);
  $i256.dup := $or.i1($i252.dup,$i255.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 38, 3} true;
  assume {:verifier.code 0} true;
  $i257 := $or.i32($i249,$i256);
  $i257.dup := $or.i1($i249.dup,$i256.dup);
  call {:cexpr "differentbits"} boogie_si_record_i32($i257);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 39, 31} true;
  assume {:verifier.code 0} true;
  $i258 := $sub.i32($i257,1);
  $i258.dup := $or.i1($i257.dup,0);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 39, 36} true;
  assume {:verifier.code 0} true;
  $i259 := $lshr.i32($i258,8);
  $i259.dup := $or.i1($i258.dup,0);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 39, 13} true;
  assume {:verifier.code 0} true;
  $i260 := $and.i32(1,$i259);
  $i260.dup := $or.i1(0,$i259.dup);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 39, 43} true;
  assume {:verifier.code 0} true;
  $i261 := $sub.i32($i260,1);
  $i261.dup := $or.i1($i260.dup,0);
  assume {:sourceloc "../mac-then-encrypt/verify_32.c", 39, 3} true;
  assume {:verifier.code 0} true;
  $r := $i261;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
}
const decrypt_then_verify: ref;
axiom (decrypt_then_verify == $sub.ref(0,18600));
procedure {:inline 1} decrypt_then_verify($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1, $i3: i64, $i3.dup: i1, $p4: ref, $p4.dup: i1, $p5: ref, $p5.dup: i1, $p6: ref, $p6.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $M.28, $exn;
modifies $M.11, $M.27, $M.26, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23;
modifies $M.15, $M.6, $M.7, $M.9, $M.10, $M.0, $M.1, $M.2, $M.3, $M.4;
modifies $CurrAddr;
modifies $M.12, $M.13;
requires ($p1.dup == 0);
requires ($p1.dup == 0);
requires ($p1.dup == 0);
{
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $i10: i32;
  var $i10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $i12: i64;
  var $i12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $i14: i64;
  var $i14.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 14, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "decrypt_then_verify:arg:in_len"} boogie_si_record_i64($i3);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 14, 9} true;
  assume {:verifier.code 0} true;
  call $i7, $i7.dup := decrypt($p0, $p0.dup, $p1, $p1.dup, $p2, $p2.dup, $i3, $i3.dup, $p4, $p4.dup, $p5, $p5.dup);
  call {:cexpr "res"} boogie_si_record_i32($i7);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 15, 40} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.28,$p1);
  $i8.dup := $load.i1($M.28.dup,$p1);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 15, 10} true;
  assume {:verifier.code 0} true;
  call $i9, $i9.dup := crypto_auth_verify($p0, $p0.dup, $i3, $i3.dup, $i8, $i8.dup, $p6, $p6.dup);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 15, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i7,$i9);
  $i10.dup := $or.i1($i7.dup,$i9.dup);
  call {:cexpr "res"} boogie_si_record_i32($i10);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 16, 14} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  $i11.dup := $i10.dup;
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 16, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.28,$p1);
  $i12.dup := $load.i1($M.28.dup,$p1);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 16, 30} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i64($i12,32);
  $i13.dup := $or.i1($i12.dup,0);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 16, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $mul.i64($i11,$i13);
  $i14.dup := $or.i1($i11.dup,$i13.dup);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 16, 12} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i64($M.28,$p1,$i14);
  $M.28.dup := $store.i1($M.28.dup,$p1,$i14.dup);
  assume {:sourceloc "../mac-then-encrypt/mac_then_encrypt.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
}
const decrypt: ref;
axiom (decrypt == $sub.ref(0,19632));
procedure {:inline 1} decrypt($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1, $i3: i64, $i3.dup: i1, $p4: ref, $p4.dup: i1, $p5: ref, $p5.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn;
modifies $M.15, $M.11, $M.6, $M.7, $M.9, $M.10, $M.0, $M.1, $M.2, $M.3, $M.4;
modifies $M.28;
modifies $M.12, $M.13, $CurrAddr;
{
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i1;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 15, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "decrypt:arg:in_len"} boogie_si_record_i64($i3);
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 15, 7} true;
  assume {:verifier.code 0} true;
  call $i6, $i6.dup := crypto_stream_decrypt($p0, $p0.dup, $p2, $p2.dup, $i3, $i3.dup, $p4, $p4.dup, $p5, $p5.dup);
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 15, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6,0);
  $i7.dup := $or.i1($i6.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 15, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  $i7.dup := 0;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 16, 12} true;
  assume {:verifier.code 0} true;
  call $i8, $i8.dup := crypto_pad_remove($p1, $p1.dup, $p0, $p0.dup, $i3, $i3.dup);
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 16, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i8;
  $i9.dup := $i8.dup;
  goto $bb3;
$bb2:
  assume !($i7 == 1);
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  $i9.dup := 0;
  goto $bb3;
$bb3:
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/pad_cbc_aes128.c", 18, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $r.dup := $i9.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const crypto_pad_remove: ref;
axiom (crypto_pad_remove == $sub.ref(0,20664));
procedure {:inline 1} crypto_pad_remove($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn, $M.28;
requires ($p0.dup == 0);
{
  var $i3: i1;
  var $i3.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i8;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $i10: i32;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i32;
  var $i17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i32;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $i28: i1;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i32;
  var $i30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i32;
  var $i32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $i35: i32;
  var $i35.dup: i1;
  var $i36: i32;
  var $i36.dup: i1;
  var $i37: i32;
  var $i37.dup: i1;
  var $i38: i32;
  var $i38.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i8;
  var $i40.dup: i1;
  var $i41: i64;
  var $i41.dup: i1;
  var $i42: i64;
  var $i42.dup: i1;
  var $i43: i64;
  var $i43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i8;
  var $i45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i32;
  var $i47.dup: i1;
  var $i48: i32;
  var $i48.dup: i1;
  var $i49: i32;
  var $i49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $i51: i32;
  var $i51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $i53: i32;
  var $i53.dup: i1;
  var $i54: i32;
  var $i54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i32;
  var $i56.dup: i1;
  var $i57: i32;
  var $i57.dup: i1;
  var $i58: i32;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $i61: i64;
  var $i61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
  var $i63: i32;
  var $i63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $i65: i32;
  var $i65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
$bb0:
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 20, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "crypto_pad_remove:arg:l"} boogie_si_record_i64($i2);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 20, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i64($i2,16);
  $i3.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 20, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  $i3.dup := 0;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 20, 24} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  $i4.dup := 0;
  goto $bb3;
$bb2:
  assume !($i3 == 1);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 21, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64($i2,1);
  $i5.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 21, 20} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p6 := $add.ref($p1,$mul.ref($i5,1));
  $p6.dup := $or.i1($p1.dup,$or.i1($i5.dup,0));
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 21, 20} true;
  assume {:verifier.code 0} true;
  $p6.dup := 0;
  $i7 := $load.i8($M.11,$p6);
  $i7.dup := $load.i1($M.11.dup,$p6);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 21, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  $i8.dup := $i7.dup;
  call {:cexpr "padding_length"} boogie_si_record_i32($i8);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $xor.i32(16,$i8);
  $i9.dup := $or.i1(0,$i8.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(16,$i8);
  $i10.dup := $or.i1(0,$i8.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $xor.i32($i10,$i8);
  $i11.dup := $or.i1($i10.dup,$i8.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i32($i9,$i11);
  $i12.dup := $or.i1($i9.dup,$i11.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i13 := $lshr.i32($i12,31);
  $i13.dup := $or.i1($i12.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $xor.i32(16,$i13);
  $i14.dup := $or.i1(0,$i13.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0,$i14);
  $i15.dup := $or.i1(0,$i14.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 22, 10} true;
  assume {:verifier.code 0} true;
  $i16 := $xor.i32($i15,$sub.i32(0,1));
  $i16.dup := $or.i1($i15.dup,$or.i1(0,0));
  call {:cexpr "good"} boogie_si_record_i32($i16);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $xor.i32($i8,0);
  $i17.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $sub.i32($i8,0);
  $i18.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $xor.i32($i18,0);
  $i19.dup := $or.i1($i18.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i17,$i19);
  $i20.dup := $or.i1($i17.dup,$i19.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $lshr.i32($i20,31);
  $i21.dup := $or.i1($i20.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $xor.i32($i8,$i21);
  $i22.dup := $or.i1($i8.dup,$i21.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i32(0,$i22);
  $i23.dup := $or.i1(0,$i22.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $xor.i32($i23,$sub.i32(0,1));
  $i24.dup := $or.i1($i23.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 23, 8} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i16,$i24);
  $i25.dup := $or.i1($i16.dup,$i24.dup);
  call {:cexpr "good"} boogie_si_record_i32($i25);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 24, 8} true;
  assume {:verifier.code 0} true;
  $i26 := $i25;
  $i26.dup := 0;
  $i27 := 0;
  $i27.dup := 0;
  goto $bb4;
$bb3:
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 33, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $r.dup := $i4.dup;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $ult.i32($i27,16);
  $i28.dup := $or.i1($i27.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 24, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  $i28.dup := 0;
  goto $bb5, $bb6;
$bb5:
  assume ($i28 == 1);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32($i8,1);
  $i29.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $sub.i32($i8,1);
  $i30.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $xor.i32($i30,$i27);
  $i31.dup := $or.i1($i30.dup,$i27.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32($i8,1);
  $i32.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32($i32,$i27);
  $i33.dup := $or.i1($i32.dup,$i27.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i34 := $xor.i32($i33,$i27);
  $i34.dup := $or.i1($i33.dup,$i27.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i35 := $or.i32($i31,$i34);
  $i35.dup := $or.i1($i31.dup,$i34.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i36 := $lshr.i32($i35,31);
  $i36.dup := $or.i1($i35.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i37 := $xor.i32($i29,$i36);
  $i37.dup := $or.i1($i29.dup,$i36.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0,$i37);
  $i38.dup := $or.i1(0,$i37.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i39 := $xor.i32($i38,$sub.i32(0,1));
  $i39.dup := $or.i1($i38.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 25, 26} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i32.i8($i39);
  $i40.dup := $i39.dup;
  call {:cexpr "mask"} boogie_si_record_i8($i40);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 26, 28} true;
  assume {:verifier.code 0} true;
  $i41 := $sub.i64($i2,1);
  $i41.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 26, 34} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i32.i64($i27);
  $i42.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 26, 32} true;
  assume {:verifier.code 0} true;
  $i43 := $sub.i64($i41,$i42);
  $i43.dup := 0;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 26, 23} true;
  assume {:verifier.code 0} true;
  assume {:PointTainted} true;
  $p44 := $add.ref($p1,$mul.ref($i43,1));
  $p44.dup := $or.i1($p1.dup,$or.i1($i43.dup,0));
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 26, 23} true;
  assume {:verifier.code 0} true;
  $p44.dup := 0;
  $i45 := $load.i8($M.11,$p44);
  $i45.dup := $load.i1($M.11.dup,$p44);
  call {:cexpr "b"} boogie_si_record_i8($i45);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 27, 15} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i32($i40);
  $i46.dup := $i40.dup;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 27, 40} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i45);
  $i47.dup := $i45.dup;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 27, 38} true;
  assume {:verifier.code 0} true;
  $i48 := $xor.i32($i8,$i47);
  $i48.dup := $or.i1($i8.dup,$i47.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 27, 20} true;
  assume {:verifier.code 0} true;
  $i49 := $and.i32($i46,$i48);
  $i49.dup := $or.i1($i46.dup,$i48.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 27, 13} true;
  assume {:verifier.code 0} true;
  $i50 := $xor.i32($i49,$sub.i32(0,1));
  $i50.dup := $or.i1($i49.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 27, 10} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i26,$i50);
  $i51.dup := $or.i1($i26.dup,$i50.dup);
  call {:cexpr "good"} boogie_si_record_i32($i51);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 28, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i28 == 1);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $and.i32($i26,255);
  $i53.dup := $or.i1($i26.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i54 := $and.i32($i26,254);
  $i54.dup := $or.i1($i26.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i55 := $xor.i32(255,$i54);
  $i55.dup := $or.i1(0,$i54.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i56 := $lshr.i32($i55,31);
  $i56.dup := $or.i1($i55.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i57 := $and.i32($i53,$i56);
  $i57.dup := $or.i1($i53.dup,$i56.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i58 := $xor.i32(4294967040,$i57);
  $i58.dup := $or.i1(0,$i57.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 29, 10} true;
  assume {:verifier.code 0} true;
  $i59 := $sub.i32(0,$i58);
  $i59.dup := $or.i1(0,$i58.dup);
  call {:cexpr "good"} boogie_si_record_i32($i59);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 30, 25} true;
  assume {:verifier.code 0} true;
  $i60 := $and.i32($i59,$i8);
  $i60.dup := $or.i1($i59.dup,$i8.dup);
  call {:cexpr "padding_length"} boogie_si_record_i32($i60);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 31, 18} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i32.i64($i60);
  $i61.dup := $i60.dup;
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 31, 16} true;
  assume {:verifier.code 0} true;
  $i62 := $sub.i64($i2,$i61);
  $i62.dup := $or.i1($i2.dup,$i61.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 31, 12} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i64($M.28,$p0,$i62);
  $M.28.dup := $store.i1($M.28.dup,$p0,$i62.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 32, 10} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i32($i59,1);
  $i63.dup := $or.i1($i59.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 32, 10} true;
  assume {:verifier.code 0} true;
  $i64 := $xor.i32($i59,$sub.i32(0,1));
  $i64.dup := $or.i1($i59.dup,$or.i1(0,0));
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 32, 10} true;
  assume {:verifier.code 0} true;
  $i65 := $and.i32($i64,0);
  $i65.dup := $or.i1($i64.dup,0);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 32, 10} true;
  assume {:verifier.code 0} true;
  $i66 := $or.i32($i63,$i65);
  $i66.dup := $or.i1($i63.dup,$i65.dup);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 32, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i66;
  $i4.dup := 0;
  goto $bb3;
$bb7:
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 24, 33} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i32($i27,1);
  $i52.dup := $or.i1($i27.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i52);
  assume {:sourceloc "../mac-then-encrypt/pad128.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i26 := $i51;
  $i26.dup := 0;
  $i27 := $i52;
  $i27.dup := 0;
  goto $bb4;
}
const mee_cbc_wrapper: ref;
axiom (mee_cbc_wrapper == $sub.ref(0,21696));
procedure {:entrypoint} mee_cbc_wrapper($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1, $i3: i64, $i3.dup: i1, $p4: ref, $p4.dup: i1, $p5: ref, $p5.dup: i1, $p6: ref, $p6.dup: i1) returns ($r: i32, $r.dup: i1)
requires {:public_in $p0} true;
requires {:public_in $p1} true;
requires {:public_in $p2} true;
requires {:public_in $p4} true;
requires {:public_in $p5} true;
requires {:public_in $p6} true;
requires {:public_in $i3} true;
requires {:public_in $load.i8, $M.8, $p2, 1, 32} true;
requires {:public_in $load.i8, $M.14, $p4, 1, 16} true;
modifies $exn;
modifies $M.28, $M.11, $M.27, $M.26, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23;
modifies $CurrAddr, $M.24;
modifies $M.15, $M.6, $M.7, $M.9, $M.10, $M.0, $M.1, $M.2, $M.3, $M.4;
modifies $M.12, $M.13;
requires ($p0.dup == 0);
requires ($p1.dup == 0);
requires ($p2.dup == 0);
requires ($p4.dup == 0);
requires ($p5.dup == 0);
requires ($p6.dup == 0);
requires ($i3.dup == 0);
requires ($load.i8($M.8.dup,($p2 + 0)) == 0);
requires ($load.i8($M.8.dup,($p2 + 1)) == 0);
requires ($load.i8($M.8.dup,($p2 + 2)) == 0);
requires ($load.i8($M.8.dup,($p2 + 3)) == 0);
requires ($load.i8($M.8.dup,($p2 + 4)) == 0);
requires ($load.i8($M.8.dup,($p2 + 5)) == 0);
requires ($load.i8($M.8.dup,($p2 + 6)) == 0);
requires ($load.i8($M.8.dup,($p2 + 7)) == 0);
requires ($load.i8($M.8.dup,($p2 + 8)) == 0);
requires ($load.i8($M.8.dup,($p2 + 9)) == 0);
requires ($load.i8($M.8.dup,($p2 + 10)) == 0);
requires ($load.i8($M.8.dup,($p2 + 11)) == 0);
requires ($load.i8($M.8.dup,($p2 + 12)) == 0);
requires ($load.i8($M.8.dup,($p2 + 13)) == 0);
requires ($load.i8($M.8.dup,($p2 + 14)) == 0);
requires ($load.i8($M.8.dup,($p2 + 15)) == 0);
requires ($load.i8($M.8.dup,($p2 + 16)) == 0);
requires ($load.i8($M.8.dup,($p2 + 17)) == 0);
requires ($load.i8($M.8.dup,($p2 + 18)) == 0);
requires ($load.i8($M.8.dup,($p2 + 19)) == 0);
requires ($load.i8($M.8.dup,($p2 + 20)) == 0);
requires ($load.i8($M.8.dup,($p2 + 21)) == 0);
requires ($load.i8($M.8.dup,($p2 + 22)) == 0);
requires ($load.i8($M.8.dup,($p2 + 23)) == 0);
requires ($load.i8($M.8.dup,($p2 + 24)) == 0);
requires ($load.i8($M.8.dup,($p2 + 25)) == 0);
requires ($load.i8($M.8.dup,($p2 + 26)) == 0);
requires ($load.i8($M.8.dup,($p2 + 27)) == 0);
requires ($load.i8($M.8.dup,($p2 + 28)) == 0);
requires ($load.i8($M.8.dup,($p2 + 29)) == 0);
requires ($load.i8($M.8.dup,($p2 + 30)) == 0);
requires ($load.i8($M.8.dup,($p2 + 31)) == 0);
requires ($load.i8($M.14.dup,($p4 + 0)) == 0);
requires ($load.i8($M.14.dup,($p4 + 1)) == 0);
requires ($load.i8($M.14.dup,($p4 + 2)) == 0);
requires ($load.i8($M.14.dup,($p4 + 3)) == 0);
requires ($load.i8($M.14.dup,($p4 + 4)) == 0);
requires ($load.i8($M.14.dup,($p4 + 5)) == 0);
requires ($load.i8($M.14.dup,($p4 + 6)) == 0);
requires ($load.i8($M.14.dup,($p4 + 7)) == 0);
requires ($load.i8($M.14.dup,($p4 + 8)) == 0);
requires ($load.i8($M.14.dup,($p4 + 9)) == 0);
requires ($load.i8($M.14.dup,($p4 + 10)) == 0);
requires ($load.i8($M.14.dup,($p4 + 11)) == 0);
requires ($load.i8($M.14.dup,($p4 + 12)) == 0);
requires ($load.i8($M.14.dup,($p4 + 13)) == 0);
requires ($load.i8($M.14.dup,($p4 + 14)) == 0);
requires ($load.i8($M.14.dup,($p4 + 15)) == 0);
{
  var $p7: ref;
  var $p7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
$bb0:
  $shadow_ok := true;
  call $initialize();
  assume {:sourceloc "mee_cbc.c", 21, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:mee_cbc_wrapper"} boogie_si_record_ref(mee_cbc_wrapper);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$p0"} boogie_si_record_ref($p0);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$p1"} boogie_si_record_ref($p1);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$p2"} boogie_si_record_ref($p2);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$i3"} boogie_si_record_i64($i3);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$p4"} boogie_si_record_ref($p4);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$p5"} boogie_si_record_ref($p5);
  call {:cexpr "smack:arg:mee_cbc_wrapper:$p6"} boogie_si_record_ref($p6);
  call {:cexpr "mee_cbc_wrapper:arg:in_len"} boogie_si_record_i64($i3);
  assume {:sourceloc "mee_cbc.c", 21, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p0} $p7 := __SMACK_value.ref($p0);
  $p7.dup := 0;
  assume $isExternal($p7);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p7);
  assume {:sourceloc "mee_cbc.c", 21, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p7, $p7.dup);
  assume {:sourceloc "mee_cbc.c", 22, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p1} $p8 := __SMACK_value.ref($p1);
  $p8.dup := 0;
  assume $isExternal($p8);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p8);
  assume {:sourceloc "mee_cbc.c", 22, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p8, $p8.dup);
  assume {:sourceloc "mee_cbc.c", 23, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p2} $p9 := __SMACK_value.ref($p2);
  $p9.dup := 0;
  assume $isExternal($p9);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p9);
  assume {:sourceloc "mee_cbc.c", 23, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p9, $p9.dup);
  assume {:sourceloc "mee_cbc.c", 24, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p4} $p10 := __SMACK_value.ref($p4);
  $p10.dup := 0;
  assume $isExternal($p10);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p10);
  assume {:sourceloc "mee_cbc.c", 24, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p10, $p10.dup);
  assume {:sourceloc "mee_cbc.c", 25, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p5} $p11 := __SMACK_value.ref($p5);
  $p11.dup := 0;
  assume $isExternal($p11);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p11);
  assume {:sourceloc "mee_cbc.c", 25, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p11, $p11.dup);
  assume {:sourceloc "mee_cbc.c", 26, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p6} $p12 := __SMACK_value.ref($p6);
  $p12.dup := 0;
  assume $isExternal($p12);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p12);
  assume {:sourceloc "mee_cbc.c", 26, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p12, $p12.dup);
  assume {:sourceloc "mee_cbc.c", 29, 13} true;
  assume {:verifier.code 0} true;
  call {:name $i3} $p13 := __SMACK_value.i64($i3);
  $p13.dup := 0;
  assume $isExternal($p13);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p13);
  assume {:sourceloc "mee_cbc.c", 29, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p13, $p13.dup);
  assume {:sourceloc "mee_cbc.c", 30, 13} true;
  assume {:verifier.code 1} true;
  call {:name $p2} {:array "$load.i8", $M.8, $p2, 1, 32} $p14 := __SMACK_values($p2, 32);
  $p14.dup := 0;
  assume $isExternal($p14);
  call {:cexpr "smack:ext:__SMACK_values"} boogie_si_record_ref($p14);
  assume {:sourceloc "mee_cbc.c", 30, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p14, $p14.dup);
  assume {:sourceloc "mee_cbc.c", 31, 13} true;
  assume {:verifier.code 1} true;
  call {:name $p4} {:array "$load.i8", $M.14, $p4, 1, 16} $p15 := __SMACK_values($p4, 16);
  $p15.dup := 0;
  assume $isExternal($p15);
  call {:cexpr "smack:ext:__SMACK_values"} boogie_si_record_ref($p15);
  assume {:sourceloc "mee_cbc.c", 31, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p15, $p15.dup);
  assume {:sourceloc "mee_cbc.c", 37, 10} true;
  assume {:verifier.code 0} true;
  call $i16, $i16.dup := decrypt_then_verify($p0, $p0.dup, $p1, $p1.dup, $p2, $p2.dup, $i3, $i3.dup, $p4, $p4.dup, $p5, $p5.dup, $p6, $p6.dup);
  assume {:sourceloc "mee_cbc.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  assert $shadow_ok;
  return;
}
const __SMACK_value: ref;
axiom (__SMACK_value == $sub.ref(0,22728));
procedure {:inline 1} __SMACK_value.i64(p.0: i64) returns ($r: ref);
procedure {:inline 1} __SMACK_value.ref(p.0: ref) returns ($r: ref);
const public_in: ref;
axiom (public_in == $sub.ref(0,23760));
procedure {:inline 1} public_in($p0: ref, $p0.dup: i1);
const __SMACK_values: ref;
axiom (__SMACK_values == $sub.ref(0,24792));
procedure {:inline 1} __SMACK_values($p0: ref, $i1: i32) returns ($r: ref);
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0,25824));
procedure {:inline 1} __SMACK_code.ref($p0: ref);
procedure {:inline 1} __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0,26856));
procedure {:inline 1} __VERIFIER_assume($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 45, 3} true;
  assume {:verifier.code 1} true;
  assume ($i0 != $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 46, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0,27888));
procedure {:inline 1} __SMACK_dummy($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_and32: ref;
axiom (__SMACK_and32 == $sub.ref(0,28920));
procedure {:inline 1} __SMACK_and32($i0: i32, $i1: i32) returns ($r: i32)
modifies $exn;
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i4: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i20: i1;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i19: i32;
  var $i24: i64;
  var $i25: i64;
  var $i26: i32;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i35: i1;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i34: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i50: i1;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i49: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i32;
  var $i57: i32;
  var $i58: i64;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i65: i1;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i64: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i80: i1;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i79: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i32;
  var $i87: i32;
  var $i88: i64;
  var $i89: i64;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i95: i1;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i94: i32;
  var $i99: i64;
  var $i100: i64;
  var $i101: i32;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $i105: i32;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i110: i1;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i109: i32;
  var $i114: i64;
  var $i115: i64;
  var $i116: i32;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $i120: i32;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i125: i1;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i124: i32;
  var $i129: i64;
  var $i130: i64;
  var $i131: i32;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i140: i1;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i139: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i32;
  var $i147: i32;
  var $i148: i64;
  var $i149: i64;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i155: i1;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i154: i32;
  var $i159: i64;
  var $i160: i64;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i170: i1;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i169: i32;
  var $i174: i64;
  var $i175: i64;
  var $i176: i32;
  var $i177: i32;
  var $i178: i64;
  var $i179: i64;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i185: i1;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i184: i32;
  var $i189: i64;
  var $i190: i64;
  var $i191: i32;
  var $i192: i32;
  var $i193: i64;
  var $i194: i64;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i200: i1;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i199: i32;
  var $i204: i64;
  var $i205: i64;
  var $i206: i32;
  var $i207: i32;
  var $i208: i64;
  var $i209: i64;
  var $i210: i32;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i215: i1;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i214: i32;
  var $i219: i64;
  var $i220: i64;
  var $i221: i32;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $i225: i32;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i230: i1;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i229: i32;
  var $i234: i64;
  var $i235: i64;
  var $i236: i32;
  var $i237: i32;
  var $i238: i64;
  var $i239: i64;
  var $i240: i32;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i245: i1;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i244: i32;
  var $i249: i64;
  var $i250: i64;
  var $i251: i32;
  var $i252: i32;
  var $i253: i64;
  var $i254: i64;
  var $i255: i32;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i260: i1;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i259: i32;
  var $i264: i64;
  var $i265: i64;
  var $i266: i32;
  var $i267: i32;
  var $i268: i64;
  var $i269: i64;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i275: i1;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i274: i32;
  var $i279: i64;
  var $i280: i64;
  var $i281: i32;
  var $i282: i32;
  var $i283: i64;
  var $i284: i64;
  var $i285: i32;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i290: i1;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i289: i32;
  var $i294: i64;
  var $i295: i64;
  var $i296: i32;
  var $i297: i32;
  var $i298: i64;
  var $i299: i64;
  var $i300: i32;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i305: i1;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i304: i32;
  var $i309: i64;
  var $i310: i64;
  var $i311: i32;
  var $i312: i32;
  var $i313: i64;
  var $i314: i64;
  var $i315: i32;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i320: i1;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i319: i32;
  var $i324: i64;
  var $i325: i64;
  var $i326: i32;
  var $i327: i32;
  var $i328: i64;
  var $i329: i64;
  var $i330: i32;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i335: i1;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i334: i32;
  var $i339: i64;
  var $i340: i64;
  var $i341: i32;
  var $i342: i32;
  var $i343: i64;
  var $i344: i64;
  var $i345: i32;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i350: i1;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i349: i32;
  var $i354: i64;
  var $i355: i64;
  var $i356: i32;
  var $i357: i32;
  var $i358: i64;
  var $i359: i64;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i365: i1;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i364: i32;
  var $i369: i64;
  var $i370: i64;
  var $i371: i32;
  var $i372: i32;
  var $i373: i64;
  var $i374: i64;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i380: i1;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i379: i32;
  var $i384: i64;
  var $i385: i64;
  var $i386: i32;
  var $i387: i32;
  var $i388: i64;
  var $i389: i64;
  var $i390: i32;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i395: i1;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i394: i32;
  var $i399: i64;
  var $i400: i64;
  var $i401: i32;
  var $i402: i32;
  var $i403: i64;
  var $i404: i64;
  var $i405: i32;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i410: i1;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i409: i32;
  var $i414: i64;
  var $i415: i64;
  var $i416: i32;
  var $i417: i32;
  var $i418: i64;
  var $i419: i64;
  var $i420: i32;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i425: i1;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i424: i32;
  var $i429: i64;
  var $i430: i64;
  var $i431: i32;
  var $i432: i32;
  var $i433: i64;
  var $i434: i64;
  var $i435: i32;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i440: i1;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i439: i32;
  var $i444: i64;
  var $i445: i64;
  var $i446: i32;
  var $i447: i32;
  var $i448: i64;
  var $i449: i64;
  var $i450: i32;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i455: i1;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i454: i32;
  var $i459: i64;
  var $i460: i64;
  var $i461: i32;
  var $i462: i32;
  var $i463: i64;
  var $i464: i64;
  var $i465: i32;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i470: i1;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i469: i32;
  var $i474: i64;
  var $i475: i64;
  var $i476: i32;
  var $i477: i32;
  var $i478: i64;
  var $i479: i64;
  var $i480: i32;
  var $i481: i32;
  var $i482: i32;
  var $i483: i1;
  var $i485: i1;
  var $i486: i1;
  var $i488: i32;
  var $i487: i32;
  var $i484: i32;
  var $i489: i64;
  var $i490: i64;
  var $i491: i32;
  var $i492: i32;
  var $i493: i64;
  var $i494: i64;
  var $i495: i32;
  var $i496: i32;
  var $i497: i32;
  var $i498: i1;
  var $i500: i1;
  var $i501: i1;
  var $i503: i32;
  var $i502: i32;
  var $i499: i32;
  var $i504: i64;
  var $i505: i64;
  var $i506: i32;
  var $i507: i32;
  var $i508: i64;
  var $i509: i64;
  var $i510: i32;
  var $i511: i32;
  var $i512: i32;
  var $i513: i1;
  var $i515: i1;
  var $i516: i1;
  var $i518: i32;
  var $i517: i32;
  var $i514: i32;
  var $i519: i64;
  var $i520: i64;
  var $i521: i32;
  var $i522: i32;
  var $i523: i64;
  var $i524: i64;
  var $i525: i32;
  var $i526: i32;
  var $i527: i32;
  var $i528: i1;
  var $i530: i1;
  var $i531: i1;
  var $i533: i32;
  var $i532: i32;
  var $i529: i32;
  var $i534: i64;
  var $i535: i64;
  var $i536: i32;
  var $i537: i32;
  var $i538: i64;
  var $i539: i64;
  var $i540: i32;
  var $i541: i32;
  var $i542: i32;
  var $i543: i1;
  var $i545: i1;
  var $i546: i1;
  var $i548: i32;
  var $i547: i32;
  var $i544: i32;
  var $i549: i64;
  var $i550: i64;
  var $i551: i32;
  var $i552: i32;
  var $i553: i64;
  var $i554: i64;
  var $i555: i32;
  var $i556: i32;
  var $i557: i32;
  var $i558: i1;
  var $i560: i1;
  var $i561: i1;
  var $i563: i32;
  var $i562: i32;
  var $i559: i32;
  var $i564: i64;
  var $i565: i64;
  var $i566: i32;
  var $i567: i32;
  var $i568: i64;
  var $i569: i64;
  var $i570: i32;
  var $i571: i32;
  var $i572: i32;
  var $i573: i1;
  var $i575: i1;
  var $i576: i1;
  var $i578: i32;
  var $i577: i32;
  var $i574: i32;
  var $i579: i64;
  var $i580: i64;
  var $i581: i32;
  var $i582: i32;
  var $i583: i64;
  var $i584: i64;
  var $i585: i32;
  var $i586: i32;
  var $i587: i32;
  var $i588: i1;
  var $i590: i1;
  var $i591: i1;
  var $i593: i32;
  var $i592: i32;
  var $i589: i32;
  var $i594: i64;
  var $i595: i64;
  var $i596: i32;
  var $i597: i32;
  var $i598: i64;
  var $i599: i64;
  var $i600: i32;
  var $i601: i32;
  var $i602: i32;
  var $i603: i1;
  var $i605: i1;
  var $i606: i1;
  var $i608: i32;
  var $i607: i32;
  var $i604: i32;
  var $i609: i64;
  var $i610: i64;
  var $i611: i32;
  var $i612: i32;
  var $i613: i64;
  var $i614: i64;
  var $i615: i32;
  var $i616: i32;
  var $i617: i32;
  var $i618: i1;
  var $i620: i1;
  var $i621: i1;
  var $i623: i32;
  var $i622: i32;
  var $i619: i32;
  var $i624: i64;
  var $i625: i64;
  var $i626: i32;
  var $i627: i32;
  var $i628: i64;
  var $i629: i64;
  var $i630: i32;
  var $i631: i32;
  var $i632: i32;
  var $i633: i1;
  var $i635: i1;
  var $i636: i1;
  var $i638: i32;
  var $i637: i32;
  var $i634: i32;
  var $i639: i64;
  var $i640: i64;
  var $i641: i32;
  var $i642: i32;
  var $i643: i64;
  var $i644: i64;
  var $i645: i32;
  var $i646: i32;
  var $i647: i32;
  var $i648: i1;
  var $i650: i1;
  var $i651: i1;
  var $i653: i32;
  var $i652: i32;
  var $i649: i32;
  var $i654: i64;
  var $i655: i64;
  var $i656: i32;
  var $i657: i32;
  var $i658: i64;
  var $i659: i64;
  var $i660: i32;
  var $i661: i32;
  var $i662: i32;
  var $i663: i1;
  var $i665: i1;
  var $i666: i1;
  var $i668: i32;
  var $i667: i32;
  var $i664: i32;
  var $i669: i64;
  var $i670: i64;
  var $i671: i32;
  var $i672: i32;
  var $i673: i64;
  var $i674: i64;
  var $i675: i32;
  var $i676: i32;
  var $i677: i32;
  var $i678: i1;
  var $i680: i1;
  var $i681: i1;
  var $i683: i32;
  var $i682: i32;
  var $i679: i32;
  var $i684: i64;
  var $i685: i64;
  var $i686: i32;
  var $i687: i32;
  var $i688: i64;
  var $i689: i64;
  var $i690: i32;
  var $i691: i32;
  var $i692: i32;
  var $i693: i1;
  var $i695: i1;
  var $i696: i1;
  var $i698: i32;
  var $i697: i32;
  var $i694: i32;
  var $i699: i64;
  var $i700: i64;
  var $i701: i32;
  var $i702: i32;
  var $i703: i64;
  var $i704: i64;
  var $i705: i32;
  var $i706: i32;
  var $i707: i32;
  var $i708: i1;
  var $i710: i1;
  var $i711: i1;
  var $i713: i32;
  var $i712: i32;
  var $i709: i32;
  var $i714: i64;
  var $i715: i64;
  var $i716: i32;
  var $i717: i32;
  var $i718: i64;
  var $i719: i64;
  var $i720: i32;
  var $i721: i32;
  var $i722: i32;
  var $i723: i1;
  var $i725: i1;
  var $i726: i1;
  var $i728: i32;
  var $i727: i32;
  var $i724: i32;
  var $i729: i64;
  var $i730: i64;
  var $i731: i32;
  var $i732: i32;
  var $i733: i64;
  var $i734: i64;
  var $i735: i32;
  var $i736: i32;
  var $i737: i32;
  var $i738: i1;
  var $i740: i1;
  var $i741: i1;
  var $i743: i32;
  var $i742: i32;
  var $i739: i32;
  var $i744: i64;
  var $i745: i64;
  var $i746: i32;
  var $i747: i32;
  var $i748: i64;
  var $i749: i64;
  var $i750: i32;
  var $i751: i32;
  var $i752: i32;
  var $i753: i1;
  var $i755: i1;
  var $i756: i1;
  var $i758: i32;
  var $i757: i32;
  var $i754: i32;
  var $i759: i64;
  var $i760: i64;
  var $i761: i32;
  var $i762: i32;
  var $i763: i64;
  var $i764: i64;
  var $i765: i32;
  var $i766: i32;
  var $i767: i32;
  var $i768: i1;
  var $i770: i1;
  var $i771: i1;
  var $i773: i32;
  var $i772: i32;
  var $i769: i32;
  var $i774: i64;
  var $i775: i64;
  var $i776: i32;
  var $i777: i32;
  var $i778: i64;
  var $i779: i64;
  var $i780: i32;
  var $i781: i32;
  var $i782: i32;
  var $i783: i1;
  var $i785: i1;
  var $i786: i1;
  var $i788: i32;
  var $i787: i32;
  var $i784: i32;
  var $i789: i64;
  var $i790: i64;
  var $i791: i32;
  var $i792: i32;
  var $i793: i64;
  var $i794: i64;
  var $i795: i32;
  var $i796: i32;
  var $i797: i32;
  var $i798: i1;
  var $i800: i1;
  var $i801: i1;
  var $i803: i32;
  var $i802: i32;
  var $i799: i32;
  var $i804: i64;
  var $i805: i64;
  var $i806: i32;
  var $i807: i32;
  var $i808: i64;
  var $i809: i64;
  var $i810: i32;
  var $i811: i32;
  var $i812: i32;
  var $i813: i1;
  var $i815: i1;
  var $i816: i1;
  var $i818: i32;
  var $i817: i32;
  var $i814: i32;
  var $i819: i64;
  var $i820: i64;
  var $i821: i32;
  var $i822: i32;
  var $i823: i64;
  var $i824: i64;
  var $i825: i32;
  var $i826: i32;
  var $i827: i32;
  var $i828: i1;
  var $i830: i1;
  var $i831: i1;
  var $i833: i32;
  var $i832: i32;
  var $i829: i32;
  var $i834: i64;
  var $i835: i64;
  var $i836: i32;
  var $i837: i32;
  var $i838: i64;
  var $i839: i64;
  var $i840: i32;
  var $i841: i32;
  var $i842: i32;
  var $i843: i1;
  var $i845: i1;
  var $i846: i1;
  var $i848: i32;
  var $i847: i32;
  var $i844: i32;
  var $i849: i64;
  var $i850: i64;
  var $i851: i32;
  var $i852: i32;
  var $i853: i64;
  var $i854: i64;
  var $i855: i32;
  var $i856: i32;
  var $i857: i32;
  var $i858: i1;
  var $i860: i1;
  var $i861: i1;
  var $i863: i32;
  var $i862: i32;
  var $i859: i32;
  var $i864: i64;
  var $i865: i64;
  var $i866: i32;
  var $i867: i32;
  var $i868: i64;
  var $i869: i64;
  var $i870: i32;
  var $i871: i32;
  var $i872: i32;
  var $i873: i1;
  var $i875: i1;
  var $i876: i1;
  var $i878: i32;
  var $i877: i32;
  var $i874: i32;
  var $i879: i64;
  var $i880: i64;
  var $i881: i32;
  var $i882: i32;
  var $i883: i64;
  var $i884: i64;
  var $i885: i32;
  var $i886: i32;
  var $i887: i32;
  var $i888: i1;
  var $i890: i1;
  var $i891: i1;
  var $i893: i32;
  var $i892: i32;
  var $i889: i32;
  var $i894: i64;
  var $i895: i64;
  var $i896: i32;
  var $i897: i32;
  var $i898: i64;
  var $i899: i64;
  var $i900: i32;
  var $i901: i32;
  var $i902: i32;
  var $i903: i1;
  var $i905: i1;
  var $i906: i1;
  var $i908: i32;
  var $i907: i32;
  var $i904: i32;
  var $i909: i64;
  var $i910: i64;
  var $i911: i32;
  var $i912: i32;
  var $i913: i64;
  var $i914: i64;
  var $i915: i32;
  var $i916: i32;
  var $i917: i32;
  var $i918: i1;
  var $i920: i1;
  var $i921: i1;
  var $i923: i32;
  var $i922: i32;
  var $i919: i32;
  var $i924: i64;
  var $i925: i64;
  var $i926: i32;
  var $i927: i32;
  var $i928: i64;
  var $i929: i64;
  var $i930: i32;
  var $i931: i32;
  var $i932: i32;
  var $i933: i1;
  var $i935: i1;
  var $i936: i1;
  var $i938: i32;
  var $i937: i32;
  var $i934: i32;
  var $i939: i64;
  var $i940: i64;
  var $i941: i32;
  var $i942: i32;
  var $i943: i64;
  var $i944: i64;
  var $i945: i32;
  var $i946: i32;
  var $i947: i32;
  var $i948: i1;
  var $i950: i1;
  var $i951: i1;
  var $i953: i32;
  var $i952: i32;
  var $i949: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_and32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0,0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i1,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  assume !($i3 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $srem.i64($i9,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  call {:cexpr "a"} boogie_si_record_i32($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 67, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i11,$i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $srem.i64($i13,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  call {:cexpr "b"} boogie_si_record_i32($i15);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 69, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i15,$i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 71, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i4,$i4);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $i17;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb9;
$bb6:
  assume !($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i1,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume !($i6 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 65, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  goto $bb3;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i16,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  assume !($i18 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i64($i24,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i25);
  call {:cexpr "a"} boogie_si_record_i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 78, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26,$i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $srem.i64($i28,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  call {:cexpr "b"} boogie_si_record_i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 80, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i30,$i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 82, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i19,$i19);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i32;
  assume {:branchcond $i33} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 74, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 75, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb18;
$bb15:
  assume !($i20 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $sgt.i32($i16,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume !($i21 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 76, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i22;
  goto $bb12;
$bb19:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i31,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  assume !($i33 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $srem.i64($i39,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i64.i32($i40);
  call {:cexpr "a"} boogie_si_record_i32($i41);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 89, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i41,$i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $srem.i64($i43,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  call {:cexpr "b"} boogie_si_record_i32($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 91, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i45,$i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 93, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i34,$i34);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $i47;
  assume {:branchcond $i48} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 85, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 86, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb27;
$bb24:
  assume !($i35 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 20} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i31,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 87, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $i37;
  goto $bb21;
$bb28:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i46,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  assume !($i48 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $srem.i64($i54,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i64.i32($i55);
  call {:cexpr "a"} boogie_si_record_i32($i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 100, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i56,$i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $srem.i64($i58,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $trunc.i64.i32($i59);
  call {:cexpr "b"} boogie_si_record_i32($i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 102, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i60,$i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i49,$i49);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $i62;
  assume {:branchcond $i63} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 96, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 97, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb36;
$bb33:
  assume !($i50 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $sgt.i32($i46,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 98, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i52;
  goto $bb30;
$bb37:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i61,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  assume !($i63 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 9} true;
  assume {:verifier.code 0} true;
  $i70 := $srem.i64($i69,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  call {:cexpr "a"} boogie_si_record_i32($i71);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i71,$i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $srem.i64($i73,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i64.i32($i74);
  call {:cexpr "b"} boogie_si_record_i32($i75);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i75,$i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i64,$i64);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $i77;
  assume {:branchcond $i78} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 107, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb45;
$bb42:
  assume !($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 20} true;
  assume {:verifier.code 0} true;
  $i66 := $sgt.i32($i61,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume ($i66 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume !($i66 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 109, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $i67;
  goto $bb39;
$bb46:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 11} true;
  assume {:verifier.code 0} true;
  $i80 := $slt.i32($i76,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  assume !($i78 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $srem.i64($i84,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i64.i32($i85);
  call {:cexpr "a"} boogie_si_record_i32($i86);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 122, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $srem.i64($i88,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i64.i32($i89);
  call {:cexpr "b"} boogie_si_record_i32($i90);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i79,$i79);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $i92;
  assume {:branchcond $i93} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume ($i80 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 118, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb54;
$bb51:
  assume !($i80 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 20} true;
  assume {:verifier.code 0} true;
  $i81 := $sgt.i32($i76,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume ($i81 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume !($i81 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 120, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $i82;
  goto $bb48;
$bb55:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $slt.i32($i91,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  assume !($i93 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $sext.i32.i64($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $srem.i64($i99,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i64.i32($i100);
  call {:cexpr "a"} boogie_si_record_i32($i101);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,$i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $sext.i32.i64($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 9} true;
  assume {:verifier.code 0} true;
  $i104 := $srem.i64($i103,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i64.i32($i104);
  call {:cexpr "b"} boogie_si_record_i32($i105);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105,$i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i94,$i94);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $i107;
  assume {:branchcond $i108} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 129, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb63;
$bb60:
  assume !($i95 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 20} true;
  assume {:verifier.code 0} true;
  $i96 := $sgt.i32($i91,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume ($i96 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume !($i96 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 131, 3} true;
  assume {:verifier.code 0} true;
  $i94 := $i97;
  goto $bb57;
$bb64:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 11} true;
  assume {:verifier.code 0} true;
  $i110 := $slt.i32($i106,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  assume !($i108 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $srem.i64($i114,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i64.i32($i115);
  call {:cexpr "a"} boogie_si_record_i32($i116);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $add.i32($i116,$i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i32.i64($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $srem.i64($i118,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i32($i119);
  call {:cexpr "b"} boogie_si_record_i32($i120);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i120,$i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i109,$i109);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i122;
  assume {:branchcond $i123} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume ($i110 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb72;
$bb69:
  assume !($i110 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 20} true;
  assume {:verifier.code 0} true;
  $i111 := $sgt.i32($i106,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume !($i111 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 142, 3} true;
  assume {:verifier.code 0} true;
  $i109 := $i112;
  goto $bb66;
$bb73:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 11} true;
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i121,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $srem.i64($i129,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.i64.i32($i130);
  call {:cexpr "a"} boogie_si_record_i32($i131);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i131,$i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i64($i133,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i64.i32($i134);
  call {:cexpr "b"} boogie_si_record_i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i32($i135,$i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i124,$i124);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $i137;
  assume {:branchcond $i138} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume ($i125 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 151, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb81;
$bb78:
  assume !($i125 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 20} true;
  assume {:verifier.code 0} true;
  $i126 := $sgt.i32($i121,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume !($i126 == 1);
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 153, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i127;
  goto $bb75;
$bb82:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $slt.i32($i136,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  assume !($i138 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i32.i64($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 9} true;
  assume {:verifier.code 0} true;
  $i145 := $srem.i64($i144,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i64.i32($i145);
  call {:cexpr "a"} boogie_si_record_i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146,$i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i32.i64($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 9} true;
  assume {:verifier.code 0} true;
  $i149 := $srem.i64($i148,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i64.i32($i149);
  call {:cexpr "b"} boogie_si_record_i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i32($i150,$i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i139,$i139);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $i152;
  assume {:branchcond $i153} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume ($i140 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 162, 9} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb90;
$bb87:
  assume !($i140 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 20} true;
  assume {:verifier.code 0} true;
  $i141 := $sgt.i32($i136,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume ($i141 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume !($i141 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 164, 3} true;
  assume {:verifier.code 0} true;
  $i139 := $i142;
  goto $bb84;
$bb91:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  assume !($i153 == 1);
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i32.i64($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $srem.i64($i159,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i160);
  call {:cexpr "a"} boogie_si_record_i32($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i161,$i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 9} true;
  assume {:verifier.code 0} true;
  $i164 := $srem.i64($i163,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i165 := $trunc.i64.i32($i164);
  call {:cexpr "b"} boogie_si_record_i32($i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $add.i32($i165,$i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 181, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i154,$i154);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $i167;
  assume {:branchcond $i168} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb99;
$bb96:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 20} true;
  assume {:verifier.code 0} true;
  $i156 := $sgt.i32($i151,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume ($i156 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume !($i156 == 1);
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 175, 3} true;
  assume {:verifier.code 0} true;
  $i154 := $i157;
  goto $bb93;
$bb100:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 11} true;
  assume {:verifier.code 0} true;
  $i170 := $slt.i32($i166,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  assume !($i168 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i174 := $sext.i32.i64($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 9} true;
  assume {:verifier.code 0} true;
  $i175 := $srem.i64($i174,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i32($i175);
  call {:cexpr "a"} boogie_si_record_i32($i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 188, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i32($i176,$i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i178 := $sext.i32.i64($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 9} true;
  assume {:verifier.code 0} true;
  $i179 := $srem.i64($i178,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $trunc.i64.i32($i179);
  call {:cexpr "b"} boogie_si_record_i32($i180);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i32($i180,$i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i169,$i169);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $i182;
  assume {:branchcond $i183} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume ($i170 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 184, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb108;
$bb105:
  assume !($i170 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 20} true;
  assume {:verifier.code 0} true;
  $i171 := $sgt.i32($i166,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume ($i171 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume !($i171 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 186, 3} true;
  assume {:verifier.code 0} true;
  $i169 := $i172;
  goto $bb102;
$bb109:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 11} true;
  assume {:verifier.code 0} true;
  $i185 := $slt.i32($i181,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  assume !($i183 == 1);
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i189 := $sext.i32.i64($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $srem.i64($i189,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $trunc.i64.i32($i190);
  call {:cexpr "a"} boogie_si_record_i32($i191);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 199, 5} true;
  assume {:verifier.code 0} true;
  $i192 := $add.i32($i191,$i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $sext.i32.i64($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $srem.i64($i193,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i64.i32($i194);
  call {:cexpr "b"} boogie_si_record_i32($i195);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 203, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i184,$i184);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $i197;
  assume {:branchcond $i198} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume ($i185 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 195, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb117;
$bb114:
  assume !($i185 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i181,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 197, 3} true;
  assume {:verifier.code 0} true;
  $i184 := $i187;
  goto $bb111;
$bb118:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 11} true;
  assume {:verifier.code 0} true;
  $i200 := $slt.i32($i196,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  assume !($i198 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i204 := $sext.i32.i64($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 9} true;
  assume {:verifier.code 0} true;
  $i205 := $srem.i64($i204,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i206 := $trunc.i64.i32($i205);
  call {:cexpr "a"} boogie_si_record_i32($i206);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 210, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i208 := $sext.i32.i64($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 9} true;
  assume {:verifier.code 0} true;
  $i209 := $srem.i64($i208,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i64.i32($i209);
  call {:cexpr "b"} boogie_si_record_i32($i210);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 212, 5} true;
  assume {:verifier.code 0} true;
  $i211 := $add.i32($i210,$i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 214, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i199,$i199);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $i212;
  assume {:branchcond $i213} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume ($i200 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 206, 9} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb126;
$bb123:
  assume !($i200 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $sgt.i32($i196,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume ($i201 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume !($i201 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 208, 3} true;
  assume {:verifier.code 0} true;
  $i199 := $i202;
  goto $bb120;
$bb127:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 11} true;
  assume {:verifier.code 0} true;
  $i215 := $slt.i32($i211,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  assume !($i213 == 1);
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i219 := $sext.i32.i64($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 9} true;
  assume {:verifier.code 0} true;
  $i220 := $srem.i64($i219,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i64.i32($i220);
  call {:cexpr "a"} boogie_si_record_i32($i221);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 221, 5} true;
  assume {:verifier.code 0} true;
  $i222 := $add.i32($i221,$i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i32.i64($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 9} true;
  assume {:verifier.code 0} true;
  $i224 := $srem.i64($i223,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i225 := $trunc.i64.i32($i224);
  call {:cexpr "b"} boogie_si_record_i32($i225);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 223, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i32($i225,$i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 225, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i214,$i214);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $i227;
  assume {:branchcond $i228} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 217, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 218, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb135;
$bb132:
  assume !($i215 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 20} true;
  assume {:verifier.code 0} true;
  $i216 := $sgt.i32($i211,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume ($i216 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume !($i216 == 1);
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 219, 3} true;
  assume {:verifier.code 0} true;
  $i214 := $i217;
  goto $bb129;
$bb136:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 11} true;
  assume {:verifier.code 0} true;
  $i230 := $slt.i32($i226,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  assume !($i228 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i32.i64($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 9} true;
  assume {:verifier.code 0} true;
  $i235 := $srem.i64($i234,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i236 := $trunc.i64.i32($i235);
  call {:cexpr "a"} boogie_si_record_i32($i236);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $add.i32($i236,$i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $srem.i64($i238,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i64.i32($i239);
  call {:cexpr "b"} boogie_si_record_i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 234, 5} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i32($i240,$i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 236, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i229,$i229);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $i242;
  assume {:branchcond $i243} true;
  goto $bb145, $bb146;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume ($i230 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 228, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 229, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb144;
$bb141:
  assume !($i230 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 20} true;
  assume {:verifier.code 0} true;
  $i231 := $sgt.i32($i226,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume ($i231 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume !($i231 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 230, 3} true;
  assume {:verifier.code 0} true;
  $i229 := $i232;
  goto $bb138;
$bb145:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 11} true;
  assume {:verifier.code 0} true;
  $i245 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb148, $bb150;
$bb146:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  assume !($i243 == 1);
  goto $bb147;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i32.i64($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i64($i249,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i64.i32($i250);
  call {:cexpr "a"} boogie_si_record_i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i32($i251,$i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i32.i64($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 9} true;
  assume {:verifier.code 0} true;
  $i254 := $srem.i64($i253,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i64.i32($i254);
  call {:cexpr "b"} boogie_si_record_i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $add.i32($i255,$i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 247, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i244,$i244);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $i257;
  assume {:branchcond $i258} true;
  goto $bb154, $bb155;
$bb148:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume ($i245 == 1);
  goto $bb149;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 239, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb153;
$bb150:
  assume !($i245 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 20} true;
  assume {:verifier.code 0} true;
  $i246 := $sgt.i32($i241,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb151, $bb152;
$bb151:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume ($i246 == 1);
  goto $bb149;
$bb152:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume !($i246 == 1);
  goto $bb153;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 241, 3} true;
  assume {:verifier.code 0} true;
  $i244 := $i247;
  goto $bb147;
$bb154:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 11} true;
  assume {:verifier.code 0} true;
  $i260 := $slt.i32($i256,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i260} true;
  goto $bb157, $bb159;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume !($i258 == 1);
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i32.i64($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 9} true;
  assume {:verifier.code 0} true;
  $i265 := $srem.i64($i264,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i64.i32($i265);
  call {:cexpr "a"} boogie_si_record_i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i267 := $add.i32($i266,$i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i268 := $sext.i32.i64($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 9} true;
  assume {:verifier.code 0} true;
  $i269 := $srem.i64($i268,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i270 := $trunc.i64.i32($i269);
  call {:cexpr "b"} boogie_si_record_i32($i270);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i270,$i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i259,$i259);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $i272;
  assume {:branchcond $i273} true;
  goto $bb163, $bb164;
$bb157:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume ($i260 == 1);
  goto $bb158;
$bb158:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 250, 9} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 251, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb162;
$bb159:
  assume !($i260 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $sgt.i32($i256,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb160, $bb161;
$bb160:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume ($i261 == 1);
  goto $bb158;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume !($i261 == 1);
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 3} true;
  assume {:verifier.code 0} true;
  $i259 := $i262;
  goto $bb156;
$bb163:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 11} true;
  assume {:verifier.code 0} true;
  $i275 := $slt.i32($i271,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb166, $bb168;
$bb164:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  assume !($i273 == 1);
  goto $bb165;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i32.i64($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 9} true;
  assume {:verifier.code 0} true;
  $i280 := $srem.i64($i279,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i281 := $trunc.i64.i32($i280);
  call {:cexpr "a"} boogie_si_record_i32($i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 265, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i32($i281,$i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i283 := $sext.i32.i64($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 9} true;
  assume {:verifier.code 0} true;
  $i284 := $srem.i64($i283,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $trunc.i64.i32($i284);
  call {:cexpr "b"} boogie_si_record_i32($i285);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i32($i285,$i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i274,$i274);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $i287;
  assume {:branchcond $i288} true;
  goto $bb172, $bb173;
$bb166:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume ($i275 == 1);
  goto $bb167;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 261, 9} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb171;
$bb168:
  assume !($i275 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 20} true;
  assume {:verifier.code 0} true;
  $i276 := $sgt.i32($i271,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb169, $bb170;
$bb169:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume ($i276 == 1);
  goto $bb167;
$bb170:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume !($i276 == 1);
  goto $bb171;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 263, 3} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb165;
$bb172:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 11} true;
  assume {:verifier.code 0} true;
  $i290 := $slt.i32($i286,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i290} true;
  goto $bb175, $bb177;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  assume !($i288 == 1);
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i294 := $sext.i32.i64($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 9} true;
  assume {:verifier.code 0} true;
  $i295 := $srem.i64($i294,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $trunc.i64.i32($i295);
  call {:cexpr "a"} boogie_si_record_i32($i296);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 276, 5} true;
  assume {:verifier.code 0} true;
  $i297 := $add.i32($i296,$i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $sext.i32.i64($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $srem.i64($i298,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i300 := $trunc.i64.i32($i299);
  call {:cexpr "b"} boogie_si_record_i32($i300);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 278, 5} true;
  assume {:verifier.code 0} true;
  $i301 := $add.i32($i300,$i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 280, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i289,$i289);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $i302;
  assume {:branchcond $i303} true;
  goto $bb181, $bb182;
$bb175:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume ($i290 == 1);
  goto $bb176;
$bb176:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 272, 9} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb180;
$bb177:
  assume !($i290 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 20} true;
  assume {:verifier.code 0} true;
  $i291 := $sgt.i32($i286,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb178, $bb179;
$bb178:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume ($i291 == 1);
  goto $bb176;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume !($i291 == 1);
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 274, 3} true;
  assume {:verifier.code 0} true;
  $i289 := $i292;
  goto $bb174;
$bb181:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 11} true;
  assume {:verifier.code 0} true;
  $i305 := $slt.i32($i301,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb184, $bb186;
$bb182:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  assume !($i303 == 1);
  goto $bb183;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 9} true;
  assume {:verifier.code 0} true;
  $i310 := $srem.i64($i309,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i311 := $trunc.i64.i32($i310);
  call {:cexpr "a"} boogie_si_record_i32($i311);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 287, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311,$i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i313 := $sext.i32.i64($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 9} true;
  assume {:verifier.code 0} true;
  $i314 := $srem.i64($i313,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i315 := $trunc.i64.i32($i314);
  call {:cexpr "b"} boogie_si_record_i32($i315);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 289, 5} true;
  assume {:verifier.code 0} true;
  $i316 := $add.i32($i315,$i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 291, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i304,$i304);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $i317;
  assume {:branchcond $i318} true;
  goto $bb190, $bb191;
$bb184:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume ($i305 == 1);
  goto $bb185;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 283, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 284, 5} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb189;
$bb186:
  assume !($i305 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 20} true;
  assume {:verifier.code 0} true;
  $i306 := $sgt.i32($i301,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb187, $bb188;
$bb187:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume ($i306 == 1);
  goto $bb185;
$bb188:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume !($i306 == 1);
  goto $bb189;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 285, 3} true;
  assume {:verifier.code 0} true;
  $i304 := $i307;
  goto $bb183;
$bb190:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 11} true;
  assume {:verifier.code 0} true;
  $i320 := $slt.i32($i316,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i320} true;
  goto $bb193, $bb195;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  assume !($i318 == 1);
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i324 := $sext.i32.i64($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 9} true;
  assume {:verifier.code 0} true;
  $i325 := $srem.i64($i324,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i326 := $trunc.i64.i32($i325);
  call {:cexpr "a"} boogie_si_record_i32($i326);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 298, 5} true;
  assume {:verifier.code 0} true;
  $i327 := $add.i32($i326,$i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i32.i64($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 9} true;
  assume {:verifier.code 0} true;
  $i329 := $srem.i64($i328,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i330 := $trunc.i64.i32($i329);
  call {:cexpr "b"} boogie_si_record_i32($i330);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 300, 5} true;
  assume {:verifier.code 0} true;
  $i331 := $add.i32($i330,$i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 302, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i319,$i319);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $i332;
  assume {:branchcond $i333} true;
  goto $bb199, $bb200;
$bb193:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume ($i320 == 1);
  goto $bb194;
$bb194:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 294, 9} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 295, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb198;
$bb195:
  assume !($i320 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 20} true;
  assume {:verifier.code 0} true;
  $i321 := $sgt.i32($i316,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb196, $bb197;
$bb196:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume ($i321 == 1);
  goto $bb194;
$bb197:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume !($i321 == 1);
  goto $bb198;
$bb198:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 296, 3} true;
  assume {:verifier.code 0} true;
  $i319 := $i322;
  goto $bb192;
$bb199:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 11} true;
  assume {:verifier.code 0} true;
  $i335 := $slt.i32($i331,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb202, $bb204;
$bb200:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  assume !($i333 == 1);
  goto $bb201;
$bb201:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i32.i64($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 9} true;
  assume {:verifier.code 0} true;
  $i340 := $srem.i64($i339,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i341 := $trunc.i64.i32($i340);
  call {:cexpr "a"} boogie_si_record_i32($i341);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 309, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $add.i32($i341,$i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i32.i64($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i64($i343,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i64.i32($i344);
  call {:cexpr "b"} boogie_si_record_i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 311, 5} true;
  assume {:verifier.code 0} true;
  $i346 := $add.i32($i345,$i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 313, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i334,$i334);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $i347;
  assume {:branchcond $i348} true;
  goto $bb208, $bb209;
$bb202:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume ($i335 == 1);
  goto $bb203;
$bb203:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 305, 9} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 306, 5} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb207;
$bb204:
  assume !($i335 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 20} true;
  assume {:verifier.code 0} true;
  $i336 := $sgt.i32($i331,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb205, $bb206;
$bb205:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume ($i336 == 1);
  goto $bb203;
$bb206:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume !($i336 == 1);
  goto $bb207;
$bb207:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 307, 3} true;
  assume {:verifier.code 0} true;
  $i334 := $i337;
  goto $bb201;
$bb208:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 11} true;
  assume {:verifier.code 0} true;
  $i350 := $slt.i32($i346,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb211, $bb213;
$bb209:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  assume !($i348 == 1);
  goto $bb210;
$bb210:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i32.i64($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $srem.i64($i354,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $trunc.i64.i32($i355);
  call {:cexpr "a"} boogie_si_record_i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 320, 5} true;
  assume {:verifier.code 0} true;
  $i357 := $add.i32($i356,$i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i358 := $sext.i32.i64($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 9} true;
  assume {:verifier.code 0} true;
  $i359 := $srem.i64($i358,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i360 := $trunc.i64.i32($i359);
  call {:cexpr "b"} boogie_si_record_i32($i360);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 322, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $add.i32($i360,$i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 324, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i349,$i349);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $i362;
  assume {:branchcond $i363} true;
  goto $bb217, $bb218;
$bb211:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume ($i350 == 1);
  goto $bb212;
$bb212:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 316, 9} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 317, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb216;
$bb213:
  assume !($i350 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 20} true;
  assume {:verifier.code 0} true;
  $i351 := $sgt.i32($i346,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb214, $bb215;
$bb214:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume ($i351 == 1);
  goto $bb212;
$bb215:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume !($i351 == 1);
  goto $bb216;
$bb216:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 318, 3} true;
  assume {:verifier.code 0} true;
  $i349 := $i352;
  goto $bb210;
$bb217:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 11} true;
  assume {:verifier.code 0} true;
  $i365 := $slt.i32($i361,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i365} true;
  goto $bb220, $bb222;
$bb218:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  assume !($i363 == 1);
  goto $bb219;
$bb219:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i32.i64($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 9} true;
  assume {:verifier.code 0} true;
  $i370 := $srem.i64($i369,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i64.i32($i370);
  call {:cexpr "a"} boogie_si_record_i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 331, 5} true;
  assume {:verifier.code 0} true;
  $i372 := $add.i32($i371,$i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 9} true;
  assume {:verifier.code 0} true;
  $i374 := $srem.i64($i373,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i375 := $trunc.i64.i32($i374);
  call {:cexpr "b"} boogie_si_record_i32($i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 333, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $add.i32($i375,$i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 335, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i364,$i364);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $i377;
  assume {:branchcond $i378} true;
  goto $bb226, $bb227;
$bb220:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume ($i365 == 1);
  goto $bb221;
$bb221:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 327, 9} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 328, 5} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb225;
$bb222:
  assume !($i365 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 20} true;
  assume {:verifier.code 0} true;
  $i366 := $sgt.i32($i361,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb223, $bb224;
$bb223:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume ($i366 == 1);
  goto $bb221;
$bb224:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume !($i366 == 1);
  goto $bb225;
$bb225:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 329, 3} true;
  assume {:verifier.code 0} true;
  $i364 := $i367;
  goto $bb219;
$bb226:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 11} true;
  assume {:verifier.code 0} true;
  $i380 := $slt.i32($i376,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i380} true;
  goto $bb229, $bb231;
$bb227:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  assume !($i378 == 1);
  goto $bb228;
$bb228:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i384 := $sext.i32.i64($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 9} true;
  assume {:verifier.code 0} true;
  $i385 := $srem.i64($i384,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i386 := $trunc.i64.i32($i385);
  call {:cexpr "a"} boogie_si_record_i32($i386);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 342, 5} true;
  assume {:verifier.code 0} true;
  $i387 := $add.i32($i386,$i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i32.i64($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 9} true;
  assume {:verifier.code 0} true;
  $i389 := $srem.i64($i388,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i390 := $trunc.i64.i32($i389);
  call {:cexpr "b"} boogie_si_record_i32($i390);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 344, 5} true;
  assume {:verifier.code 0} true;
  $i391 := $add.i32($i390,$i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 346, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i379,$i379);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $i392;
  assume {:branchcond $i393} true;
  goto $bb235, $bb236;
$bb229:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume ($i380 == 1);
  goto $bb230;
$bb230:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 338, 9} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 339, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb234;
$bb231:
  assume !($i380 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 20} true;
  assume {:verifier.code 0} true;
  $i381 := $sgt.i32($i376,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb232, $bb233;
$bb232:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume ($i381 == 1);
  goto $bb230;
$bb233:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume !($i381 == 1);
  goto $bb234;
$bb234:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 340, 3} true;
  assume {:verifier.code 0} true;
  $i379 := $i382;
  goto $bb228;
$bb235:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 11} true;
  assume {:verifier.code 0} true;
  $i395 := $slt.i32($i391,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i395} true;
  goto $bb238, $bb240;
$bb236:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  assume !($i393 == 1);
  goto $bb237;
$bb237:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i399 := $sext.i32.i64($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 9} true;
  assume {:verifier.code 0} true;
  $i400 := $srem.i64($i399,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $trunc.i64.i32($i400);
  call {:cexpr "a"} boogie_si_record_i32($i401);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 353, 5} true;
  assume {:verifier.code 0} true;
  $i402 := $add.i32($i401,$i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $sext.i32.i64($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 9} true;
  assume {:verifier.code 0} true;
  $i404 := $srem.i64($i403,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i405 := $trunc.i64.i32($i404);
  call {:cexpr "b"} boogie_si_record_i32($i405);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 355, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405,$i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 357, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i394,$i394);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $i407;
  assume {:branchcond $i408} true;
  goto $bb244, $bb245;
$bb238:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume ($i395 == 1);
  goto $bb239;
$bb239:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 349, 9} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 350, 5} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb243;
$bb240:
  assume !($i395 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 20} true;
  assume {:verifier.code 0} true;
  $i396 := $sgt.i32($i391,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb241, $bb242;
$bb241:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume ($i396 == 1);
  goto $bb239;
$bb242:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume !($i396 == 1);
  goto $bb243;
$bb243:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 351, 3} true;
  assume {:verifier.code 0} true;
  $i394 := $i397;
  goto $bb237;
$bb244:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 11} true;
  assume {:verifier.code 0} true;
  $i410 := $slt.i32($i406,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i410} true;
  goto $bb247, $bb249;
$bb245:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  assume !($i408 == 1);
  goto $bb246;
$bb246:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $sext.i32.i64($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $srem.i64($i414,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i416 := $trunc.i64.i32($i415);
  call {:cexpr "a"} boogie_si_record_i32($i416);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 364, 5} true;
  assume {:verifier.code 0} true;
  $i417 := $add.i32($i416,$i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i418 := $sext.i32.i64($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $srem.i64($i418,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i420 := $trunc.i64.i32($i419);
  call {:cexpr "b"} boogie_si_record_i32($i420);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 366, 5} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420,$i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 368, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i409,$i409);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $i422;
  assume {:branchcond $i423} true;
  goto $bb253, $bb254;
$bb247:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume ($i410 == 1);
  goto $bb248;
$bb248:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 360, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 361, 5} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb252;
$bb249:
  assume !($i410 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 20} true;
  assume {:verifier.code 0} true;
  $i411 := $sgt.i32($i406,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb250, $bb251;
$bb250:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume ($i411 == 1);
  goto $bb248;
$bb251:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume !($i411 == 1);
  goto $bb252;
$bb252:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 362, 3} true;
  assume {:verifier.code 0} true;
  $i409 := $i412;
  goto $bb246;
$bb253:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 11} true;
  assume {:verifier.code 0} true;
  $i425 := $slt.i32($i421,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i425} true;
  goto $bb256, $bb258;
$bb254:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  assume !($i423 == 1);
  goto $bb255;
$bb255:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i429 := $sext.i32.i64($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 9} true;
  assume {:verifier.code 0} true;
  $i430 := $srem.i64($i429,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i431 := $trunc.i64.i32($i430);
  call {:cexpr "a"} boogie_si_record_i32($i431);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 375, 5} true;
  assume {:verifier.code 0} true;
  $i432 := $add.i32($i431,$i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i32.i64($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 9} true;
  assume {:verifier.code 0} true;
  $i434 := $srem.i64($i433,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i435 := $trunc.i64.i32($i434);
  call {:cexpr "b"} boogie_si_record_i32($i435);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 377, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $add.i32($i435,$i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 379, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i424,$i424);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $i437;
  assume {:branchcond $i438} true;
  goto $bb262, $bb263;
$bb256:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume ($i425 == 1);
  goto $bb257;
$bb257:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 371, 9} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 372, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb261;
$bb258:
  assume !($i425 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 20} true;
  assume {:verifier.code 0} true;
  $i426 := $sgt.i32($i421,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb259, $bb260;
$bb259:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume ($i426 == 1);
  goto $bb257;
$bb260:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume !($i426 == 1);
  goto $bb261;
$bb261:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 373, 3} true;
  assume {:verifier.code 0} true;
  $i424 := $i427;
  goto $bb255;
$bb262:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 11} true;
  assume {:verifier.code 0} true;
  $i440 := $slt.i32($i436,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i440} true;
  goto $bb265, $bb267;
$bb263:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  assume !($i438 == 1);
  goto $bb264;
$bb264:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i32.i64($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 9} true;
  assume {:verifier.code 0} true;
  $i445 := $srem.i64($i444,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i446 := $trunc.i64.i32($i445);
  call {:cexpr "a"} boogie_si_record_i32($i446);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 386, 5} true;
  assume {:verifier.code 0} true;
  $i447 := $add.i32($i446,$i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i448 := $sext.i32.i64($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $srem.i64($i448,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i450 := $trunc.i64.i32($i449);
  call {:cexpr "b"} boogie_si_record_i32($i450);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 388, 5} true;
  assume {:verifier.code 0} true;
  $i451 := $add.i32($i450,$i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 390, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i439,$i439);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $i452;
  assume {:branchcond $i453} true;
  goto $bb271, $bb272;
$bb265:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume ($i440 == 1);
  goto $bb266;
$bb266:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 382, 9} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 383, 5} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb270;
$bb267:
  assume !($i440 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 20} true;
  assume {:verifier.code 0} true;
  $i441 := $sgt.i32($i436,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb268, $bb269;
$bb268:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume ($i441 == 1);
  goto $bb266;
$bb269:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume !($i441 == 1);
  goto $bb270;
$bb270:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 384, 3} true;
  assume {:verifier.code 0} true;
  $i439 := $i442;
  goto $bb264;
$bb271:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 11} true;
  assume {:verifier.code 0} true;
  $i455 := $slt.i32($i451,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i455} true;
  goto $bb274, $bb276;
$bb272:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  assume !($i453 == 1);
  goto $bb273;
$bb273:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i459 := $sext.i32.i64($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 9} true;
  assume {:verifier.code 0} true;
  $i460 := $srem.i64($i459,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i461 := $trunc.i64.i32($i460);
  call {:cexpr "a"} boogie_si_record_i32($i461);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 397, 5} true;
  assume {:verifier.code 0} true;
  $i462 := $add.i32($i461,$i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i463 := $sext.i32.i64($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 9} true;
  assume {:verifier.code 0} true;
  $i464 := $srem.i64($i463,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i465 := $trunc.i64.i32($i464);
  call {:cexpr "b"} boogie_si_record_i32($i465);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 399, 5} true;
  assume {:verifier.code 0} true;
  $i466 := $add.i32($i465,$i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 401, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i454,$i454);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $i467;
  assume {:branchcond $i468} true;
  goto $bb280, $bb281;
$bb274:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume ($i455 == 1);
  goto $bb275;
$bb275:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 393, 9} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 394, 5} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb279;
$bb276:
  assume !($i455 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 20} true;
  assume {:verifier.code 0} true;
  $i456 := $sgt.i32($i451,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb277, $bb278;
$bb277:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume ($i456 == 1);
  goto $bb275;
$bb278:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume !($i456 == 1);
  goto $bb279;
$bb279:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 395, 3} true;
  assume {:verifier.code 0} true;
  $i454 := $i457;
  goto $bb273;
$bb280:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 11} true;
  assume {:verifier.code 0} true;
  $i470 := $slt.i32($i466,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i470} true;
  goto $bb283, $bb285;
$bb281:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  assume !($i468 == 1);
  goto $bb282;
$bb282:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i474 := $sext.i32.i64($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 9} true;
  assume {:verifier.code 0} true;
  $i475 := $srem.i64($i474,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i476 := $trunc.i64.i32($i475);
  call {:cexpr "a"} boogie_si_record_i32($i476);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 408, 5} true;
  assume {:verifier.code 0} true;
  $i477 := $add.i32($i476,$i476);
  call {:cexpr "a"} boogie_si_record_i32($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i478 := $sext.i32.i64($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 9} true;
  assume {:verifier.code 0} true;
  $i479 := $srem.i64($i478,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i480 := $trunc.i64.i32($i479);
  call {:cexpr "b"} boogie_si_record_i32($i480);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 410, 5} true;
  assume {:verifier.code 0} true;
  $i481 := $add.i32($i480,$i480);
  call {:cexpr "b"} boogie_si_record_i32($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 412, 5} true;
  assume {:verifier.code 0} true;
  $i482 := $add.i32($i469,$i469);
  call {:cexpr "c"} boogie_si_record_i32($i482);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 9} true;
  assume {:verifier.code 0} true;
  $i483 := $slt.i32($i477,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  $i484 := $i482;
  assume {:branchcond $i483} true;
  goto $bb289, $bb290;
$bb283:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume ($i470 == 1);
  goto $bb284;
$bb284:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 404, 9} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 405, 5} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb288;
$bb285:
  assume !($i470 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 20} true;
  assume {:verifier.code 0} true;
  $i471 := $sgt.i32($i466,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb286, $bb287;
$bb286:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume ($i471 == 1);
  goto $bb284;
$bb287:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume !($i471 == 1);
  goto $bb288;
$bb288:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 406, 3} true;
  assume {:verifier.code 0} true;
  $i469 := $i472;
  goto $bb282;
$bb289:
  assume ($i483 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 11} true;
  assume {:verifier.code 0} true;
  $i485 := $slt.i32($i481,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i485} true;
  goto $bb292, $bb294;
$bb290:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  assume !($i483 == 1);
  goto $bb291;
$bb291:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i489 := $sext.i32.i64($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 9} true;
  assume {:verifier.code 0} true;
  $i490 := $srem.i64($i489,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i491 := $trunc.i64.i32($i490);
  call {:cexpr "a"} boogie_si_record_i32($i491);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 419, 5} true;
  assume {:verifier.code 0} true;
  $i492 := $add.i32($i491,$i491);
  call {:cexpr "a"} boogie_si_record_i32($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i493 := $sext.i32.i64($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 9} true;
  assume {:verifier.code 0} true;
  $i494 := $srem.i64($i493,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i495 := $trunc.i64.i32($i494);
  call {:cexpr "b"} boogie_si_record_i32($i495);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 421, 5} true;
  assume {:verifier.code 0} true;
  $i496 := $add.i32($i495,$i495);
  call {:cexpr "b"} boogie_si_record_i32($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 423, 5} true;
  assume {:verifier.code 0} true;
  $i497 := $add.i32($i484,$i484);
  call {:cexpr "c"} boogie_si_record_i32($i497);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 9} true;
  assume {:verifier.code 0} true;
  $i498 := $slt.i32($i492,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  $i499 := $i497;
  assume {:branchcond $i498} true;
  goto $bb298, $bb299;
$bb292:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume ($i485 == 1);
  goto $bb293;
$bb293:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 415, 9} true;
  assume {:verifier.code 0} true;
  $i488 := $add.i32($i482,1);
  call {:cexpr "c"} boogie_si_record_i32($i488);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 416, 5} true;
  assume {:verifier.code 0} true;
  $i487 := $i488;
  goto $bb297;
$bb294:
  assume !($i485 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 20} true;
  assume {:verifier.code 0} true;
  $i486 := $sgt.i32($i481,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  $i487 := $i482;
  assume {:branchcond $i486} true;
  goto $bb295, $bb296;
$bb295:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume ($i486 == 1);
  goto $bb293;
$bb296:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume !($i486 == 1);
  goto $bb297;
$bb297:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 417, 3} true;
  assume {:verifier.code 0} true;
  $i484 := $i487;
  goto $bb291;
$bb298:
  assume ($i498 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 11} true;
  assume {:verifier.code 0} true;
  $i500 := $slt.i32($i496,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i500} true;
  goto $bb301, $bb303;
$bb299:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  assume !($i498 == 1);
  goto $bb300;
$bb300:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i504 := $sext.i32.i64($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 9} true;
  assume {:verifier.code 0} true;
  $i505 := $srem.i64($i504,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i506 := $trunc.i64.i32($i505);
  call {:cexpr "a"} boogie_si_record_i32($i506);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 430, 5} true;
  assume {:verifier.code 0} true;
  $i507 := $add.i32($i506,$i506);
  call {:cexpr "a"} boogie_si_record_i32($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i508 := $sext.i32.i64($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 9} true;
  assume {:verifier.code 0} true;
  $i509 := $srem.i64($i508,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i510 := $trunc.i64.i32($i509);
  call {:cexpr "b"} boogie_si_record_i32($i510);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 432, 5} true;
  assume {:verifier.code 0} true;
  $i511 := $add.i32($i510,$i510);
  call {:cexpr "b"} boogie_si_record_i32($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 434, 5} true;
  assume {:verifier.code 0} true;
  $i512 := $add.i32($i499,$i499);
  call {:cexpr "c"} boogie_si_record_i32($i512);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 9} true;
  assume {:verifier.code 0} true;
  $i513 := $slt.i32($i507,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  $i514 := $i512;
  assume {:branchcond $i513} true;
  goto $bb307, $bb308;
$bb301:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume ($i500 == 1);
  goto $bb302;
$bb302:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 426, 9} true;
  assume {:verifier.code 0} true;
  $i503 := $add.i32($i497,1);
  call {:cexpr "c"} boogie_si_record_i32($i503);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 427, 5} true;
  assume {:verifier.code 0} true;
  $i502 := $i503;
  goto $bb306;
$bb303:
  assume !($i500 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 20} true;
  assume {:verifier.code 0} true;
  $i501 := $sgt.i32($i496,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  $i502 := $i497;
  assume {:branchcond $i501} true;
  goto $bb304, $bb305;
$bb304:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume ($i501 == 1);
  goto $bb302;
$bb305:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume !($i501 == 1);
  goto $bb306;
$bb306:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 428, 3} true;
  assume {:verifier.code 0} true;
  $i499 := $i502;
  goto $bb300;
$bb307:
  assume ($i513 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 11} true;
  assume {:verifier.code 0} true;
  $i515 := $slt.i32($i511,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i515} true;
  goto $bb310, $bb312;
$bb308:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  assume !($i513 == 1);
  goto $bb309;
$bb309:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i519 := $sext.i32.i64($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 9} true;
  assume {:verifier.code 0} true;
  $i520 := $srem.i64($i519,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i521 := $trunc.i64.i32($i520);
  call {:cexpr "a"} boogie_si_record_i32($i521);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 441, 5} true;
  assume {:verifier.code 0} true;
  $i522 := $add.i32($i521,$i521);
  call {:cexpr "a"} boogie_si_record_i32($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i523 := $sext.i32.i64($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 9} true;
  assume {:verifier.code 0} true;
  $i524 := $srem.i64($i523,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i525 := $trunc.i64.i32($i524);
  call {:cexpr "b"} boogie_si_record_i32($i525);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 443, 5} true;
  assume {:verifier.code 0} true;
  $i526 := $add.i32($i525,$i525);
  call {:cexpr "b"} boogie_si_record_i32($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 445, 5} true;
  assume {:verifier.code 0} true;
  $i527 := $add.i32($i514,$i514);
  call {:cexpr "c"} boogie_si_record_i32($i527);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 9} true;
  assume {:verifier.code 0} true;
  $i528 := $slt.i32($i522,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  $i529 := $i527;
  assume {:branchcond $i528} true;
  goto $bb316, $bb317;
$bb310:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume ($i515 == 1);
  goto $bb311;
$bb311:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 437, 9} true;
  assume {:verifier.code 0} true;
  $i518 := $add.i32($i512,1);
  call {:cexpr "c"} boogie_si_record_i32($i518);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 438, 5} true;
  assume {:verifier.code 0} true;
  $i517 := $i518;
  goto $bb315;
$bb312:
  assume !($i515 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 20} true;
  assume {:verifier.code 0} true;
  $i516 := $sgt.i32($i511,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  $i517 := $i512;
  assume {:branchcond $i516} true;
  goto $bb313, $bb314;
$bb313:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume ($i516 == 1);
  goto $bb311;
$bb314:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume !($i516 == 1);
  goto $bb315;
$bb315:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i514 := $i517;
  goto $bb309;
$bb316:
  assume ($i528 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 11} true;
  assume {:verifier.code 0} true;
  $i530 := $slt.i32($i526,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i530} true;
  goto $bb319, $bb321;
$bb317:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  assume !($i528 == 1);
  goto $bb318;
$bb318:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i534 := $sext.i32.i64($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 9} true;
  assume {:verifier.code 0} true;
  $i535 := $srem.i64($i534,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i536 := $trunc.i64.i32($i535);
  call {:cexpr "a"} boogie_si_record_i32($i536);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 452, 5} true;
  assume {:verifier.code 0} true;
  $i537 := $add.i32($i536,$i536);
  call {:cexpr "a"} boogie_si_record_i32($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i538 := $sext.i32.i64($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 9} true;
  assume {:verifier.code 0} true;
  $i539 := $srem.i64($i538,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i540 := $trunc.i64.i32($i539);
  call {:cexpr "b"} boogie_si_record_i32($i540);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 454, 5} true;
  assume {:verifier.code 0} true;
  $i541 := $add.i32($i540,$i540);
  call {:cexpr "b"} boogie_si_record_i32($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 456, 5} true;
  assume {:verifier.code 0} true;
  $i542 := $add.i32($i529,$i529);
  call {:cexpr "c"} boogie_si_record_i32($i542);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 9} true;
  assume {:verifier.code 0} true;
  $i543 := $slt.i32($i537,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  $i544 := $i542;
  assume {:branchcond $i543} true;
  goto $bb325, $bb326;
$bb319:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume ($i530 == 1);
  goto $bb320;
$bb320:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 448, 9} true;
  assume {:verifier.code 0} true;
  $i533 := $add.i32($i527,1);
  call {:cexpr "c"} boogie_si_record_i32($i533);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 449, 5} true;
  assume {:verifier.code 0} true;
  $i532 := $i533;
  goto $bb324;
$bb321:
  assume !($i530 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 20} true;
  assume {:verifier.code 0} true;
  $i531 := $sgt.i32($i526,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  $i532 := $i527;
  assume {:branchcond $i531} true;
  goto $bb322, $bb323;
$bb322:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume ($i531 == 1);
  goto $bb320;
$bb323:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume !($i531 == 1);
  goto $bb324;
$bb324:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 450, 3} true;
  assume {:verifier.code 0} true;
  $i529 := $i532;
  goto $bb318;
$bb325:
  assume ($i543 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 11} true;
  assume {:verifier.code 0} true;
  $i545 := $slt.i32($i541,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i545} true;
  goto $bb328, $bb330;
$bb326:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  assume !($i543 == 1);
  goto $bb327;
$bb327:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i549 := $sext.i32.i64($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 9} true;
  assume {:verifier.code 0} true;
  $i550 := $srem.i64($i549,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i551 := $trunc.i64.i32($i550);
  call {:cexpr "a"} boogie_si_record_i32($i551);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 463, 5} true;
  assume {:verifier.code 0} true;
  $i552 := $add.i32($i551,$i551);
  call {:cexpr "a"} boogie_si_record_i32($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i553 := $sext.i32.i64($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 9} true;
  assume {:verifier.code 0} true;
  $i554 := $srem.i64($i553,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i555 := $trunc.i64.i32($i554);
  call {:cexpr "b"} boogie_si_record_i32($i555);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 465, 5} true;
  assume {:verifier.code 0} true;
  $i556 := $add.i32($i555,$i555);
  call {:cexpr "b"} boogie_si_record_i32($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 467, 5} true;
  assume {:verifier.code 0} true;
  $i557 := $add.i32($i544,$i544);
  call {:cexpr "c"} boogie_si_record_i32($i557);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 9} true;
  assume {:verifier.code 0} true;
  $i558 := $slt.i32($i552,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  $i559 := $i557;
  assume {:branchcond $i558} true;
  goto $bb334, $bb335;
$bb328:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume ($i545 == 1);
  goto $bb329;
$bb329:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 459, 9} true;
  assume {:verifier.code 0} true;
  $i548 := $add.i32($i542,1);
  call {:cexpr "c"} boogie_si_record_i32($i548);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 460, 5} true;
  assume {:verifier.code 0} true;
  $i547 := $i548;
  goto $bb333;
$bb330:
  assume !($i545 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 20} true;
  assume {:verifier.code 0} true;
  $i546 := $sgt.i32($i541,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  $i547 := $i542;
  assume {:branchcond $i546} true;
  goto $bb331, $bb332;
$bb331:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume ($i546 == 1);
  goto $bb329;
$bb332:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume !($i546 == 1);
  goto $bb333;
$bb333:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 461, 3} true;
  assume {:verifier.code 0} true;
  $i544 := $i547;
  goto $bb327;
$bb334:
  assume ($i558 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 11} true;
  assume {:verifier.code 0} true;
  $i560 := $slt.i32($i556,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i560} true;
  goto $bb337, $bb339;
$bb335:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  assume !($i558 == 1);
  goto $bb336;
$bb336:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i564 := $sext.i32.i64($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 9} true;
  assume {:verifier.code 0} true;
  $i565 := $srem.i64($i564,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i566 := $trunc.i64.i32($i565);
  call {:cexpr "a"} boogie_si_record_i32($i566);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 474, 5} true;
  assume {:verifier.code 0} true;
  $i567 := $add.i32($i566,$i566);
  call {:cexpr "a"} boogie_si_record_i32($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i568 := $sext.i32.i64($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 9} true;
  assume {:verifier.code 0} true;
  $i569 := $srem.i64($i568,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i570 := $trunc.i64.i32($i569);
  call {:cexpr "b"} boogie_si_record_i32($i570);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 476, 5} true;
  assume {:verifier.code 0} true;
  $i571 := $add.i32($i570,$i570);
  call {:cexpr "b"} boogie_si_record_i32($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 478, 5} true;
  assume {:verifier.code 0} true;
  $i572 := $add.i32($i559,$i559);
  call {:cexpr "c"} boogie_si_record_i32($i572);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 9} true;
  assume {:verifier.code 0} true;
  $i573 := $slt.i32($i567,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $i574 := $i572;
  assume {:branchcond $i573} true;
  goto $bb343, $bb344;
$bb337:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume ($i560 == 1);
  goto $bb338;
$bb338:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 470, 9} true;
  assume {:verifier.code 0} true;
  $i563 := $add.i32($i557,1);
  call {:cexpr "c"} boogie_si_record_i32($i563);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 471, 5} true;
  assume {:verifier.code 0} true;
  $i562 := $i563;
  goto $bb342;
$bb339:
  assume !($i560 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 20} true;
  assume {:verifier.code 0} true;
  $i561 := $sgt.i32($i556,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  $i562 := $i557;
  assume {:branchcond $i561} true;
  goto $bb340, $bb341;
$bb340:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume ($i561 == 1);
  goto $bb338;
$bb341:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume !($i561 == 1);
  goto $bb342;
$bb342:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 472, 3} true;
  assume {:verifier.code 0} true;
  $i559 := $i562;
  goto $bb336;
$bb343:
  assume ($i573 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 11} true;
  assume {:verifier.code 0} true;
  $i575 := $slt.i32($i571,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i575} true;
  goto $bb346, $bb348;
$bb344:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  assume !($i573 == 1);
  goto $bb345;
$bb345:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i579 := $sext.i32.i64($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 9} true;
  assume {:verifier.code 0} true;
  $i580 := $srem.i64($i579,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i581 := $trunc.i64.i32($i580);
  call {:cexpr "a"} boogie_si_record_i32($i581);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 485, 5} true;
  assume {:verifier.code 0} true;
  $i582 := $add.i32($i581,$i581);
  call {:cexpr "a"} boogie_si_record_i32($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i583 := $sext.i32.i64($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 9} true;
  assume {:verifier.code 0} true;
  $i584 := $srem.i64($i583,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i585 := $trunc.i64.i32($i584);
  call {:cexpr "b"} boogie_si_record_i32($i585);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 487, 5} true;
  assume {:verifier.code 0} true;
  $i586 := $add.i32($i585,$i585);
  call {:cexpr "b"} boogie_si_record_i32($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 489, 5} true;
  assume {:verifier.code 0} true;
  $i587 := $add.i32($i574,$i574);
  call {:cexpr "c"} boogie_si_record_i32($i587);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 9} true;
  assume {:verifier.code 0} true;
  $i588 := $slt.i32($i582,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  $i589 := $i587;
  assume {:branchcond $i588} true;
  goto $bb352, $bb353;
$bb346:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume ($i575 == 1);
  goto $bb347;
$bb347:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 481, 9} true;
  assume {:verifier.code 0} true;
  $i578 := $add.i32($i572,1);
  call {:cexpr "c"} boogie_si_record_i32($i578);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 482, 5} true;
  assume {:verifier.code 0} true;
  $i577 := $i578;
  goto $bb351;
$bb348:
  assume !($i575 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 20} true;
  assume {:verifier.code 0} true;
  $i576 := $sgt.i32($i571,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  $i577 := $i572;
  assume {:branchcond $i576} true;
  goto $bb349, $bb350;
$bb349:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume ($i576 == 1);
  goto $bb347;
$bb350:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume !($i576 == 1);
  goto $bb351;
$bb351:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 483, 3} true;
  assume {:verifier.code 0} true;
  $i574 := $i577;
  goto $bb345;
$bb352:
  assume ($i588 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 11} true;
  assume {:verifier.code 0} true;
  $i590 := $slt.i32($i586,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i590} true;
  goto $bb355, $bb357;
$bb353:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  assume !($i588 == 1);
  goto $bb354;
$bb354:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i594 := $sext.i32.i64($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 9} true;
  assume {:verifier.code 0} true;
  $i595 := $srem.i64($i594,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i596 := $trunc.i64.i32($i595);
  call {:cexpr "a"} boogie_si_record_i32($i596);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 496, 5} true;
  assume {:verifier.code 0} true;
  $i597 := $add.i32($i596,$i596);
  call {:cexpr "a"} boogie_si_record_i32($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i598 := $sext.i32.i64($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 9} true;
  assume {:verifier.code 0} true;
  $i599 := $srem.i64($i598,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i600 := $trunc.i64.i32($i599);
  call {:cexpr "b"} boogie_si_record_i32($i600);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 498, 5} true;
  assume {:verifier.code 0} true;
  $i601 := $add.i32($i600,$i600);
  call {:cexpr "b"} boogie_si_record_i32($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 500, 5} true;
  assume {:verifier.code 0} true;
  $i602 := $add.i32($i589,$i589);
  call {:cexpr "c"} boogie_si_record_i32($i602);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 9} true;
  assume {:verifier.code 0} true;
  $i603 := $slt.i32($i597,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  $i604 := $i602;
  assume {:branchcond $i603} true;
  goto $bb361, $bb362;
$bb355:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume ($i590 == 1);
  goto $bb356;
$bb356:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 492, 9} true;
  assume {:verifier.code 0} true;
  $i593 := $add.i32($i587,1);
  call {:cexpr "c"} boogie_si_record_i32($i593);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 493, 5} true;
  assume {:verifier.code 0} true;
  $i592 := $i593;
  goto $bb360;
$bb357:
  assume !($i590 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 20} true;
  assume {:verifier.code 0} true;
  $i591 := $sgt.i32($i586,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  $i592 := $i587;
  assume {:branchcond $i591} true;
  goto $bb358, $bb359;
$bb358:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume ($i591 == 1);
  goto $bb356;
$bb359:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume !($i591 == 1);
  goto $bb360;
$bb360:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 494, 3} true;
  assume {:verifier.code 0} true;
  $i589 := $i592;
  goto $bb354;
$bb361:
  assume ($i603 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 11} true;
  assume {:verifier.code 0} true;
  $i605 := $slt.i32($i601,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i605} true;
  goto $bb364, $bb366;
$bb362:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  assume !($i603 == 1);
  goto $bb363;
$bb363:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i609 := $sext.i32.i64($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 9} true;
  assume {:verifier.code 0} true;
  $i610 := $srem.i64($i609,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i611 := $trunc.i64.i32($i610);
  call {:cexpr "a"} boogie_si_record_i32($i611);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 507, 5} true;
  assume {:verifier.code 0} true;
  $i612 := $add.i32($i611,$i611);
  call {:cexpr "a"} boogie_si_record_i32($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i613 := $sext.i32.i64($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 9} true;
  assume {:verifier.code 0} true;
  $i614 := $srem.i64($i613,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i615 := $trunc.i64.i32($i614);
  call {:cexpr "b"} boogie_si_record_i32($i615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 509, 5} true;
  assume {:verifier.code 0} true;
  $i616 := $add.i32($i615,$i615);
  call {:cexpr "b"} boogie_si_record_i32($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 511, 5} true;
  assume {:verifier.code 0} true;
  $i617 := $add.i32($i604,$i604);
  call {:cexpr "c"} boogie_si_record_i32($i617);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 9} true;
  assume {:verifier.code 0} true;
  $i618 := $slt.i32($i612,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  $i619 := $i617;
  assume {:branchcond $i618} true;
  goto $bb370, $bb371;
$bb364:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume ($i605 == 1);
  goto $bb365;
$bb365:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 503, 9} true;
  assume {:verifier.code 0} true;
  $i608 := $add.i32($i602,1);
  call {:cexpr "c"} boogie_si_record_i32($i608);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 504, 5} true;
  assume {:verifier.code 0} true;
  $i607 := $i608;
  goto $bb369;
$bb366:
  assume !($i605 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 20} true;
  assume {:verifier.code 0} true;
  $i606 := $sgt.i32($i601,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  $i607 := $i602;
  assume {:branchcond $i606} true;
  goto $bb367, $bb368;
$bb367:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume ($i606 == 1);
  goto $bb365;
$bb368:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume !($i606 == 1);
  goto $bb369;
$bb369:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 505, 3} true;
  assume {:verifier.code 0} true;
  $i604 := $i607;
  goto $bb363;
$bb370:
  assume ($i618 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 11} true;
  assume {:verifier.code 0} true;
  $i620 := $slt.i32($i616,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i620} true;
  goto $bb373, $bb375;
$bb371:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  assume !($i618 == 1);
  goto $bb372;
$bb372:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i624 := $sext.i32.i64($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 9} true;
  assume {:verifier.code 0} true;
  $i625 := $srem.i64($i624,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i626 := $trunc.i64.i32($i625);
  call {:cexpr "a"} boogie_si_record_i32($i626);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 518, 5} true;
  assume {:verifier.code 0} true;
  $i627 := $add.i32($i626,$i626);
  call {:cexpr "a"} boogie_si_record_i32($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i628 := $sext.i32.i64($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 9} true;
  assume {:verifier.code 0} true;
  $i629 := $srem.i64($i628,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i630 := $trunc.i64.i32($i629);
  call {:cexpr "b"} boogie_si_record_i32($i630);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 520, 5} true;
  assume {:verifier.code 0} true;
  $i631 := $add.i32($i630,$i630);
  call {:cexpr "b"} boogie_si_record_i32($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 522, 5} true;
  assume {:verifier.code 0} true;
  $i632 := $add.i32($i619,$i619);
  call {:cexpr "c"} boogie_si_record_i32($i632);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 9} true;
  assume {:verifier.code 0} true;
  $i633 := $slt.i32($i627,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  $i634 := $i632;
  assume {:branchcond $i633} true;
  goto $bb379, $bb380;
$bb373:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume ($i620 == 1);
  goto $bb374;
$bb374:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 514, 9} true;
  assume {:verifier.code 0} true;
  $i623 := $add.i32($i617,1);
  call {:cexpr "c"} boogie_si_record_i32($i623);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 515, 5} true;
  assume {:verifier.code 0} true;
  $i622 := $i623;
  goto $bb378;
$bb375:
  assume !($i620 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 20} true;
  assume {:verifier.code 0} true;
  $i621 := $sgt.i32($i616,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  $i622 := $i617;
  assume {:branchcond $i621} true;
  goto $bb376, $bb377;
$bb376:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume ($i621 == 1);
  goto $bb374;
$bb377:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume !($i621 == 1);
  goto $bb378;
$bb378:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 516, 3} true;
  assume {:verifier.code 0} true;
  $i619 := $i622;
  goto $bb372;
$bb379:
  assume ($i633 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 11} true;
  assume {:verifier.code 0} true;
  $i635 := $slt.i32($i631,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i635} true;
  goto $bb382, $bb384;
$bb380:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  assume !($i633 == 1);
  goto $bb381;
$bb381:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i639 := $sext.i32.i64($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 9} true;
  assume {:verifier.code 0} true;
  $i640 := $srem.i64($i639,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i641 := $trunc.i64.i32($i640);
  call {:cexpr "a"} boogie_si_record_i32($i641);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 529, 5} true;
  assume {:verifier.code 0} true;
  $i642 := $add.i32($i641,$i641);
  call {:cexpr "a"} boogie_si_record_i32($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i643 := $sext.i32.i64($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 9} true;
  assume {:verifier.code 0} true;
  $i644 := $srem.i64($i643,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i645 := $trunc.i64.i32($i644);
  call {:cexpr "b"} boogie_si_record_i32($i645);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 531, 5} true;
  assume {:verifier.code 0} true;
  $i646 := $add.i32($i645,$i645);
  call {:cexpr "b"} boogie_si_record_i32($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 533, 5} true;
  assume {:verifier.code 0} true;
  $i647 := $add.i32($i634,$i634);
  call {:cexpr "c"} boogie_si_record_i32($i647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 9} true;
  assume {:verifier.code 0} true;
  $i648 := $slt.i32($i642,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  $i649 := $i647;
  assume {:branchcond $i648} true;
  goto $bb388, $bb389;
$bb382:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume ($i635 == 1);
  goto $bb383;
$bb383:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 525, 9} true;
  assume {:verifier.code 0} true;
  $i638 := $add.i32($i632,1);
  call {:cexpr "c"} boogie_si_record_i32($i638);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 526, 5} true;
  assume {:verifier.code 0} true;
  $i637 := $i638;
  goto $bb387;
$bb384:
  assume !($i635 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 20} true;
  assume {:verifier.code 0} true;
  $i636 := $sgt.i32($i631,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  $i637 := $i632;
  assume {:branchcond $i636} true;
  goto $bb385, $bb386;
$bb385:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume ($i636 == 1);
  goto $bb383;
$bb386:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume !($i636 == 1);
  goto $bb387;
$bb387:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 527, 3} true;
  assume {:verifier.code 0} true;
  $i634 := $i637;
  goto $bb381;
$bb388:
  assume ($i648 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 11} true;
  assume {:verifier.code 0} true;
  $i650 := $slt.i32($i646,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i650} true;
  goto $bb391, $bb393;
$bb389:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  assume !($i648 == 1);
  goto $bb390;
$bb390:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i654 := $sext.i32.i64($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 9} true;
  assume {:verifier.code 0} true;
  $i655 := $srem.i64($i654,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i656 := $trunc.i64.i32($i655);
  call {:cexpr "a"} boogie_si_record_i32($i656);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 540, 5} true;
  assume {:verifier.code 0} true;
  $i657 := $add.i32($i656,$i656);
  call {:cexpr "a"} boogie_si_record_i32($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i658 := $sext.i32.i64($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 9} true;
  assume {:verifier.code 0} true;
  $i659 := $srem.i64($i658,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i660 := $trunc.i64.i32($i659);
  call {:cexpr "b"} boogie_si_record_i32($i660);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 542, 5} true;
  assume {:verifier.code 0} true;
  $i661 := $add.i32($i660,$i660);
  call {:cexpr "b"} boogie_si_record_i32($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 5} true;
  assume {:verifier.code 0} true;
  $i662 := $add.i32($i649,$i649);
  call {:cexpr "c"} boogie_si_record_i32($i662);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 9} true;
  assume {:verifier.code 0} true;
  $i663 := $slt.i32($i657,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  $i664 := $i662;
  assume {:branchcond $i663} true;
  goto $bb397, $bb398;
$bb391:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume ($i650 == 1);
  goto $bb392;
$bb392:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 536, 9} true;
  assume {:verifier.code 0} true;
  $i653 := $add.i32($i647,1);
  call {:cexpr "c"} boogie_si_record_i32($i653);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 537, 5} true;
  assume {:verifier.code 0} true;
  $i652 := $i653;
  goto $bb396;
$bb393:
  assume !($i650 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 20} true;
  assume {:verifier.code 0} true;
  $i651 := $sgt.i32($i646,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  $i652 := $i647;
  assume {:branchcond $i651} true;
  goto $bb394, $bb395;
$bb394:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume ($i651 == 1);
  goto $bb392;
$bb395:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume !($i651 == 1);
  goto $bb396;
$bb396:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 538, 3} true;
  assume {:verifier.code 0} true;
  $i649 := $i652;
  goto $bb390;
$bb397:
  assume ($i663 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 11} true;
  assume {:verifier.code 0} true;
  $i665 := $slt.i32($i661,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i665} true;
  goto $bb400, $bb402;
$bb398:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  assume !($i663 == 1);
  goto $bb399;
$bb399:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i669 := $sext.i32.i64($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 9} true;
  assume {:verifier.code 0} true;
  $i670 := $srem.i64($i669,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i671 := $trunc.i64.i32($i670);
  call {:cexpr "a"} boogie_si_record_i32($i671);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 551, 5} true;
  assume {:verifier.code 0} true;
  $i672 := $add.i32($i671,$i671);
  call {:cexpr "a"} boogie_si_record_i32($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i673 := $sext.i32.i64($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 9} true;
  assume {:verifier.code 0} true;
  $i674 := $srem.i64($i673,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i675 := $trunc.i64.i32($i674);
  call {:cexpr "b"} boogie_si_record_i32($i675);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 553, 5} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i32($i675,$i675);
  call {:cexpr "b"} boogie_si_record_i32($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 555, 5} true;
  assume {:verifier.code 0} true;
  $i677 := $add.i32($i664,$i664);
  call {:cexpr "c"} boogie_si_record_i32($i677);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 9} true;
  assume {:verifier.code 0} true;
  $i678 := $slt.i32($i672,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  $i679 := $i677;
  assume {:branchcond $i678} true;
  goto $bb406, $bb407;
$bb400:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume ($i665 == 1);
  goto $bb401;
$bb401:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 547, 9} true;
  assume {:verifier.code 0} true;
  $i668 := $add.i32($i662,1);
  call {:cexpr "c"} boogie_si_record_i32($i668);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 5} true;
  assume {:verifier.code 0} true;
  $i667 := $i668;
  goto $bb405;
$bb402:
  assume !($i665 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 20} true;
  assume {:verifier.code 0} true;
  $i666 := $sgt.i32($i661,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  $i667 := $i662;
  assume {:branchcond $i666} true;
  goto $bb403, $bb404;
$bb403:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume ($i666 == 1);
  goto $bb401;
$bb404:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume !($i666 == 1);
  goto $bb405;
$bb405:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 549, 3} true;
  assume {:verifier.code 0} true;
  $i664 := $i667;
  goto $bb399;
$bb406:
  assume ($i678 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 11} true;
  assume {:verifier.code 0} true;
  $i680 := $slt.i32($i676,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i680} true;
  goto $bb409, $bb411;
$bb407:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  assume !($i678 == 1);
  goto $bb408;
$bb408:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i684 := $sext.i32.i64($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 9} true;
  assume {:verifier.code 0} true;
  $i685 := $srem.i64($i684,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i686 := $trunc.i64.i32($i685);
  call {:cexpr "a"} boogie_si_record_i32($i686);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 562, 5} true;
  assume {:verifier.code 0} true;
  $i687 := $add.i32($i686,$i686);
  call {:cexpr "a"} boogie_si_record_i32($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i688 := $sext.i32.i64($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 9} true;
  assume {:verifier.code 0} true;
  $i689 := $srem.i64($i688,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i690 := $trunc.i64.i32($i689);
  call {:cexpr "b"} boogie_si_record_i32($i690);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 564, 5} true;
  assume {:verifier.code 0} true;
  $i691 := $add.i32($i690,$i690);
  call {:cexpr "b"} boogie_si_record_i32($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 566, 5} true;
  assume {:verifier.code 0} true;
  $i692 := $add.i32($i679,$i679);
  call {:cexpr "c"} boogie_si_record_i32($i692);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 9} true;
  assume {:verifier.code 0} true;
  $i693 := $slt.i32($i687,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  $i694 := $i692;
  assume {:branchcond $i693} true;
  goto $bb415, $bb416;
$bb409:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume ($i680 == 1);
  goto $bb410;
$bb410:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 558, 9} true;
  assume {:verifier.code 0} true;
  $i683 := $add.i32($i677,1);
  call {:cexpr "c"} boogie_si_record_i32($i683);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 559, 5} true;
  assume {:verifier.code 0} true;
  $i682 := $i683;
  goto $bb414;
$bb411:
  assume !($i680 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 20} true;
  assume {:verifier.code 0} true;
  $i681 := $sgt.i32($i676,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  $i682 := $i677;
  assume {:branchcond $i681} true;
  goto $bb412, $bb413;
$bb412:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume ($i681 == 1);
  goto $bb410;
$bb413:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume !($i681 == 1);
  goto $bb414;
$bb414:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 560, 3} true;
  assume {:verifier.code 0} true;
  $i679 := $i682;
  goto $bb408;
$bb415:
  assume ($i693 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 11} true;
  assume {:verifier.code 0} true;
  $i695 := $slt.i32($i691,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i695} true;
  goto $bb418, $bb420;
$bb416:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  assume !($i693 == 1);
  goto $bb417;
$bb417:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i699 := $sext.i32.i64($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 9} true;
  assume {:verifier.code 0} true;
  $i700 := $srem.i64($i699,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i701 := $trunc.i64.i32($i700);
  call {:cexpr "a"} boogie_si_record_i32($i701);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 573, 5} true;
  assume {:verifier.code 0} true;
  $i702 := $add.i32($i701,$i701);
  call {:cexpr "a"} boogie_si_record_i32($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i703 := $sext.i32.i64($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 9} true;
  assume {:verifier.code 0} true;
  $i704 := $srem.i64($i703,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i705 := $trunc.i64.i32($i704);
  call {:cexpr "b"} boogie_si_record_i32($i705);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 575, 5} true;
  assume {:verifier.code 0} true;
  $i706 := $add.i32($i705,$i705);
  call {:cexpr "b"} boogie_si_record_i32($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 577, 5} true;
  assume {:verifier.code 0} true;
  $i707 := $add.i32($i694,$i694);
  call {:cexpr "c"} boogie_si_record_i32($i707);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 9} true;
  assume {:verifier.code 0} true;
  $i708 := $slt.i32($i702,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  $i709 := $i707;
  assume {:branchcond $i708} true;
  goto $bb424, $bb425;
$bb418:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume ($i695 == 1);
  goto $bb419;
$bb419:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 569, 9} true;
  assume {:verifier.code 0} true;
  $i698 := $add.i32($i692,1);
  call {:cexpr "c"} boogie_si_record_i32($i698);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 570, 5} true;
  assume {:verifier.code 0} true;
  $i697 := $i698;
  goto $bb423;
$bb420:
  assume !($i695 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 20} true;
  assume {:verifier.code 0} true;
  $i696 := $sgt.i32($i691,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  $i697 := $i692;
  assume {:branchcond $i696} true;
  goto $bb421, $bb422;
$bb421:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume ($i696 == 1);
  goto $bb419;
$bb422:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume !($i696 == 1);
  goto $bb423;
$bb423:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 571, 3} true;
  assume {:verifier.code 0} true;
  $i694 := $i697;
  goto $bb417;
$bb424:
  assume ($i708 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 11} true;
  assume {:verifier.code 0} true;
  $i710 := $slt.i32($i706,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i710} true;
  goto $bb427, $bb429;
$bb425:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  assume !($i708 == 1);
  goto $bb426;
$bb426:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i714 := $sext.i32.i64($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 9} true;
  assume {:verifier.code 0} true;
  $i715 := $srem.i64($i714,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i716 := $trunc.i64.i32($i715);
  call {:cexpr "a"} boogie_si_record_i32($i716);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 584, 5} true;
  assume {:verifier.code 0} true;
  $i717 := $add.i32($i716,$i716);
  call {:cexpr "a"} boogie_si_record_i32($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i718 := $sext.i32.i64($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 9} true;
  assume {:verifier.code 0} true;
  $i719 := $srem.i64($i718,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i720 := $trunc.i64.i32($i719);
  call {:cexpr "b"} boogie_si_record_i32($i720);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 586, 5} true;
  assume {:verifier.code 0} true;
  $i721 := $add.i32($i720,$i720);
  call {:cexpr "b"} boogie_si_record_i32($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 588, 5} true;
  assume {:verifier.code 0} true;
  $i722 := $add.i32($i709,$i709);
  call {:cexpr "c"} boogie_si_record_i32($i722);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 9} true;
  assume {:verifier.code 0} true;
  $i723 := $slt.i32($i717,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  $i724 := $i722;
  assume {:branchcond $i723} true;
  goto $bb433, $bb434;
$bb427:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume ($i710 == 1);
  goto $bb428;
$bb428:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 580, 9} true;
  assume {:verifier.code 0} true;
  $i713 := $add.i32($i707,1);
  call {:cexpr "c"} boogie_si_record_i32($i713);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 581, 5} true;
  assume {:verifier.code 0} true;
  $i712 := $i713;
  goto $bb432;
$bb429:
  assume !($i710 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 20} true;
  assume {:verifier.code 0} true;
  $i711 := $sgt.i32($i706,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  $i712 := $i707;
  assume {:branchcond $i711} true;
  goto $bb430, $bb431;
$bb430:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume ($i711 == 1);
  goto $bb428;
$bb431:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume !($i711 == 1);
  goto $bb432;
$bb432:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 582, 3} true;
  assume {:verifier.code 0} true;
  $i709 := $i712;
  goto $bb426;
$bb433:
  assume ($i723 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 11} true;
  assume {:verifier.code 0} true;
  $i725 := $slt.i32($i721,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i725} true;
  goto $bb436, $bb438;
$bb434:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  assume !($i723 == 1);
  goto $bb435;
$bb435:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i729 := $sext.i32.i64($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 9} true;
  assume {:verifier.code 0} true;
  $i730 := $srem.i64($i729,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i731 := $trunc.i64.i32($i730);
  call {:cexpr "a"} boogie_si_record_i32($i731);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 595, 5} true;
  assume {:verifier.code 0} true;
  $i732 := $add.i32($i731,$i731);
  call {:cexpr "a"} boogie_si_record_i32($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i733 := $sext.i32.i64($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 9} true;
  assume {:verifier.code 0} true;
  $i734 := $srem.i64($i733,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i735 := $trunc.i64.i32($i734);
  call {:cexpr "b"} boogie_si_record_i32($i735);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 597, 5} true;
  assume {:verifier.code 0} true;
  $i736 := $add.i32($i735,$i735);
  call {:cexpr "b"} boogie_si_record_i32($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 599, 5} true;
  assume {:verifier.code 0} true;
  $i737 := $add.i32($i724,$i724);
  call {:cexpr "c"} boogie_si_record_i32($i737);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 9} true;
  assume {:verifier.code 0} true;
  $i738 := $slt.i32($i732,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $i739 := $i737;
  assume {:branchcond $i738} true;
  goto $bb442, $bb443;
$bb436:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume ($i725 == 1);
  goto $bb437;
$bb437:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 591, 9} true;
  assume {:verifier.code 0} true;
  $i728 := $add.i32($i722,1);
  call {:cexpr "c"} boogie_si_record_i32($i728);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 592, 5} true;
  assume {:verifier.code 0} true;
  $i727 := $i728;
  goto $bb441;
$bb438:
  assume !($i725 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 20} true;
  assume {:verifier.code 0} true;
  $i726 := $sgt.i32($i721,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  $i727 := $i722;
  assume {:branchcond $i726} true;
  goto $bb439, $bb440;
$bb439:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume ($i726 == 1);
  goto $bb437;
$bb440:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume !($i726 == 1);
  goto $bb441;
$bb441:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 593, 3} true;
  assume {:verifier.code 0} true;
  $i724 := $i727;
  goto $bb435;
$bb442:
  assume ($i738 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 11} true;
  assume {:verifier.code 0} true;
  $i740 := $slt.i32($i736,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i740} true;
  goto $bb445, $bb447;
$bb443:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  assume !($i738 == 1);
  goto $bb444;
$bb444:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i744 := $sext.i32.i64($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 9} true;
  assume {:verifier.code 0} true;
  $i745 := $srem.i64($i744,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i746 := $trunc.i64.i32($i745);
  call {:cexpr "a"} boogie_si_record_i32($i746);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 606, 5} true;
  assume {:verifier.code 0} true;
  $i747 := $add.i32($i746,$i746);
  call {:cexpr "a"} boogie_si_record_i32($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i748 := $sext.i32.i64($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 9} true;
  assume {:verifier.code 0} true;
  $i749 := $srem.i64($i748,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i750 := $trunc.i64.i32($i749);
  call {:cexpr "b"} boogie_si_record_i32($i750);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 608, 5} true;
  assume {:verifier.code 0} true;
  $i751 := $add.i32($i750,$i750);
  call {:cexpr "b"} boogie_si_record_i32($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 610, 5} true;
  assume {:verifier.code 0} true;
  $i752 := $add.i32($i739,$i739);
  call {:cexpr "c"} boogie_si_record_i32($i752);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 9} true;
  assume {:verifier.code 0} true;
  $i753 := $slt.i32($i747,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  $i754 := $i752;
  assume {:branchcond $i753} true;
  goto $bb451, $bb452;
$bb445:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume ($i740 == 1);
  goto $bb446;
$bb446:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 602, 9} true;
  assume {:verifier.code 0} true;
  $i743 := $add.i32($i737,1);
  call {:cexpr "c"} boogie_si_record_i32($i743);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 603, 5} true;
  assume {:verifier.code 0} true;
  $i742 := $i743;
  goto $bb450;
$bb447:
  assume !($i740 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 20} true;
  assume {:verifier.code 0} true;
  $i741 := $sgt.i32($i736,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  $i742 := $i737;
  assume {:branchcond $i741} true;
  goto $bb448, $bb449;
$bb448:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume ($i741 == 1);
  goto $bb446;
$bb449:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume !($i741 == 1);
  goto $bb450;
$bb450:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i739 := $i742;
  goto $bb444;
$bb451:
  assume ($i753 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 11} true;
  assume {:verifier.code 0} true;
  $i755 := $slt.i32($i751,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i755} true;
  goto $bb454, $bb456;
$bb452:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  assume !($i753 == 1);
  goto $bb453;
$bb453:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i759 := $sext.i32.i64($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 9} true;
  assume {:verifier.code 0} true;
  $i760 := $srem.i64($i759,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i761 := $trunc.i64.i32($i760);
  call {:cexpr "a"} boogie_si_record_i32($i761);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 617, 5} true;
  assume {:verifier.code 0} true;
  $i762 := $add.i32($i761,$i761);
  call {:cexpr "a"} boogie_si_record_i32($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i763 := $sext.i32.i64($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 9} true;
  assume {:verifier.code 0} true;
  $i764 := $srem.i64($i763,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i765 := $trunc.i64.i32($i764);
  call {:cexpr "b"} boogie_si_record_i32($i765);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 619, 5} true;
  assume {:verifier.code 0} true;
  $i766 := $add.i32($i765,$i765);
  call {:cexpr "b"} boogie_si_record_i32($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 621, 5} true;
  assume {:verifier.code 0} true;
  $i767 := $add.i32($i754,$i754);
  call {:cexpr "c"} boogie_si_record_i32($i767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 9} true;
  assume {:verifier.code 0} true;
  $i768 := $slt.i32($i762,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  $i769 := $i767;
  assume {:branchcond $i768} true;
  goto $bb460, $bb461;
$bb454:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume ($i755 == 1);
  goto $bb455;
$bb455:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 613, 9} true;
  assume {:verifier.code 0} true;
  $i758 := $add.i32($i752,1);
  call {:cexpr "c"} boogie_si_record_i32($i758);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 614, 5} true;
  assume {:verifier.code 0} true;
  $i757 := $i758;
  goto $bb459;
$bb456:
  assume !($i755 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 20} true;
  assume {:verifier.code 0} true;
  $i756 := $sgt.i32($i751,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  $i757 := $i752;
  assume {:branchcond $i756} true;
  goto $bb457, $bb458;
$bb457:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume ($i756 == 1);
  goto $bb455;
$bb458:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume !($i756 == 1);
  goto $bb459;
$bb459:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 615, 3} true;
  assume {:verifier.code 0} true;
  $i754 := $i757;
  goto $bb453;
$bb460:
  assume ($i768 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 11} true;
  assume {:verifier.code 0} true;
  $i770 := $slt.i32($i766,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i770} true;
  goto $bb463, $bb465;
$bb461:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  assume !($i768 == 1);
  goto $bb462;
$bb462:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i774 := $sext.i32.i64($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 9} true;
  assume {:verifier.code 0} true;
  $i775 := $srem.i64($i774,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i776 := $trunc.i64.i32($i775);
  call {:cexpr "a"} boogie_si_record_i32($i776);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 628, 5} true;
  assume {:verifier.code 0} true;
  $i777 := $add.i32($i776,$i776);
  call {:cexpr "a"} boogie_si_record_i32($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i778 := $sext.i32.i64($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 9} true;
  assume {:verifier.code 0} true;
  $i779 := $srem.i64($i778,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i780 := $trunc.i64.i32($i779);
  call {:cexpr "b"} boogie_si_record_i32($i780);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 630, 5} true;
  assume {:verifier.code 0} true;
  $i781 := $add.i32($i780,$i780);
  call {:cexpr "b"} boogie_si_record_i32($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 632, 5} true;
  assume {:verifier.code 0} true;
  $i782 := $add.i32($i769,$i769);
  call {:cexpr "c"} boogie_si_record_i32($i782);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 9} true;
  assume {:verifier.code 0} true;
  $i783 := $slt.i32($i777,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  $i784 := $i782;
  assume {:branchcond $i783} true;
  goto $bb469, $bb470;
$bb463:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume ($i770 == 1);
  goto $bb464;
$bb464:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 624, 9} true;
  assume {:verifier.code 0} true;
  $i773 := $add.i32($i767,1);
  call {:cexpr "c"} boogie_si_record_i32($i773);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 625, 5} true;
  assume {:verifier.code 0} true;
  $i772 := $i773;
  goto $bb468;
$bb465:
  assume !($i770 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 20} true;
  assume {:verifier.code 0} true;
  $i771 := $sgt.i32($i766,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  $i772 := $i767;
  assume {:branchcond $i771} true;
  goto $bb466, $bb467;
$bb466:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume ($i771 == 1);
  goto $bb464;
$bb467:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume !($i771 == 1);
  goto $bb468;
$bb468:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 626, 3} true;
  assume {:verifier.code 0} true;
  $i769 := $i772;
  goto $bb462;
$bb469:
  assume ($i783 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 11} true;
  assume {:verifier.code 0} true;
  $i785 := $slt.i32($i781,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i785} true;
  goto $bb472, $bb474;
$bb470:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  assume !($i783 == 1);
  goto $bb471;
$bb471:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i789 := $sext.i32.i64($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 9} true;
  assume {:verifier.code 0} true;
  $i790 := $srem.i64($i789,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i791 := $trunc.i64.i32($i790);
  call {:cexpr "a"} boogie_si_record_i32($i791);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 639, 5} true;
  assume {:verifier.code 0} true;
  $i792 := $add.i32($i791,$i791);
  call {:cexpr "a"} boogie_si_record_i32($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i793 := $sext.i32.i64($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 9} true;
  assume {:verifier.code 0} true;
  $i794 := $srem.i64($i793,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i795 := $trunc.i64.i32($i794);
  call {:cexpr "b"} boogie_si_record_i32($i795);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 641, 5} true;
  assume {:verifier.code 0} true;
  $i796 := $add.i32($i795,$i795);
  call {:cexpr "b"} boogie_si_record_i32($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 643, 5} true;
  assume {:verifier.code 0} true;
  $i797 := $add.i32($i784,$i784);
  call {:cexpr "c"} boogie_si_record_i32($i797);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 9} true;
  assume {:verifier.code 0} true;
  $i798 := $slt.i32($i792,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  $i799 := $i797;
  assume {:branchcond $i798} true;
  goto $bb478, $bb479;
$bb472:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume ($i785 == 1);
  goto $bb473;
$bb473:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 635, 9} true;
  assume {:verifier.code 0} true;
  $i788 := $add.i32($i782,1);
  call {:cexpr "c"} boogie_si_record_i32($i788);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 636, 5} true;
  assume {:verifier.code 0} true;
  $i787 := $i788;
  goto $bb477;
$bb474:
  assume !($i785 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 20} true;
  assume {:verifier.code 0} true;
  $i786 := $sgt.i32($i781,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  $i787 := $i782;
  assume {:branchcond $i786} true;
  goto $bb475, $bb476;
$bb475:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume ($i786 == 1);
  goto $bb473;
$bb476:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume !($i786 == 1);
  goto $bb477;
$bb477:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 637, 3} true;
  assume {:verifier.code 0} true;
  $i784 := $i787;
  goto $bb471;
$bb478:
  assume ($i798 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 11} true;
  assume {:verifier.code 0} true;
  $i800 := $slt.i32($i796,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i800} true;
  goto $bb481, $bb483;
$bb479:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  assume !($i798 == 1);
  goto $bb480;
$bb480:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i804 := $sext.i32.i64($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 9} true;
  assume {:verifier.code 0} true;
  $i805 := $srem.i64($i804,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i806 := $trunc.i64.i32($i805);
  call {:cexpr "a"} boogie_si_record_i32($i806);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 650, 5} true;
  assume {:verifier.code 0} true;
  $i807 := $add.i32($i806,$i806);
  call {:cexpr "a"} boogie_si_record_i32($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i808 := $sext.i32.i64($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 9} true;
  assume {:verifier.code 0} true;
  $i809 := $srem.i64($i808,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i810 := $trunc.i64.i32($i809);
  call {:cexpr "b"} boogie_si_record_i32($i810);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 652, 5} true;
  assume {:verifier.code 0} true;
  $i811 := $add.i32($i810,$i810);
  call {:cexpr "b"} boogie_si_record_i32($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 654, 5} true;
  assume {:verifier.code 0} true;
  $i812 := $add.i32($i799,$i799);
  call {:cexpr "c"} boogie_si_record_i32($i812);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 9} true;
  assume {:verifier.code 0} true;
  $i813 := $slt.i32($i807,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  $i814 := $i812;
  assume {:branchcond $i813} true;
  goto $bb487, $bb488;
$bb481:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume ($i800 == 1);
  goto $bb482;
$bb482:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 646, 9} true;
  assume {:verifier.code 0} true;
  $i803 := $add.i32($i797,1);
  call {:cexpr "c"} boogie_si_record_i32($i803);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 647, 5} true;
  assume {:verifier.code 0} true;
  $i802 := $i803;
  goto $bb486;
$bb483:
  assume !($i800 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 20} true;
  assume {:verifier.code 0} true;
  $i801 := $sgt.i32($i796,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  $i802 := $i797;
  assume {:branchcond $i801} true;
  goto $bb484, $bb485;
$bb484:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume ($i801 == 1);
  goto $bb482;
$bb485:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume !($i801 == 1);
  goto $bb486;
$bb486:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 648, 3} true;
  assume {:verifier.code 0} true;
  $i799 := $i802;
  goto $bb480;
$bb487:
  assume ($i813 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 11} true;
  assume {:verifier.code 0} true;
  $i815 := $slt.i32($i811,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i815} true;
  goto $bb490, $bb492;
$bb488:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  assume !($i813 == 1);
  goto $bb489;
$bb489:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i819 := $sext.i32.i64($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 9} true;
  assume {:verifier.code 0} true;
  $i820 := $srem.i64($i819,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i821 := $trunc.i64.i32($i820);
  call {:cexpr "a"} boogie_si_record_i32($i821);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 661, 5} true;
  assume {:verifier.code 0} true;
  $i822 := $add.i32($i821,$i821);
  call {:cexpr "a"} boogie_si_record_i32($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i823 := $sext.i32.i64($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 9} true;
  assume {:verifier.code 0} true;
  $i824 := $srem.i64($i823,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i825 := $trunc.i64.i32($i824);
  call {:cexpr "b"} boogie_si_record_i32($i825);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 663, 5} true;
  assume {:verifier.code 0} true;
  $i826 := $add.i32($i825,$i825);
  call {:cexpr "b"} boogie_si_record_i32($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 665, 5} true;
  assume {:verifier.code 0} true;
  $i827 := $add.i32($i814,$i814);
  call {:cexpr "c"} boogie_si_record_i32($i827);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 9} true;
  assume {:verifier.code 0} true;
  $i828 := $slt.i32($i822,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  $i829 := $i827;
  assume {:branchcond $i828} true;
  goto $bb496, $bb497;
$bb490:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume ($i815 == 1);
  goto $bb491;
$bb491:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 657, 9} true;
  assume {:verifier.code 0} true;
  $i818 := $add.i32($i812,1);
  call {:cexpr "c"} boogie_si_record_i32($i818);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 658, 5} true;
  assume {:verifier.code 0} true;
  $i817 := $i818;
  goto $bb495;
$bb492:
  assume !($i815 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 20} true;
  assume {:verifier.code 0} true;
  $i816 := $sgt.i32($i811,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  $i817 := $i812;
  assume {:branchcond $i816} true;
  goto $bb493, $bb494;
$bb493:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume ($i816 == 1);
  goto $bb491;
$bb494:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume !($i816 == 1);
  goto $bb495;
$bb495:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 659, 3} true;
  assume {:verifier.code 0} true;
  $i814 := $i817;
  goto $bb489;
$bb496:
  assume ($i828 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 11} true;
  assume {:verifier.code 0} true;
  $i830 := $slt.i32($i826,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i830} true;
  goto $bb499, $bb501;
$bb497:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  assume !($i828 == 1);
  goto $bb498;
$bb498:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i834 := $sext.i32.i64($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 9} true;
  assume {:verifier.code 0} true;
  $i835 := $srem.i64($i834,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i836 := $trunc.i64.i32($i835);
  call {:cexpr "a"} boogie_si_record_i32($i836);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 672, 5} true;
  assume {:verifier.code 0} true;
  $i837 := $add.i32($i836,$i836);
  call {:cexpr "a"} boogie_si_record_i32($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i838 := $sext.i32.i64($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 9} true;
  assume {:verifier.code 0} true;
  $i839 := $srem.i64($i838,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i840 := $trunc.i64.i32($i839);
  call {:cexpr "b"} boogie_si_record_i32($i840);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 674, 5} true;
  assume {:verifier.code 0} true;
  $i841 := $add.i32($i840,$i840);
  call {:cexpr "b"} boogie_si_record_i32($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 676, 5} true;
  assume {:verifier.code 0} true;
  $i842 := $add.i32($i829,$i829);
  call {:cexpr "c"} boogie_si_record_i32($i842);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 9} true;
  assume {:verifier.code 0} true;
  $i843 := $slt.i32($i837,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  $i844 := $i842;
  assume {:branchcond $i843} true;
  goto $bb505, $bb506;
$bb499:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume ($i830 == 1);
  goto $bb500;
$bb500:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 668, 9} true;
  assume {:verifier.code 0} true;
  $i833 := $add.i32($i827,1);
  call {:cexpr "c"} boogie_si_record_i32($i833);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 669, 5} true;
  assume {:verifier.code 0} true;
  $i832 := $i833;
  goto $bb504;
$bb501:
  assume !($i830 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 20} true;
  assume {:verifier.code 0} true;
  $i831 := $sgt.i32($i826,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  $i832 := $i827;
  assume {:branchcond $i831} true;
  goto $bb502, $bb503;
$bb502:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume ($i831 == 1);
  goto $bb500;
$bb503:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume !($i831 == 1);
  goto $bb504;
$bb504:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $i829 := $i832;
  goto $bb498;
$bb505:
  assume ($i843 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 11} true;
  assume {:verifier.code 0} true;
  $i845 := $slt.i32($i841,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i845} true;
  goto $bb508, $bb510;
$bb506:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  assume !($i843 == 1);
  goto $bb507;
$bb507:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i849 := $sext.i32.i64($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 9} true;
  assume {:verifier.code 0} true;
  $i850 := $srem.i64($i849,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i851 := $trunc.i64.i32($i850);
  call {:cexpr "a"} boogie_si_record_i32($i851);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 683, 5} true;
  assume {:verifier.code 0} true;
  $i852 := $add.i32($i851,$i851);
  call {:cexpr "a"} boogie_si_record_i32($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i853 := $sext.i32.i64($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 9} true;
  assume {:verifier.code 0} true;
  $i854 := $srem.i64($i853,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i855 := $trunc.i64.i32($i854);
  call {:cexpr "b"} boogie_si_record_i32($i855);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 685, 5} true;
  assume {:verifier.code 0} true;
  $i856 := $add.i32($i855,$i855);
  call {:cexpr "b"} boogie_si_record_i32($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 687, 5} true;
  assume {:verifier.code 0} true;
  $i857 := $add.i32($i844,$i844);
  call {:cexpr "c"} boogie_si_record_i32($i857);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 9} true;
  assume {:verifier.code 0} true;
  $i858 := $slt.i32($i852,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  $i859 := $i857;
  assume {:branchcond $i858} true;
  goto $bb514, $bb515;
$bb508:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume ($i845 == 1);
  goto $bb509;
$bb509:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 679, 9} true;
  assume {:verifier.code 0} true;
  $i848 := $add.i32($i842,1);
  call {:cexpr "c"} boogie_si_record_i32($i848);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 680, 5} true;
  assume {:verifier.code 0} true;
  $i847 := $i848;
  goto $bb513;
$bb510:
  assume !($i845 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 20} true;
  assume {:verifier.code 0} true;
  $i846 := $sgt.i32($i841,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  $i847 := $i842;
  assume {:branchcond $i846} true;
  goto $bb511, $bb512;
$bb511:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume ($i846 == 1);
  goto $bb509;
$bb512:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume !($i846 == 1);
  goto $bb513;
$bb513:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 681, 3} true;
  assume {:verifier.code 0} true;
  $i844 := $i847;
  goto $bb507;
$bb514:
  assume ($i858 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 11} true;
  assume {:verifier.code 0} true;
  $i860 := $slt.i32($i856,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i860} true;
  goto $bb517, $bb519;
$bb515:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  assume !($i858 == 1);
  goto $bb516;
$bb516:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i864 := $sext.i32.i64($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 9} true;
  assume {:verifier.code 0} true;
  $i865 := $srem.i64($i864,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i866 := $trunc.i64.i32($i865);
  call {:cexpr "a"} boogie_si_record_i32($i866);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 694, 5} true;
  assume {:verifier.code 0} true;
  $i867 := $add.i32($i866,$i866);
  call {:cexpr "a"} boogie_si_record_i32($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i868 := $sext.i32.i64($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 9} true;
  assume {:verifier.code 0} true;
  $i869 := $srem.i64($i868,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i870 := $trunc.i64.i32($i869);
  call {:cexpr "b"} boogie_si_record_i32($i870);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 696, 5} true;
  assume {:verifier.code 0} true;
  $i871 := $add.i32($i870,$i870);
  call {:cexpr "b"} boogie_si_record_i32($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 698, 5} true;
  assume {:verifier.code 0} true;
  $i872 := $add.i32($i859,$i859);
  call {:cexpr "c"} boogie_si_record_i32($i872);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 9} true;
  assume {:verifier.code 0} true;
  $i873 := $slt.i32($i867,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  $i874 := $i872;
  assume {:branchcond $i873} true;
  goto $bb523, $bb524;
$bb517:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume ($i860 == 1);
  goto $bb518;
$bb518:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 690, 9} true;
  assume {:verifier.code 0} true;
  $i863 := $add.i32($i857,1);
  call {:cexpr "c"} boogie_si_record_i32($i863);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 691, 5} true;
  assume {:verifier.code 0} true;
  $i862 := $i863;
  goto $bb522;
$bb519:
  assume !($i860 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 20} true;
  assume {:verifier.code 0} true;
  $i861 := $sgt.i32($i856,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  $i862 := $i857;
  assume {:branchcond $i861} true;
  goto $bb520, $bb521;
$bb520:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume ($i861 == 1);
  goto $bb518;
$bb521:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume !($i861 == 1);
  goto $bb522;
$bb522:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 692, 3} true;
  assume {:verifier.code 0} true;
  $i859 := $i862;
  goto $bb516;
$bb523:
  assume ($i873 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 11} true;
  assume {:verifier.code 0} true;
  $i875 := $slt.i32($i871,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i875} true;
  goto $bb526, $bb528;
$bb524:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  assume !($i873 == 1);
  goto $bb525;
$bb525:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i879 := $sext.i32.i64($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 9} true;
  assume {:verifier.code 0} true;
  $i880 := $srem.i64($i879,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i881 := $trunc.i64.i32($i880);
  call {:cexpr "a"} boogie_si_record_i32($i881);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 705, 5} true;
  assume {:verifier.code 0} true;
  $i882 := $add.i32($i881,$i881);
  call {:cexpr "a"} boogie_si_record_i32($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i883 := $sext.i32.i64($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 9} true;
  assume {:verifier.code 0} true;
  $i884 := $srem.i64($i883,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i885 := $trunc.i64.i32($i884);
  call {:cexpr "b"} boogie_si_record_i32($i885);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 707, 5} true;
  assume {:verifier.code 0} true;
  $i886 := $add.i32($i885,$i885);
  call {:cexpr "b"} boogie_si_record_i32($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 709, 5} true;
  assume {:verifier.code 0} true;
  $i887 := $add.i32($i874,$i874);
  call {:cexpr "c"} boogie_si_record_i32($i887);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 9} true;
  assume {:verifier.code 0} true;
  $i888 := $slt.i32($i882,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  $i889 := $i887;
  assume {:branchcond $i888} true;
  goto $bb532, $bb533;
$bb526:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume ($i875 == 1);
  goto $bb527;
$bb527:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 701, 9} true;
  assume {:verifier.code 0} true;
  $i878 := $add.i32($i872,1);
  call {:cexpr "c"} boogie_si_record_i32($i878);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 702, 5} true;
  assume {:verifier.code 0} true;
  $i877 := $i878;
  goto $bb531;
$bb528:
  assume !($i875 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 20} true;
  assume {:verifier.code 0} true;
  $i876 := $sgt.i32($i871,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  $i877 := $i872;
  assume {:branchcond $i876} true;
  goto $bb529, $bb530;
$bb529:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume ($i876 == 1);
  goto $bb527;
$bb530:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume !($i876 == 1);
  goto $bb531;
$bb531:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 703, 3} true;
  assume {:verifier.code 0} true;
  $i874 := $i877;
  goto $bb525;
$bb532:
  assume ($i888 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 11} true;
  assume {:verifier.code 0} true;
  $i890 := $slt.i32($i886,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i890} true;
  goto $bb535, $bb537;
$bb533:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  assume !($i888 == 1);
  goto $bb534;
$bb534:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i894 := $sext.i32.i64($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 9} true;
  assume {:verifier.code 0} true;
  $i895 := $srem.i64($i894,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i896 := $trunc.i64.i32($i895);
  call {:cexpr "a"} boogie_si_record_i32($i896);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 716, 5} true;
  assume {:verifier.code 0} true;
  $i897 := $add.i32($i896,$i896);
  call {:cexpr "a"} boogie_si_record_i32($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i898 := $sext.i32.i64($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 9} true;
  assume {:verifier.code 0} true;
  $i899 := $srem.i64($i898,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i900 := $trunc.i64.i32($i899);
  call {:cexpr "b"} boogie_si_record_i32($i900);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 718, 5} true;
  assume {:verifier.code 0} true;
  $i901 := $add.i32($i900,$i900);
  call {:cexpr "b"} boogie_si_record_i32($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 720, 5} true;
  assume {:verifier.code 0} true;
  $i902 := $add.i32($i889,$i889);
  call {:cexpr "c"} boogie_si_record_i32($i902);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 9} true;
  assume {:verifier.code 0} true;
  $i903 := $slt.i32($i897,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  $i904 := $i902;
  assume {:branchcond $i903} true;
  goto $bb541, $bb542;
$bb535:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume ($i890 == 1);
  goto $bb536;
$bb536:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 712, 9} true;
  assume {:verifier.code 0} true;
  $i893 := $add.i32($i887,1);
  call {:cexpr "c"} boogie_si_record_i32($i893);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 713, 5} true;
  assume {:verifier.code 0} true;
  $i892 := $i893;
  goto $bb540;
$bb537:
  assume !($i890 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 20} true;
  assume {:verifier.code 0} true;
  $i891 := $sgt.i32($i886,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  $i892 := $i887;
  assume {:branchcond $i891} true;
  goto $bb538, $bb539;
$bb538:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume ($i891 == 1);
  goto $bb536;
$bb539:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume !($i891 == 1);
  goto $bb540;
$bb540:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 714, 3} true;
  assume {:verifier.code 0} true;
  $i889 := $i892;
  goto $bb534;
$bb541:
  assume ($i903 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 11} true;
  assume {:verifier.code 0} true;
  $i905 := $slt.i32($i901,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i905} true;
  goto $bb544, $bb546;
$bb542:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  assume !($i903 == 1);
  goto $bb543;
$bb543:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i909 := $sext.i32.i64($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 9} true;
  assume {:verifier.code 0} true;
  $i910 := $srem.i64($i909,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i911 := $trunc.i64.i32($i910);
  call {:cexpr "a"} boogie_si_record_i32($i911);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 727, 5} true;
  assume {:verifier.code 0} true;
  $i912 := $add.i32($i911,$i911);
  call {:cexpr "a"} boogie_si_record_i32($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i913 := $sext.i32.i64($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 9} true;
  assume {:verifier.code 0} true;
  $i914 := $srem.i64($i913,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i915 := $trunc.i64.i32($i914);
  call {:cexpr "b"} boogie_si_record_i32($i915);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 729, 5} true;
  assume {:verifier.code 0} true;
  $i916 := $add.i32($i915,$i915);
  call {:cexpr "b"} boogie_si_record_i32($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 731, 5} true;
  assume {:verifier.code 0} true;
  $i917 := $add.i32($i904,$i904);
  call {:cexpr "c"} boogie_si_record_i32($i917);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 9} true;
  assume {:verifier.code 0} true;
  $i918 := $slt.i32($i912,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  $i919 := $i917;
  assume {:branchcond $i918} true;
  goto $bb550, $bb551;
$bb544:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume ($i905 == 1);
  goto $bb545;
$bb545:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 723, 9} true;
  assume {:verifier.code 0} true;
  $i908 := $add.i32($i902,1);
  call {:cexpr "c"} boogie_si_record_i32($i908);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 724, 5} true;
  assume {:verifier.code 0} true;
  $i907 := $i908;
  goto $bb549;
$bb546:
  assume !($i905 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 20} true;
  assume {:verifier.code 0} true;
  $i906 := $sgt.i32($i901,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  $i907 := $i902;
  assume {:branchcond $i906} true;
  goto $bb547, $bb548;
$bb547:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume ($i906 == 1);
  goto $bb545;
$bb548:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume !($i906 == 1);
  goto $bb549;
$bb549:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 725, 3} true;
  assume {:verifier.code 0} true;
  $i904 := $i907;
  goto $bb543;
$bb550:
  assume ($i918 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 11} true;
  assume {:verifier.code 0} true;
  $i920 := $slt.i32($i916,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i920} true;
  goto $bb553, $bb555;
$bb551:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  assume !($i918 == 1);
  goto $bb552;
$bb552:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i924 := $sext.i32.i64($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 9} true;
  assume {:verifier.code 0} true;
  $i925 := $srem.i64($i924,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i926 := $trunc.i64.i32($i925);
  call {:cexpr "a"} boogie_si_record_i32($i926);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 738, 5} true;
  assume {:verifier.code 0} true;
  $i927 := $add.i32($i926,$i926);
  call {:cexpr "a"} boogie_si_record_i32($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i928 := $sext.i32.i64($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 9} true;
  assume {:verifier.code 0} true;
  $i929 := $srem.i64($i928,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i930 := $trunc.i64.i32($i929);
  call {:cexpr "b"} boogie_si_record_i32($i930);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 740, 5} true;
  assume {:verifier.code 0} true;
  $i931 := $add.i32($i930,$i930);
  call {:cexpr "b"} boogie_si_record_i32($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 742, 5} true;
  assume {:verifier.code 0} true;
  $i932 := $add.i32($i919,$i919);
  call {:cexpr "c"} boogie_si_record_i32($i932);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 9} true;
  assume {:verifier.code 0} true;
  $i933 := $slt.i32($i927,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  $i934 := $i932;
  assume {:branchcond $i933} true;
  goto $bb559, $bb560;
$bb553:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume ($i920 == 1);
  goto $bb554;
$bb554:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 734, 9} true;
  assume {:verifier.code 0} true;
  $i923 := $add.i32($i917,1);
  call {:cexpr "c"} boogie_si_record_i32($i923);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 735, 5} true;
  assume {:verifier.code 0} true;
  $i922 := $i923;
  goto $bb558;
$bb555:
  assume !($i920 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 20} true;
  assume {:verifier.code 0} true;
  $i921 := $sgt.i32($i916,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  $i922 := $i917;
  assume {:branchcond $i921} true;
  goto $bb556, $bb557;
$bb556:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume ($i921 == 1);
  goto $bb554;
$bb557:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume !($i921 == 1);
  goto $bb558;
$bb558:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 736, 3} true;
  assume {:verifier.code 0} true;
  $i919 := $i922;
  goto $bb552;
$bb559:
  assume ($i933 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 11} true;
  assume {:verifier.code 0} true;
  $i935 := $slt.i32($i931,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i935} true;
  goto $bb562, $bb564;
$bb560:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  assume !($i933 == 1);
  goto $bb561;
$bb561:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i939 := $sext.i32.i64($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 9} true;
  assume {:verifier.code 0} true;
  $i940 := $srem.i64($i939,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i941 := $trunc.i64.i32($i940);
  call {:cexpr "a"} boogie_si_record_i32($i941);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 749, 5} true;
  assume {:verifier.code 0} true;
  $i942 := $add.i32($i941,$i941);
  call {:cexpr "a"} boogie_si_record_i32($i942);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i943 := $sext.i32.i64($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 9} true;
  assume {:verifier.code 0} true;
  $i944 := $srem.i64($i943,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i945 := $trunc.i64.i32($i944);
  call {:cexpr "b"} boogie_si_record_i32($i945);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 751, 5} true;
  assume {:verifier.code 0} true;
  $i946 := $add.i32($i945,$i945);
  call {:cexpr "b"} boogie_si_record_i32($i946);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 753, 5} true;
  assume {:verifier.code 0} true;
  $i947 := $add.i32($i934,$i934);
  call {:cexpr "c"} boogie_si_record_i32($i947);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 9} true;
  assume {:verifier.code 0} true;
  $i948 := $slt.i32($i942,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  $i949 := $i947;
  assume {:branchcond $i948} true;
  goto $bb568, $bb569;
$bb562:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume ($i935 == 1);
  goto $bb563;
$bb563:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 745, 9} true;
  assume {:verifier.code 0} true;
  $i938 := $add.i32($i932,1);
  call {:cexpr "c"} boogie_si_record_i32($i938);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 746, 5} true;
  assume {:verifier.code 0} true;
  $i937 := $i938;
  goto $bb567;
$bb564:
  assume !($i935 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 20} true;
  assume {:verifier.code 0} true;
  $i936 := $sgt.i32($i931,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  $i937 := $i932;
  assume {:branchcond $i936} true;
  goto $bb565, $bb566;
$bb565:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume ($i936 == 1);
  goto $bb563;
$bb566:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume !($i936 == 1);
  goto $bb567;
$bb567:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 747, 3} true;
  assume {:verifier.code 0} true;
  $i934 := $i937;
  goto $bb561;
$bb568:
  assume ($i948 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 11} true;
  assume {:verifier.code 0} true;
  $i950 := $slt.i32($i946,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i950} true;
  goto $bb571, $bb573;
$bb569:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  assume !($i948 == 1);
  goto $bb570;
$bb570:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 764, 3} true;
  assume {:verifier.code 0} true;
  $r := $i949;
  $exn := false;
  return;
$bb571:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume ($i950 == 1);
  goto $bb572;
$bb572:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 756, 9} true;
  assume {:verifier.code 0} true;
  $i953 := $add.i32($i947,1);
  call {:cexpr "c"} boogie_si_record_i32($i953);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 757, 5} true;
  assume {:verifier.code 0} true;
  $i952 := $i953;
  goto $bb576;
$bb573:
  assume !($i950 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 20} true;
  assume {:verifier.code 0} true;
  $i951 := $sgt.i32($i946,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  $i952 := $i947;
  assume {:branchcond $i951} true;
  goto $bb574, $bb575;
$bb574:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume ($i951 == 1);
  goto $bb572;
$bb575:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume !($i951 == 1);
  goto $bb576;
$bb576:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 758, 3} true;
  assume {:verifier.code 0} true;
  $i949 := $i952;
  goto $bb570;
}
const __SMACK_and64: ref;
axiom (__SMACK_and64 == $sub.ref(0,29952));
procedure {:inline 1} __SMACK_and64($i0: i64, $i1: i64) returns ($r: i64)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_and64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_and64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 68} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 51} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_and32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_and32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 45} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 38} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_and16: ref;
axiom (__SMACK_and16 == $sub.ref(0,30984));
procedure {:inline 1} __SMACK_and16($i0: i16, $i1: i16) returns ($r: i16)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $i13: i16;
  var $i8: i16;
  var $i17: i32;
  var $i18: i32;
  var $i19: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i16;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i16;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i42: i16;
  var $i37: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i16;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i16;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i16;
  var $i71: i16;
  var $i66: i16;
  var $i75: i32;
  var $i76: i32;
  var $i77: i16;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i16;
  var $i82: i32;
  var $i83: i32;
  var $i84: i16;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i16;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i16;
  var $i100: i16;
  var $i95: i16;
  var $i104: i32;
  var $i105: i32;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i16;
  var $i111: i32;
  var $i112: i32;
  var $i113: i16;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i16;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i16;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i16;
  var $i129: i16;
  var $i124: i16;
  var $i133: i32;
  var $i134: i32;
  var $i135: i16;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i16;
  var $i140: i32;
  var $i141: i32;
  var $i142: i16;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i16;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i16;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i16;
  var $i158: i16;
  var $i153: i16;
  var $i162: i32;
  var $i163: i32;
  var $i164: i16;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i16;
  var $i169: i32;
  var $i170: i32;
  var $i171: i16;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i16;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i16;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i16;
  var $i187: i16;
  var $i182: i16;
  var $i191: i32;
  var $i192: i32;
  var $i193: i16;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i32;
  var $i199: i32;
  var $i200: i16;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i16;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i16;
  var $i216: i16;
  var $i211: i16;
  var $i220: i32;
  var $i221: i32;
  var $i222: i16;
  var $i223: i32;
  var $i224: i32;
  var $i225: i32;
  var $i226: i16;
  var $i227: i32;
  var $i228: i32;
  var $i229: i16;
  var $i230: i32;
  var $i231: i32;
  var $i232: i32;
  var $i233: i16;
  var $i234: i32;
  var $i235: i32;
  var $i236: i32;
  var $i237: i16;
  var $i238: i32;
  var $i239: i1;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i1;
  var $i246: i32;
  var $i247: i32;
  var $i248: i16;
  var $i245: i16;
  var $i240: i16;
  var $i249: i32;
  var $i250: i32;
  var $i251: i16;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $i255: i16;
  var $i256: i32;
  var $i257: i32;
  var $i258: i16;
  var $i259: i32;
  var $i260: i32;
  var $i261: i32;
  var $i262: i16;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $i266: i16;
  var $i267: i32;
  var $i268: i1;
  var $i270: i32;
  var $i271: i1;
  var $i272: i32;
  var $i273: i1;
  var $i275: i32;
  var $i276: i32;
  var $i277: i16;
  var $i274: i16;
  var $i269: i16;
  var $i278: i32;
  var $i279: i32;
  var $i280: i16;
  var $i281: i32;
  var $i282: i32;
  var $i283: i32;
  var $i284: i16;
  var $i285: i32;
  var $i286: i32;
  var $i287: i16;
  var $i288: i32;
  var $i289: i32;
  var $i290: i32;
  var $i291: i16;
  var $i292: i32;
  var $i293: i32;
  var $i294: i32;
  var $i295: i16;
  var $i296: i32;
  var $i297: i1;
  var $i299: i32;
  var $i300: i1;
  var $i301: i32;
  var $i302: i1;
  var $i304: i32;
  var $i305: i32;
  var $i306: i16;
  var $i303: i16;
  var $i298: i16;
  var $i307: i32;
  var $i308: i32;
  var $i309: i16;
  var $i310: i32;
  var $i311: i32;
  var $i312: i32;
  var $i313: i16;
  var $i314: i32;
  var $i315: i32;
  var $i316: i16;
  var $i317: i32;
  var $i318: i32;
  var $i319: i32;
  var $i320: i16;
  var $i321: i32;
  var $i322: i32;
  var $i323: i32;
  var $i324: i16;
  var $i325: i32;
  var $i326: i1;
  var $i328: i32;
  var $i329: i1;
  var $i330: i32;
  var $i331: i1;
  var $i333: i32;
  var $i334: i32;
  var $i335: i16;
  var $i332: i16;
  var $i327: i16;
  var $i336: i32;
  var $i337: i32;
  var $i338: i16;
  var $i339: i32;
  var $i340: i32;
  var $i341: i32;
  var $i342: i16;
  var $i343: i32;
  var $i344: i32;
  var $i345: i16;
  var $i346: i32;
  var $i347: i32;
  var $i348: i32;
  var $i349: i16;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i16;
  var $i354: i32;
  var $i355: i1;
  var $i357: i32;
  var $i358: i1;
  var $i359: i32;
  var $i360: i1;
  var $i362: i32;
  var $i363: i32;
  var $i364: i16;
  var $i361: i16;
  var $i356: i16;
  var $i365: i32;
  var $i366: i32;
  var $i367: i16;
  var $i368: i32;
  var $i369: i32;
  var $i370: i32;
  var $i371: i16;
  var $i372: i32;
  var $i373: i32;
  var $i374: i16;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i16;
  var $i379: i32;
  var $i380: i32;
  var $i381: i32;
  var $i382: i16;
  var $i383: i32;
  var $i384: i1;
  var $i386: i32;
  var $i387: i1;
  var $i388: i32;
  var $i389: i1;
  var $i391: i32;
  var $i392: i32;
  var $i393: i16;
  var $i390: i16;
  var $i385: i16;
  var $i394: i32;
  var $i395: i32;
  var $i396: i16;
  var $i397: i32;
  var $i398: i32;
  var $i399: i32;
  var $i400: i16;
  var $i401: i32;
  var $i402: i32;
  var $i403: i16;
  var $i404: i32;
  var $i405: i32;
  var $i406: i32;
  var $i407: i16;
  var $i408: i32;
  var $i409: i32;
  var $i410: i32;
  var $i411: i16;
  var $i412: i32;
  var $i413: i1;
  var $i415: i32;
  var $i416: i1;
  var $i417: i32;
  var $i418: i1;
  var $i420: i32;
  var $i421: i32;
  var $i422: i16;
  var $i419: i16;
  var $i414: i16;
  var $i423: i32;
  var $i424: i32;
  var $i425: i16;
  var $i426: i32;
  var $i427: i32;
  var $i428: i32;
  var $i429: i16;
  var $i430: i32;
  var $i431: i32;
  var $i432: i16;
  var $i433: i32;
  var $i434: i32;
  var $i435: i32;
  var $i436: i16;
  var $i437: i32;
  var $i438: i32;
  var $i439: i32;
  var $i440: i16;
  var $i441: i32;
  var $i442: i1;
  var $i444: i32;
  var $i445: i1;
  var $i446: i32;
  var $i447: i1;
  var $i449: i32;
  var $i450: i32;
  var $i451: i16;
  var $i448: i16;
  var $i443: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_and16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3,$i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  call {:cexpr "c"} boogie_si_record_i16($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  assume !($i7 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i16($i18);
  call {:cexpr "a"} boogie_si_record_i16($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21,$i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  call {:cexpr "a"} boogie_si_record_i16($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  call {:cexpr "b"} boogie_si_record_i16($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28,$i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  call {:cexpr "b"} boogie_si_record_i16($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32,$i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i16($i33);
  call {:cexpr "c"} boogie_si_record_i16($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i16.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  call {:cexpr "c"} boogie_si_record_i16($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 776, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume !($i12 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 777, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i16($i47);
  call {:cexpr "a"} boogie_si_record_i16($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50,$i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  call {:cexpr "a"} boogie_si_record_i16($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  call {:cexpr "b"} boogie_si_record_i16($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57,$i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i16($i58);
  call {:cexpr "b"} boogie_si_record_i16($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61,$i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i16($i62);
  call {:cexpr "c"} boogie_si_record_i16($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i16.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i16($i44);
  call {:cexpr "c"} boogie_si_record_i16($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 787, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !($i39 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume !($i41 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 788, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  assume !($i65 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i16($i76);
  call {:cexpr "a"} boogie_si_record_i16($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  call {:cexpr "a"} boogie_si_record_i16($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i16($i83);
  call {:cexpr "b"} boogie_si_record_i16($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  call {:cexpr "b"} boogie_si_record_i16($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i16($i91);
  call {:cexpr "c"} boogie_si_record_i16($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i16.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i16($i73);
  call {:cexpr "c"} boogie_si_record_i16($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 798, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !($i68 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume !($i70 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 799, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  assume !($i94 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i16($i105);
  call {:cexpr "a"} boogie_si_record_i16($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i16($i109);
  call {:cexpr "a"} boogie_si_record_i16($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i16($i112);
  call {:cexpr "b"} boogie_si_record_i16($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115,$i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i16($i116);
  call {:cexpr "b"} boogie_si_record_i16($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i16($i120);
  call {:cexpr "c"} boogie_si_record_i16($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i16.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i16($i102);
  call {:cexpr "c"} boogie_si_record_i16($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 809, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !($i97 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume !($i99 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 810, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i16($i134);
  call {:cexpr "a"} boogie_si_record_i16($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137,$i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i16($i138);
  call {:cexpr "a"} boogie_si_record_i16($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i16($i141);
  call {:cexpr "b"} boogie_si_record_i16($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144,$i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i16($i145);
  call {:cexpr "b"} boogie_si_record_i16($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148,$i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i16($i149);
  call {:cexpr "c"} boogie_si_record_i16($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i16.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i16($i131);
  call {:cexpr "c"} boogie_si_record_i16($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 820, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume !($i128 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 821, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i16($i163);
  call {:cexpr "a"} boogie_si_record_i16($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166,$i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i16($i167);
  call {:cexpr "a"} boogie_si_record_i16($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i16($i170);
  call {:cexpr "b"} boogie_si_record_i16($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173,$i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i16($i174);
  call {:cexpr "b"} boogie_si_record_i16($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177,$i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i16($i178);
  call {:cexpr "c"} boogie_si_record_i16($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i16.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i16($i160);
  call {:cexpr "c"} boogie_si_record_i16($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 831, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume !($i157 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 832, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  assume !($i181 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i16($i192);
  call {:cexpr "a"} boogie_si_record_i16($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i16($i196);
  call {:cexpr "a"} boogie_si_record_i16($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i16($i199);
  call {:cexpr "b"} boogie_si_record_i16($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i16($i203);
  call {:cexpr "b"} boogie_si_record_i16($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i16($i207);
  call {:cexpr "c"} boogie_si_record_i16($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i16.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i16($i189);
  call {:cexpr "c"} boogie_si_record_i16($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 842, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !($i184 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 843, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  assume !($i210 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i32($i220,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i32.i16($i221);
  call {:cexpr "a"} boogie_si_record_i16($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 8} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i32($i224,$i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i32.i16($i225);
  call {:cexpr "a"} boogie_si_record_i16($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i227 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $srem.i32($i227,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $trunc.i32.i16($i228);
  call {:cexpr "b"} boogie_si_record_i16($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 8} true;
  assume {:verifier.code 0} true;
  $i230 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $add.i32($i231,$i230);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i233 := $trunc.i32.i16($i232);
  call {:cexpr "b"} boogie_si_record_i16($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 8} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i32($i235,$i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i32.i16($i236);
  call {:cexpr "c"} boogie_si_record_i16($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $slt.i32($i238,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $i237;
  assume {:branchcond $i239} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i16.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i16($i218);
  call {:cexpr "c"} boogie_si_record_i16($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 853, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume !($i215 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 854, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
$bb73:
  assume ($i239 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 11} true;
  assume {:verifier.code 0} true;
  $i242 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  assume !($i239 == 1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i32($i249,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i32.i16($i250);
  call {:cexpr "a"} boogie_si_record_i16($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 8} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i32($i253,$i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i32.i16($i254);
  call {:cexpr "a"} boogie_si_record_i16($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 9} true;
  assume {:verifier.code 0} true;
  $i257 := $srem.i32($i256,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i258 := $trunc.i32.i16($i257);
  call {:cexpr "b"} boogie_si_record_i16($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 8} true;
  assume {:verifier.code 0} true;
  $i259 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i260 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i32($i260,$i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $trunc.i32.i16($i261);
  call {:cexpr "b"} boogie_si_record_i16($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 8} true;
  assume {:verifier.code 0} true;
  $i263 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i265 := $add.i32($i264,$i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i32.i16($i265);
  call {:cexpr "c"} boogie_si_record_i16($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $i266;
  assume {:branchcond $i268} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume ($i242 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i246 := $sext.i16.i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i246,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $trunc.i32.i16($i247);
  call {:cexpr "c"} boogie_si_record_i16($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 864, 5} true;
  assume {:verifier.code 0} true;
  $i245 := $i248;
  goto $bb81;
$bb78:
  assume !($i242 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 20} true;
  assume {:verifier.code 0} true;
  $i244 := $sgt.i32($i243,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i245 := $i237;
  assume {:branchcond $i244} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume ($i244 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume !($i244 == 1);
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 865, 3} true;
  assume {:verifier.code 0} true;
  $i240 := $i245;
  goto $bb75;
$bb82:
  assume ($i268 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 11} true;
  assume {:verifier.code 0} true;
  $i271 := $slt.i32($i270,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i271} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  assume !($i268 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 9} true;
  assume {:verifier.code 0} true;
  $i279 := $srem.i32($i278,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $trunc.i32.i16($i279);
  call {:cexpr "a"} boogie_si_record_i16($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 8} true;
  assume {:verifier.code 0} true;
  $i281 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i282,$i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i32.i16($i283);
  call {:cexpr "a"} boogie_si_record_i16($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 9} true;
  assume {:verifier.code 0} true;
  $i286 := $srem.i32($i285,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i287 := $trunc.i32.i16($i286);
  call {:cexpr "b"} boogie_si_record_i16($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 8} true;
  assume {:verifier.code 0} true;
  $i288 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i290 := $add.i32($i289,$i288);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i291 := $trunc.i32.i16($i290);
  call {:cexpr "b"} boogie_si_record_i16($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 8} true;
  assume {:verifier.code 0} true;
  $i292 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i293 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i293,$i292);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i295 := $trunc.i32.i16($i294);
  call {:cexpr "c"} boogie_si_record_i16($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 9} true;
  assume {:verifier.code 0} true;
  $i297 := $slt.i32($i296,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $i295;
  assume {:branchcond $i297} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume ($i271 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i16.i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i276 := $add.i32($i275,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $trunc.i32.i16($i276);
  call {:cexpr "c"} boogie_si_record_i16($i277);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 875, 5} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb90;
$bb87:
  assume !($i271 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 18} true;
  assume {:verifier.code 0} true;
  $i272 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 20} true;
  assume {:verifier.code 0} true;
  $i273 := $sgt.i32($i272,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i274 := $i266;
  assume {:branchcond $i273} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume ($i273 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume !($i273 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 876, 3} true;
  assume {:verifier.code 0} true;
  $i269 := $i274;
  goto $bb84;
$bb91:
  assume ($i297 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 11} true;
  assume {:verifier.code 0} true;
  $i300 := $slt.i32($i299,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  assume !($i297 == 1);
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i307 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $srem.i32($i307,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $trunc.i32.i16($i308);
  call {:cexpr "a"} boogie_si_record_i16($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 8} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i311 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311,$i310);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $trunc.i32.i16($i312);
  call {:cexpr "a"} boogie_si_record_i16($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i32($i314,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i16($i315);
  call {:cexpr "b"} boogie_si_record_i16($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 8} true;
  assume {:verifier.code 0} true;
  $i317 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i318 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i318,$i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i320 := $trunc.i32.i16($i319);
  call {:cexpr "b"} boogie_si_record_i16($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 8} true;
  assume {:verifier.code 0} true;
  $i321 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i322,$i321);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $trunc.i32.i16($i323);
  call {:cexpr "c"} boogie_si_record_i16($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $slt.i32($i325,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $i324;
  assume {:branchcond $i326} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume ($i300 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i304 := $sext.i16.i32($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i32($i304,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i306 := $trunc.i32.i16($i305);
  call {:cexpr "c"} boogie_si_record_i16($i306);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 886, 5} true;
  assume {:verifier.code 0} true;
  $i303 := $i306;
  goto $bb99;
$bb96:
  assume !($i300 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 18} true;
  assume {:verifier.code 0} true;
  $i301 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 20} true;
  assume {:verifier.code 0} true;
  $i302 := $sgt.i32($i301,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $i295;
  assume {:branchcond $i302} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume ($i302 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume !($i302 == 1);
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 887, 3} true;
  assume {:verifier.code 0} true;
  $i298 := $i303;
  goto $bb93;
$bb100:
  assume ($i326 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 11} true;
  assume {:verifier.code 0} true;
  $i329 := $slt.i32($i328,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  assume !($i326 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i336 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $srem.i32($i336,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $trunc.i32.i16($i337);
  call {:cexpr "a"} boogie_si_record_i16($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 8} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i32($i340,$i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i16($i341);
  call {:cexpr "a"} boogie_si_record_i16($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i32($i343,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i32.i16($i344);
  call {:cexpr "b"} boogie_si_record_i16($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 8} true;
  assume {:verifier.code 0} true;
  $i346 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i348 := $add.i32($i347,$i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i349 := $trunc.i32.i16($i348);
  call {:cexpr "b"} boogie_si_record_i16($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 8} true;
  assume {:verifier.code 0} true;
  $i350 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i351 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $add.i32($i351,$i350);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i353 := $trunc.i32.i16($i352);
  call {:cexpr "c"} boogie_si_record_i16($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $slt.i32($i354,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $i353;
  assume {:branchcond $i355} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume ($i329 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $sext.i16.i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i333,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i335 := $trunc.i32.i16($i334);
  call {:cexpr "c"} boogie_si_record_i16($i335);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 897, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $i335;
  goto $bb108;
$bb105:
  assume !($i329 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 18} true;
  assume {:verifier.code 0} true;
  $i330 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 20} true;
  assume {:verifier.code 0} true;
  $i331 := $sgt.i32($i330,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i332 := $i324;
  assume {:branchcond $i331} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume ($i331 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume !($i331 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 898, 3} true;
  assume {:verifier.code 0} true;
  $i327 := $i332;
  goto $bb102;
$bb109:
  assume ($i355 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i357 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 11} true;
  assume {:verifier.code 0} true;
  $i358 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i358} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  assume !($i355 == 1);
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i365 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 9} true;
  assume {:verifier.code 0} true;
  $i366 := $srem.i32($i365,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i367 := $trunc.i32.i16($i366);
  call {:cexpr "a"} boogie_si_record_i16($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 8} true;
  assume {:verifier.code 0} true;
  $i368 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i370 := $add.i32($i369,$i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i32.i16($i370);
  call {:cexpr "a"} boogie_si_record_i16($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 9} true;
  assume {:verifier.code 0} true;
  $i373 := $srem.i32($i372,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $trunc.i32.i16($i373);
  call {:cexpr "b"} boogie_si_record_i16($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 8} true;
  assume {:verifier.code 0} true;
  $i375 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i376,$i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i378 := $trunc.i32.i16($i377);
  call {:cexpr "b"} boogie_si_record_i16($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 8} true;
  assume {:verifier.code 0} true;
  $i379 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i380 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i381 := $add.i32($i380,$i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $trunc.i32.i16($i381);
  call {:cexpr "c"} boogie_si_record_i16($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 9} true;
  assume {:verifier.code 0} true;
  $i384 := $slt.i32($i383,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $i382;
  assume {:branchcond $i384} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume ($i358 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i362 := $sext.i16.i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $add.i32($i362,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i364 := $trunc.i32.i16($i363);
  call {:cexpr "c"} boogie_si_record_i16($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 908, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $i364;
  goto $bb117;
$bb114:
  assume !($i358 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 18} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 20} true;
  assume {:verifier.code 0} true;
  $i360 := $sgt.i32($i359,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i361 := $i353;
  assume {:branchcond $i360} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume ($i360 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume !($i360 == 1);
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 909, 3} true;
  assume {:verifier.code 0} true;
  $i356 := $i361;
  goto $bb111;
$bb118:
  assume ($i384 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 11} true;
  assume {:verifier.code 0} true;
  $i387 := $slt.i32($i386,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i387} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  assume !($i384 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 9} true;
  assume {:verifier.code 0} true;
  $i395 := $srem.i32($i394,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i396 := $trunc.i32.i16($i395);
  call {:cexpr "a"} boogie_si_record_i16($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 8} true;
  assume {:verifier.code 0} true;
  $i397 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i398 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i398,$i397);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i400 := $trunc.i32.i16($i399);
  call {:cexpr "a"} boogie_si_record_i16($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 9} true;
  assume {:verifier.code 0} true;
  $i402 := $srem.i32($i401,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $trunc.i32.i16($i402);
  call {:cexpr "b"} boogie_si_record_i16($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 8} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i405 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405,$i404);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $trunc.i32.i16($i406);
  call {:cexpr "b"} boogie_si_record_i16($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 8} true;
  assume {:verifier.code 0} true;
  $i408 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i409 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i32($i409,$i408);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i411 := $trunc.i32.i16($i410);
  call {:cexpr "c"} boogie_si_record_i16($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i412 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $slt.i32($i412,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $i411;
  assume {:branchcond $i413} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume ($i387 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i391 := $sext.i16.i32($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i391,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $trunc.i32.i16($i392);
  call {:cexpr "c"} boogie_si_record_i16($i393);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 919, 5} true;
  assume {:verifier.code 0} true;
  $i390 := $i393;
  goto $bb126;
$bb123:
  assume !($i387 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 18} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 20} true;
  assume {:verifier.code 0} true;
  $i389 := $sgt.i32($i388,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $i382;
  assume {:branchcond $i389} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume ($i389 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume !($i389 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 920, 3} true;
  assume {:verifier.code 0} true;
  $i385 := $i390;
  goto $bb120;
$bb127:
  assume ($i413 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 11} true;
  assume {:verifier.code 0} true;
  $i416 := $slt.i32($i415,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i416} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  assume !($i413 == 1);
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i423 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 9} true;
  assume {:verifier.code 0} true;
  $i424 := $srem.i32($i423,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i425 := $trunc.i32.i16($i424);
  call {:cexpr "a"} boogie_si_record_i16($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 8} true;
  assume {:verifier.code 0} true;
  $i426 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i427,$i426);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $trunc.i32.i16($i428);
  call {:cexpr "a"} boogie_si_record_i16($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i32($i430,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i32.i16($i431);
  call {:cexpr "b"} boogie_si_record_i16($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 8} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i435 := $add.i32($i434,$i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i32.i16($i435);
  call {:cexpr "b"} boogie_si_record_i16($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 8} true;
  assume {:verifier.code 0} true;
  $i437 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i438 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i438,$i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i440 := $trunc.i32.i16($i439);
  call {:cexpr "c"} boogie_si_record_i16($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i441 := $sext.i16.i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $slt.i32($i441,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $i440;
  assume {:branchcond $i442} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume ($i416 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $sext.i16.i32($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i32.i16($i421);
  call {:cexpr "c"} boogie_si_record_i16($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 930, 5} true;
  assume {:verifier.code 0} true;
  $i419 := $i422;
  goto $bb135;
$bb132:
  assume !($i416 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 18} true;
  assume {:verifier.code 0} true;
  $i417 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 20} true;
  assume {:verifier.code 0} true;
  $i418 := $sgt.i32($i417,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $i411;
  assume {:branchcond $i418} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume ($i418 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume !($i418 == 1);
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 931, 3} true;
  assume {:verifier.code 0} true;
  $i414 := $i419;
  goto $bb129;
$bb136:
  assume ($i442 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 11} true;
  assume {:verifier.code 0} true;
  $i445 := $slt.i32($i444,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i445} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  assume !($i442 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 948, 3} true;
  assume {:verifier.code 0} true;
  $r := $i443;
  $exn := false;
  return;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume ($i445 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i16.i32($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $add.i32($i449,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i32.i16($i450);
  call {:cexpr "c"} boogie_si_record_i16($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 941, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $i451;
  goto $bb144;
$bb141:
  assume !($i445 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 18} true;
  assume {:verifier.code 0} true;
  $i446 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 20} true;
  assume {:verifier.code 0} true;
  $i447 := $sgt.i32($i446,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i448 := $i440;
  assume {:branchcond $i447} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume ($i447 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume !($i447 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 942, 3} true;
  assume {:verifier.code 0} true;
  $i443 := $i448;
  goto $bb138;
}
const __SMACK_and8: ref;
axiom (__SMACK_and8 == $sub.ref(0,32016));
procedure {:inline 1} __SMACK_and8($i0: i8, $i1: i8) returns ($r: i8)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i13: i8;
  var $i8: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $i42: i8;
  var $i37: i8;
  var $i46: i32;
  var $i47: i32;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i8;
  var $i71: i8;
  var $i66: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i8;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i8;
  var $i100: i8;
  var $i95: i8;
  var $i104: i32;
  var $i105: i32;
  var $i106: i8;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i8;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i8;
  var $i129: i8;
  var $i124: i8;
  var $i133: i32;
  var $i134: i32;
  var $i135: i8;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $i140: i32;
  var $i141: i32;
  var $i142: i8;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i8;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i8;
  var $i158: i8;
  var $i153: i8;
  var $i162: i32;
  var $i163: i32;
  var $i164: i8;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i8;
  var $i169: i32;
  var $i170: i32;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i8;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i8;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i8;
  var $i187: i8;
  var $i182: i8;
  var $i191: i32;
  var $i192: i32;
  var $i193: i8;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i8;
  var $i198: i32;
  var $i199: i32;
  var $i200: i8;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i8;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i8;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i8;
  var $i216: i8;
  var $i211: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_and8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3,$i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  call {:cexpr "c"} boogie_si_record_i8($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  assume !($i7 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  call {:cexpr "a"} boogie_si_record_i8($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21,$i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  call {:cexpr "a"} boogie_si_record_i8($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  call {:cexpr "b"} boogie_si_record_i8($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28,$i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  call {:cexpr "b"} boogie_si_record_i8($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32,$i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i8($i33);
  call {:cexpr "c"} boogie_si_record_i8($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  call {:cexpr "c"} boogie_si_record_i8($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 958, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume !($i12 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 959, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  call {:cexpr "a"} boogie_si_record_i8($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50,$i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  call {:cexpr "a"} boogie_si_record_i8($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  call {:cexpr "b"} boogie_si_record_i8($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57,$i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  call {:cexpr "b"} boogie_si_record_i8($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61,$i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  call {:cexpr "c"} boogie_si_record_i8($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i8.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  call {:cexpr "c"} boogie_si_record_i8($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 969, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !($i39 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume !($i41 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 970, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  assume !($i65 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  call {:cexpr "a"} boogie_si_record_i8($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i8($i80);
  call {:cexpr "a"} boogie_si_record_i8($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i8($i83);
  call {:cexpr "b"} boogie_si_record_i8($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  call {:cexpr "b"} boogie_si_record_i8($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  call {:cexpr "c"} boogie_si_record_i8($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i8.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  call {:cexpr "c"} boogie_si_record_i8($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 980, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !($i68 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume !($i70 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 981, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  assume !($i94 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i8($i105);
  call {:cexpr "a"} boogie_si_record_i8($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i8($i109);
  call {:cexpr "a"} boogie_si_record_i8($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  call {:cexpr "b"} boogie_si_record_i8($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115,$i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i8($i116);
  call {:cexpr "b"} boogie_si_record_i8($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  call {:cexpr "c"} boogie_si_record_i8($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i8.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i8($i102);
  call {:cexpr "c"} boogie_si_record_i8($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 991, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !($i97 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume !($i99 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 992, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i8($i134);
  call {:cexpr "a"} boogie_si_record_i8($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137,$i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  call {:cexpr "a"} boogie_si_record_i8($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i8($i141);
  call {:cexpr "b"} boogie_si_record_i8($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144,$i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i8($i145);
  call {:cexpr "b"} boogie_si_record_i8($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148,$i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i8($i149);
  call {:cexpr "c"} boogie_si_record_i8($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i8.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i8($i131);
  call {:cexpr "c"} boogie_si_record_i8($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1002, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume !($i128 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1003, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i8($i163);
  call {:cexpr "a"} boogie_si_record_i8($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166,$i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i8($i167);
  call {:cexpr "a"} boogie_si_record_i8($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i8($i170);
  call {:cexpr "b"} boogie_si_record_i8($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173,$i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i8($i174);
  call {:cexpr "b"} boogie_si_record_i8($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177,$i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i8($i178);
  call {:cexpr "c"} boogie_si_record_i8($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i8.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i8($i160);
  call {:cexpr "c"} boogie_si_record_i8($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1013, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume !($i157 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1014, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  assume !($i181 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i8($i192);
  call {:cexpr "a"} boogie_si_record_i8($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i8($i196);
  call {:cexpr "a"} boogie_si_record_i8($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i8($i199);
  call {:cexpr "b"} boogie_si_record_i8($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i8($i203);
  call {:cexpr "b"} boogie_si_record_i8($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i8($i207);
  call {:cexpr "c"} boogie_si_record_i8($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i8.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i8.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i8($i189);
  call {:cexpr "c"} boogie_si_record_i8($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1024, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !($i184 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1025, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  assume !($i210 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1042, 3} true;
  assume {:verifier.code 0} true;
  $r := $i211;
  $exn := false;
  return;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i8.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i8($i218);
  call {:cexpr "c"} boogie_si_record_i8($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1035, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume !($i215 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1036, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
}
const __SMACK_or32: ref;
axiom (__SMACK_or32 == $sub.ref(0,33048));
procedure {:inline 1} __SMACK_or32($i0: i32, $i1: i32) returns ($r: i32)
modifies $exn;
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i5: i32;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i20: i32;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i35: i32;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $i42: i32;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i50: i32;
  var $i54: i32;
  var $i55: i64;
  var $i56: i64;
  var $i57: i32;
  var $i58: i32;
  var $i59: i64;
  var $i60: i64;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i65: i32;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $i72: i32;
  var $i73: i32;
  var $i74: i64;
  var $i75: i64;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i79: i32;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i80: i32;
  var $i84: i32;
  var $i85: i64;
  var $i86: i64;
  var $i87: i32;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i95: i32;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i109: i32;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i110: i32;
  var $i114: i32;
  var $i115: i64;
  var $i116: i64;
  var $i117: i32;
  var $i118: i32;
  var $i119: i64;
  var $i120: i64;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i124: i32;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i125: i32;
  var $i129: i32;
  var $i130: i64;
  var $i131: i64;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i139: i32;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i140: i32;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $i147: i32;
  var $i148: i32;
  var $i149: i64;
  var $i150: i64;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i155: i32;
  var $i159: i32;
  var $i160: i64;
  var $i161: i64;
  var $i162: i32;
  var $i163: i32;
  var $i164: i64;
  var $i165: i64;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i32;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i170: i32;
  var $i174: i32;
  var $i175: i64;
  var $i176: i64;
  var $i177: i32;
  var $i178: i32;
  var $i179: i64;
  var $i180: i64;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i185: i32;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $i192: i32;
  var $i193: i32;
  var $i194: i64;
  var $i195: i64;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i199: i32;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i200: i32;
  var $i204: i32;
  var $i205: i64;
  var $i206: i64;
  var $i207: i32;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i215: i32;
  var $i219: i32;
  var $i220: i64;
  var $i221: i64;
  var $i222: i32;
  var $i223: i32;
  var $i224: i64;
  var $i225: i64;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i229: i32;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i230: i32;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $i237: i32;
  var $i238: i32;
  var $i239: i64;
  var $i240: i64;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i245: i32;
  var $i249: i32;
  var $i250: i64;
  var $i251: i64;
  var $i252: i32;
  var $i253: i32;
  var $i254: i64;
  var $i255: i64;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i260: i32;
  var $i264: i32;
  var $i265: i64;
  var $i266: i64;
  var $i267: i32;
  var $i268: i32;
  var $i269: i64;
  var $i270: i64;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i274: i32;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i275: i32;
  var $i279: i32;
  var $i280: i64;
  var $i281: i64;
  var $i282: i32;
  var $i283: i32;
  var $i284: i64;
  var $i285: i64;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i289: i32;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i290: i32;
  var $i294: i32;
  var $i295: i64;
  var $i296: i64;
  var $i297: i32;
  var $i298: i32;
  var $i299: i64;
  var $i300: i64;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i304: i32;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i305: i32;
  var $i309: i32;
  var $i310: i64;
  var $i311: i64;
  var $i312: i32;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i319: i32;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i320: i32;
  var $i324: i32;
  var $i325: i64;
  var $i326: i64;
  var $i327: i32;
  var $i328: i32;
  var $i329: i64;
  var $i330: i64;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i334: i32;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i335: i32;
  var $i339: i32;
  var $i340: i64;
  var $i341: i64;
  var $i342: i32;
  var $i343: i32;
  var $i344: i64;
  var $i345: i64;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i349: i32;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i350: i32;
  var $i354: i32;
  var $i355: i64;
  var $i356: i64;
  var $i357: i32;
  var $i358: i32;
  var $i359: i64;
  var $i360: i64;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i364: i32;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i365: i32;
  var $i369: i32;
  var $i370: i64;
  var $i371: i64;
  var $i372: i32;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i379: i32;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i380: i32;
  var $i384: i32;
  var $i385: i64;
  var $i386: i64;
  var $i387: i32;
  var $i388: i32;
  var $i389: i64;
  var $i390: i64;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i394: i32;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i395: i32;
  var $i399: i32;
  var $i400: i64;
  var $i401: i64;
  var $i402: i32;
  var $i403: i32;
  var $i404: i64;
  var $i405: i64;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i409: i32;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i410: i32;
  var $i414: i32;
  var $i415: i64;
  var $i416: i64;
  var $i417: i32;
  var $i418: i32;
  var $i419: i64;
  var $i420: i64;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i424: i32;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i425: i32;
  var $i429: i32;
  var $i430: i64;
  var $i431: i64;
  var $i432: i32;
  var $i433: i32;
  var $i434: i64;
  var $i435: i64;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i439: i32;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i440: i32;
  var $i444: i32;
  var $i445: i64;
  var $i446: i64;
  var $i447: i32;
  var $i448: i32;
  var $i449: i64;
  var $i450: i64;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i454: i32;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i455: i32;
  var $i459: i32;
  var $i460: i64;
  var $i461: i64;
  var $i462: i32;
  var $i463: i32;
  var $i464: i64;
  var $i465: i64;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i469: i32;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i470: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_or32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_or32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0,0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1050, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i1,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1054, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i0,$i0);
  call {:cexpr "a"} boogie_si_record_i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $srem.i64($i10,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1056, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i1,$i1);
  call {:cexpr "b"} boogie_si_record_i32($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $srem.i64($i14,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1059, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i5,$i5);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1052, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1053, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb6;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  assume !($i6 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i5 := $i7;
  goto $bb3;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1061, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb9;
$bb8:
  assume !($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i16,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1065, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i12,$i12);
  call {:cexpr "a"} boogie_si_record_i32($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $srem.i64($i25,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1067, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i16,$i16);
  call {:cexpr "b"} boogie_si_record_i32($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $srem.i64($i29,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i64.i32($i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1070, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i20,$i20);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb13, $bb14;
$bb10:
  assume ($i21 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1063, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1064, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb12;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  assume !($i21 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i20 := $i22;
  goto $bb9;
$bb13:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1072, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $i34;
  goto $bb15;
$bb14:
  assume !($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 16} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i31,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1076, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i27,$i27);
  call {:cexpr "a"} boogie_si_record_i32($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $srem.i64($i40,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i64.i32($i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1078, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i31,$i31);
  call {:cexpr "b"} boogie_si_record_i32($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $srem.i64($i44,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i64.i32($i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1081, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i35,$i35);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1074, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1075, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb18;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i35 := $i37;
  goto $bb15;
$bb19:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1083, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i49;
  goto $bb21;
$bb20:
  assume !($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i46,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1087, 5} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i42,$i42);
  call {:cexpr "a"} boogie_si_record_i32($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $srem.i64($i55,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i64.i32($i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1089, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i46,$i46);
  call {:cexpr "b"} boogie_si_record_i32($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $srem.i64($i59,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i64.i32($i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1092, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i50,$i50);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb25, $bb26;
$bb22:
  assume ($i51 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1085, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1086, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb24;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb24;
$bb24:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i50 := $i52;
  goto $bb21;
$bb25:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1094, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i64);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $i64;
  goto $bb27;
$bb26:
  assume !($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 16} true;
  assume {:verifier.code 0} true;
  $i66 := $slt.i32($i61,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb28, $bb29;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1098, 5} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i57,$i57);
  call {:cexpr "a"} boogie_si_record_i32($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $srem.i64($i70,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i64.i32($i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1100, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i61,$i61);
  call {:cexpr "b"} boogie_si_record_i32($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $srem.i64($i74,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i32($i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1103, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i65,$i65);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb31, $bb32;
$bb28:
  assume ($i66 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1096, 7} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1097, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb30;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  assume !($i66 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i65 := $i67;
  goto $bb27;
$bb31:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1105, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i79);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $i79;
  goto $bb33;
$bb32:
  assume !($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 16} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i76,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1109, 5} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i72,$i72);
  call {:cexpr "a"} boogie_si_record_i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $srem.i64($i85,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1111, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i76,$i76);
  call {:cexpr "b"} boogie_si_record_i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 9} true;
  assume {:verifier.code 0} true;
  $i90 := $srem.i64($i89,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i64.i32($i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1114, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i80,$i80);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb37, $bb38;
$bb34:
  assume ($i81 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1107, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1108, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb36;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  assume !($i81 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i80 := $i82;
  goto $bb33;
$bb37:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1116, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i94);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i94;
  goto $bb39;
$bb38:
  assume !($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 16} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i91,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1120, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i32($i87,$i87);
  call {:cexpr "a"} boogie_si_record_i32($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $srem.i64($i100,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i32($i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1122, 5} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i91,$i91);
  call {:cexpr "b"} boogie_si_record_i32($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i64($i104,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i64.i32($i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1125, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i95,$i95);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb43, $bb44;
$bb40:
  assume ($i96 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1118, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1119, 3} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb42;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  assume !($i96 == 1);
  goto $bb42;
$bb42:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i95 := $i97;
  goto $bb39;
$bb43:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1127, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i109);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 3} true;
  assume {:verifier.code 0} true;
  $i110 := $i109;
  goto $bb45;
$bb44:
  assume !($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 16} true;
  assume {:verifier.code 0} true;
  $i111 := $slt.i32($i106,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb46, $bb47;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1131, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i32($i102,$i102);
  call {:cexpr "a"} boogie_si_record_i32($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 9} true;
  assume {:verifier.code 0} true;
  $i116 := $srem.i64($i115,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i64.i32($i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1133, 5} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i32($i106,$i106);
  call {:cexpr "b"} boogie_si_record_i32($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 9} true;
  assume {:verifier.code 0} true;
  $i120 := $srem.i64($i119,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i64.i32($i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1136, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i110,$i110);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb49, $bb50;
$bb46:
  assume ($i111 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1129, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1130, 3} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb48;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  assume !($i111 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i110 := $i112;
  goto $bb45;
$bb49:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1138, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $i124;
  goto $bb51;
$bb50:
  assume !($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 16} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i121,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb52, $bb53;
$bb51:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1142, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i117,$i117);
  call {:cexpr "a"} boogie_si_record_i32($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i32.i64($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $srem.i64($i130,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i64.i32($i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1144, 5} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i121,$i121);
  call {:cexpr "b"} boogie_si_record_i32($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i134 := $sext.i32.i64($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $srem.i64($i134,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i64.i32($i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1147, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i125,$i125);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb55, $bb56;
$bb52:
  assume ($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1140, 7} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1141, 3} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb54;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  assume !($i126 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i125 := $i127;
  goto $bb51;
$bb55:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1149, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 3} true;
  assume {:verifier.code 0} true;
  $i140 := $i139;
  goto $bb57;
$bb56:
  assume !($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 16} true;
  assume {:verifier.code 0} true;
  $i141 := $slt.i32($i136,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1153, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i132,$i132);
  call {:cexpr "a"} boogie_si_record_i32($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i145 := $sext.i32.i64($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 9} true;
  assume {:verifier.code 0} true;
  $i146 := $srem.i64($i145,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i64.i32($i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1155, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i136,$i136);
  call {:cexpr "b"} boogie_si_record_i32($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $srem.i64($i149,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i64.i32($i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1158, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i140,$i140);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb61, $bb62;
$bb58:
  assume ($i141 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1151, 7} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1152, 3} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb60;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  assume !($i141 == 1);
  goto $bb60;
$bb60:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i140 := $i142;
  goto $bb57;
$bb61:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1160, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i154);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 3} true;
  assume {:verifier.code 0} true;
  $i155 := $i154;
  goto $bb63;
$bb62:
  assume !($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 16} true;
  assume {:verifier.code 0} true;
  $i156 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb64, $bb65;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1164, 5} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i32($i147,$i147);
  call {:cexpr "a"} boogie_si_record_i32($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i160 := $sext.i32.i64($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $srem.i64($i160,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i64.i32($i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1166, 5} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i32($i151,$i151);
  call {:cexpr "b"} boogie_si_record_i32($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $sext.i32.i64($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 9} true;
  assume {:verifier.code 0} true;
  $i165 := $srem.i64($i164,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i64.i32($i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1169, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i155,$i155);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb67, $bb68;
$bb64:
  assume ($i156 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1162, 7} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1163, 3} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb66;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  assume !($i156 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i155 := $i157;
  goto $bb63;
$bb67:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1171, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i169);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 3} true;
  assume {:verifier.code 0} true;
  $i170 := $i169;
  goto $bb69;
$bb68:
  assume !($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $slt.i32($i166,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb70, $bb71;
$bb69:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1175, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i162,$i162);
  call {:cexpr "a"} boogie_si_record_i32($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $sext.i32.i64($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 9} true;
  assume {:verifier.code 0} true;
  $i176 := $srem.i64($i175,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i177 := $trunc.i64.i32($i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1177, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i166,$i166);
  call {:cexpr "b"} boogie_si_record_i32($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $sext.i32.i64($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 9} true;
  assume {:verifier.code 0} true;
  $i180 := $srem.i64($i179,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i64.i32($i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1180, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i170,$i170);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb73, $bb74;
$bb70:
  assume ($i171 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1173, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1174, 3} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb72;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  assume !($i171 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i170 := $i172;
  goto $bb69;
$bb73:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1182, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i184);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $i184;
  goto $bb75;
$bb74:
  assume !($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 16} true;
  assume {:verifier.code 0} true;
  $i186 := $slt.i32($i181,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb76, $bb77;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1186, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i177,$i177);
  call {:cexpr "a"} boogie_si_record_i32($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i190 := $sext.i32.i64($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 9} true;
  assume {:verifier.code 0} true;
  $i191 := $srem.i64($i190,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i192 := $trunc.i64.i32($i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1188, 5} true;
  assume {:verifier.code 0} true;
  $i193 := $add.i32($i181,$i181);
  call {:cexpr "b"} boogie_si_record_i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i32.i64($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 9} true;
  assume {:verifier.code 0} true;
  $i195 := $srem.i64($i194,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i196 := $trunc.i64.i32($i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1191, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i185,$i185);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb79, $bb80;
$bb76:
  assume ($i186 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1184, 7} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1185, 3} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb78;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb78;
$bb78:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i185 := $i187;
  goto $bb75;
$bb79:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1193, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i199);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 3} true;
  assume {:verifier.code 0} true;
  $i200 := $i199;
  goto $bb81;
$bb80:
  assume !($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 16} true;
  assume {:verifier.code 0} true;
  $i201 := $slt.i32($i196,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb82, $bb83;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1197, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $add.i32($i192,$i192);
  call {:cexpr "a"} boogie_si_record_i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i32.i64($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $srem.i64($i205,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.i64.i32($i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1199, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i32($i196,$i196);
  call {:cexpr "b"} boogie_si_record_i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i32.i64($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $srem.i64($i209,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $trunc.i64.i32($i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1202, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i200,$i200);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb85, $bb86;
$bb82:
  assume ($i201 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1195, 7} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1196, 3} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb84;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  assume !($i201 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i200 := $i202;
  goto $bb81;
$bb85:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1204, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i214);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 3} true;
  assume {:verifier.code 0} true;
  $i215 := $i214;
  goto $bb87;
$bb86:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 16} true;
  assume {:verifier.code 0} true;
  $i216 := $slt.i32($i211,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb88, $bb89;
$bb87:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1208, 5} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i32($i207,$i207);
  call {:cexpr "a"} boogie_si_record_i32($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i32.i64($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i64($i220,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i64.i32($i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1210, 5} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i32($i211,$i211);
  call {:cexpr "b"} boogie_si_record_i32($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i32.i64($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 9} true;
  assume {:verifier.code 0} true;
  $i225 := $srem.i64($i224,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i64.i32($i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1213, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i215,$i215);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb91, $bb92;
$bb88:
  assume ($i216 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1206, 7} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1207, 3} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb90;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  assume !($i216 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i215 := $i217;
  goto $bb87;
$bb91:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1215, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 3} true;
  assume {:verifier.code 0} true;
  $i230 := $i229;
  goto $bb93;
$bb92:
  assume !($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 16} true;
  assume {:verifier.code 0} true;
  $i231 := $slt.i32($i226,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb94, $bb95;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1219, 5} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i32($i222,$i222);
  call {:cexpr "a"} boogie_si_record_i32($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 9} true;
  assume {:verifier.code 0} true;
  $i236 := $srem.i64($i235,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i64.i32($i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1221, 5} true;
  assume {:verifier.code 0} true;
  $i238 := $add.i32($i226,$i226);
  call {:cexpr "b"} boogie_si_record_i32($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i239 := $sext.i32.i64($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $srem.i64($i239,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i241 := $trunc.i64.i32($i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1224, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i230,$i230);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb97, $bb98;
$bb94:
  assume ($i231 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1217, 7} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1218, 3} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb96;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  assume !($i231 == 1);
  goto $bb96;
$bb96:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i230 := $i232;
  goto $bb93;
$bb97:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1226, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i244);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 3} true;
  assume {:verifier.code 0} true;
  $i245 := $i244;
  goto $bb99;
$bb98:
  assume !($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 16} true;
  assume {:verifier.code 0} true;
  $i246 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb100, $bb101;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1230, 5} true;
  assume {:verifier.code 0} true;
  $i249 := $add.i32($i237,$i237);
  call {:cexpr "a"} boogie_si_record_i32($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i250 := $sext.i32.i64($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 9} true;
  assume {:verifier.code 0} true;
  $i251 := $srem.i64($i250,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i252 := $trunc.i64.i32($i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1232, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i32($i241,$i241);
  call {:cexpr "b"} boogie_si_record_i32($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i254 := $sext.i32.i64($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 9} true;
  assume {:verifier.code 0} true;
  $i255 := $srem.i64($i254,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $trunc.i64.i32($i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1235, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i245,$i245);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb103, $bb104;
$bb100:
  assume ($i246 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1228, 7} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1229, 3} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb102;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  assume !($i246 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i245 := $i247;
  goto $bb99;
$bb103:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1237, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 3} true;
  assume {:verifier.code 0} true;
  $i260 := $i259;
  goto $bb105;
$bb104:
  assume !($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 16} true;
  assume {:verifier.code 0} true;
  $i261 := $slt.i32($i256,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb106, $bb107;
$bb105:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1241, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $add.i32($i252,$i252);
  call {:cexpr "a"} boogie_si_record_i32($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i265 := $sext.i32.i64($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 9} true;
  assume {:verifier.code 0} true;
  $i266 := $srem.i64($i265,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $trunc.i64.i32($i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1243, 5} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i256,$i256);
  call {:cexpr "b"} boogie_si_record_i32($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $sext.i32.i64($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $srem.i64($i269,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i271 := $trunc.i64.i32($i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1246, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i260,$i260);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb109, $bb110;
$bb106:
  assume ($i261 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1239, 7} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1240, 3} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb108;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  assume !($i261 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i260 := $i262;
  goto $bb105;
$bb109:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1248, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i274);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 3} true;
  assume {:verifier.code 0} true;
  $i275 := $i274;
  goto $bb111;
$bb110:
  assume !($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 16} true;
  assume {:verifier.code 0} true;
  $i276 := $slt.i32($i271,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb112, $bb113;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1252, 5} true;
  assume {:verifier.code 0} true;
  $i279 := $add.i32($i267,$i267);
  call {:cexpr "a"} boogie_si_record_i32($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $sext.i32.i64($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 9} true;
  assume {:verifier.code 0} true;
  $i281 := $srem.i64($i280,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i282 := $trunc.i64.i32($i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1254, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i271,$i271);
  call {:cexpr "b"} boogie_si_record_i32($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i284 := $sext.i32.i64($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 9} true;
  assume {:verifier.code 0} true;
  $i285 := $srem.i64($i284,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i286 := $trunc.i64.i32($i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1257, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i275,$i275);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb115, $bb116;
$bb112:
  assume ($i276 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1250, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1251, 3} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb114;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  assume !($i276 == 1);
  goto $bb114;
$bb114:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i275 := $i277;
  goto $bb111;
$bb115:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1259, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i289);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 3} true;
  assume {:verifier.code 0} true;
  $i290 := $i289;
  goto $bb117;
$bb116:
  assume !($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 16} true;
  assume {:verifier.code 0} true;
  $i291 := $slt.i32($i286,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb118, $bb119;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1263, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i282,$i282);
  call {:cexpr "a"} boogie_si_record_i32($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i295 := $sext.i32.i64($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 9} true;
  assume {:verifier.code 0} true;
  $i296 := $srem.i64($i295,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i297 := $trunc.i64.i32($i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1265, 5} true;
  assume {:verifier.code 0} true;
  $i298 := $add.i32($i286,$i286);
  call {:cexpr "b"} boogie_si_record_i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i32.i64($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 9} true;
  assume {:verifier.code 0} true;
  $i300 := $srem.i64($i299,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i301 := $trunc.i64.i32($i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1268, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i290,$i290);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i303} true;
  goto $bb121, $bb122;
$bb118:
  assume ($i291 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1261, 7} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1262, 3} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb120;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  assume !($i291 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i290 := $i292;
  goto $bb117;
$bb121:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1270, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i304);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 3} true;
  assume {:verifier.code 0} true;
  $i305 := $i304;
  goto $bb123;
$bb122:
  assume !($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 16} true;
  assume {:verifier.code 0} true;
  $i306 := $slt.i32($i301,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb124, $bb125;
$bb123:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1274, 5} true;
  assume {:verifier.code 0} true;
  $i309 := $add.i32($i297,$i297);
  call {:cexpr "a"} boogie_si_record_i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i32.i64($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 9} true;
  assume {:verifier.code 0} true;
  $i311 := $srem.i64($i310,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i312 := $trunc.i64.i32($i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1276, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $add.i32($i301,$i301);
  call {:cexpr "b"} boogie_si_record_i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i32.i64($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i64($i314,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i64.i32($i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1279, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i305,$i305);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i318} true;
  goto $bb127, $bb128;
$bb124:
  assume ($i306 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1272, 7} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1273, 3} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb126;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  assume !($i306 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i305 := $i307;
  goto $bb123;
$bb127:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1281, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i319);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 3} true;
  assume {:verifier.code 0} true;
  $i320 := $i319;
  goto $bb129;
$bb128:
  assume !($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 16} true;
  assume {:verifier.code 0} true;
  $i321 := $slt.i32($i316,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb130, $bb131;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1285, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i32($i312,$i312);
  call {:cexpr "a"} boogie_si_record_i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i32.i64($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $srem.i64($i325,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $trunc.i64.i32($i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1287, 5} true;
  assume {:verifier.code 0} true;
  $i328 := $add.i32($i316,$i316);
  call {:cexpr "b"} boogie_si_record_i32($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i329 := $sext.i32.i64($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 9} true;
  assume {:verifier.code 0} true;
  $i330 := $srem.i64($i329,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i331 := $trunc.i64.i32($i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1290, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i320,$i320);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i333} true;
  goto $bb133, $bb134;
$bb130:
  assume ($i321 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1283, 7} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1284, 3} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb132;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  assume !($i321 == 1);
  goto $bb132;
$bb132:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i320 := $i322;
  goto $bb129;
$bb133:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1292, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i334);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 3} true;
  assume {:verifier.code 0} true;
  $i335 := $i334;
  goto $bb135;
$bb134:
  assume !($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 16} true;
  assume {:verifier.code 0} true;
  $i336 := $slt.i32($i331,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb136, $bb137;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1296, 5} true;
  assume {:verifier.code 0} true;
  $i339 := $add.i32($i327,$i327);
  call {:cexpr "a"} boogie_si_record_i32($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i32.i64($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 9} true;
  assume {:verifier.code 0} true;
  $i341 := $srem.i64($i340,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i64.i32($i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1298, 5} true;
  assume {:verifier.code 0} true;
  $i343 := $add.i32($i331,$i331);
  call {:cexpr "b"} boogie_si_record_i32($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i344 := $sext.i32.i64($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 9} true;
  assume {:verifier.code 0} true;
  $i345 := $srem.i64($i344,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i346 := $trunc.i64.i32($i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1301, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i335,$i335);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb139, $bb140;
$bb136:
  assume ($i336 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1294, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1295, 3} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb138;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  assume !($i336 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i335 := $i337;
  goto $bb135;
$bb139:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1303, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 3} true;
  assume {:verifier.code 0} true;
  $i350 := $i349;
  goto $bb141;
$bb140:
  assume !($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 16} true;
  assume {:verifier.code 0} true;
  $i351 := $slt.i32($i346,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb142, $bb143;
$bb141:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1307, 5} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i32($i342,$i342);
  call {:cexpr "a"} boogie_si_record_i32($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i355 := $sext.i32.i64($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 9} true;
  assume {:verifier.code 0} true;
  $i356 := $srem.i64($i355,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i357 := $trunc.i64.i32($i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1309, 5} true;
  assume {:verifier.code 0} true;
  $i358 := $add.i32($i346,$i346);
  call {:cexpr "b"} boogie_si_record_i32($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i32.i64($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 9} true;
  assume {:verifier.code 0} true;
  $i360 := $srem.i64($i359,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i361 := $trunc.i64.i32($i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1312, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i350,$i350);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb145, $bb146;
$bb142:
  assume ($i351 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1305, 7} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1306, 3} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb144;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  assume !($i351 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i350 := $i352;
  goto $bb141;
$bb145:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1314, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 3} true;
  assume {:verifier.code 0} true;
  $i365 := $i364;
  goto $bb147;
$bb146:
  assume !($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 16} true;
  assume {:verifier.code 0} true;
  $i366 := $slt.i32($i361,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb148, $bb149;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1318, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $add.i32($i357,$i357);
  call {:cexpr "a"} boogie_si_record_i32($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i370 := $sext.i32.i64($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 9} true;
  assume {:verifier.code 0} true;
  $i371 := $srem.i64($i370,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $trunc.i64.i32($i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1320, 5} true;
  assume {:verifier.code 0} true;
  $i373 := $add.i32($i361,$i361);
  call {:cexpr "b"} boogie_si_record_i32($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $sext.i32.i64($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 9} true;
  assume {:verifier.code 0} true;
  $i375 := $srem.i64($i374,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i376 := $trunc.i64.i32($i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1323, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i365,$i365);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i378} true;
  goto $bb151, $bb152;
$bb148:
  assume ($i366 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1316, 7} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1317, 3} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb150;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  assume !($i366 == 1);
  goto $bb150;
$bb150:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i365 := $i367;
  goto $bb147;
$bb151:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1325, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 3} true;
  assume {:verifier.code 0} true;
  $i380 := $i379;
  goto $bb153;
$bb152:
  assume !($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 16} true;
  assume {:verifier.code 0} true;
  $i381 := $slt.i32($i376,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb154, $bb155;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1329, 5} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i32($i372,$i372);
  call {:cexpr "a"} boogie_si_record_i32($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $sext.i32.i64($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $srem.i64($i385,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i387 := $trunc.i64.i32($i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1331, 5} true;
  assume {:verifier.code 0} true;
  $i388 := $add.i32($i376,$i376);
  call {:cexpr "b"} boogie_si_record_i32($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i389 := $sext.i32.i64($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $srem.i64($i389,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i64.i32($i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1334, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i380,$i380);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i393} true;
  goto $bb157, $bb158;
$bb154:
  assume ($i381 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1327, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1328, 3} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb156;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  assume !($i381 == 1);
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i380 := $i382;
  goto $bb153;
$bb157:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1336, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i394);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 3} true;
  assume {:verifier.code 0} true;
  $i395 := $i394;
  goto $bb159;
$bb158:
  assume !($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 16} true;
  assume {:verifier.code 0} true;
  $i396 := $slt.i32($i391,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb160, $bb161;
$bb159:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1340, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i387,$i387);
  call {:cexpr "a"} boogie_si_record_i32($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i400 := $sext.i32.i64($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 9} true;
  assume {:verifier.code 0} true;
  $i401 := $srem.i64($i400,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i402 := $trunc.i64.i32($i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1342, 5} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i32($i391,$i391);
  call {:cexpr "b"} boogie_si_record_i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i32.i64($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 9} true;
  assume {:verifier.code 0} true;
  $i405 := $srem.i64($i404,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i406 := $trunc.i64.i32($i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1345, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i395,$i395);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i408} true;
  goto $bb163, $bb164;
$bb160:
  assume ($i396 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1338, 7} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1339, 3} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb162;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  assume !($i396 == 1);
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i395 := $i397;
  goto $bb159;
$bb163:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1347, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i409);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 3} true;
  assume {:verifier.code 0} true;
  $i410 := $i409;
  goto $bb165;
$bb164:
  assume !($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 16} true;
  assume {:verifier.code 0} true;
  $i411 := $slt.i32($i406,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb166, $bb167;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1351, 5} true;
  assume {:verifier.code 0} true;
  $i414 := $add.i32($i402,$i402);
  call {:cexpr "a"} boogie_si_record_i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i32.i64($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 9} true;
  assume {:verifier.code 0} true;
  $i416 := $srem.i64($i415,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i417 := $trunc.i64.i32($i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1353, 5} true;
  assume {:verifier.code 0} true;
  $i418 := $add.i32($i406,$i406);
  call {:cexpr "b"} boogie_si_record_i32($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $srem.i64($i419,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i421 := $trunc.i64.i32($i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1356, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i410,$i410);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i423} true;
  goto $bb169, $bb170;
$bb166:
  assume ($i411 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1349, 7} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1350, 3} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb168;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  assume !($i411 == 1);
  goto $bb168;
$bb168:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i410 := $i412;
  goto $bb165;
$bb169:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1358, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i424);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 3} true;
  assume {:verifier.code 0} true;
  $i425 := $i424;
  goto $bb171;
$bb170:
  assume !($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 16} true;
  assume {:verifier.code 0} true;
  $i426 := $slt.i32($i421,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb172, $bb173;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1362, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $add.i32($i417,$i417);
  call {:cexpr "a"} boogie_si_record_i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i32.i64($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i64($i430,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i64.i32($i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1364, 5} true;
  assume {:verifier.code 0} true;
  $i433 := $add.i32($i421,$i421);
  call {:cexpr "b"} boogie_si_record_i32($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i32.i64($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 9} true;
  assume {:verifier.code 0} true;
  $i435 := $srem.i64($i434,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i64.i32($i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1367, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i425,$i425);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i438} true;
  goto $bb175, $bb176;
$bb172:
  assume ($i426 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1360, 7} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1361, 3} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb174;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  assume !($i426 == 1);
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i425 := $i427;
  goto $bb171;
$bb175:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1369, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i439);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 3} true;
  assume {:verifier.code 0} true;
  $i440 := $i439;
  goto $bb177;
$bb176:
  assume !($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 16} true;
  assume {:verifier.code 0} true;
  $i441 := $slt.i32($i436,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb178, $bb179;
$bb177:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1373, 5} true;
  assume {:verifier.code 0} true;
  $i444 := $add.i32($i432,$i432);
  call {:cexpr "a"} boogie_si_record_i32($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i445 := $sext.i32.i64($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 9} true;
  assume {:verifier.code 0} true;
  $i446 := $srem.i64($i445,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i447 := $trunc.i64.i32($i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1375, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $add.i32($i436,$i436);
  call {:cexpr "b"} boogie_si_record_i32($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i32.i64($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $srem.i64($i449,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i64.i32($i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1378, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i440,$i440);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i453} true;
  goto $bb181, $bb182;
$bb178:
  assume ($i441 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1371, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1372, 3} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb180;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  assume !($i441 == 1);
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i440 := $i442;
  goto $bb177;
$bb181:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1380, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i454);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 3} true;
  assume {:verifier.code 0} true;
  $i455 := $i454;
  goto $bb183;
$bb182:
  assume !($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 16} true;
  assume {:verifier.code 0} true;
  $i456 := $slt.i32($i451,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb184, $bb185;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1384, 5} true;
  assume {:verifier.code 0} true;
  $i459 := $add.i32($i447,$i447);
  call {:cexpr "a"} boogie_si_record_i32($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i460 := $sext.i32.i64($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 9} true;
  assume {:verifier.code 0} true;
  $i461 := $srem.i64($i460,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i462 := $trunc.i64.i32($i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1386, 5} true;
  assume {:verifier.code 0} true;
  $i463 := $add.i32($i451,$i451);
  call {:cexpr "b"} boogie_si_record_i32($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i464 := $sext.i32.i64($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 9} true;
  assume {:verifier.code 0} true;
  $i465 := $srem.i64($i464,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i466 := $trunc.i64.i32($i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1389, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i455,$i455);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i468} true;
  goto $bb187, $bb188;
$bb184:
  assume ($i456 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1382, 7} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1383, 3} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb186;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  assume !($i456 == 1);
  goto $bb186;
$bb186:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i455 := $i457;
  goto $bb183;
$bb187:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1391, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i469);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 3} true;
  assume {:verifier.code 0} true;
  $i470 := $i469;
  goto $bb189;
$bb188:
  assume !($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 16} true;
  assume {:verifier.code 0} true;
  $i471 := $slt.i32($i466,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb190, $bb191;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1400, 3} true;
  assume {:verifier.code 0} true;
  $r := $i470;
  $exn := false;
  return;
$bb190:
  assume ($i471 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1393, 7} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1394, 3} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb192;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  assume !($i471 == 1);
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i470 := $i472;
  goto $bb189;
}
const __SMACK_or64: ref;
axiom (__SMACK_or64 == $sub.ref(0,34080));
procedure {:inline 1} __SMACK_or64($i0: i64, $i1: i64) returns ($r: i64)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_or64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 66} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 50} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 44} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 37} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or16: ref;
axiom (__SMACK_or16 == $sub.ref(0,35112));
procedure {:inline 1} __SMACK_or16($i0: i16, $i1: i16) returns ($r: i16)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_or16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 70} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 54} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 40} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or8: ref;
axiom (__SMACK_or8 == $sub.ref(0,36144));
procedure {:inline 1} __SMACK_or8($i0: i8, $i1: i8) returns ($r: i8)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_or8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 65} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 49} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 36} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0,37176));
procedure {:inline 1} __SMACK_check_overflow($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1409, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} ($i0 == $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1410, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_loop_exit: ref;
axiom (__SMACK_loop_exit == $sub.ref(0,38208));
procedure {:inline 1} __SMACK_loop_exit()
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 32} true;
  assume {:verifier.code 1} true;
  assert {:loopexit} false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0,39240));
type $mop;
procedure {:inline 1} boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exn.dup: bool;
var $exnv: int;
var $exnv.dup: int;
procedure {:inline 1} corral_atomic_begin();
procedure {:inline 1} corral_atomic_end();
procedure {:inline 1} $alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}
procedure {:inline 1} $malloc(n: ref, n.dup: i1) returns (p: ref, p.dup: i1)
modifies $CurrAddr;
requires (n.dup == 0);
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  p.dup := 0;
  call corral_atomic_end();
}
var $CurrAddr: ref;
var $CurrAddr.dup: ref;
var $shadow_ok: bool;
procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n,$0.ref);
  if ($sgt.ref.bool(n,$0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr,n),p);
    assume ($sgt.ref.bool($CurrAddr,$0.ref) && $slt.ref.bool($CurrAddr,$MALLOC_TOP));
  }
}
procedure {:inline 1} $free(p: ref);
const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0,40272));
procedure {:inline 1} __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0,41304));
procedure {:inline 1} __SMACK_init_func_memory_model()
modifies $CurrAddr, $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1885, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1885, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1890, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0,42336));
procedure {:inline 1} __SMACK_static_init()
modifies $M.24, $exn;
requires (cons.dup == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
requires ($or.i1($or.i1(cons.dup,$or.i1(0,0)),$or.i1(0,0)) == 0);
{
$bb0:
  $M.24 := $store.i8($M.24,hmac_iv,106);
  $M.24.dup := $store.i1($M.24.dup,hmac_iv,0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(1,1)),9);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(1,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(2,1)),$sub.i8(0,26));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(2,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(3,1)),103);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(3,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(4,1)),$sub.i8(0,69));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(4,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(5,1)),103);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(5,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(6,1)),$sub.i8(0,82));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(6,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(7,1)),$sub.i8(0,123));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(7,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(8,1)),60);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(8,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(9,1)),110);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(9,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(10,1)),$sub.i8(0,13));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(10,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(11,1)),114);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(11,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(12,1)),$sub.i8(0,91));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(12,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(13,1)),79);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(13,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(14,1)),$sub.i8(0,11));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(14,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(15,1)),58);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(15,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(16,1)),81);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(16,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(17,1)),14);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(17,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(18,1)),82);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(18,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(19,1)),127);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(19,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(20,1)),$sub.i8(0,101));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(20,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(21,1)),5);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(21,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(22,1)),104);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(22,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(23,1)),$sub.i8(0,116));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(23,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(24,1)),31);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(24,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(25,1)),$sub.i8(0,125));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(25,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(26,1)),$sub.i8(0,39));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(26,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(27,1)),$sub.i8(0,85));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(27,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(28,1)),91);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(28,1)),0);
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(29,1)),$sub.i8(0,32));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(29,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(30,1)),$sub.i8(0,51));
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(30,1)),$or.i1(0,0));
  $M.24 := $store.i8($M.24,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(31,1)),25);
  $M.24.dup := $store.i1($M.24.dup,$add.ref($add.ref(hmac_iv,$mul.ref(0,32)),$mul.ref(31,1)),0);
  $exn := false;
  $exn.dup := false;
  return;
}
procedure {:inline 1} boogie_si_record_i16(x: i16);
procedure {:inline 1} boogie_si_record_i32(x: i32);
procedure {:inline 1} boogie_si_record_i64(x: i64);
procedure {:inline 1} boogie_si_record_i8(x: i8);
procedure {:inline 1} boogie_si_record_ref(x: ref);
procedure {:inline 1} $initialize()
modifies $CurrAddr, $exn;
modifies $M.24;
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
const {:count 1} cons.dup: i1;
axiom (cons.dup == 0);