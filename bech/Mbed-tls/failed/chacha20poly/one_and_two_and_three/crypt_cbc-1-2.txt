crypt_cbc-bool.bpl(2962,3): Error: This loop invariant might not hold on entry.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
crypt_cbc-bool.bpl(2962,3): Error: This loop invariant might not be maintained by the loop.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(2964,3): Error: This loop invariant might not hold on entry.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
crypt_cbc-bool.bpl(2964,3): Error: This loop invariant might not be maintained by the loop.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(3021,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(3042,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(3267,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(3288,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(3392,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4
crypt_cbc-bool.bpl(3413,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-bool.bpl(1696,1): $bb0
    crypt_cbc-bool.bpl(18342,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(18326,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(1696,1): $bb0$1
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(1889,1): inline$mbedtls_des_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(1918,1): inline$mbedtls_des_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(1950,1): inline$mbedtls_des_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(2051,1): inline$mbedtls_des_crypt_cbc$0$$bb13
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$0$anon0
    crypt_cbc-bool.bpl(2068,1): inline$mbedtls_des_crypt_cbc$0$$bb14$1
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$1$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$1$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$1$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$1$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$0$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$1
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0
    crypt_cbc-bool.bpl(18287,23): inline$$alloc$2$Entry
    crypt_cbc-bool.bpl(18309,3): inline$$$alloc$2$anon0
    crypt_cbc-bool.bpl(18311,7): inline$$$alloc$2$anon2_Then
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$1
    crypt_cbc-bool.bpl(19885,3): inline$$memcpy.i8$2$anon0
    crypt_cbc-bool.bpl(3703,1): inline$mbedtls_get_unaligned_uint32$1$$bb0$2
    crypt_cbc-bool.bpl(2757,1): inline$mbedtls_des_crypt_ecb$0$$bb0$2
    crypt_cbc-bool.bpl(2960,1): inline$mbedtls_des_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(2982,1): inline$mbedtls_des_crypt_ecb$0$$bb4

Boogie program verifier finished with 0 verified, 10 errors
