crypt_cbc-bool.bpl(3565,3): Error: This loop invariant might not hold on entry.
Execution trace:
    crypt_cbc-bool.bpl(12667,1): $bb0
    crypt_cbc-bool.bpl(27406,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(27390,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(12667,1): $bb0$1
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(11938,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(11943,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-bool.bpl(11986,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-bool.bpl(12008,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-bool.bpl(12124,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-bool.bpl(12252,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-bool.bpl(12261,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-bool.bpl(12310,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-bool.bpl(12328,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-bool.bpl(12390,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-bool.bpl(11680,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(11704,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-bool.bpl(1640,1): inline$mbedtls_aesni_has_support$0$$bb3
    crypt_cbc-bool.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-bool.bpl(11754,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-bool.bpl(11765,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$13$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$13$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$14$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$14$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$15$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$15$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$16$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$16$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$17$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$17$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
crypt_cbc-bool.bpl(3565,3): Error: This loop invariant might not be maintained by the loop.
Execution trace:
    crypt_cbc-bool.bpl(12667,1): $bb0
    crypt_cbc-bool.bpl(27406,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(27390,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(12667,1): $bb0$1
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(11938,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(11943,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-bool.bpl(11986,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-bool.bpl(12008,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-bool.bpl(12124,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-bool.bpl(12252,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-bool.bpl(12261,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-bool.bpl(12310,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-bool.bpl(12328,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-bool.bpl(12390,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-bool.bpl(11680,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(11704,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-bool.bpl(1611,1): inline$mbedtls_aesni_has_support$0$$bb1
    crypt_cbc-bool.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-bool.bpl(11754,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-bool.bpl(11765,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$13$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$13$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$14$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$14$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$15$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$15$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$16$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$16$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$17$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$17$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-bool.bpl(3321,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
    crypt_cbc-bool.bpl(3564,1): inline$mbedtls_internal_aes_encrypt$0$$bb1
    crypt_cbc-bool.bpl(3582,1): inline$mbedtls_internal_aes_encrypt$0$$bb2
crypt_cbc-bool.bpl(8555,3): Error: This loop invariant might not hold on entry.
Execution trace:
    crypt_cbc-bool.bpl(12667,1): $bb0
    crypt_cbc-bool.bpl(27406,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(27390,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(12667,1): $bb0$1
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(11927,1): inline$mbedtls_aes_crypt_cbc$0$$bb1
    crypt_cbc-bool.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(11943,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-bool.bpl(11986,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-bool.bpl(11997,1): inline$mbedtls_aes_crypt_cbc$0$$bb9
    crypt_cbc-bool.bpl(12019,1): inline$mbedtls_aes_crypt_cbc$0$$bb11
    crypt_cbc-bool.bpl(12037,1): inline$mbedtls_aes_crypt_cbc$0$$bb12
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$20$anon0
    crypt_cbc-bool.bpl(12037,1): inline$mbedtls_aes_crypt_cbc$0$$bb12$1
    crypt_cbc-bool.bpl(11680,1): inline$mbedtls_aes_crypt_ecb$1$$bb0
    crypt_cbc-bool.bpl(11693,1): inline$mbedtls_aes_crypt_ecb$1$$bb1
    crypt_cbc-bool.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$1$$bb5
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$1$$bb3
    crypt_cbc-bool.bpl(1594,1): inline$mbedtls_aesni_has_support$1$$bb0
    crypt_cbc-bool.bpl(1640,1): inline$mbedtls_aesni_has_support$1$$bb3
    crypt_cbc-bool.bpl(1616,1): inline$mbedtls_aesni_has_support$1$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$1$$bb3$1
    crypt_cbc-bool.bpl(11754,1): inline$mbedtls_aes_crypt_ecb$1$$bb8
    crypt_cbc-bool.bpl(11775,1): inline$mbedtls_aes_crypt_ecb$1$$bb10
    crypt_cbc-bool.bpl(8311,1): inline$mbedtls_internal_aes_decrypt$1$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$22$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$22$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$22$anon2_Then
    crypt_cbc-bool.bpl(8311,1): inline$mbedtls_internal_aes_decrypt$1$$bb0$1
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$10$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$23$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$23$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$23$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$10$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$21$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$10$$bb0$2
    crypt_cbc-bool.bpl(8311,1): inline$mbedtls_internal_aes_decrypt$1$$bb0$2
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$11$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$24$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$24$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$24$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$11$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$22$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$11$$bb0$2
    crypt_cbc-bool.bpl(8311,1): inline$mbedtls_internal_aes_decrypt$1$$bb0$3
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$12$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$25$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$25$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$25$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$12$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$23$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$12$$bb0$2
    crypt_cbc-bool.bpl(8311,1): inline$mbedtls_internal_aes_decrypt$1$$bb0$4
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$13$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$26$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$26$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$26$anon2_Then
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$13$$bb0$1
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$24$anon0
    crypt_cbc-bool.bpl(1671,1): inline$mbedtls_get_unaligned_uint32$13$$bb0$2
    crypt_cbc-bool.bpl(8311,1): inline$mbedtls_internal_aes_decrypt$1$$bb0$5
crypt_cbc-bool.bpl(12125,3): Error: This loop invariant might not be maintained by the loop.
Execution trace:
    crypt_cbc-bool.bpl(12667,1): $bb0
    crypt_cbc-bool.bpl(27406,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(27390,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(12667,1): $bb0$1
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(11938,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-bool.bpl(11943,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-bool.bpl(11986,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-bool.bpl(12008,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-bool.bpl(12124,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-bool.bpl(12252,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-bool.bpl(12261,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-bool.bpl(12310,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-bool.bpl(12328,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-bool.bpl(12390,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-bool.bpl(11680,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(11704,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-bool.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-bool.bpl(1640,1): inline$mbedtls_aesni_has_support$0$$bb3
    crypt_cbc-bool.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-bool.bpl(11744,1): inline$mbedtls_aes_crypt_ecb$0$$bb7
    crypt_cbc-bool.bpl(11805,1): inline$mbedtls_aesni_crypt_ecb$0$$bb0
    crypt_cbc-bool.bpl(11744,1): inline$mbedtls_aes_crypt_ecb$0$$bb7$1
    crypt_cbc-bool.bpl(11734,1): inline$mbedtls_aes_crypt_ecb$0$$bb6
    crypt_cbc-bool.bpl(12141,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$2
    crypt_cbc-bool.bpl(12170,1): inline$mbedtls_aes_crypt_cbc$0$$bb22
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$19$anon0
    crypt_cbc-bool.bpl(12170,1): inline$mbedtls_aes_crypt_cbc$0$$bb22$1
crypt_cbc-bool.bpl(12262,3): Error: This loop invariant might not hold on entry.
Execution trace:
    crypt_cbc-bool.bpl(12667,1): $bb0
    crypt_cbc-bool.bpl(27406,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-bool.bpl(27390,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-bool.bpl(12667,1): $bb0$1
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-bool.bpl(27351,23): inline$$alloc$0$Entry
    crypt_cbc-bool.bpl(27373,3): inline$$$alloc$0$anon0
    crypt_cbc-bool.bpl(27375,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-bool.bpl(11909,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-bool.bpl(11927,1): inline$mbedtls_aes_crypt_cbc$0$$bb1
    crypt_cbc-bool.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb5
    crypt_cbc-bool.bpl(11943,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-bool.bpl(11986,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-bool.bpl(11997,1): inline$mbedtls_aes_crypt_cbc$0$$bb9
    crypt_cbc-bool.bpl(12019,1): inline$mbedtls_aes_crypt_cbc$0$$bb11
    crypt_cbc-bool.bpl(12037,1): inline$mbedtls_aes_crypt_cbc$0$$bb12
    crypt_cbc-bool.bpl(35099,3): inline$$memcpy.i8$20$anon0
    crypt_cbc-bool.bpl(12037,1): inline$mbedtls_aes_crypt_cbc$0$$bb12$1
    crypt_cbc-bool.bpl(11680,1): inline$mbedtls_aes_crypt_ecb$1$$bb0
    crypt_cbc-bool.bpl(11693,1): inline$mbedtls_aes_crypt_ecb$1$$bb1
    crypt_cbc-bool.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$1$$bb5
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$1$$bb3
    crypt_cbc-bool.bpl(1594,1): inline$mbedtls_aesni_has_support$1$$bb0
    crypt_cbc-bool.bpl(1640,1): inline$mbedtls_aesni_has_support$1$$bb3
    crypt_cbc-bool.bpl(1616,1): inline$mbedtls_aesni_has_support$1$$bb2
    crypt_cbc-bool.bpl(11709,1): inline$mbedtls_aes_crypt_ecb$1$$bb3$1
    crypt_cbc-bool.bpl(11744,1): inline$mbedtls_aes_crypt_ecb$1$$bb7
    crypt_cbc-bool.bpl(11805,1): inline$mbedtls_aesni_crypt_ecb$1$$bb0
    crypt_cbc-bool.bpl(11744,1): inline$mbedtls_aes_crypt_ecb$1$$bb7$1
    crypt_cbc-bool.bpl(11734,1): inline$mbedtls_aes_crypt_ecb$1$$bb6
    crypt_cbc-bool.bpl(12037,1): inline$mbedtls_aes_crypt_cbc$0$$bb12$2
    crypt_cbc-bool.bpl(12073,1): inline$mbedtls_aes_crypt_cbc$0$$bb15
    crypt_cbc-bool.bpl(12252,1): inline$mbedtls_xor$1$$bb0

Boogie program verifier finished with 0 verified, 5 errors
