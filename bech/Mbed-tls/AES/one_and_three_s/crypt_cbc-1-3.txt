crypt_cbc-shadow.bpl(3642,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-shadow.bpl(12717,1): $bb0
    crypt_cbc-shadow.bpl(27453,23): inline$__SMACK_static_init$0$Entry
    crypt_cbc-shadow.bpl(30016,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-shadow.bpl(27440,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-shadow.bpl(12717,1): $bb0$1
    crypt_cbc-shadow.bpl(11901,23): inline$mbedtls_aes_crypt_cbc$0$Entry
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$0$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$0$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-shadow.bpl(11993,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-shadow.bpl(11998,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-shadow.bpl(12041,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-shadow.bpl(12063,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-shadow.bpl(12177,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-shadow.bpl(12303,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-shadow.bpl(12312,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-shadow.bpl(12361,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-shadow.bpl(12379,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-shadow.bpl(12440,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-shadow.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-shadow.bpl(11753,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-shadow.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-shadow.bpl(1611,1): inline$mbedtls_aesni_has_support$0$$bb1
    crypt_cbc-shadow.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-shadow.bpl(11803,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-shadow.bpl(11814,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$13$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$13$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$6$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$14$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$14$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$7$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$15$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$15$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$8$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$16$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$16$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$9$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$17$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$17$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
    crypt_cbc-shadow.bpl(3573,1): inline$mbedtls_internal_aes_encrypt$0$$bb1
    crypt_cbc-shadow.bpl(3592,1): inline$mbedtls_internal_aes_encrypt$0$$bb2
crypt_cbc-shadow.bpl(3682,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-shadow.bpl(12717,1): $bb0
    crypt_cbc-shadow.bpl(27453,23): inline$__SMACK_static_init$0$Entry
    crypt_cbc-shadow.bpl(30016,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-shadow.bpl(27440,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-shadow.bpl(12717,1): $bb0$1
    crypt_cbc-shadow.bpl(11901,23): inline$mbedtls_aes_crypt_cbc$0$Entry
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$0$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$0$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-shadow.bpl(11993,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-shadow.bpl(11998,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-shadow.bpl(12041,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-shadow.bpl(12063,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-shadow.bpl(12177,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-shadow.bpl(12303,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-shadow.bpl(12312,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-shadow.bpl(12361,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-shadow.bpl(12379,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-shadow.bpl(12440,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-shadow.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-shadow.bpl(11753,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-shadow.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-shadow.bpl(1611,1): inline$mbedtls_aesni_has_support$0$$bb1
    crypt_cbc-shadow.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-shadow.bpl(11803,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-shadow.bpl(11814,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$13$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$13$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$6$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$14$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$14$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$7$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$15$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$15$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$8$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$16$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$16$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$9$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$17$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$17$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
    crypt_cbc-shadow.bpl(3573,1): inline$mbedtls_internal_aes_encrypt$0$$bb1
    crypt_cbc-shadow.bpl(3592,1): inline$mbedtls_internal_aes_encrypt$0$$bb2
crypt_cbc-shadow.bpl(3722,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-shadow.bpl(12717,1): $bb0
    crypt_cbc-shadow.bpl(27453,23): inline$__SMACK_static_init$0$Entry
    crypt_cbc-shadow.bpl(30016,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-shadow.bpl(27440,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-shadow.bpl(12717,1): $bb0$1
    crypt_cbc-shadow.bpl(11901,23): inline$mbedtls_aes_crypt_cbc$0$Entry
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$0$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$0$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-shadow.bpl(11993,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-shadow.bpl(11998,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-shadow.bpl(12041,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-shadow.bpl(12063,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-shadow.bpl(12177,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-shadow.bpl(12303,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-shadow.bpl(12312,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-shadow.bpl(12361,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-shadow.bpl(12379,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-shadow.bpl(12440,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-shadow.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-shadow.bpl(11753,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-shadow.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-shadow.bpl(1611,1): inline$mbedtls_aesni_has_support$0$$bb1
    crypt_cbc-shadow.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-shadow.bpl(11803,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-shadow.bpl(11814,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$13$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$13$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$6$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$14$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$14$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$7$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$15$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$15$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$8$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$16$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$16$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$9$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$17$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$17$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
    crypt_cbc-shadow.bpl(3573,1): inline$mbedtls_internal_aes_encrypt$0$$bb1
    crypt_cbc-shadow.bpl(3592,1): inline$mbedtls_internal_aes_encrypt$0$$bb2
crypt_cbc-shadow.bpl(3861,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-shadow.bpl(12717,1): $bb0
    crypt_cbc-shadow.bpl(27453,23): inline$__SMACK_static_init$0$Entry
    crypt_cbc-shadow.bpl(30016,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-shadow.bpl(27440,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-shadow.bpl(12717,1): $bb0$1
    crypt_cbc-shadow.bpl(11901,23): inline$mbedtls_aes_crypt_cbc$0$Entry
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$0$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$0$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-shadow.bpl(11993,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-shadow.bpl(11998,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-shadow.bpl(12041,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-shadow.bpl(12063,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-shadow.bpl(12177,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-shadow.bpl(12303,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-shadow.bpl(12312,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-shadow.bpl(12361,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-shadow.bpl(12379,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-shadow.bpl(12440,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-shadow.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-shadow.bpl(11753,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-shadow.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-shadow.bpl(1611,1): inline$mbedtls_aesni_has_support$0$$bb1
    crypt_cbc-shadow.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-shadow.bpl(11803,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-shadow.bpl(11814,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$13$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$13$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$6$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$14$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$14$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$7$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$15$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$15$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$8$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$16$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$16$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$9$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$17$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$17$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
    crypt_cbc-shadow.bpl(3573,1): inline$mbedtls_internal_aes_encrypt$0$$bb1
    crypt_cbc-shadow.bpl(3592,1): inline$mbedtls_internal_aes_encrypt$0$$bb2
crypt_cbc-shadow.bpl(5459,3): Error: This assertion might not hold.
Execution trace:
    crypt_cbc-shadow.bpl(12717,1): $bb0
    crypt_cbc-shadow.bpl(27453,23): inline$__SMACK_static_init$0$Entry
    crypt_cbc-shadow.bpl(30016,1): inline$__SMACK_static_init$0$$bb0
    crypt_cbc-shadow.bpl(27440,1): inline$__SMACK_init_func_memory_model$0$$bb0
    crypt_cbc-shadow.bpl(12717,1): $bb0$1
    crypt_cbc-shadow.bpl(11901,23): inline$mbedtls_aes_crypt_cbc$0$Entry
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$0$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$0$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$0$anon2_Then
    crypt_cbc-shadow.bpl(11964,1): inline$mbedtls_aes_crypt_cbc$0$$bb0$1
    crypt_cbc-shadow.bpl(11993,1): inline$mbedtls_aes_crypt_cbc$0$$bb2
    crypt_cbc-shadow.bpl(11998,1): inline$mbedtls_aes_crypt_cbc$0$$bb3
    crypt_cbc-shadow.bpl(12041,1): inline$mbedtls_aes_crypt_cbc$0$$bb8
    crypt_cbc-shadow.bpl(12063,1): inline$mbedtls_aes_crypt_cbc$0$$bb10
    crypt_cbc-shadow.bpl(12177,1): inline$mbedtls_aes_crypt_cbc$0$$bb18
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19
    crypt_cbc-shadow.bpl(12303,1): inline$mbedtls_xor$0$$bb0
    crypt_cbc-shadow.bpl(12312,1): inline$mbedtls_xor$0$$bb1
    crypt_cbc-shadow.bpl(12361,1): inline$mbedtls_xor$0$$bb3
    crypt_cbc-shadow.bpl(12379,1): inline$mbedtls_xor$0$$bb5
    crypt_cbc-shadow.bpl(12440,1): inline$mbedtls_xor$0$$bb7
    crypt_cbc-shadow.bpl(12193,1): inline$mbedtls_aes_crypt_cbc$0$$bb19$1
    crypt_cbc-shadow.bpl(11729,1): inline$mbedtls_aes_crypt_ecb$0$$bb0
    crypt_cbc-shadow.bpl(11753,1): inline$mbedtls_aes_crypt_ecb$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3
    crypt_cbc-shadow.bpl(1594,1): inline$mbedtls_aesni_has_support$0$$bb0
    crypt_cbc-shadow.bpl(1611,1): inline$mbedtls_aesni_has_support$0$$bb1
    crypt_cbc-shadow.bpl(1616,1): inline$mbedtls_aesni_has_support$0$$bb2
    crypt_cbc-shadow.bpl(11758,1): inline$mbedtls_aes_crypt_ecb$0$$bb3$1
    crypt_cbc-shadow.bpl(11803,1): inline$mbedtls_aes_crypt_ecb$0$$bb8
    crypt_cbc-shadow.bpl(11814,1): inline$mbedtls_aes_crypt_ecb$0$$bb9
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$13$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$13$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$13$anon2_Then
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$1
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$6$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$14$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$14$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$14$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$11$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$6$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$2
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$7$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$15$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$15$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$15$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$12$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$7$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$3
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$8$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$16$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$16$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$16$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$13$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$8$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$4
    crypt_cbc-shadow.bpl(1662,23): inline$mbedtls_get_unaligned_uint32$9$Entry
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0
    crypt_cbc-shadow.bpl(27401,23): inline$$alloc$17$Entry
    crypt_cbc-shadow.bpl(27423,3): inline$$$alloc$17$anon0
    crypt_cbc-shadow.bpl(27425,7): inline$$$alloc$17$anon2_Then
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$1
    crypt_cbc-shadow.bpl(35149,3): inline$$memcpy.i8$14$anon0
    crypt_cbc-shadow.bpl(1673,1): inline$mbedtls_get_unaligned_uint32$9$$bb0$2
    crypt_cbc-shadow.bpl(3322,1): inline$mbedtls_internal_aes_encrypt$0$$bb0$5
    crypt_cbc-shadow.bpl(3573,1): inline$mbedtls_internal_aes_encrypt$0$$bb1
    crypt_cbc-shadow.bpl(3597,1): inline$mbedtls_internal_aes_encrypt$0$$bb3

Boogie program verifier finished with 0 verified, 5 errors
