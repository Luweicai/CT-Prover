type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i33 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
var $M.0: [ref] i8;
var $M.0.dup: [ref] i1;
var $M.1: [ref] i8;
var $M.1.dup: [ref] i1;
var $M.2: [ref] i8;
var $M.2.dup: [ref] i1;
var $M.3: [ref] i8;
var $M.3.dup: [ref] i1;
var $M.4: [ref] i32;
var $M.4.dup: [ref] i1;
var $M.5: [ref] i8;
var $M.5.dup: [ref] i1;
var $M.6: [ref] i8;
var $M.6.dup: [ref] i1;
var $M.7: [ref] i8;
var $M.7.dup: [ref] i1;
var $M.8: [ref] i8;
var $M.8.dup: [ref] i1;
var $M.9: [ref] i8;
var $M.9.dup: [ref] i1;
var $M.10: [ref] i8;
var $M.10.dup: [ref] i1;
var $M.11: [ref] i8;
var $M.11.dup: [ref] i1;
var $M.12: [ref] i8;
var $M.12.dup: [ref] i1;
var $M.13: [ref] i8;
var $M.13.dup: [ref] i1;
var $M.14: [ref] i8;
var $M.14.dup: [ref] i1;
var $M.15: [ref] i8;
var $M.15.dup: [ref] i1;
var $M.16: [ref] i8;
var $M.16.dup: [ref] i1;
var $M.17: [ref] i8;
var $M.17.dup: [ref] i1;
var $M.18: [ref] i8;
var $M.18.dup: [ref] i1;
var $M.19: [ref] i8;
var $M.19.dup: [ref] i1;
var $M.20: [ref] i8;
var $M.20.dup: [ref] i1;
var $M.21: [ref] i8;
var $M.21.dup: [ref] i1;
var $M.22: [ref] i8;
var $M.22.dup: [ref] i1;
var $M.23: [ref] i8;
var $M.23.dup: [ref] i1;
var $M.24: [ref] i8;
var $M.24.dup: [ref] i1;
var $M.25: [ref] i8;
var $M.25.dup: [ref] i1;
var $M.26: [ref] i8;
var $M.26.dup: [ref] i1;
var $M.27: [ref] i8;
var $M.27.dup: [ref] i1;
var $M.28: [ref] i8;
var $M.28.dup: [ref] i1;
var $M.29: [ref] i8;
var $M.29.dup: [ref] i1;
var $M.30: [ref] i8;
var $M.30.dup: [ref] i1;
var $M.31: [ref] i8;
var $M.31.dup: [ref] i1;
var $M.32: [ref] i8;
var $M.32.dup: [ref] i1;
var $M.33: [ref] i8;
var $M.33.dup: [ref] i1;
var $M.34: [ref] i8;
var $M.34.dup: [ref] i1;
var $M.35: [ref] i8;
var $M.35.dup: [ref] i1;
var $M.36: [ref] i8;
var $M.36.dup: [ref] i1;
var $M.37: [ref] ref;
var $M.37.dup: [ref] i1;
axiom ($GLOBALS_BOTTOM == $sub.ref(0,46440));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM,$sub.ref(0,32768)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p,$EXTERNS_BOTTOM) }
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i33(i1: i33, i2: i33) returns (i33) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i33(i1: i33, i2: i33) returns (i33) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i33(i1: i33, i2: i33) returns (i33) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $idiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $idiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $idiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $idiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $idiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $idiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $idiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $idiv.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "div"} $idiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $idiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $idiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $idiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $idiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $idiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $idiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $idiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $idiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $idiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $sdiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1,i2) }
function {:inline} $sdiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1,i2) }
function {:inline} $sdiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1,i2) }
function {:inline} $sdiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1,i2) }
function {:inline} $sdiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1,i2) }
function {:inline} $sdiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1,i2) }
function {:inline} $sdiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1,i2) }
function {:inline} $sdiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1,i2) }
function {:inline} $sdiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1,i2) }
function {:inline} $sdiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1,i2) }
function {:inline} $sdiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1,i2) }
function {:inline} $sdiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1,i2) }
function {:inline} $sdiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1,i2) }
function {:inline} $sdiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1,i2) }
function {:inline} $sdiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1,i2) }
function {:inline} $sdiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1,i2) }
function {:inline} $sdiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1,i2) }
function {:inline} $sdiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1,i2) }
function {:inline} $udiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1,i2) }
function {:inline} $udiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1,i2) }
function {:inline} $udiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1,i2) }
function {:inline} $udiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1,i2) }
function {:inline} $udiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1,i2) }
function {:inline} $udiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1,i2) }
function {:inline} $udiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1,i2) }
function {:inline} $udiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1,i2) }
function {:inline} $udiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1,i2) }
function {:inline} $udiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1,i2) }
function {:inline} $udiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1,i2) }
function {:inline} $udiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1,i2) }
function {:inline} $udiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1,i2) }
function {:inline} $udiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1,i2) }
function {:inline} $udiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1,i2) }
function {:inline} $udiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1,i2) }
function {:inline} $udiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1,i2) }
function {:inline} $udiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1,i2) }
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1,i2),0) && $slt.i1.bool(i1,0)) then $sub.i1($smod.i1(i1,i2),$smax.i1(i2,$sub.i1(0,i2))) else $smod.i1(i1,i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1,i2),0) && $slt.i5.bool(i1,0)) then $sub.i5($smod.i5(i1,i2),$smax.i5(i2,$sub.i5(0,i2))) else $smod.i5(i1,i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1,i2),0) && $slt.i6.bool(i1,0)) then $sub.i6($smod.i6(i1,i2),$smax.i6(i2,$sub.i6(0,i2))) else $smod.i6(i1,i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1,i2),0) && $slt.i8.bool(i1,0)) then $sub.i8($smod.i8(i1,i2),$smax.i8(i2,$sub.i8(0,i2))) else $smod.i8(i1,i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1,i2),0) && $slt.i16.bool(i1,0)) then $sub.i16($smod.i16(i1,i2),$smax.i16(i2,$sub.i16(0,i2))) else $smod.i16(i1,i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1,i2),0) && $slt.i24.bool(i1,0)) then $sub.i24($smod.i24(i1,i2),$smax.i24(i2,$sub.i24(0,i2))) else $smod.i24(i1,i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1,i2),0) && $slt.i32.bool(i1,0)) then $sub.i32($smod.i32(i1,i2),$smax.i32(i2,$sub.i32(0,i2))) else $smod.i32(i1,i2)) }
function {:inline} $srem.i33(i1: i33, i2: i33) returns (i33) { (if ($ne.i33.bool($smod.i33(i1,i2),0) && $slt.i33.bool(i1,0)) then $sub.i33($smod.i33(i1,i2),$smax.i33(i2,$sub.i33(0,i2))) else $smod.i33(i1,i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1,i2),0) && $slt.i40.bool(i1,0)) then $sub.i40($smod.i40(i1,i2),$smax.i40(i2,$sub.i40(0,i2))) else $smod.i40(i1,i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1,i2),0) && $slt.i48.bool(i1,0)) then $sub.i48($smod.i48(i1,i2),$smax.i48(i2,$sub.i48(0,i2))) else $smod.i48(i1,i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1,i2),0) && $slt.i56.bool(i1,0)) then $sub.i56($smod.i56(i1,i2),$smax.i56(i2,$sub.i56(0,i2))) else $smod.i56(i1,i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1,i2),0) && $slt.i64.bool(i1,0)) then $sub.i64($smod.i64(i1,i2),$smax.i64(i2,$sub.i64(0,i2))) else $smod.i64(i1,i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1,i2),0) && $slt.i80.bool(i1,0)) then $sub.i80($smod.i80(i1,i2),$smax.i80(i2,$sub.i80(0,i2))) else $smod.i80(i1,i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1,i2),0) && $slt.i88.bool(i1,0)) then $sub.i88($smod.i88(i1,i2),$smax.i88(i2,$sub.i88(0,i2))) else $smod.i88(i1,i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1,i2),0) && $slt.i96.bool(i1,0)) then $sub.i96($smod.i96(i1,i2),$smax.i96(i2,$sub.i96(0,i2))) else $smod.i96(i1,i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1,i2),0) && $slt.i128.bool(i1,0)) then $sub.i128($smod.i128(i1,i2),$smax.i128(i2,$sub.i128(0,i2))) else $smod.i128(i1,i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1,i2),0) && $slt.i160.bool(i1,0)) then $sub.i160($smod.i160(i1,i2),$smax.i160(i2,$sub.i160(0,i2))) else $smod.i160(i1,i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1,i2),0) && $slt.i256.bool(i1,0)) then $sub.i256($smod.i256(i1,i2),$smax.i256(i2,$sub.i256(0,i2))) else $smod.i256(i1,i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1,i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1,i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1,i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1,i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1,i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1,i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1,i2) }
function {:inline} $urem.i33(i1: i33, i2: i33) returns (i33) { $smod.i33(i1,i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1,i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1,i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1,i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1,i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1,i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1,i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1,i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1,i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1,i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1,i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i33(i1: i33, i2: i33) returns (i33);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i33(i1: i33, i2: i33) returns (i33);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i33(i1: i33, i2: i33) returns (i33);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i33(i1: i33, i2: i33) returns (i33);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i33(i1: i33, i2: i33) returns (i33);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i33(i1: i33, i2: i33) returns (i33);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i33(i1: i33, i2: i33) returns (i33);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i33(i: i33) returns (i33);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if $slt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if $slt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if $slt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if $slt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if $slt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if $slt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i33(i1: i33, i2: i33) returns (i33) { (if $slt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if $slt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if $slt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if $slt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if $slt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if $slt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if $slt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if $slt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if $slt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if $slt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if $slt.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if $sgt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if $sgt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if $sgt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if $sgt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if $sgt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if $sgt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i33(i1: i33, i2: i33) returns (i33) { (if $sgt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if $sgt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if $sgt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if $sgt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if $sgt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if $sgt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if $sgt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if $sgt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if $sgt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if $sgt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if $sgt.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if $ult.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if $ult.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if $ult.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if $ult.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if $ult.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if $ult.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i33(i1: i33, i2: i33) returns (i33) { (if $ult.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if $ult.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if $ult.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if $ult.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if $ult.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if $ult.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if $ult.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if $ult.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if $ult.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if $ult.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if $ult.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if $ugt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if $ugt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if $ugt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if $ugt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if $ugt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if $ugt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i33(i1: i33, i2: i33) returns (i33) { (if $ugt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if $ugt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if $ugt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if $ugt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if $ugt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if $ugt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if $ugt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if $ugt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if $ugt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if $ugt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if $ugt.i256.bool(i1,i2) then i1 else i2) }
axiom ($and.i1(0,0) == 0);
axiom ($or.i1(0,0) == 0);
axiom ($xor.i1(0,0) == 0);
axiom ($and.i1(0,1) == 0);
axiom ($or.i1(0,1) == 1);
axiom ($xor.i1(0,1) == 1);
axiom ($and.i1(1,0) == 0);
axiom ($or.i1(1,0) == 1);
axiom ($xor.i1(1,0) == 1);
axiom ($and.i1(1,1) == 1);
axiom ($or.i1(1,1) == 1);
axiom ($xor.i1(1,1) == 0);
axiom ($and.i32(32,16) == 0);
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i33(i1: i33, i2: i33) returns (i1) { (if $ule.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $ult.i33(i1: i33, i2: i33) returns (i1) { (if $ult.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i33(i1: i33, i2: i33) returns (i1) { (if $uge.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i33(i1: i33, i2: i33) returns (i1) { (if $ugt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i33(i1: i33, i2: i33) returns (i1) { (if $sle.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $slt.i33(i1: i33, i2: i33) returns (i1) { (if $slt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i33(i1: i33, i2: i33) returns (i1) { (if $sge.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i33(i1: i33, i2: i33) returns (i1) { (if $sgt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 == i2) }
function {:inline} $eq.i33(i1: i33, i2: i33) returns (i1) { (if $eq.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 != i2) }
function {:inline} $ne.i33(i1: i33, i2: i33) returns (i1) { (if $ne.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i33(M: [ref] i33, p: ref) returns (i33) { M[p] }
function {:inline} $store.i33(M: [ref] i33, p: ref, i: i33) returns ([ref] i33) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i33.i1(i: i33) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i33.i5(i: i33) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i33.i6(i: i33) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i33.i8(i: i33) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i33.i16(i: i33) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i33.i24(i: i33) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i33.i32(i: i33) returns (i32) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i40.i33(i: i40) returns (i33) { i }
function {:inline} $trunc.i48.i33(i: i48) returns (i33) { i }
function {:inline} $trunc.i56.i33(i: i56) returns (i33) { i }
function {:inline} $trunc.i64.i33(i: i64) returns (i33) { i }
function {:inline} $trunc.i80.i33(i: i80) returns (i33) { i }
function {:inline} $trunc.i88.i33(i: i88) returns (i33) { i }
function {:inline} $trunc.i96.i33(i: i96) returns (i33) { i }
function {:inline} $trunc.i128.i33(i: i128) returns (i33) { i }
function {:inline} $trunc.i160.i33(i: i160) returns (i33) { i }
function {:inline} $trunc.i256.i33(i: i256) returns (i33) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $sext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $sext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $sext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $sext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $sext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $sext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $sext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $sext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $sext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $zext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $zext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $zext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $zext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $zext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $zext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $zext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $zext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $zext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i33(p: ref, i: int) returns (i33);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1,p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1,p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1,p2) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 == p2) }
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 != p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }
function $fp(ipart: int, fpart: int, epart: int) returns (float);
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
function $fneg.float(f: float) returns (float);
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i33(f: float) returns (i33);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i33(f: float) returns (i33);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i33.float(i: i33) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i33.float(i: i33) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const curve25519_donna: ref;
axiom (curve25519_donna == $sub.ref(0,1032));
procedure {:inline 45} curve25519_donna($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $M.1, $exn;
modifies $M.3;
modifies $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i1;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $i12: i8;
  var $i12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $p16: ref;
  var $p16.dup: i1;
  var $i17: i8;
  var $i17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i8;
  var $i20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $i22: i8;
  var $i22.dup: i1;
  var $i23: i32;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i8;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i8;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i8;
  var $i30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $p33: ref;
  var $p33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $p40: ref;
  var $p40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 8} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p3.dup := 0;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p4.dup := 0;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(88,$zext.i32.i64(1)));
  $p5.dup := 0;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p6.dup := 0;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  $p7.dup := 0;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 8} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  $i8.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p7.dup == 0);
  assert {:shadow_invariant} ($i8.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:likely_shadow_invariant} ($p5.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p3.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8,32);
  $i9.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  $shadow_ok := ($shadow_ok && ($i9.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i9 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i8);
  $i10.dup := $i8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 35} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1,$mul.ref($i10,1));
  $p11.dup := $or.i1($p1.dup,$or.i1($i10.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 35} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p11.dup == 0));
  $i12 := $load.i8($M.0,$p11);
  $i12.dup := $load.i1($M.0.dup,$p11);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i8);
  $i13.dup := $i8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p7,$mul.ref(0,32)),$mul.ref($i13,1));
  $p14.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1($i13.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 33} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p14.dup == 0));
  $M.1 := $store.i8($M.1,$p14,$i12);
  $M.1.dup := $store.i1($M.1.dup,$p14,$i12.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 28} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i9 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 850, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p7,$mul.ref(0,32)),$mul.ref(0,1));
  $p16.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 850, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p16.dup == 0));
  $i17 := $load.i8($M.1,$p16);
  $i17.dup := $load.i1($M.1.dup,$p16);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 850, 8} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  $i18.dup := $i17.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 850, 8} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i32($i18,248);
  $i19.dup := $or.i1($i18.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 850, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i8($i19);
  $i20.dup := $i19.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 850, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p16.dup == 0));
  $M.1 := $store.i8($M.1,$p16,$i20);
  $M.1.dup := $store.i1($M.1.dup,$p16,$i20.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 851, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p7,$mul.ref(0,32)),$mul.ref(31,1));
  $p21.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p21.dup == 0));
  $i22 := $load.i8($M.1,$p21);
  $i22.dup := $load.i1($M.1.dup,$p21);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  $i23.dup := $i22.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23,127);
  $i24.dup := $or.i1($i23.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  $i25.dup := $i24.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p21.dup == 0));
  $M.1 := $store.i8($M.1,$p21,$i25);
  $M.1.dup := $store.i1($M.1.dup,$p21,$i25.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 852, 3} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p7,$mul.ref(0,32)),$mul.ref(31,1));
  $p26.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $i27 := $load.i8($M.1,$p26);
  $i27.dup := $load.i1($M.1.dup,$p26);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  $i28.dup := $i27.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i32($i28,64);
  $i29.dup := $or.i1($i28.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  $i30.dup := $i29.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $M.1 := $store.i8($M.1,$p26,$i30);
  $M.1.dup := $store.i1($M.1.dup,$p26,$i30.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 854, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p3,$mul.ref(0,80)),$mul.ref(0,8));
  $p31.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 854, 3} true;
  assume {:verifier.code 0} true;
  call fexpand($p31, $p31.dup, $p2, $p2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 855, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p4,$mul.ref(0,80)),$mul.ref(0,8));
  $p32.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 855, 12} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p5,$mul.ref(0,88)),$mul.ref(0,8));
  $p33.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 855, 15} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p7,$mul.ref(0,32)),$mul.ref(0,1));
  $p34.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 855, 18} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p3,$mul.ref(0,80)),$mul.ref(0,8));
  $p35.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 855, 3} true;
  assume {:verifier.code 0} true;
  call cmult($p32, $p32.dup, $p33, $p33.dup, $p34, $p34.dup, $p35, $p35.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 856, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p6,$mul.ref(0,80)),$mul.ref(0,8));
  $p36.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 856, 17} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p5,$mul.ref(0,88)),$mul.ref(0,8));
  $p37.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 856, 3} true;
  assume {:verifier.code 0} true;
  call crecip($p36, $p36.dup, $p37, $p37.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 857, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p5,$mul.ref(0,88)),$mul.ref(0,8));
  $p38.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 857, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p4,$mul.ref(0,80)),$mul.ref(0,8));
  $p39.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 857, 14} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p6,$mul.ref(0,80)),$mul.ref(0,8));
  $p40.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 857, 3} true;
  assume {:verifier.code 0} true;
  call fmul($p38, $p38.dup, $p39, $p39.dup, $p40, $p40.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 858, 23} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p5,$mul.ref(0,88)),$mul.ref(0,8));
  $p41.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 858, 3} true;
  assume {:verifier.code 0} true;
  call fcontract($p0, $p0.dup, $p41, $p41.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 859, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $r.dup := 0;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 23} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i8,1);
  $i15.dup := $or.i1($i8.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i15);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 849, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i15;
  $i8.dup := $i15.dup;
  goto $bb1;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0,2064));
procedure {:inline 45} llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0,3096));
procedure {:inline 45} llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const fexpand: ref;
axiom (fexpand == $sub.ref(0,4128));
procedure {:inline 45} fexpand($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $M.3, $exn;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $i3: i8;
  var $i3.dup: i1;
  var $i4: i64;
  var $i4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i8;
  var $i6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i8;
  var $i11.dup: i1;
  var $i12: i64;
  var $i12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $i14: i64;
  var $i14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $i16: i8;
  var $i16.dup: i1;
  var $i17: i64;
  var $i17.dup: i1;
  var $i18: i64;
  var $i18.dup: i1;
  var $i19: i64;
  var $i19.dup: i1;
  var $i20: i64;
  var $i20.dup: i1;
  var $i21: i64;
  var $i21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $i24: i8;
  var $i24.dup: i1;
  var $i25: i64;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i8;
  var $i27.dup: i1;
  var $i28: i64;
  var $i28.dup: i1;
  var $i29: i64;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $i32: i8;
  var $i32.dup: i1;
  var $i33: i64;
  var $i33.dup: i1;
  var $i34: i64;
  var $i34.dup: i1;
  var $i35: i64;
  var $i35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $i37: i8;
  var $i37.dup: i1;
  var $i38: i64;
  var $i38.dup: i1;
  var $i39: i64;
  var $i39.dup: i1;
  var $i40: i64;
  var $i40.dup: i1;
  var $i41: i64;
  var $i41.dup: i1;
  var $i42: i64;
  var $i42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i8;
  var $i45.dup: i1;
  var $i46: i64;
  var $i46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $i48: i8;
  var $i48.dup: i1;
  var $i49: i64;
  var $i49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $i51: i64;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $i53: i8;
  var $i53.dup: i1;
  var $i54: i64;
  var $i54.dup: i1;
  var $i55: i64;
  var $i55.dup: i1;
  var $i56: i64;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i8;
  var $i58.dup: i1;
  var $i59: i64;
  var $i59.dup: i1;
  var $i60: i64;
  var $i60.dup: i1;
  var $i61: i64;
  var $i61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
  var $i63: i64;
  var $i63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $i66: i8;
  var $i66.dup: i1;
  var $i67: i64;
  var $i67.dup: i1;
  var $p68: ref;
  var $p68.dup: i1;
  var $i69: i8;
  var $i69.dup: i1;
  var $i70: i64;
  var $i70.dup: i1;
  var $i71: i64;
  var $i71.dup: i1;
  var $i72: i64;
  var $i72.dup: i1;
  var $p73: ref;
  var $p73.dup: i1;
  var $i74: i8;
  var $i74.dup: i1;
  var $i75: i64;
  var $i75.dup: i1;
  var $i76: i64;
  var $i76.dup: i1;
  var $i77: i64;
  var $i77.dup: i1;
  var $p78: ref;
  var $p78.dup: i1;
  var $i79: i8;
  var $i79.dup: i1;
  var $i80: i64;
  var $i80.dup: i1;
  var $i81: i64;
  var $i81.dup: i1;
  var $i82: i64;
  var $i82.dup: i1;
  var $i83: i64;
  var $i83.dup: i1;
  var $i84: i64;
  var $i84.dup: i1;
  var $p85: ref;
  var $p85.dup: i1;
  var $p86: ref;
  var $p86.dup: i1;
  var $i87: i8;
  var $i87.dup: i1;
  var $i88: i64;
  var $i88.dup: i1;
  var $p89: ref;
  var $p89.dup: i1;
  var $i90: i8;
  var $i90.dup: i1;
  var $i91: i64;
  var $i91.dup: i1;
  var $i92: i64;
  var $i92.dup: i1;
  var $i93: i64;
  var $i93.dup: i1;
  var $p94: ref;
  var $p94.dup: i1;
  var $i95: i8;
  var $i95.dup: i1;
  var $i96: i64;
  var $i96.dup: i1;
  var $i97: i64;
  var $i97.dup: i1;
  var $i98: i64;
  var $i98.dup: i1;
  var $p99: ref;
  var $p99.dup: i1;
  var $i100: i8;
  var $i100.dup: i1;
  var $i101: i64;
  var $i101.dup: i1;
  var $i102: i64;
  var $i102.dup: i1;
  var $i103: i64;
  var $i103.dup: i1;
  var $i104: i64;
  var $i104.dup: i1;
  var $i105: i64;
  var $i105.dup: i1;
  var $p106: ref;
  var $p106.dup: i1;
  var $p107: ref;
  var $p107.dup: i1;
  var $i108: i8;
  var $i108.dup: i1;
  var $i109: i64;
  var $i109.dup: i1;
  var $p110: ref;
  var $p110.dup: i1;
  var $i111: i8;
  var $i111.dup: i1;
  var $i112: i64;
  var $i112.dup: i1;
  var $i113: i64;
  var $i113.dup: i1;
  var $i114: i64;
  var $i114.dup: i1;
  var $p115: ref;
  var $p115.dup: i1;
  var $i116: i8;
  var $i116.dup: i1;
  var $i117: i64;
  var $i117.dup: i1;
  var $i118: i64;
  var $i118.dup: i1;
  var $i119: i64;
  var $i119.dup: i1;
  var $p120: ref;
  var $p120.dup: i1;
  var $i121: i8;
  var $i121.dup: i1;
  var $i122: i64;
  var $i122.dup: i1;
  var $i123: i64;
  var $i123.dup: i1;
  var $i124: i64;
  var $i124.dup: i1;
  var $i125: i64;
  var $i125.dup: i1;
  var $i126: i64;
  var $i126.dup: i1;
  var $p127: ref;
  var $p127.dup: i1;
  var $p128: ref;
  var $p128.dup: i1;
  var $i129: i8;
  var $i129.dup: i1;
  var $i130: i64;
  var $i130.dup: i1;
  var $p131: ref;
  var $p131.dup: i1;
  var $i132: i8;
  var $i132.dup: i1;
  var $i133: i64;
  var $i133.dup: i1;
  var $i134: i64;
  var $i134.dup: i1;
  var $i135: i64;
  var $i135.dup: i1;
  var $p136: ref;
  var $p136.dup: i1;
  var $i137: i8;
  var $i137.dup: i1;
  var $i138: i64;
  var $i138.dup: i1;
  var $i139: i64;
  var $i139.dup: i1;
  var $i140: i64;
  var $i140.dup: i1;
  var $p141: ref;
  var $p141.dup: i1;
  var $i142: i8;
  var $i142.dup: i1;
  var $i143: i64;
  var $i143.dup: i1;
  var $i144: i64;
  var $i144.dup: i1;
  var $i145: i64;
  var $i145.dup: i1;
  var $i146: i64;
  var $i146.dup: i1;
  var $i147: i64;
  var $i147.dup: i1;
  var $p148: ref;
  var $p148.dup: i1;
  var $p149: ref;
  var $p149.dup: i1;
  var $i150: i8;
  var $i150.dup: i1;
  var $i151: i64;
  var $i151.dup: i1;
  var $p152: ref;
  var $p152.dup: i1;
  var $i153: i8;
  var $i153.dup: i1;
  var $i154: i64;
  var $i154.dup: i1;
  var $i155: i64;
  var $i155.dup: i1;
  var $i156: i64;
  var $i156.dup: i1;
  var $p157: ref;
  var $p157.dup: i1;
  var $i158: i8;
  var $i158.dup: i1;
  var $i159: i64;
  var $i159.dup: i1;
  var $i160: i64;
  var $i160.dup: i1;
  var $i161: i64;
  var $i161.dup: i1;
  var $p162: ref;
  var $p162.dup: i1;
  var $i163: i8;
  var $i163.dup: i1;
  var $i164: i64;
  var $i164.dup: i1;
  var $i165: i64;
  var $i165.dup: i1;
  var $i166: i64;
  var $i166.dup: i1;
  var $i167: i64;
  var $i167.dup: i1;
  var $i168: i64;
  var $i168.dup: i1;
  var $p169: ref;
  var $p169.dup: i1;
  var $p170: ref;
  var $p170.dup: i1;
  var $i171: i8;
  var $i171.dup: i1;
  var $i172: i64;
  var $i172.dup: i1;
  var $p173: ref;
  var $p173.dup: i1;
  var $i174: i8;
  var $i174.dup: i1;
  var $i175: i64;
  var $i175.dup: i1;
  var $i176: i64;
  var $i176.dup: i1;
  var $i177: i64;
  var $i177.dup: i1;
  var $p178: ref;
  var $p178.dup: i1;
  var $i179: i8;
  var $i179.dup: i1;
  var $i180: i64;
  var $i180.dup: i1;
  var $i181: i64;
  var $i181.dup: i1;
  var $i182: i64;
  var $i182.dup: i1;
  var $p183: ref;
  var $p183.dup: i1;
  var $i184: i8;
  var $i184.dup: i1;
  var $i185: i64;
  var $i185.dup: i1;
  var $i186: i64;
  var $i186.dup: i1;
  var $i187: i64;
  var $i187.dup: i1;
  var $i188: i64;
  var $i188.dup: i1;
  var $i189: i64;
  var $i189.dup: i1;
  var $p190: ref;
  var $p190.dup: i1;
  var $p191: ref;
  var $p191.dup: i1;
  var $i192: i8;
  var $i192.dup: i1;
  var $i193: i64;
  var $i193.dup: i1;
  var $p194: ref;
  var $p194.dup: i1;
  var $i195: i8;
  var $i195.dup: i1;
  var $i196: i64;
  var $i196.dup: i1;
  var $i197: i64;
  var $i197.dup: i1;
  var $i198: i64;
  var $i198.dup: i1;
  var $p199: ref;
  var $p199.dup: i1;
  var $i200: i8;
  var $i200.dup: i1;
  var $i201: i64;
  var $i201.dup: i1;
  var $i202: i64;
  var $i202.dup: i1;
  var $i203: i64;
  var $i203.dup: i1;
  var $p204: ref;
  var $p204.dup: i1;
  var $i205: i8;
  var $i205.dup: i1;
  var $i206: i64;
  var $i206.dup: i1;
  var $i207: i64;
  var $i207.dup: i1;
  var $i208: i64;
  var $i208.dup: i1;
  var $i209: i64;
  var $i209.dup: i1;
  var $i210: i64;
  var $i210.dup: i1;
  var $p211: ref;
  var $p211.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1,$mul.ref(0,1));
  $p2.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p2.dup == 0));
  $i3 := $load.i8($M.2,$p2);
  $i3.dup := $load.i1($M.2.dup,$p2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i64($i3);
  $i4.dup := $i3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1,$mul.ref(1,1));
  $p5.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p5.dup == 0));
  $i6 := $load.i8($M.2,$p5);
  $i6.dup := $load.i1($M.2.dup,$p5);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i64($i6);
  $i7.dup := $i6.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $shl.i64($i7,8);
  $i8.dup := $or.i1($i7.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i64($i4,$i8);
  $i9.dup := $or.i1($i4.dup,$i8.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1,$mul.ref(2,1));
  $p10.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $i11 := $load.i8($M.2,$p10);
  $i11.dup := $load.i1($M.2.dup,$p10);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i64($i11);
  $i12.dup := $i11.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $shl.i64($i12,16);
  $i13.dup := $or.i1($i12.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i64($i9,$i13);
  $i14.dup := $or.i1($i9.dup,$i13.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1,$mul.ref(3,1));
  $p15.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $i16 := $load.i8($M.2,$p15);
  $i16.dup := $load.i1($M.2.dup,$p15);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i64($i16);
  $i17.dup := $i16.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $shl.i64($i17,24);
  $i18.dup := $or.i1($i17.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i64($i14,$i18);
  $i19.dup := $or.i1($i14.dup,$i18.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $ashr.i64($i19,0);
  $i20.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i64($i20,67108863);
  $i21.dup := $or.i1($i20.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0,$mul.ref(0,8));
  $p22.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22.dup == 0));
  $M.3 := $store.i64($M.3,$p22,$i21);
  $M.3.dup := $store.i1($M.3.dup,$p22,$i21.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1,$mul.ref(3,1));
  $p23.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23.dup == 0));
  $i24 := $load.i8($M.2,$p23);
  $i24.dup := $load.i1($M.2.dup,$p23);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i64($i24);
  $i25.dup := $i24.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1,$mul.ref(4,1));
  $p26.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $i27 := $load.i8($M.2,$p26);
  $i27.dup := $load.i1($M.2.dup,$p26);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i64($i27);
  $i28.dup := $i27.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $shl.i64($i28,8);
  $i29.dup := $or.i1($i28.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i30 := $or.i64($i25,$i29);
  $i30.dup := $or.i1($i25.dup,$i29.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1,$mul.ref(5,1));
  $p31.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p31.dup == 0));
  $i32 := $load.i8($M.2,$p31);
  $i32.dup := $load.i1($M.2.dup,$p31);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i64($i32);
  $i33.dup := $i32.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $shl.i64($i33,16);
  $i34.dup := $or.i1($i33.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $or.i64($i30,$i34);
  $i35.dup := $or.i1($i30.dup,$i34.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1,$mul.ref(6,1));
  $p36.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36.dup == 0));
  $i37 := $load.i8($M.2,$p36);
  $i37.dup := $load.i1($M.2.dup,$p36);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i64($i37);
  $i38.dup := $i37.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i39 := $shl.i64($i38,24);
  $i39.dup := $or.i1($i38.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $or.i64($i35,$i39);
  $i40.dup := $or.i1($i35.dup,$i39.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i41 := $ashr.i64($i40,2);
  $i41.dup := $or.i1($i40.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i64($i41,33554431);
  $i42.dup := $or.i1($i41.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0,$mul.ref(1,8));
  $p43.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p43.dup == 0));
  $M.3 := $store.i64($M.3,$p43,$i42);
  $M.3.dup := $store.i1($M.3.dup,$p43,$i42.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1,$mul.ref(6,1));
  $p44.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $i45 := $load.i8($M.2,$p44);
  $i45.dup := $load.i1($M.2.dup,$p44);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i64($i45);
  $i46.dup := $i45.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p1,$mul.ref(7,1));
  $p47.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p47.dup == 0));
  $i48 := $load.i8($M.2,$p47);
  $i48.dup := $load.i1($M.2.dup,$p47);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i64($i48);
  $i49.dup := $i48.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $shl.i64($i49,8);
  $i50.dup := $or.i1($i49.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i64($i46,$i50);
  $i51.dup := $or.i1($i46.dup,$i50.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1,$mul.ref(8,1));
  $p52.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p52.dup == 0));
  $i53 := $load.i8($M.2,$p52);
  $i53.dup := $load.i1($M.2.dup,$p52);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i64($i53);
  $i54.dup := $i53.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i55 := $shl.i64($i54,16);
  $i55.dup := $or.i1($i54.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i56 := $or.i64($i51,$i55);
  $i56.dup := $or.i1($i51.dup,$i55.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p1,$mul.ref(9,1));
  $p57.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57.dup == 0));
  $i58 := $load.i8($M.2,$p57);
  $i58.dup := $load.i1($M.2.dup,$p57);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i64($i58);
  $i59.dup := $i58.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i60 := $shl.i64($i59,24);
  $i60.dup := $or.i1($i59.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i61 := $or.i64($i56,$i60);
  $i61.dup := $or.i1($i56.dup,$i60.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i62 := $ashr.i64($i61,3);
  $i62.dup := $or.i1($i61.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i64($i62,67108863);
  $i63.dup := $or.i1($i62.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0,$mul.ref(2,8));
  $p64.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p64.dup == 0));
  $M.3 := $store.i64($M.3,$p64,$i63);
  $M.3.dup := $store.i1($M.3.dup,$p64,$i63.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p1,$mul.ref(9,1));
  $p65.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p65.dup == 0));
  $i66 := $load.i8($M.2,$p65);
  $i66.dup := $load.i1($M.2.dup,$p65);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i8.i64($i66);
  $i67.dup := $i66.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p1,$mul.ref(10,1));
  $p68.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p68.dup == 0));
  $i69 := $load.i8($M.2,$p68);
  $i69.dup := $load.i1($M.2.dup,$p68);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i64($i69);
  $i70.dup := $i69.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i71 := $shl.i64($i70,8);
  $i71.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i72 := $or.i64($i67,$i71);
  $i72.dup := $or.i1($i67.dup,$i71.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p1,$mul.ref(11,1));
  $p73.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p73.dup == 0));
  $i74 := $load.i8($M.2,$p73);
  $i74.dup := $load.i1($M.2.dup,$p73);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i64($i74);
  $i75.dup := $i74.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i76 := $shl.i64($i75,16);
  $i76.dup := $or.i1($i75.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i77 := $or.i64($i72,$i76);
  $i77.dup := $or.i1($i72.dup,$i76.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p1,$mul.ref(12,1));
  $p78.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p78.dup == 0));
  $i79 := $load.i8($M.2,$p78);
  $i79.dup := $load.i1($M.2.dup,$p78);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i64($i79);
  $i80.dup := $i79.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i81 := $shl.i64($i80,24);
  $i81.dup := $or.i1($i80.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $or.i64($i77,$i81);
  $i82.dup := $or.i1($i77.dup,$i81.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i83 := $ashr.i64($i82,5);
  $i83.dup := $or.i1($i82.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i84 := $and.i64($i83,33554431);
  $i84.dup := $or.i1($i83.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0,$mul.ref(3,8));
  $p85.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p85.dup == 0));
  $M.3 := $store.i64($M.3,$p85,$i84);
  $M.3.dup := $store.i1($M.3.dup,$p85,$i84.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p1,$mul.ref(12,1));
  $p86.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p86.dup == 0));
  $i87 := $load.i8($M.2,$p86);
  $i87.dup := $load.i1($M.2.dup,$p86);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i64($i87);
  $i88.dup := $i87.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p1,$mul.ref(13,1));
  $p89.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p89.dup == 0));
  $i90 := $load.i8($M.2,$p89);
  $i90.dup := $load.i1($M.2.dup,$p89);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i64($i90);
  $i91.dup := $i90.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i92 := $shl.i64($i91,8);
  $i92.dup := $or.i1($i91.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i93 := $or.i64($i88,$i92);
  $i93.dup := $or.i1($i88.dup,$i92.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p1,$mul.ref(14,1));
  $p94.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p94.dup == 0));
  $i95 := $load.i8($M.2,$p94);
  $i95.dup := $load.i1($M.2.dup,$p94);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i8.i64($i95);
  $i96.dup := $i95.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i97 := $shl.i64($i96,16);
  $i97.dup := $or.i1($i96.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i98 := $or.i64($i93,$i97);
  $i98.dup := $or.i1($i93.dup,$i97.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p1,$mul.ref(15,1));
  $p99.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p99.dup == 0));
  $i100 := $load.i8($M.2,$p99);
  $i100.dup := $load.i1($M.2.dup,$p99);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i8.i64($i100);
  $i101.dup := $i100.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i102 := $shl.i64($i101,24);
  $i102.dup := $or.i1($i101.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i103 := $or.i64($i98,$i102);
  $i103.dup := $or.i1($i98.dup,$i102.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i104 := $ashr.i64($i103,6);
  $i104.dup := $or.i1($i103.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i105 := $and.i64($i104,67108863);
  $i105.dup := $or.i1($i104.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0,$mul.ref(4,8));
  $p106.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p106.dup == 0));
  $M.3 := $store.i64($M.3,$p106,$i105);
  $M.3.dup := $store.i1($M.3.dup,$p106,$i105.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p1,$mul.ref(16,1));
  $p107.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p107.dup == 0));
  $i108 := $load.i8($M.2,$p107);
  $i108.dup := $load.i1($M.2.dup,$p107);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i64($i108);
  $i109.dup := $i108.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p1,$mul.ref(17,1));
  $p110.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p110.dup == 0));
  $i111 := $load.i8($M.2,$p110);
  $i111.dup := $load.i1($M.2.dup,$p110);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i8.i64($i111);
  $i112.dup := $i111.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i113 := $shl.i64($i112,8);
  $i113.dup := $or.i1($i112.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i114 := $or.i64($i109,$i113);
  $i114.dup := $or.i1($i109.dup,$i113.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p1,$mul.ref(18,1));
  $p115.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p115.dup == 0));
  $i116 := $load.i8($M.2,$p115);
  $i116.dup := $load.i1($M.2.dup,$p115);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i8.i64($i116);
  $i117.dup := $i116.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i118 := $shl.i64($i117,16);
  $i118.dup := $or.i1($i117.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i119 := $or.i64($i114,$i118);
  $i119.dup := $or.i1($i114.dup,$i118.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p1,$mul.ref(19,1));
  $p120.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p120.dup == 0));
  $i121 := $load.i8($M.2,$p120);
  $i121.dup := $load.i1($M.2.dup,$p120);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i122 := $zext.i8.i64($i121);
  $i122.dup := $i121.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i123 := $shl.i64($i122,24);
  $i123.dup := $or.i1($i122.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $or.i64($i119,$i123);
  $i124.dup := $or.i1($i119.dup,$i123.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $ashr.i64($i124,0);
  $i125.dup := $or.i1($i124.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i126 := $and.i64($i125,33554431);
  $i126.dup := $or.i1($i125.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p0,$mul.ref(5,8));
  $p127.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p127.dup == 0));
  $M.3 := $store.i64($M.3,$p127,$i126);
  $M.3.dup := $store.i1($M.3.dup,$p127,$i126.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p1,$mul.ref(19,1));
  $p128.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p128.dup == 0));
  $i129 := $load.i8($M.2,$p128);
  $i129.dup := $load.i1($M.2.dup,$p128);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i8.i64($i129);
  $i130.dup := $i129.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p1,$mul.ref(20,1));
  $p131.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p131.dup == 0));
  $i132 := $load.i8($M.2,$p131);
  $i132.dup := $load.i1($M.2.dup,$p131);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i8.i64($i132);
  $i133.dup := $i132.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i134 := $shl.i64($i133,8);
  $i134.dup := $or.i1($i133.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i135 := $or.i64($i130,$i134);
  $i135.dup := $or.i1($i130.dup,$i134.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p1,$mul.ref(21,1));
  $p136.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p136.dup == 0));
  $i137 := $load.i8($M.2,$p136);
  $i137.dup := $load.i1($M.2.dup,$p136);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i64($i137);
  $i138.dup := $i137.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i139 := $shl.i64($i138,16);
  $i139.dup := $or.i1($i138.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i140 := $or.i64($i135,$i139);
  $i140.dup := $or.i1($i135.dup,$i139.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p1,$mul.ref(22,1));
  $p141.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p141.dup == 0));
  $i142 := $load.i8($M.2,$p141);
  $i142.dup := $load.i1($M.2.dup,$p141);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i8.i64($i142);
  $i143.dup := $i142.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i144 := $shl.i64($i143,24);
  $i144.dup := $or.i1($i143.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i145 := $or.i64($i140,$i144);
  $i145.dup := $or.i1($i140.dup,$i144.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i146 := $ashr.i64($i145,1);
  $i146.dup := $or.i1($i145.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $i147 := $and.i64($i146,67108863);
  $i147.dup := $or.i1($i146.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p0,$mul.ref(6,8));
  $p148.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 437, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p148.dup == 0));
  $M.3 := $store.i64($M.3,$p148,$i147);
  $M.3.dup := $store.i1($M.3.dup,$p148,$i147.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p1,$mul.ref(22,1));
  $p149.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p149.dup == 0));
  $i150 := $load.i8($M.2,$p149);
  $i150.dup := $load.i1($M.2.dup,$p149);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i8.i64($i150);
  $i151.dup := $i150.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p1,$mul.ref(23,1));
  $p152.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p152.dup == 0));
  $i153 := $load.i8($M.2,$p152);
  $i153.dup := $load.i1($M.2.dup,$p152);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i8.i64($i153);
  $i154.dup := $i153.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i155 := $shl.i64($i154,8);
  $i155.dup := $or.i1($i154.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i156 := $or.i64($i151,$i155);
  $i156.dup := $or.i1($i151.dup,$i155.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p1,$mul.ref(24,1));
  $p157.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p157.dup == 0));
  $i158 := $load.i8($M.2,$p157);
  $i158.dup := $load.i1($M.2.dup,$p157);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i8.i64($i158);
  $i159.dup := $i158.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i160 := $shl.i64($i159,16);
  $i160.dup := $or.i1($i159.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i161 := $or.i64($i156,$i160);
  $i161.dup := $or.i1($i156.dup,$i160.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p1,$mul.ref(25,1));
  $p162.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p162.dup == 0));
  $i163 := $load.i8($M.2,$p162);
  $i163.dup := $load.i1($M.2.dup,$p162);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i8.i64($i163);
  $i164.dup := $i163.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i165 := $shl.i64($i164,24);
  $i165.dup := $or.i1($i164.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i166 := $or.i64($i161,$i165);
  $i166.dup := $or.i1($i161.dup,$i165.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i167 := $ashr.i64($i166,3);
  $i167.dup := $or.i1($i166.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $i168 := $and.i64($i167,33554431);
  $i168.dup := $or.i1($i167.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0,$mul.ref(7,8));
  $p169.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 438, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p169.dup == 0));
  $M.3 := $store.i64($M.3,$p169,$i168);
  $M.3.dup := $store.i1($M.3.dup,$p169,$i168.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p1,$mul.ref(25,1));
  $p170.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p170.dup == 0));
  $i171 := $load.i8($M.2,$p170);
  $i171.dup := $load.i1($M.2.dup,$p170);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i64($i171);
  $i172.dup := $i171.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p1,$mul.ref(26,1));
  $p173.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p173.dup == 0));
  $i174 := $load.i8($M.2,$p173);
  $i174.dup := $load.i1($M.2.dup,$p173);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i8.i64($i174);
  $i175.dup := $i174.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i176 := $shl.i64($i175,8);
  $i176.dup := $or.i1($i175.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i177 := $or.i64($i172,$i176);
  $i177.dup := $or.i1($i172.dup,$i176.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p1,$mul.ref(27,1));
  $p178.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p178.dup == 0));
  $i179 := $load.i8($M.2,$p178);
  $i179.dup := $load.i1($M.2.dup,$p178);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i8.i64($i179);
  $i180.dup := $i179.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i181 := $shl.i64($i180,16);
  $i181.dup := $or.i1($i180.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $or.i64($i177,$i181);
  $i182.dup := $or.i1($i177.dup,$i181.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p1,$mul.ref(28,1));
  $p183.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p183.dup == 0));
  $i184 := $load.i8($M.2,$p183);
  $i184.dup := $load.i1($M.2.dup,$p183);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $zext.i8.i64($i184);
  $i185.dup := $i184.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i186 := $shl.i64($i185,24);
  $i186.dup := $or.i1($i185.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i187 := $or.i64($i182,$i186);
  $i187.dup := $or.i1($i182.dup,$i186.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i188 := $ashr.i64($i187,4);
  $i188.dup := $or.i1($i187.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i189 := $and.i64($i188,67108863);
  $i189.dup := $or.i1($i188.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p0,$mul.ref(8,8));
  $p190.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p190.dup == 0));
  $M.3 := $store.i64($M.3,$p190,$i189);
  $M.3.dup := $store.i1($M.3.dup,$p190,$i189.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p1,$mul.ref(28,1));
  $p191.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p191.dup == 0));
  $i192 := $load.i8($M.2,$p191);
  $i192.dup := $load.i1($M.2.dup,$p191);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i193 := $zext.i8.i64($i192);
  $i193.dup := $i192.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p1,$mul.ref(29,1));
  $p194.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p194.dup == 0));
  $i195 := $load.i8($M.2,$p194);
  $i195.dup := $load.i1($M.2.dup,$p194);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i196 := $zext.i8.i64($i195);
  $i196.dup := $i195.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i197 := $shl.i64($i196,8);
  $i197.dup := $or.i1($i196.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i198 := $or.i64($i193,$i197);
  $i198.dup := $or.i1($i193.dup,$i197.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p1,$mul.ref(30,1));
  $p199.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p199.dup == 0));
  $i200 := $load.i8($M.2,$p199);
  $i200.dup := $load.i1($M.2.dup,$p199);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i201 := $zext.i8.i64($i200);
  $i201.dup := $i200.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i202 := $shl.i64($i201,16);
  $i202.dup := $or.i1($i201.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i203 := $or.i64($i198,$i202);
  $i203.dup := $or.i1($i198.dup,$i202.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p1,$mul.ref(31,1));
  $p204.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p204.dup == 0));
  $i205 := $load.i8($M.2,$p204);
  $i205.dup := $load.i1($M.2.dup,$p204);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i8.i64($i205);
  $i206.dup := $i205.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i207 := $shl.i64($i206,24);
  $i207.dup := $or.i1($i206.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i208 := $or.i64($i203,$i207);
  $i208.dup := $or.i1($i203.dup,$i207.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i209 := $ashr.i64($i208,6);
  $i209.dup := $or.i1($i208.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $i210 := $and.i64($i209,33554431);
  $i210.dup := $or.i1($i209.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p0,$mul.ref(9,8));
  $p211.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 440, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p211.dup == 0));
  $M.3 := $store.i64($M.3,$p211,$i210);
  $M.3.dup := $store.i1($M.3.dup,$p211,$i210.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 442, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const cmult: ref;
axiom (cmult == $sub.ref(0,5160));
procedure {:inline 45} cmult($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1, $p3: ref, $p3.dup: i1)
modifies $M.3, $exn;
modifies $CurrAddr;
{
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $p16: ref;
  var $p16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $p20: ref;
  var $p20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $p25: ref;
  var $p25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $p28: ref;
  var $p28.dup: i1;
  var $p29: ref;
  var $p29.dup: i1;
  var $p30: ref;
  var $p30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $p33: ref;
  var $p33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $p40: ref;
  var $p40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $p42: ref;
  var $p42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $p45: ref;
  var $p45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i1;
  var $i47.dup: i1;
  var $i48: i32;
  var $i48.dup: i1;
  var $i49: i64;
  var $i49.dup: i1;
  var $p50: ref;
  var $p50.dup: i1;
  var $i51: i8;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $p54: ref;
  var $p54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $p56: ref;
  var $p56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $p58: ref;
  var $p58.dup: i1;
  var $p59: ref;
  var $p59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $i61: i8;
  var $i61.dup: i1;
  var $i62: i1;
  var $i62.dup: i1;
  var $i63: i32;
  var $i63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $i65: i64;
  var $i65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i67: i32;
  var $i67.dup: i1;
  var $i68: i8;
  var $i68.dup: i1;
  var $i69: i32;
  var $i69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $p71: ref;
  var $p71.dup: i1;
  var $p72: ref;
  var $p72.dup: i1;
  var $p73: ref;
  var $p73.dup: i1;
  var $p74: ref;
  var $p74.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 8} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p4.dup := 0;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p5.dup := 0;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p6.dup := 0;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p7.dup := 0;
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p8.dup := 0;
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p9.dup := 0;
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p10.dup := 0;
  assume {:verifier.code 0} true;
  call $p11 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p11.dup := 0;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p4);
  $p12.dup := $p4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p12, $p12.dup, 0, 0, 152, 0, false, false);
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p5);
  $p13.dup := $p5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 21} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p13.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p13, $p13.dup, 0, 0, 152, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  $p14.dup := $p13.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,1));
  $p15.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 21} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $M.3 := $store.i64($M.3,$p15,1);
  $M.3.dup := $store.i1($M.3.dup,$p15,0);
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 34} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p6);
  $p16.dup := $p6.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 34} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p16.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p16, $p16.dup, 0, 0, 152, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 34} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  $p17.dup := $p16.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 34} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p17,$mul.ref(0,152)),$mul.ref(0,1));
  $p18.dup := $or.i1($or.i1($p17.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 34} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p18.dup == 0));
  $M.3 := $store.i64($M.3,$p18,1);
  $M.3.dup := $store.i1($M.3.dup,$p18,0);
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 47} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p7);
  $p19.dup := $p7.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 728, 47} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p19.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p19, $p19.dup, 0, 0, 152, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 17} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4,$mul.ref(0,152)),$mul.ref(0,8));
  $p20.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 29} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p5,$mul.ref(0,152)),$mul.ref(0,8));
  $p21.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 39} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p6,$mul.ref(0,152)),$mul.ref(0,8));
  $p22.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p7,$mul.ref(0,152)),$mul.ref(0,8));
  $p23.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p8);
  $p24.dup := $p8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p24.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p24, $p24.dup, 0, 0, 152, 0, false, false);
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 21} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p9);
  $p25.dup := $p9.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 21} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p25.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p25, $p25.dup, 0, 0, 152, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  $p26.dup := $p25.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 21} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p26,$mul.ref(0,152)),$mul.ref(0,1));
  $p27.dup := $or.i1($or.i1($p26.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 21} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27.dup == 0));
  $M.3 := $store.i64($M.3,$p27,1);
  $M.3.dup := $store.i1($M.3.dup,$p27,0);
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 34} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p10);
  $p28.dup := $p10.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 34} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p28.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p28, $p28.dup, 0, 0, 152, 0, false, false);
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 47} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p11);
  $p29.dup := $p11.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 47} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p29, $p29.dup, 0, 0, 152, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 47} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  $p30.dup := $p29.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 47} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p30,$mul.ref(0,152)),$mul.ref(0,1));
  $p31.dup := $or.i1($or.i1($p30.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 730, 47} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p31.dup == 0));
  $M.3 := $store.i64($M.3,$p31,1);
  $M.3.dup := $store.i1($M.3.dup,$p31,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p8,$mul.ref(0,152)),$mul.ref(0,8));
  $p32.dup := $or.i1($or.i1($p8.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 31} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p9,$mul.ref(0,152)),$mul.ref(0,8));
  $p33.dup := $or.i1($or.i1($p9.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 42} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p10,$mul.ref(0,152)),$mul.ref(0,8));
  $p34.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 53} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(0,8));
  $p35.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 735, 3} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p20);
  $p36.dup := $p20.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 735, 3} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p3);
  $p37.dup := $p3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 735, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36.dup == 0));
  $shadow_ok := ($shadow_ok && ($p37.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p36, $p36.dup, $p37, $p37.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 737, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $p9;
  $p38.dup := $p9.dup;
  $p39 := $p8;
  $p39.dup := $p8.dup;
  $p40 := $p10;
  $p40.dup := $p10.dup;
  $p41 := $p7;
  $p41.dup := $p7.dup;
  $p42 := $p6;
  $p42.dup := $p6.dup;
  $p43 := $p5;
  $p43.dup := $p5.dup;
  $p44 := $p4;
  $p44.dup := $p4.dup;
  $p45 := $p11;
  $p45.dup := $p11.dup;
  $i46 := 0;
  $i46.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p45.dup == 0);
  assert {:shadow_invariant} ($p41.dup == 0);
  assert {:shadow_invariant} ($p40.dup == 0);
  assert {:shadow_invariant} ($p42.dup == 0);
  assert {:shadow_invariant} ($i46.dup == 0);
  assert {:likely_shadow_invariant} ($p38.dup == 0);
  assert {:likely_shadow_invariant} ($p43.dup == 0);
  assert {:likely_shadow_invariant} ($p39.dup == 0);
  assert {:likely_shadow_invariant} ($p44.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 35} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 43} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 729, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 731, 46} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 737, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $ult.i32($i46,32);
  $i47.dup := $or.i1($i46.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 737, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  $shadow_ok := ($shadow_ok && ($i47.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i47 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 738, 20} true;
  assume {:verifier.code 0} true;
  $i48 := $sub.i32(31,$i46);
  $i48.dup := $or.i1(0,$i46.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 738, 15} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i32.i64($i48);
  $i49.dup := $i48.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 738, 15} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p2,$mul.ref($i49,1));
  $p50.dup := $or.i1($p2.dup,$or.i1($i49.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 738, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p50.dup == 0));
  $i51 := $load.i8($M.1,$p50);
  $i51.dup := $load.i1($M.1.dup,$p50);
  call {:cexpr "byte"} boogie_si_record_i8($i51);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 739, 10} true;
  assume {:verifier.code 0} true;
  $p52 := $p38;
  $p52.dup := $p38.dup;
  $p53 := $p39;
  $p53.dup := $p39.dup;
  $p54 := $p40;
  $p54.dup := $p40.dup;
  $p55 := $p41;
  $p55.dup := $p41.dup;
  $p56 := $p42;
  $p56.dup := $p42.dup;
  $p57 := $p43;
  $p57.dup := $p43.dup;
  $p58 := $p44;
  $p58.dup := $p44.dup;
  $p59 := $p45;
  $p59.dup := $p45.dup;
  $i60 := 0;
  $i60.dup := 0;
  $i61 := $i51;
  $i61.dup := $i51.dup;
  goto $bb4;
$bb3:
  assume !($i47 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 769, 3} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p0);
  $p71.dup := $p0.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 769, 3} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p42);
  $p72.dup := $p42.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 769, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p71.dup == 0));
  $shadow_ok := ($shadow_ok && ($p72.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p71, $p71.dup, $p72, $p72.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 770, 3} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p1);
  $p73.dup := $p1.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 770, 3} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p41);
  $p74.dup := $p41.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 770, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p73.dup == 0));
  $shadow_ok := ($shadow_ok && ($p74.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p73, $p73.dup, $p74, $p74.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 771, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i60.dup == 0);
  assert {:shadow_invariant} ($p59.dup == 0);
  assert {:shadow_invariant} ($p55.dup == 0);
  assert {:shadow_invariant} ($p54.dup == 0);
  assert {:shadow_invariant} ($p56.dup == 0);
  assert {:shadow_invariant} ($i46.dup == 0);
  assert {:likely_shadow_invariant} ($p52.dup == 0);
  assert {:likely_shadow_invariant} ($p57.dup == 0);
  assert {:likely_shadow_invariant} ($p53.dup == 0);
  assert {:likely_shadow_invariant} ($p58.dup == 0);
  assert {:unlikely_shadow_invariant ($i61.dup == 0)} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 739, 19} true;
  assume {:verifier.code 0} true;
  $i62 := $ult.i32($i60,8);
  $i62.dup := $or.i1($i60.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 739, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  $shadow_ok := ($shadow_ok && ($i62.dup == 0));
  goto $bb5, $bb6;
$bb5:
  assume ($i62 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 740, 24} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i61);
  $i63.dup := $i61.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 740, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $ashr.i32($i63,7);
  $i64.dup := $or.i1($i63.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 740, 24} true;
  assume {:verifier.code 0} true;
  $i65 := $sext.i32.i64($i64);
  $i65.dup := $i64.dup;
  call {:cexpr "bit"} boogie_si_record_i64($i65);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 742, 7} true;
  assume {:verifier.code 0} true;
  call swap_conditional($p56, $p56.dup, $p58, $p58.dup, $i65, $i65.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 743, 7} true;
  assume {:verifier.code 0} true;
  call swap_conditional($p55, $p55.dup, $p57, $p57.dup, $i65, $i65.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 744, 7} true;
  assume {:verifier.code 0} true;
  call fmonty($p54, $p54.dup, $p59, $p59.dup, $p53, $p53.dup, $p52, $p52.dup, $p56, $p56.dup, $p55, $p55.dup, $p58, $p58.dup, $p57, $p57.dup, $p3, $p3.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 749, 7} true;
  assume {:verifier.code 0} true;
  call swap_conditional($p54, $p54.dup, $p53, $p53.dup, $i65, $i65.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 750, 7} true;
  assume {:verifier.code 0} true;
  call swap_conditional($p59, $p59.dup, $p52, $p52.dup, $i65, $i65.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 765, 12} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i61);
  $i66.dup := $i61.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 765, 12} true;
  assume {:verifier.code 0} true;
  $i67 := $shl.i32($i66,1);
  $i67.dup := $or.i1($i66.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 765, 12} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i8($i67);
  $i68.dup := $i67.dup;
  call {:cexpr "byte"} boogie_si_record_i8($i68);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 766, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i62 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 767, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 739, 24} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i60,1);
  $i69.dup := $or.i1($i60.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i69);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 739, 5} true;
  assume {:verifier.code 0} true;
  $p52 := $p57;
  $p52.dup := $p57.dup;
  $p53 := $p58;
  $p53.dup := $p58.dup;
  $p54 := $p56;
  $p54.dup := $p56.dup;
  $p55 := $p59;
  $p55.dup := $p59.dup;
  $p56 := $p54;
  $p56.dup := $p54.dup;
  $p57 := $p52;
  $p57.dup := $p52.dup;
  $p58 := $p53;
  $p58.dup := $p53.dup;
  $p59 := $p55;
  $p59.dup := $p55.dup;
  $i60 := $i69;
  $i60.dup := $i69.dup;
  $i61 := $i68;
  $i61.dup := $i68.dup;
  goto $bb4;
$bb8:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 737, 23} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i32($i46,1);
  $i70.dup := $or.i1($i46.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i70);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 737, 3} true;
  assume {:verifier.code 0} true;
  $p38 := $p52;
  $p38.dup := $p52.dup;
  $p39 := $p53;
  $p39.dup := $p53.dup;
  $p40 := $p54;
  $p40.dup := $p54.dup;
  $p41 := $p55;
  $p41.dup := $p55.dup;
  $p42 := $p56;
  $p42.dup := $p56.dup;
  $p43 := $p57;
  $p43.dup := $p57.dup;
  $p44 := $p58;
  $p44.dup := $p58.dup;
  $p45 := $p59;
  $p45.dup := $p59.dup;
  $i46 := $i70;
  $i46.dup := $i70.dup;
  goto $bb1;
}
const crecip: ref;
axiom (crecip == $sub.ref(0,6192));
procedure {:inline 45} crecip($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $exn;
modifies $M.3;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $p16: ref;
  var $p16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $p20: ref;
  var $p20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $p25: ref;
  var $p25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $p28: ref;
  var $p28.dup: i1;
  var $p29: ref;
  var $p29.dup: i1;
  var $p30: ref;
  var $p30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $p33: ref;
  var $p33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $p40: ref;
  var $p40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $p42: ref;
  var $p42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $i44: i32;
  var $i44.dup: i1;
  var $i45: i1;
  var $i45.dup: i1;
  var $p46: ref;
  var $p46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $p48: ref;
  var $p48.dup: i1;
  var $p49: ref;
  var $p49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $p51: ref;
  var $p51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $p54: ref;
  var $p54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $p56: ref;
  var $p56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i32;
  var $i58.dup: i1;
  var $i59: i1;
  var $i59.dup: i1;
  var $p60: ref;
  var $p60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $p62: ref;
  var $p62.dup: i1;
  var $p63: ref;
  var $p63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $p66: ref;
  var $p66.dup: i1;
  var $p67: ref;
  var $p67.dup: i1;
  var $p68: ref;
  var $p68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $p70: ref;
  var $p70.dup: i1;
  var $p71: ref;
  var $p71.dup: i1;
  var $i72: i32;
  var $i72.dup: i1;
  var $i73: i1;
  var $i73.dup: i1;
  var $p74: ref;
  var $p74.dup: i1;
  var $p75: ref;
  var $p75.dup: i1;
  var $p76: ref;
  var $p76.dup: i1;
  var $p77: ref;
  var $p77.dup: i1;
  var $i78: i32;
  var $i78.dup: i1;
  var $p79: ref;
  var $p79.dup: i1;
  var $p80: ref;
  var $p80.dup: i1;
  var $p81: ref;
  var $p81.dup: i1;
  var $p82: ref;
  var $p82.dup: i1;
  var $p83: ref;
  var $p83.dup: i1;
  var $p84: ref;
  var $p84.dup: i1;
  var $p85: ref;
  var $p85.dup: i1;
  var $i86: i32;
  var $i86.dup: i1;
  var $i87: i1;
  var $i87.dup: i1;
  var $p88: ref;
  var $p88.dup: i1;
  var $p89: ref;
  var $p89.dup: i1;
  var $p90: ref;
  var $p90.dup: i1;
  var $p91: ref;
  var $p91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $p93: ref;
  var $p93.dup: i1;
  var $p94: ref;
  var $p94.dup: i1;
  var $p95: ref;
  var $p95.dup: i1;
  var $p96: ref;
  var $p96.dup: i1;
  var $p97: ref;
  var $p97.dup: i1;
  var $p98: ref;
  var $p98.dup: i1;
  var $p99: ref;
  var $p99.dup: i1;
  var $i100: i32;
  var $i100.dup: i1;
  var $i101: i1;
  var $i101.dup: i1;
  var $p102: ref;
  var $p102.dup: i1;
  var $p103: ref;
  var $p103.dup: i1;
  var $p104: ref;
  var $p104.dup: i1;
  var $p105: ref;
  var $p105.dup: i1;
  var $i106: i32;
  var $i106.dup: i1;
  var $p107: ref;
  var $p107.dup: i1;
  var $p108: ref;
  var $p108.dup: i1;
  var $p109: ref;
  var $p109.dup: i1;
  var $p110: ref;
  var $p110.dup: i1;
  var $p111: ref;
  var $p111.dup: i1;
  var $p112: ref;
  var $p112.dup: i1;
  var $p113: ref;
  var $p113.dup: i1;
  var $i114: i32;
  var $i114.dup: i1;
  var $i115: i1;
  var $i115.dup: i1;
  var $p116: ref;
  var $p116.dup: i1;
  var $p117: ref;
  var $p117.dup: i1;
  var $p118: ref;
  var $p118.dup: i1;
  var $p119: ref;
  var $p119.dup: i1;
  var $i120: i32;
  var $i120.dup: i1;
  var $p121: ref;
  var $p121.dup: i1;
  var $p122: ref;
  var $p122.dup: i1;
  var $p123: ref;
  var $p123.dup: i1;
  var $p124: ref;
  var $p124.dup: i1;
  var $p125: ref;
  var $p125.dup: i1;
  var $p126: ref;
  var $p126.dup: i1;
  var $p127: ref;
  var $p127.dup: i1;
  var $p128: ref;
  var $p128.dup: i1;
  var $p129: ref;
  var $p129.dup: i1;
  var $p130: ref;
  var $p130.dup: i1;
  var $p131: ref;
  var $p131.dup: i1;
  var $p132: ref;
  var $p132.dup: i1;
  var $p133: ref;
  var $p133.dup: i1;
  var $p134: ref;
  var $p134.dup: i1;
  var $p135: ref;
  var $p135.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 790, 19} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p2.dup := 0;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p3.dup := 0;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p4.dup := 0;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p5.dup := 0;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p6.dup := 0;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p7.dup := 0;
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p8.dup := 0;
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p9.dup := 0;
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p10.dup := 0;
  assume {:verifier.code 0} true;
  call $p11 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p11.dup := 0;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 790, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2,$mul.ref(0,80)),$mul.ref(0,8));
  $p12.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 790, 11} true;
  assume {:verifier.code 0} true;
  call fsquare($p12, $p12.dup, $p1, $p1.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 791, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p13.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 791, 22} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2,$mul.ref(0,80)),$mul.ref(0,8));
  $p14.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 791, 11} true;
  assume {:verifier.code 0} true;
  call fsquare($p13, $p13.dup, $p14, $p14.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 792, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p15.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 792, 22} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p16.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 792, 11} true;
  assume {:verifier.code 0} true;
  call fsquare($p15, $p15.dup, $p16, $p16.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 793, 16} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p3,$mul.ref(0,80)),$mul.ref(0,8));
  $p17.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 793, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p18.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 793, 11} true;
  assume {:verifier.code 0} true;
  call fmul($p17, $p17.dup, $p18, $p18.dup, $p1, $p1.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 794, 17} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p4,$mul.ref(0,80)),$mul.ref(0,8));
  $p19.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 794, 21} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p3,$mul.ref(0,80)),$mul.ref(0,8));
  $p20.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 794, 24} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p2,$mul.ref(0,80)),$mul.ref(0,8));
  $p21.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 794, 12} true;
  assume {:verifier.code 0} true;
  call fmul($p19, $p19.dup, $p20, $p20.dup, $p21, $p21.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 795, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p22.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 795, 23} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p4,$mul.ref(0,80)),$mul.ref(0,8));
  $p23.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 795, 12} true;
  assume {:verifier.code 0} true;
  call fsquare($p22, $p22.dup, $p23, $p23.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 796, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p5,$mul.ref(0,80)),$mul.ref(0,8));
  $p24.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 796, 36} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p25.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 796, 39} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p3,$mul.ref(0,80)),$mul.ref(0,8));
  $p26.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 796, 24} true;
  assume {:verifier.code 0} true;
  call fmul($p24, $p24.dup, $p25, $p25.dup, $p26, $p26.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 798, 27} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p27.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 798, 30} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p5,$mul.ref(0,80)),$mul.ref(0,8));
  $p28.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 798, 19} true;
  assume {:verifier.code 0} true;
  call fsquare($p27, $p27.dup, $p28, $p28.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 799, 27} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p29.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 799, 30} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p30.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 799, 19} true;
  assume {:verifier.code 0} true;
  call fsquare($p29, $p29.dup, $p30, $p30.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 800, 27} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p31.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 800, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p32.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 800, 19} true;
  assume {:verifier.code 0} true;
  call fsquare($p31, $p31.dup, $p32, $p32.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 801, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p33.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 801, 30} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p34.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 801, 19} true;
  assume {:verifier.code 0} true;
  call fsquare($p33, $p33.dup, $p34, $p34.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 802, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p35.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 802, 31} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p36.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 802, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p35, $p35.dup, $p36, $p36.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 803, 25} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p6,$mul.ref(0,80)),$mul.ref(0,8));
  $p37.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 803, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p38.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 803, 36} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p5,$mul.ref(0,80)),$mul.ref(0,8));
  $p39.dup := $or.i1($or.i1($p5.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 803, 20} true;
  assume {:verifier.code 0} true;
  call fmul($p37, $p37.dup, $p38, $p38.dup, $p39, $p39.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 805, 28} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p40.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 805, 31} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p6,$mul.ref(0,80)),$mul.ref(0,8));
  $p41.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 805, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p40, $p40.dup, $p41, $p41.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 806, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p42.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 806, 31} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p43.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 806, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p42, $p42.dup, $p43, $p43.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 26} true;
  assume {:verifier.code 0} true;
  $i44 := 2;
  $i44.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i44.dup == 0);
  assert {:likely_shadow_invariant} ($p9.dup == 0);
  assert {:likely_shadow_invariant} ($p8.dup == 0);
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p10.dup == 0);
  assert {:likely_shadow_invariant} ($p11.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 34} true;
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i44,10);
  $i45.dup := $or.i1($i44.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  $shadow_ok := ($shadow_ok && ($i45.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i45 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 57} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p46.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 60} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p47.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 49} true;
  assume {:verifier.code 0} true;
  call fsquare($p46, $p46.dup, $p47, $p47.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 73} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p48.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 76} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p49.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 65} true;
  assume {:verifier.code 0} true;
  call fsquare($p48, $p48.dup, $p49, $p49.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 81} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i45 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 808, 25} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p7,$mul.ref(0,80)),$mul.ref(0,8));
  $p51.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 808, 33} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p52.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 808, 36} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p6,$mul.ref(0,80)),$mul.ref(0,8));
  $p53.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 808, 20} true;
  assume {:verifier.code 0} true;
  call fmul($p51, $p51.dup, $p52, $p52.dup, $p53, $p53.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 810, 28} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p54.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 810, 31} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p7,$mul.ref(0,80)),$mul.ref(0,8));
  $p55.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 810, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p54, $p54.dup, $p55, $p55.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 811, 28} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p56.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 811, 31} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p57.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 811, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p56, $p56.dup, $p57, $p57.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 26} true;
  assume {:verifier.code 0} true;
  $i58 := 2;
  $i58.dup := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 41} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i32($i44,2);
  $i50.dup := $or.i1($i44.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i50);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 807, 21} true;
  assume {:verifier.code 0} true;
  $i44 := $i50;
  $i44.dup := $i50.dup;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i58.dup == 0);
  assert {:likely_shadow_invariant} ($p9.dup == 0);
  assert {:likely_shadow_invariant} ($p8.dup == 0);
  assert {:likely_shadow_invariant} ($p7.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p10.dup == 0);
  assert {:likely_shadow_invariant} ($p11.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 34} true;
  assume {:verifier.code 0} true;
  $i59 := $slt.i32($i58,20);
  $i59.dup := $or.i1($i58.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  $shadow_ok := ($shadow_ok && ($i59.dup == 0));
  goto $bb6, $bb7;
$bb6:
  assume ($i59 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 57} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p60.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 60} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p61.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 49} true;
  assume {:verifier.code 0} true;
  call fsquare($p60, $p60.dup, $p61, $p61.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 73} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p62.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 76} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p63.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 65} true;
  assume {:verifier.code 0} true;
  call fsquare($p62, $p62.dup, $p63, $p63.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 81} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i59 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 813, 25} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p65.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 813, 28} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p66.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 813, 31} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p7,$mul.ref(0,80)),$mul.ref(0,8));
  $p67.dup := $or.i1($or.i1($p7.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 813, 20} true;
  assume {:verifier.code 0} true;
  call fmul($p65, $p65.dup, $p66, $p66.dup, $p67, $p67.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 815, 28} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p68.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 815, 31} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p69.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 815, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p68, $p68.dup, $p69, $p69.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 816, 28} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p70.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 816, 31} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p71.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 816, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p70, $p70.dup, $p71, $p71.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 26} true;
  assume {:verifier.code 0} true;
  $i72 := 2;
  $i72.dup := 0;
  goto $bb9;
$bb8:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 41} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i58,2);
  $i64.dup := $or.i1($i58.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i64);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 812, 21} true;
  assume {:verifier.code 0} true;
  $i58 := $i64;
  $i58.dup := $i64.dup;
  goto $bb5;
$bb9:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i72.dup == 0);
  assert {:likely_shadow_invariant} ($p9.dup == 0);
  assert {:likely_shadow_invariant} ($p8.dup == 0);
  assert {:likely_shadow_invariant} ($p6.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p10.dup == 0);
  assert {:likely_shadow_invariant} ($p11.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 34} true;
  assume {:verifier.code 0} true;
  $i73 := $slt.i32($i72,10);
  $i73.dup := $or.i1($i72.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  $shadow_ok := ($shadow_ok && ($i73.dup == 0));
  goto $bb10, $bb11;
$bb10:
  assume ($i73 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 57} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p74.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 60} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p75.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 49} true;
  assume {:verifier.code 0} true;
  call fsquare($p74, $p74.dup, $p75, $p75.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 73} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p76.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 76} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p77.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 65} true;
  assume {:verifier.code 0} true;
  call fsquare($p76, $p76.dup, $p77, $p77.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 81} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !($i73 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 818, 25} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p8,$mul.ref(0,80)),$mul.ref(0,8));
  $p79.dup := $or.i1($or.i1($p8.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 818, 33} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p80.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 818, 36} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p6,$mul.ref(0,80)),$mul.ref(0,8));
  $p81.dup := $or.i1($or.i1($p6.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 818, 20} true;
  assume {:verifier.code 0} true;
  call fmul($p79, $p79.dup, $p80, $p80.dup, $p81, $p81.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 820, 28} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p82.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 820, 31} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p8,$mul.ref(0,80)),$mul.ref(0,8));
  $p83.dup := $or.i1($or.i1($p8.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 820, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p82, $p82.dup, $p83, $p83.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 821, 28} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p84.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 821, 31} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p85.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 821, 20} true;
  assume {:verifier.code 0} true;
  call fsquare($p84, $p84.dup, $p85, $p85.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 27} true;
  assume {:verifier.code 0} true;
  $i86 := 2;
  $i86.dup := 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 41} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i32($i72,2);
  $i78.dup := $or.i1($i72.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i78);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 817, 21} true;
  assume {:verifier.code 0} true;
  $i72 := $i78;
  $i72.dup := $i78.dup;
  goto $bb9;
$bb13:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i86.dup == 0);
  assert {:likely_shadow_invariant} ($p9.dup == 0);
  assert {:likely_shadow_invariant} ($p8.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p10.dup == 0);
  assert {:likely_shadow_invariant} ($p11.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 35} true;
  assume {:verifier.code 0} true;
  $i87 := $slt.i32($i86,50);
  $i87.dup := $or.i1($i86.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  $shadow_ok := ($shadow_ok && ($i87.dup == 0));
  goto $bb14, $bb15;
$bb14:
  assume ($i87 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 58} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p88.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 61} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p89.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 50} true;
  assume {:verifier.code 0} true;
  call fsquare($p88, $p88.dup, $p89, $p89.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 74} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p90.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 77} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p91.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 66} true;
  assume {:verifier.code 0} true;
  call fsquare($p90, $p90.dup, $p91, $p91.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 82} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !($i87 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 823, 26} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p9,$mul.ref(0,80)),$mul.ref(0,8));
  $p93.dup := $or.i1($or.i1($p9.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 823, 35} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p94.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 823, 38} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p8,$mul.ref(0,80)),$mul.ref(0,8));
  $p95.dup := $or.i1($or.i1($p8.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 823, 21} true;
  assume {:verifier.code 0} true;
  call fmul($p93, $p93.dup, $p94, $p94.dup, $p95, $p95.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 825, 29} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p96.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 825, 32} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p9,$mul.ref(0,80)),$mul.ref(0,8));
  $p97.dup := $or.i1($or.i1($p9.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 825, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p96, $p96.dup, $p97, $p97.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 826, 29} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p98.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 826, 32} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p99.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 826, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p98, $p98.dup, $p99, $p99.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 28} true;
  assume {:verifier.code 0} true;
  $i100 := 2;
  $i100.dup := 0;
  goto $bb17;
$bb16:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 42} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i86,2);
  $i92.dup := $or.i1($i86.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i92);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 822, 22} true;
  assume {:verifier.code 0} true;
  $i86 := $i92;
  $i86.dup := $i92.dup;
  goto $bb13;
$bb17:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i100.dup == 0);
  assert {:likely_shadow_invariant} ($p9.dup == 0);
  assert {:likely_shadow_invariant} ($p8.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p10.dup == 0);
  assert {:likely_shadow_invariant} ($p11.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 36} true;
  assume {:verifier.code 0} true;
  $i101 := $slt.i32($i100,100);
  $i101.dup := $or.i1($i100.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  $shadow_ok := ($shadow_ok && ($i101.dup == 0));
  goto $bb18, $bb19;
$bb18:
  assume ($i101 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 60} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p102.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 63} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p103.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 52} true;
  assume {:verifier.code 0} true;
  call fsquare($p102, $p102.dup, $p103, $p103.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 76} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p104.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 79} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p105.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 68} true;
  assume {:verifier.code 0} true;
  call fsquare($p104, $p104.dup, $p105, $p105.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 84} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !($i101 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 828, 26} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p107.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 828, 29} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p108.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 828, 32} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p9,$mul.ref(0,80)),$mul.ref(0,8));
  $p109.dup := $or.i1($or.i1($p9.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 828, 21} true;
  assume {:verifier.code 0} true;
  call fmul($p107, $p107.dup, $p108, $p108.dup, $p109, $p109.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 830, 29} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p110.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 830, 32} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p111.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 830, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p110, $p110.dup, $p111, $p111.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 831, 29} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p112.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 831, 32} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p113.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 831, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p112, $p112.dup, $p113, $p113.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 27} true;
  assume {:verifier.code 0} true;
  $i114 := 2;
  $i114.dup := 0;
  goto $bb21;
$bb20:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 44} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i100,2);
  $i106.dup := $or.i1($i100.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i106);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 827, 23} true;
  assume {:verifier.code 0} true;
  $i100 := $i106;
  $i100.dup := $i106.dup;
  goto $bb17;
$bb21:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i114.dup == 0);
  assert {:likely_shadow_invariant} ($p8.dup == 0);
  assert {:likely_shadow_invariant} ($p4.dup == 0);
  assert {:likely_shadow_invariant} ($p10.dup == 0);
  assert {:likely_shadow_invariant} ($p11.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 35} true;
  assume {:verifier.code 0} true;
  $i115 := $slt.i32($i114,50);
  $i115.dup := $or.i1($i114.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  $shadow_ok := ($shadow_ok && ($i115.dup == 0));
  goto $bb22, $bb23;
$bb22:
  assume ($i115 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 58} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p116.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 61} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p117.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 50} true;
  assume {:verifier.code 0} true;
  call fsquare($p116, $p116.dup, $p117, $p117.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 74} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p118.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 77} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p119.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 66} true;
  assume {:verifier.code 0} true;
  call fsquare($p118, $p118.dup, $p119, $p119.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 82} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !($i115 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 833, 26} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p121.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 833, 29} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p122.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 833, 32} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($add.ref($p8,$mul.ref(0,80)),$mul.ref(0,8));
  $p123.dup := $or.i1($or.i1($p8.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 833, 21} true;
  assume {:verifier.code 0} true;
  call fmul($p121, $p121.dup, $p122, $p122.dup, $p123, $p123.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 835, 29} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p124.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 835, 32} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p125.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 835, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p124, $p124.dup, $p125, $p125.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 836, 29} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p126.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 836, 32} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p127.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 836, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p126, $p126.dup, $p127, $p127.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 837, 29} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p128.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 837, 32} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p129.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 837, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p128, $p128.dup, $p129, $p129.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 838, 29} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p130.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 838, 32} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p131.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 838, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p130, $p130.dup, $p131, $p131.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 839, 29} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p132.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 839, 32} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p133.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 839, 21} true;
  assume {:verifier.code 0} true;
  call fsquare($p132, $p132.dup, $p133, $p133.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 840, 29} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p11,$mul.ref(0,80)),$mul.ref(0,8));
  $p134.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 840, 32} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p4,$mul.ref(0,80)),$mul.ref(0,8));
  $p135.dup := $or.i1($or.i1($p4.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 840, 20} true;
  assume {:verifier.code 0} true;
  call fmul($p0, $p0.dup, $p134, $p134.dup, $p135, $p135.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 841, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb24:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 42} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i114,2);
  $i120.dup := $or.i1($i114.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i120);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 832, 22} true;
  assume {:verifier.code 0} true;
  $i114 := $i120;
  $i114.dup := $i120.dup;
  goto $bb21;
}
const fmul: ref;
axiom (fmul == $sub.ref(0,7224));
procedure {:inline 45} fmul($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1)
modifies $M.3, $exn;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 331, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p3.dup := 0;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 331, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3,$mul.ref(0,152)),$mul.ref(0,8));
  $p4.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 331, 3} true;
  assume {:verifier.code 0} true;
  call fproduct($p4, $p4.dup, $p1, $p1.dup, $p2, $p2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 333, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p3,$mul.ref(0,152)),$mul.ref(0,8));
  $p5.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 333, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p5, $p5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 334, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p3,$mul.ref(0,152)),$mul.ref(0,8));
  $p6.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 334, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p6, $p6.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 336, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  $p7.dup := $p0.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 336, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p3,$mul.ref(0,152)),$mul.ref(0,8));
  $p8.dup := $or.i1($or.i1($p3.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 336, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  $p9.dup := $p8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 336, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p7.dup == 0));
  $shadow_ok := ($shadow_ok && ($p9.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p7, $p7.dup, $p9, $p9.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 337, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const fcontract: ref;
axiom (fcontract == $sub.ref(0,8256));
procedure {:inline 45} fcontract($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $exn;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i1;
  var $i4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i1;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $i15: i1;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i1;
  var $i17.dup: i1;
  var $i18: i64;
  var $i18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i64;
  var $i22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i32;
  var $i26.dup: i1;
  var $i27: i32;
  var $i27.dup: i1;
  var $i28: i64;
  var $i28.dup: i1;
  var $p29: ref;
  var $p29.dup: i1;
  var $i30: i32;
  var $i30.dup: i1;
  var $i31: i32;
  var $i31.dup: i1;
  var $i32: i32;
  var $i32.dup: i1;
  var $i33: i64;
  var $i33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $i35: i32;
  var $i35.dup: i1;
  var $i36: i64;
  var $i36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $i38: i32;
  var $i38.dup: i1;
  var $i39: i32;
  var $i39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $i41: i64;
  var $i41.dup: i1;
  var $p42: ref;
  var $p42.dup: i1;
  var $i43: i64;
  var $i43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i32;
  var $i45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i64;
  var $i47.dup: i1;
  var $p48: ref;
  var $p48.dup: i1;
  var $i49: i32;
  var $i49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $i51: i32;
  var $i51.dup: i1;
  var $i52: i32;
  var $i52.dup: i1;
  var $i53: i64;
  var $i53.dup: i1;
  var $p54: ref;
  var $p54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i32;
  var $i56.dup: i1;
  var $i57: i32;
  var $i57.dup: i1;
  var $i58: i64;
  var $i58.dup: i1;
  var $p59: ref;
  var $p59.dup: i1;
  var $i60: i32;
  var $i60.dup: i1;
  var $i61: i64;
  var $i61.dup: i1;
  var $p62: ref;
  var $p62.dup: i1;
  var $i63: i32;
  var $i63.dup: i1;
  var $i64: i32;
  var $i64.dup: i1;
  var $i65: i32;
  var $i65.dup: i1;
  var $i66: i64;
  var $i66.dup: i1;
  var $p67: ref;
  var $p67.dup: i1;
  var $i68: i32;
  var $i68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $p72: ref;
  var $p72.dup: i1;
  var $i73: i32;
  var $i73.dup: i1;
  var $i74: i32;
  var $i74.dup: i1;
  var $i75: i32;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $p77: ref;
  var $p77.dup: i1;
  var $i78: i32;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i32;
  var $i80.dup: i1;
  var $p81: ref;
  var $p81.dup: i1;
  var $p82: ref;
  var $p82.dup: i1;
  var $i83: i32;
  var $i83.dup: i1;
  var $i84: i32;
  var $i84.dup: i1;
  var $i85: i32;
  var $i85.dup: i1;
  var $p86: ref;
  var $p86.dup: i1;
  var $i87: i32;
  var $i87.dup: i1;
  var $p88: ref;
  var $p88.dup: i1;
  var $i89: i32;
  var $i89.dup: i1;
  var $i90: i32;
  var $i90.dup: i1;
  var $p91: ref;
  var $p91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $i93: i32;
  var $i93.dup: i1;
  var $i94: i32;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $p96: ref;
  var $p96.dup: i1;
  var $i97: i32;
  var $i97.dup: i1;
  var $i98: i32;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $p100: ref;
  var $p100.dup: i1;
  var $p101: ref;
  var $p101.dup: i1;
  var $i102: i32;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $p104: ref;
  var $p104.dup: i1;
  var $i105: i32;
  var $i105.dup: i1;
  var $i106: i1;
  var $i106.dup: i1;
  var $i107: i32;
  var $i107.dup: i1;
  var $i108: i1;
  var $i108.dup: i1;
  var $i109: i32;
  var $i109.dup: i1;
  var $i110: i1;
  var $i110.dup: i1;
  var $i111: i64;
  var $i111.dup: i1;
  var $p112: ref;
  var $p112.dup: i1;
  var $i113: i32;
  var $i113.dup: i1;
  var $i114: i32;
  var $i114.dup: i1;
  var $i115: i64;
  var $i115.dup: i1;
  var $p116: ref;
  var $p116.dup: i1;
  var $i117: i32;
  var $i117.dup: i1;
  var $i118: i32;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i64;
  var $i120.dup: i1;
  var $p121: ref;
  var $p121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
  var $i123: i32;
  var $i123.dup: i1;
  var $i124: i64;
  var $i124.dup: i1;
  var $p125: ref;
  var $p125.dup: i1;
  var $i126: i32;
  var $i126.dup: i1;
  var $i127: i32;
  var $i127.dup: i1;
  var $i128: i64;
  var $i128.dup: i1;
  var $p129: ref;
  var $p129.dup: i1;
  var $i130: i32;
  var $i130.dup: i1;
  var $i131: i32;
  var $i131.dup: i1;
  var $i132: i32;
  var $i132.dup: i1;
  var $i133: i64;
  var $i133.dup: i1;
  var $p134: ref;
  var $p134.dup: i1;
  var $i135: i32;
  var $i135.dup: i1;
  var $i136: i32;
  var $i136.dup: i1;
  var $i137: i32;
  var $i137.dup: i1;
  var $p138: ref;
  var $p138.dup: i1;
  var $i139: i32;
  var $i139.dup: i1;
  var $i140: i32;
  var $i140.dup: i1;
  var $p141: ref;
  var $p141.dup: i1;
  var $i142: i32;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i32;
  var $i144.dup: i1;
  var $p145: ref;
  var $p145.dup: i1;
  var $i146: i32;
  var $i146.dup: i1;
  var $i147: i32;
  var $i147.dup: i1;
  var $i148: i32;
  var $i148.dup: i1;
  var $p149: ref;
  var $p149.dup: i1;
  var $i150: i32;
  var $i150.dup: i1;
  var $i151: i32;
  var $i151.dup: i1;
  var $i152: i32;
  var $i152.dup: i1;
  var $i153: i32;
  var $i153.dup: i1;
  var $i154: i1;
  var $i154.dup: i1;
  var $i155: i32;
  var $i155.dup: i1;
  var $i156: i1;
  var $i156.dup: i1;
  var $i157: i64;
  var $i157.dup: i1;
  var $p158: ref;
  var $p158.dup: i1;
  var $i159: i32;
  var $i159.dup: i1;
  var $i160: i32;
  var $i160.dup: i1;
  var $i161: i32;
  var $i161.dup: i1;
  var $i163: i64;
  var $i163.dup: i1;
  var $p164: ref;
  var $p164.dup: i1;
  var $i165: i32;
  var $i165.dup: i1;
  var $i166: i32;
  var $i166.dup: i1;
  var $i167: i32;
  var $i167.dup: i1;
  var $i162: i32;
  var $i162.dup: i1;
  var $i168: i32;
  var $i168.dup: i1;
  var $i169: i32;
  var $i169.dup: i1;
  var $p170: ref;
  var $p170.dup: i1;
  var $i171: i32;
  var $i171.dup: i1;
  var $i172: i32;
  var $i172.dup: i1;
  var $i173: i32;
  var $i173.dup: i1;
  var $i174: i1;
  var $i174.dup: i1;
  var $i175: i32;
  var $i175.dup: i1;
  var $i176: i1;
  var $i176.dup: i1;
  var $i177: i32;
  var $i177.dup: i1;
  var $i178: i64;
  var $i178.dup: i1;
  var $p179: ref;
  var $p179.dup: i1;
  var $i180: i32;
  var $i180.dup: i1;
  var $i181: i32;
  var $i181.dup: i1;
  var $i182: i32;
  var $i182.dup: i1;
  var $i183: i64;
  var $i183.dup: i1;
  var $p184: ref;
  var $p184.dup: i1;
  var $i185: i32;
  var $i185.dup: i1;
  var $i186: i32;
  var $i186.dup: i1;
  var $i187: i32;
  var $i187.dup: i1;
  var $p188: ref;
  var $p188.dup: i1;
  var $i189: i32;
  var $i189.dup: i1;
  var $i190: i32;
  var $i190.dup: i1;
  var $p191: ref;
  var $p191.dup: i1;
  var $i192: i32;
  var $i192.dup: i1;
  var $i193: i32;
  var $i193.dup: i1;
  var $p194: ref;
  var $p194.dup: i1;
  var $i195: i32;
  var $i195.dup: i1;
  var $i196: i32;
  var $i196.dup: i1;
  var $p197: ref;
  var $p197.dup: i1;
  var $i198: i32;
  var $i198.dup: i1;
  var $i199: i32;
  var $i199.dup: i1;
  var $p200: ref;
  var $p200.dup: i1;
  var $i201: i32;
  var $i201.dup: i1;
  var $i202: i32;
  var $i202.dup: i1;
  var $p203: ref;
  var $p203.dup: i1;
  var $i204: i32;
  var $i204.dup: i1;
  var $i205: i32;
  var $i205.dup: i1;
  var $p206: ref;
  var $p206.dup: i1;
  var $i207: i32;
  var $i207.dup: i1;
  var $i208: i32;
  var $i208.dup: i1;
  var $p209: ref;
  var $p209.dup: i1;
  var $i210: i32;
  var $i210.dup: i1;
  var $i211: i32;
  var $i211.dup: i1;
  var $p212: ref;
  var $p212.dup: i1;
  var $p213: ref;
  var $p213.dup: i1;
  var $p214: ref;
  var $p214.dup: i1;
  var $i215: i32;
  var $i215.dup: i1;
  var $i216: i32;
  var $i216.dup: i1;
  var $p217: ref;
  var $p217.dup: i1;
  var $i218: i8;
  var $i218.dup: i1;
  var $i219: i32;
  var $i219.dup: i1;
  var $i220: i32;
  var $i220.dup: i1;
  var $i221: i8;
  var $i221.dup: i1;
  var $p222: ref;
  var $p222.dup: i1;
  var $i223: i32;
  var $i223.dup: i1;
  var $i224: i32;
  var $i224.dup: i1;
  var $i225: i32;
  var $i225.dup: i1;
  var $i226: i8;
  var $i226.dup: i1;
  var $p227: ref;
  var $p227.dup: i1;
  var $p228: ref;
  var $p228.dup: i1;
  var $i229: i32;
  var $i229.dup: i1;
  var $i230: i32;
  var $i230.dup: i1;
  var $i231: i32;
  var $i231.dup: i1;
  var $i232: i8;
  var $i232.dup: i1;
  var $p233: ref;
  var $p233.dup: i1;
  var $p234: ref;
  var $p234.dup: i1;
  var $i235: i32;
  var $i235.dup: i1;
  var $i236: i32;
  var $i236.dup: i1;
  var $i237: i32;
  var $i237.dup: i1;
  var $i238: i8;
  var $i238.dup: i1;
  var $p239: ref;
  var $p239.dup: i1;
  var $p240: ref;
  var $p240.dup: i1;
  var $i241: i32;
  var $i241.dup: i1;
  var $i242: i32;
  var $i242.dup: i1;
  var $p243: ref;
  var $p243.dup: i1;
  var $i244: i8;
  var $i244.dup: i1;
  var $i245: i32;
  var $i245.dup: i1;
  var $i246: i32;
  var $i246.dup: i1;
  var $i247: i8;
  var $i247.dup: i1;
  var $p248: ref;
  var $p248.dup: i1;
  var $i249: i32;
  var $i249.dup: i1;
  var $i250: i32;
  var $i250.dup: i1;
  var $i251: i32;
  var $i251.dup: i1;
  var $i252: i8;
  var $i252.dup: i1;
  var $p253: ref;
  var $p253.dup: i1;
  var $p254: ref;
  var $p254.dup: i1;
  var $i255: i32;
  var $i255.dup: i1;
  var $i256: i32;
  var $i256.dup: i1;
  var $i257: i32;
  var $i257.dup: i1;
  var $i258: i8;
  var $i258.dup: i1;
  var $p259: ref;
  var $p259.dup: i1;
  var $p260: ref;
  var $p260.dup: i1;
  var $i261: i32;
  var $i261.dup: i1;
  var $i262: i32;
  var $i262.dup: i1;
  var $i263: i32;
  var $i263.dup: i1;
  var $i264: i8;
  var $i264.dup: i1;
  var $p265: ref;
  var $p265.dup: i1;
  var $p266: ref;
  var $p266.dup: i1;
  var $i267: i32;
  var $i267.dup: i1;
  var $i268: i32;
  var $i268.dup: i1;
  var $p269: ref;
  var $p269.dup: i1;
  var $i270: i8;
  var $i270.dup: i1;
  var $i271: i32;
  var $i271.dup: i1;
  var $i272: i32;
  var $i272.dup: i1;
  var $i273: i8;
  var $i273.dup: i1;
  var $p274: ref;
  var $p274.dup: i1;
  var $i275: i32;
  var $i275.dup: i1;
  var $i276: i32;
  var $i276.dup: i1;
  var $i277: i32;
  var $i277.dup: i1;
  var $i278: i8;
  var $i278.dup: i1;
  var $p279: ref;
  var $p279.dup: i1;
  var $p280: ref;
  var $p280.dup: i1;
  var $i281: i32;
  var $i281.dup: i1;
  var $i282: i32;
  var $i282.dup: i1;
  var $i283: i32;
  var $i283.dup: i1;
  var $i284: i8;
  var $i284.dup: i1;
  var $p285: ref;
  var $p285.dup: i1;
  var $p286: ref;
  var $p286.dup: i1;
  var $i287: i32;
  var $i287.dup: i1;
  var $i288: i32;
  var $i288.dup: i1;
  var $i289: i32;
  var $i289.dup: i1;
  var $i290: i8;
  var $i290.dup: i1;
  var $p291: ref;
  var $p291.dup: i1;
  var $p292: ref;
  var $p292.dup: i1;
  var $i293: i32;
  var $i293.dup: i1;
  var $i294: i32;
  var $i294.dup: i1;
  var $p295: ref;
  var $p295.dup: i1;
  var $i296: i8;
  var $i296.dup: i1;
  var $i297: i32;
  var $i297.dup: i1;
  var $i298: i32;
  var $i298.dup: i1;
  var $i299: i8;
  var $i299.dup: i1;
  var $p300: ref;
  var $p300.dup: i1;
  var $i301: i32;
  var $i301.dup: i1;
  var $i302: i32;
  var $i302.dup: i1;
  var $i303: i32;
  var $i303.dup: i1;
  var $i304: i8;
  var $i304.dup: i1;
  var $p305: ref;
  var $p305.dup: i1;
  var $p306: ref;
  var $p306.dup: i1;
  var $i307: i32;
  var $i307.dup: i1;
  var $i308: i32;
  var $i308.dup: i1;
  var $i309: i32;
  var $i309.dup: i1;
  var $i310: i8;
  var $i310.dup: i1;
  var $p311: ref;
  var $p311.dup: i1;
  var $p312: ref;
  var $p312.dup: i1;
  var $i313: i32;
  var $i313.dup: i1;
  var $i314: i32;
  var $i314.dup: i1;
  var $i315: i32;
  var $i315.dup: i1;
  var $i316: i8;
  var $i316.dup: i1;
  var $p317: ref;
  var $p317.dup: i1;
  var $p318: ref;
  var $p318.dup: i1;
  var $i319: i32;
  var $i319.dup: i1;
  var $i320: i32;
  var $i320.dup: i1;
  var $p321: ref;
  var $p321.dup: i1;
  var $i322: i8;
  var $i322.dup: i1;
  var $i323: i32;
  var $i323.dup: i1;
  var $i324: i32;
  var $i324.dup: i1;
  var $i325: i8;
  var $i325.dup: i1;
  var $p326: ref;
  var $p326.dup: i1;
  var $i327: i32;
  var $i327.dup: i1;
  var $i328: i32;
  var $i328.dup: i1;
  var $i329: i32;
  var $i329.dup: i1;
  var $i330: i8;
  var $i330.dup: i1;
  var $p331: ref;
  var $p331.dup: i1;
  var $p332: ref;
  var $p332.dup: i1;
  var $i333: i32;
  var $i333.dup: i1;
  var $i334: i32;
  var $i334.dup: i1;
  var $i335: i32;
  var $i335.dup: i1;
  var $i336: i8;
  var $i336.dup: i1;
  var $p337: ref;
  var $p337.dup: i1;
  var $p338: ref;
  var $p338.dup: i1;
  var $i339: i32;
  var $i339.dup: i1;
  var $i340: i32;
  var $i340.dup: i1;
  var $i341: i32;
  var $i341.dup: i1;
  var $i342: i8;
  var $i342.dup: i1;
  var $p343: ref;
  var $p343.dup: i1;
  var $p344: ref;
  var $p344.dup: i1;
  var $i345: i32;
  var $i345.dup: i1;
  var $i346: i32;
  var $i346.dup: i1;
  var $p347: ref;
  var $p347.dup: i1;
  var $i348: i8;
  var $i348.dup: i1;
  var $i349: i32;
  var $i349.dup: i1;
  var $i350: i32;
  var $i350.dup: i1;
  var $i351: i8;
  var $i351.dup: i1;
  var $p352: ref;
  var $p352.dup: i1;
  var $i353: i32;
  var $i353.dup: i1;
  var $i354: i32;
  var $i354.dup: i1;
  var $i355: i32;
  var $i355.dup: i1;
  var $i356: i8;
  var $i356.dup: i1;
  var $p357: ref;
  var $p357.dup: i1;
  var $p358: ref;
  var $p358.dup: i1;
  var $i359: i32;
  var $i359.dup: i1;
  var $i360: i32;
  var $i360.dup: i1;
  var $i361: i32;
  var $i361.dup: i1;
  var $i362: i8;
  var $i362.dup: i1;
  var $p363: ref;
  var $p363.dup: i1;
  var $p364: ref;
  var $p364.dup: i1;
  var $i365: i32;
  var $i365.dup: i1;
  var $i366: i32;
  var $i366.dup: i1;
  var $i367: i32;
  var $i367.dup: i1;
  var $i368: i8;
  var $i368.dup: i1;
  var $p369: ref;
  var $p369.dup: i1;
  var $p370: ref;
  var $p370.dup: i1;
  var $i371: i32;
  var $i371.dup: i1;
  var $i372: i32;
  var $i372.dup: i1;
  var $p373: ref;
  var $p373.dup: i1;
  var $i374: i8;
  var $i374.dup: i1;
  var $i375: i32;
  var $i375.dup: i1;
  var $i376: i32;
  var $i376.dup: i1;
  var $i377: i8;
  var $i377.dup: i1;
  var $p378: ref;
  var $p378.dup: i1;
  var $i379: i32;
  var $i379.dup: i1;
  var $i380: i32;
  var $i380.dup: i1;
  var $i381: i32;
  var $i381.dup: i1;
  var $i382: i8;
  var $i382.dup: i1;
  var $p383: ref;
  var $p383.dup: i1;
  var $p384: ref;
  var $p384.dup: i1;
  var $i385: i32;
  var $i385.dup: i1;
  var $i386: i32;
  var $i386.dup: i1;
  var $i387: i32;
  var $i387.dup: i1;
  var $i388: i8;
  var $i388.dup: i1;
  var $p389: ref;
  var $p389.dup: i1;
  var $p390: ref;
  var $p390.dup: i1;
  var $i391: i32;
  var $i391.dup: i1;
  var $i392: i32;
  var $i392.dup: i1;
  var $i393: i32;
  var $i393.dup: i1;
  var $i394: i8;
  var $i394.dup: i1;
  var $p395: ref;
  var $p395.dup: i1;
  var $p396: ref;
  var $p396.dup: i1;
  var $i397: i32;
  var $i397.dup: i1;
  var $i398: i32;
  var $i398.dup: i1;
  var $p399: ref;
  var $p399.dup: i1;
  var $i400: i8;
  var $i400.dup: i1;
  var $i401: i32;
  var $i401.dup: i1;
  var $i402: i32;
  var $i402.dup: i1;
  var $i403: i8;
  var $i403.dup: i1;
  var $p404: ref;
  var $p404.dup: i1;
  var $i405: i32;
  var $i405.dup: i1;
  var $i406: i32;
  var $i406.dup: i1;
  var $i407: i32;
  var $i407.dup: i1;
  var $i408: i8;
  var $i408.dup: i1;
  var $p409: ref;
  var $p409.dup: i1;
  var $p410: ref;
  var $p410.dup: i1;
  var $i411: i32;
  var $i411.dup: i1;
  var $i412: i32;
  var $i412.dup: i1;
  var $i413: i32;
  var $i413.dup: i1;
  var $i414: i8;
  var $i414.dup: i1;
  var $p415: ref;
  var $p415.dup: i1;
  var $p416: ref;
  var $p416.dup: i1;
  var $i417: i32;
  var $i417.dup: i1;
  var $i418: i32;
  var $i418.dup: i1;
  var $i419: i32;
  var $i419.dup: i1;
  var $i420: i8;
  var $i420.dup: i1;
  var $p421: ref;
  var $p421.dup: i1;
  var $p422: ref;
  var $p422.dup: i1;
  var $i423: i32;
  var $i423.dup: i1;
  var $i424: i32;
  var $i424.dup: i1;
  var $p425: ref;
  var $p425.dup: i1;
  var $i426: i8;
  var $i426.dup: i1;
  var $i427: i32;
  var $i427.dup: i1;
  var $i428: i32;
  var $i428.dup: i1;
  var $i429: i8;
  var $i429.dup: i1;
  var $p430: ref;
  var $p430.dup: i1;
  var $i431: i32;
  var $i431.dup: i1;
  var $i432: i32;
  var $i432.dup: i1;
  var $i433: i32;
  var $i433.dup: i1;
  var $i434: i8;
  var $i434.dup: i1;
  var $p435: ref;
  var $p435.dup: i1;
  var $p436: ref;
  var $p436.dup: i1;
  var $i437: i32;
  var $i437.dup: i1;
  var $i438: i32;
  var $i438.dup: i1;
  var $i439: i32;
  var $i439.dup: i1;
  var $i440: i8;
  var $i440.dup: i1;
  var $p441: ref;
  var $p441.dup: i1;
  var $p442: ref;
  var $p442.dup: i1;
  var $i443: i32;
  var $i443.dup: i1;
  var $i444: i32;
  var $i444.dup: i1;
  var $i445: i32;
  var $i445.dup: i1;
  var $i446: i8;
  var $i446.dup: i1;
  var $p447: ref;
  var $p447.dup: i1;
  var $p448: ref;
  var $p448.dup: i1;
  var $i449: i32;
  var $i449.dup: i1;
  var $i450: i32;
  var $i450.dup: i1;
  var $p451: ref;
  var $p451.dup: i1;
  var $i452: i8;
  var $i452.dup: i1;
  var $i453: i32;
  var $i453.dup: i1;
  var $i454: i32;
  var $i454.dup: i1;
  var $i455: i8;
  var $i455.dup: i1;
  var $p456: ref;
  var $p456.dup: i1;
  var $i457: i32;
  var $i457.dup: i1;
  var $i458: i32;
  var $i458.dup: i1;
  var $i459: i32;
  var $i459.dup: i1;
  var $i460: i8;
  var $i460.dup: i1;
  var $p461: ref;
  var $p461.dup: i1;
  var $p462: ref;
  var $p462.dup: i1;
  var $i463: i32;
  var $i463.dup: i1;
  var $i464: i32;
  var $i464.dup: i1;
  var $i465: i32;
  var $i465.dup: i1;
  var $i466: i8;
  var $i466.dup: i1;
  var $p467: ref;
  var $p467.dup: i1;
  var $p468: ref;
  var $p468.dup: i1;
  var $i469: i32;
  var $i469.dup: i1;
  var $i470: i32;
  var $i470.dup: i1;
  var $i471: i32;
  var $i471.dup: i1;
  var $i472: i8;
  var $i472.dup: i1;
  var $p473: ref;
  var $p473.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 479, 8} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40,$zext.i32.i64(1)));
  $p2.dup := 0;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 479, 8} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  $i3.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p2.dup == 0);
  assert {:shadow_invariant} ($i3.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 479, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3,10);
  $i4.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 479, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  $shadow_ok := ($shadow_ok && ($i4.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i4 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i3);
  $i5.dup := $i3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1,$mul.ref($i5,8));
  $p6.dup := $or.i1($p1.dup,$or.i1($i5.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6.dup == 0));
  $i7 := $load.i64($M.3,$p6);
  $i7.dup := $load.i1($M.3.dup,$p6);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  $i8.dup := $i7.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i3);
  $i9.dup := $i3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i9,4));
  $p10.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i9.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 480, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $M.4 := $store.i32($M.4,$p10,$i8);
  $M.4.dup := $store.i1($M.4.dup,$p10,$i8.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 481, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i4 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 483, 8} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  $i12.dup := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 479, 24} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i3,1);
  $i11.dup := $or.i1($i3.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 479, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $i11;
  $i3.dup := $i11.dup;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i12.dup == 0);
  assert {:shadow_invariant} ($p2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 483, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i12,2);
  $i13.dup := $or.i1($i12.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 483, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  $shadow_ok := ($shadow_ok && ($i13.dup == 0));
  goto $bb6, $bb7;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 484, 10} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  $i14.dup := 0;
  goto $bb8;
$bb7:
  assume !($i13 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 527, 22} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p88.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 527, 22} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p88.dup == 0));
  $i89 := $load.i32($M.4,$p88);
  $i89.dup := $load.i1($M.4.dup,$p88);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 527, 31} true;
  assume {:verifier.code 0} true;
  $i90 := $ashr.i32($i89,31);
  $i90.dup := $or.i1($i89.dup,0);
  call {:cexpr "mask"} boogie_si_record_i32($i90);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 528, 26} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p91.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 528, 26} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p91.dup == 0));
  $i92 := $load.i32($M.4,$p91);
  $i92.dup := $load.i1($M.4.dup,$p91);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 528, 35} true;
  assume {:verifier.code 0} true;
  $i93 := $and.i32($i92,$i90);
  $i93.dup := $or.i1($i92.dup,$i90.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 528, 43} true;
  assume {:verifier.code 0} true;
  $i94 := $ashr.i32($i93,26);
  $i94.dup := $or.i1($i93.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 528, 23} true;
  assume {:verifier.code 0} true;
  $i95 := $sub.i32(0,$i94);
  $i95.dup := $or.i1(0,$i94.dup);
  call {:cexpr "carry"} boogie_si_record_i32($i95);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 529, 16} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p96.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 529, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p96.dup == 0));
  $i97 := $load.i32($M.4,$p96);
  $i97.dup := $load.i1($M.4.dup,$p96);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 529, 34} true;
  assume {:verifier.code 0} true;
  $i98 := $shl.i32($i95,26);
  $i98.dup := $or.i1($i95.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 529, 25} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i32($i97,$i98);
  $i99.dup := $or.i1($i97.dup,$i98.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 529, 5} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p100.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 529, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p100.dup == 0));
  $M.4 := $store.i32($M.4,$p100,$i99);
  $M.4.dup := $store.i1($M.4.dup,$p100,$i99.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 530, 16} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p101.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 530, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p101.dup == 0));
  $i102 := $load.i32($M.4,$p101);
  $i102.dup := $load.i1($M.4.dup,$p101);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 530, 25} true;
  assume {:verifier.code 0} true;
  $i103 := $sub.i32($i102,$i95);
  $i103.dup := $or.i1($i102.dup,$i95.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 530, 5} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p104.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 530, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p104.dup == 0));
  $M.4 := $store.i32($M.4,$p104,$i103);
  $M.4.dup := $store.i1($M.4.dup,$p104,$i103.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 535, 8} true;
  assume {:verifier.code 0} true;
  $i105 := 0;
  $i105.dup := 0;
  goto $bb16;
$bb8:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i14.dup == 0);
  assert {:shadow_invariant} ($i12.dup == 0);
  assert {:shadow_invariant} ($p2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 484, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i14,9);
  $i15.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 484, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  $shadow_ok := ($shadow_ok && ($i15.dup == 0));
  goto $bb9, $bb10;
$bb9:
  assume ($i15 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 485, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i14,1);
  $i16.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 485, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16,1);
  $i17.dup := $or.i1($i16.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 485, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  $shadow_ok := ($shadow_ok && ($i17.dup == 0));
  goto $bb11, $bb12;
$bb10:
  assume !($i15 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 503, 24} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p69.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 503, 24} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p69.dup == 0));
  $i70 := $load.i32($M.4,$p69);
  $i70.dup := $load.i1($M.4.dup,$p69);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 503, 33} true;
  assume {:verifier.code 0} true;
  $i71 := $ashr.i32($i70,31);
  $i71.dup := $or.i1($i70.dup,0);
  call {:cexpr "mask"} boogie_si_record_i32($i71);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 504, 28} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p72.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 504, 28} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p72.dup == 0));
  $i73 := $load.i32($M.4,$p72);
  $i73.dup := $load.i1($M.4.dup,$p72);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 504, 37} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73,$i71);
  $i74.dup := $or.i1($i73.dup,$i71.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 504, 45} true;
  assume {:verifier.code 0} true;
  $i75 := $ashr.i32($i74,25);
  $i75.dup := $or.i1($i74.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 504, 25} true;
  assume {:verifier.code 0} true;
  $i76 := $sub.i32(0,$i75);
  $i76.dup := $or.i1(0,$i75.dup);
  call {:cexpr "carry"} boogie_si_record_i32($i76);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 505, 18} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p77.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 505, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p77.dup == 0));
  $i78 := $load.i32($M.4,$p77);
  $i78.dup := $load.i1($M.4.dup,$p77);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 505, 36} true;
  assume {:verifier.code 0} true;
  $i79 := $shl.i32($i76,25);
  $i79.dup := $or.i1($i76.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 505, 27} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i78,$i79);
  $i80.dup := $or.i1($i78.dup,$i79.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 505, 7} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p81.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 505, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p81.dup == 0));
  $M.4 := $store.i32($M.4,$p81,$i80);
  $M.4.dup := $store.i1($M.4.dup,$p81,$i80.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 506, 18} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p82.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 506, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p82.dup == 0));
  $i83 := $load.i32($M.4,$p82);
  $i83.dup := $load.i1($M.4.dup,$p82);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 506, 36} true;
  assume {:verifier.code 0} true;
  $i84 := $mul.i32($i76,19);
  $i84.dup := $or.i1($i76.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 506, 27} true;
  assume {:verifier.code 0} true;
  $i85 := $sub.i32($i83,$i84);
  $i85.dup := $or.i1($i83.dup,$i84.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p86.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 506, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p86.dup == 0));
  $M.4 := $store.i32($M.4,$p86,$i85);
  $M.4.dup := $store.i1($M.4.dup,$p86,$i85.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 512, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb11:
  assume ($i17 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 488, 26} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i14);
  $i18.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 488, 26} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i18,4));
  $p19.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i18.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 488, 26} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p19.dup == 0));
  $i20 := $load.i32($M.4,$p19);
  $i20.dup := $load.i1($M.4.dup,$p19);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 488, 35} true;
  assume {:verifier.code 0} true;
  $i21 := $ashr.i32($i20,31);
  $i21.dup := $or.i1($i20.dup,0);
  call {:cexpr "mask"} boogie_si_record_i32($i21);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 489, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i14);
  $i22.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 489, 30} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i22,4));
  $p23.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i22.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 489, 30} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23.dup == 0));
  $i24 := $load.i32($M.4,$p23);
  $i24.dup := $load.i1($M.4.dup,$p23);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 489, 39} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24,$i21);
  $i25.dup := $or.i1($i24.dup,$i21.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 489, 47} true;
  assume {:verifier.code 0} true;
  $i26 := $ashr.i32($i25,25);
  $i26.dup := $or.i1($i25.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 489, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $sub.i32(0,$i26);
  $i27.dup := $or.i1(0,$i26.dup);
  call {:cexpr "carry"} boogie_si_record_i32($i27);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 20} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i14);
  $i28.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 20} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i28,4));
  $p29.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i28.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29.dup == 0));
  $i30 := $load.i32($M.4,$p29);
  $i30.dup := $load.i1($M.4.dup,$p29);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 38} true;
  assume {:verifier.code 0} true;
  $i31 := $shl.i32($i27,25);
  $i31.dup := $or.i1($i27.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i30,$i31);
  $i32.dup := $or.i1($i30.dup,$i31.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i14);
  $i33.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 9} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i33,4));
  $p34.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i33.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 490, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p34.dup == 0));
  $M.4 := $store.i32($M.4,$p34,$i32);
  $M.4.dup := $store.i1($M.4.dup,$p34,$i32.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i14,1);
  $i35.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 22} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i35);
  $i36.dup := $i35.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 22} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i36,4));
  $p37.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i36.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 22} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p37.dup == 0));
  $i38 := $load.i32($M.4,$p37);
  $i38.dup := $load.i1($M.4.dup,$p37);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $sub.i32($i38,$i27);
  $i39.dup := $or.i1($i38.dup,$i27.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 16} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i14,1);
  $i40.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  $i41.dup := $i40.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 9} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i41,4));
  $p42.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i41.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 491, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p42.dup == 0));
  $M.4 := $store.i32($M.4,$p42,$i39);
  $M.4.dup := $store.i1($M.4.dup,$p42,$i39.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 492, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !($i17 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 493, 26} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i14);
  $i43.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 493, 26} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i43,4));
  $p44.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i43.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 493, 26} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $i45 := $load.i32($M.4,$p44);
  $i45.dup := $load.i1($M.4.dup,$p44);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 493, 35} true;
  assume {:verifier.code 0} true;
  $i46 := $ashr.i32($i45,31);
  $i46.dup := $or.i1($i45.dup,0);
  call {:cexpr "mask"} boogie_si_record_i32($i46);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 494, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i14);
  $i47.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 494, 30} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i47,4));
  $p48.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i47.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 494, 30} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p48.dup == 0));
  $i49 := $load.i32($M.4,$p48);
  $i49.dup := $load.i1($M.4.dup,$p48);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 494, 39} true;
  assume {:verifier.code 0} true;
  $i50 := $and.i32($i49,$i46);
  $i50.dup := $or.i1($i49.dup,$i46.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 494, 47} true;
  assume {:verifier.code 0} true;
  $i51 := $ashr.i32($i50,26);
  $i51.dup := $or.i1($i50.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 494, 27} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32(0,$i51);
  $i52.dup := $or.i1(0,$i51.dup);
  call {:cexpr "carry"} boogie_si_record_i32($i52);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i32.i64($i14);
  $i53.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 20} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i53,4));
  $p54.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i53.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p54.dup == 0));
  $i55 := $load.i32($M.4,$p54);
  $i55.dup := $load.i1($M.4.dup,$p54);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 38} true;
  assume {:verifier.code 0} true;
  $i56 := $shl.i32($i52,26);
  $i56.dup := $or.i1($i52.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 29} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i55,$i56);
  $i57.dup := $or.i1($i55.dup,$i56.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i14);
  $i58.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 9} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i58,4));
  $p59.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i58.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 495, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p59.dup == 0));
  $M.4 := $store.i32($M.4,$p59,$i57);
  $M.4.dup := $store.i1($M.4.dup,$p59,$i57.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 29} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i14,1);
  $i60.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 22} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i32.i64($i60);
  $i61.dup := $i60.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 22} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i61,4));
  $p62.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i61.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 22} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p62.dup == 0));
  $i63 := $load.i32($M.4,$p62);
  $i63.dup := $load.i1($M.4.dup,$p62);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 33} true;
  assume {:verifier.code 0} true;
  $i64 := $sub.i32($i63,$i52);
  $i64.dup := $or.i1($i63.dup,$i52.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 16} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i32($i14,1);
  $i65.dup := $or.i1($i14.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i65);
  $i66.dup := $i65.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 9} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i66,4));
  $p67.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i66.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 496, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p67.dup == 0));
  $M.4 := $store.i32($M.4,$p67,$i64);
  $M.4.dup := $store.i1($M.4.dup,$p67,$i64.dup);
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 498, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 484, 24} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i14,1);
  $i68.dup := $or.i1($i14.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i68);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 484, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i68;
  $i14.dup := $i68.dup;
  goto $bb8;
$bb15:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 483, 22} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i12,1);
  $i87.dup := $or.i1($i12.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i87);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 483, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i87;
  $i12.dup := $i87.dup;
  goto $bb5;
$bb16:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i105.dup == 0);
  assert {:shadow_invariant} ($p2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 535, 17} true;
  assume {:verifier.code 0} true;
  $i106 := $slt.i32($i105,2);
  $i106.dup := $or.i1($i105.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 535, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  $shadow_ok := ($shadow_ok && ($i106.dup == 0));
  goto $bb17, $bb18;
$bb17:
  assume ($i106 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 536, 10} true;
  assume {:verifier.code 0} true;
  $i107 := 0;
  $i107.dup := 0;
  goto $bb19;
$bb18:
  assume !($i106 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 565, 18} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p149.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 565, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p149.dup == 0));
  $i150 := $load.i32($M.4,$p149);
  $i150.dup := $load.i1($M.4.dup,$p149);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 565, 10} true;
  assume {:verifier.code 0} true;
  call $i151, $i151.dup := s32_gte($i150, $i150.dup, 67108845, 0);
  call {:cexpr "mask"} boogie_si_record_i32($i151);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 566, 8} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  $i152.dup := 0;
  $i153 := $i151;
  $i153.dup := $i151.dup;
  goto $bb27;
$bb19:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i107.dup == 0);
  assert {:shadow_invariant} ($i105.dup == 0);
  assert {:shadow_invariant} ($p2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 536, 19} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i107,9);
  $i108.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 536, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  $shadow_ok := ($shadow_ok && ($i108.dup == 0));
  goto $bb20, $bb21;
$bb20:
  assume ($i108 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 537, 14} true;
  assume {:verifier.code 0} true;
  $i109 := $and.i32($i107,1);
  $i109.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 537, 19} true;
  assume {:verifier.code 0} true;
  $i110 := $eq.i32($i109,1);
  $i110.dup := $or.i1($i109.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 537, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  $shadow_ok := ($shadow_ok && ($i110.dup == 0));
  goto $bb22, $bb23;
$bb21:
  assume !($i108 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 549, 25} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p138.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 549, 25} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p138.dup == 0));
  $i139 := $load.i32($M.4,$p138);
  $i139.dup := $load.i1($M.4.dup,$p138);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 549, 34} true;
  assume {:verifier.code 0} true;
  $i140 := $ashr.i32($i139,25);
  $i140.dup := $or.i1($i139.dup,0);
  call {:cexpr "carry"} boogie_si_record_i32($i140);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p141.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 550, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p141.dup == 0));
  $i142 := $load.i32($M.4,$p141);
  $i142.dup := $load.i1($M.4.dup,$p141);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 550, 16} true;
  assume {:verifier.code 0} true;
  $i143 := $and.i32($i142,33554431);
  $i143.dup := $or.i1($i142.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 550, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p141.dup == 0));
  $M.4 := $store.i32($M.4,$p141,$i143);
  $M.4.dup := $store.i1($M.4.dup,$p141,$i143.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 551, 21} true;
  assume {:verifier.code 0} true;
  $i144 := $mul.i32(19,$i140);
  $i144.dup := $or.i1(0,$i140.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 551, 7} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p145.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 551, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p145.dup == 0));
  $i146 := $load.i32($M.4,$p145);
  $i146.dup := $load.i1($M.4.dup,$p145);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 551, 16} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146,$i144);
  $i147.dup := $or.i1($i146.dup,$i144.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 551, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p145.dup == 0));
  $M.4 := $store.i32($M.4,$p145,$i147);
  $M.4.dup := $store.i1($M.4.dup,$p145,$i147.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 553, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb22:
  assume ($i110 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 538, 27} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i32.i64($i107);
  $i111.dup := $i107.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 538, 27} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i111,4));
  $p112.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i111.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 538, 27} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p112.dup == 0));
  $i113 := $load.i32($M.4,$p112);
  $i113.dup := $load.i1($M.4.dup,$p112);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 538, 36} true;
  assume {:verifier.code 0} true;
  $i114 := $ashr.i32($i113,25);
  $i114.dup := $or.i1($i113.dup,0);
  call {:cexpr "carry"} boogie_si_record_i32($i114);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 539, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i107);
  $i115.dup := $i107.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 539, 9} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i115,4));
  $p116.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i115.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 539, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p116.dup == 0));
  $i117 := $load.i32($M.4,$p116);
  $i117.dup := $load.i1($M.4.dup,$p116);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 539, 18} true;
  assume {:verifier.code 0} true;
  $i118 := $and.i32($i117,33554431);
  $i118.dup := $or.i1($i117.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 539, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p116.dup == 0));
  $M.4 := $store.i32($M.4,$p116,$i118);
  $M.4.dup := $store.i1($M.4.dup,$p116,$i118.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 540, 16} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i32($i107,1);
  $i119.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 540, 9} true;
  assume {:verifier.code 0} true;
  $i120 := $sext.i32.i64($i119);
  $i120.dup := $i119.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 540, 9} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i120,4));
  $p121.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i120.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 540, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p121.dup == 0));
  $i122 := $load.i32($M.4,$p121);
  $i122.dup := $load.i1($M.4.dup,$p121);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 540, 20} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i32($i122,$i114);
  $i123.dup := $or.i1($i122.dup,$i114.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 540, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p121.dup == 0));
  $M.4 := $store.i32($M.4,$p121,$i123);
  $M.4.dup := $store.i1($M.4.dup,$p121,$i123.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 541, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !($i110 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 542, 27} true;
  assume {:verifier.code 0} true;
  $i124 := $sext.i32.i64($i107);
  $i124.dup := $i107.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 542, 27} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i124,4));
  $p125.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i124.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 542, 27} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p125.dup == 0));
  $i126 := $load.i32($M.4,$p125);
  $i126.dup := $load.i1($M.4.dup,$p125);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 542, 36} true;
  assume {:verifier.code 0} true;
  $i127 := $ashr.i32($i126,26);
  $i127.dup := $or.i1($i126.dup,0);
  call {:cexpr "carry"} boogie_si_record_i32($i127);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 543, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $sext.i32.i64($i107);
  $i128.dup := $i107.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 543, 9} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i128,4));
  $p129.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i128.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 543, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p129.dup == 0));
  $i130 := $load.i32($M.4,$p129);
  $i130.dup := $load.i1($M.4.dup,$p129);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 543, 18} true;
  assume {:verifier.code 0} true;
  $i131 := $and.i32($i130,67108863);
  $i131.dup := $or.i1($i130.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 543, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p129.dup == 0));
  $M.4 := $store.i32($M.4,$p129,$i131);
  $M.4.dup := $store.i1($M.4.dup,$p129,$i131.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 544, 16} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i107,1);
  $i132.dup := $or.i1($i107.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 544, 9} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i132);
  $i133.dup := $i132.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 544, 9} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i133,4));
  $p134.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i133.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 544, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p134.dup == 0));
  $i135 := $load.i32($M.4,$p134);
  $i135.dup := $load.i1($M.4.dup,$p134);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 544, 20} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i32($i135,$i127);
  $i136.dup := $or.i1($i135.dup,$i127.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 544, 20} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p134.dup == 0));
  $M.4 := $store.i32($M.4,$p134,$i136);
  $M.4.dup := $store.i1($M.4.dup,$p134,$i136.dup);
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 546, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 536, 25} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i107,1);
  $i137.dup := $or.i1($i107.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i137);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 536, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i137;
  $i107.dup := $i137.dup;
  goto $bb19;
$bb26:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 535, 23} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i105,1);
  $i148.dup := $or.i1($i105.dup,0);
  call {:cexpr "j"} boogie_si_record_i32($i148);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 535, 3} true;
  assume {:verifier.code 0} true;
  $i105 := $i148;
  $i105.dup := $i148.dup;
  goto $bb16;
$bb27:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i152.dup == 0);
  assert {:shadow_invariant} ($p2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 566, 17} true;
  assume {:verifier.code 0} true;
  $i154 := $slt.i32($i152,10);
  $i154.dup := $or.i1($i152.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 566, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  $shadow_ok := ($shadow_ok && ($i154.dup == 0));
  goto $bb28, $bb29;
$bb28:
  assume ($i154 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 567, 12} true;
  assume {:verifier.code 0} true;
  $i155 := $and.i32($i152,1);
  $i155.dup := $or.i1($i152.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 567, 17} true;
  assume {:verifier.code 0} true;
  $i156 := $eq.i32($i155,1);
  $i156.dup := $or.i1($i155.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 567, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i156} true;
  $shadow_ok := ($shadow_ok && ($i156.dup == 0));
  goto $bb30, $bb31;
$bb29:
  assume !($i154 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 576, 20} true;
  assume {:verifier.code 0} true;
  $i169 := $and.i32($i153,67108845);
  $i169.dup := $or.i1($i153.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 576, 3} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p170.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 576, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p170.dup == 0));
  $i171 := $load.i32($M.4,$p170);
  $i171.dup := $load.i1($M.4.dup,$p170);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 576, 12} true;
  assume {:verifier.code 0} true;
  $i172 := $sub.i32($i171,$i169);
  $i172.dup := $or.i1($i171.dup,$i169.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 576, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p170.dup == 0));
  $M.4 := $store.i32($M.4,$p170,$i172);
  $M.4.dup := $store.i1($M.4.dup,$p170,$i172.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 578, 8} true;
  assume {:verifier.code 0} true;
  $i173 := 1;
  $i173.dup := 0;
  goto $bb34;
$bb30:
  assume ($i156 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 568, 22} true;
  assume {:verifier.code 0} true;
  $i157 := $sext.i32.i64($i152);
  $i157.dup := $i152.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 568, 22} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i157,4));
  $p158.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i157.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 568, 22} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p158.dup == 0));
  $i159 := $load.i32($M.4,$p158);
  $i159.dup := $load.i1($M.4.dup,$p158);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 568, 15} true;
  assume {:verifier.code 0} true;
  call $i160, $i160.dup := s32_eq($i159, $i159.dup, 33554431, 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 568, 12} true;
  assume {:verifier.code 0} true;
  $i161 := $and.i32($i153,$i160);
  $i161.dup := $or.i1($i153.dup,$i160.dup);
  call {:cexpr "mask"} boogie_si_record_i32($i161);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 569, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $i161;
  $i162.dup := $i161.dup;
  goto $bb32;
$bb31:
  assume !($i156 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 570, 22} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i152);
  $i163.dup := $i152.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 570, 22} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i163,4));
  $p164.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i163.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 570, 22} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p164.dup == 0));
  $i165 := $load.i32($M.4,$p164);
  $i165.dup := $load.i1($M.4.dup,$p164);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 570, 15} true;
  assume {:verifier.code 0} true;
  call $i166, $i166.dup := s32_eq($i165, $i165.dup, 67108863, 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 570, 12} true;
  assume {:verifier.code 0} true;
  $i167 := $and.i32($i153,$i166);
  $i167.dup := $or.i1($i153.dup,$i166.dup);
  call {:cexpr "mask"} boogie_si_record_i32($i167);
  assume {:verifier.code 0} true;
  $i162 := $i167;
  $i162.dup := $i167.dup;
  goto $bb32;
$bb32:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 572, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 566, 24} true;
  assume {:verifier.code 0} true;
  $i168 := $add.i32($i152,1);
  $i168.dup := $or.i1($i152.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i168);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 566, 3} true;
  assume {:verifier.code 0} true;
  $i152 := $i168;
  $i152.dup := $i168.dup;
  $i153 := $i162;
  $i153.dup := $i162.dup;
  goto $bb27;
$bb34:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i173.dup == 0);
  assert {:shadow_invariant} ($p2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 578, 17} true;
  assume {:verifier.code 0} true;
  $i174 := $slt.i32($i173,10);
  $i174.dup := $or.i1($i173.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 578, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  $shadow_ok := ($shadow_ok && ($i174.dup == 0));
  goto $bb35, $bb36;
$bb35:
  assume ($i174 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 579, 12} true;
  assume {:verifier.code 0} true;
  $i175 := $and.i32($i173,1);
  $i175.dup := $or.i1($i173.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 579, 17} true;
  assume {:verifier.code 0} true;
  $i176 := $eq.i32($i175,1);
  $i176.dup := $or.i1($i175.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i176} true;
  $shadow_ok := ($shadow_ok && ($i176.dup == 0));
  goto $bb37, $bb38;
$bb36:
  assume !($i174 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 586, 3} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p188.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 586, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p188.dup == 0));
  $i189 := $load.i32($M.4,$p188);
  $i189.dup := $load.i1($M.4.dup,$p188);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 586, 12} true;
  assume {:verifier.code 0} true;
  $i190 := $shl.i32($i189,2);
  $i190.dup := $or.i1($i189.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 586, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p188.dup == 0));
  $M.4 := $store.i32($M.4,$p188,$i190);
  $M.4.dup := $store.i1($M.4.dup,$p188,$i190.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 587, 3} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(2,4));
  $p191.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 587, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p191.dup == 0));
  $i192 := $load.i32($M.4,$p191);
  $i192.dup := $load.i1($M.4.dup,$p191);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 587, 12} true;
  assume {:verifier.code 0} true;
  $i193 := $shl.i32($i192,3);
  $i193.dup := $or.i1($i192.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 587, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p191.dup == 0));
  $M.4 := $store.i32($M.4,$p191,$i193);
  $M.4.dup := $store.i1($M.4.dup,$p191,$i193.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 588, 3} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(3,4));
  $p194.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 588, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p194.dup == 0));
  $i195 := $load.i32($M.4,$p194);
  $i195.dup := $load.i1($M.4.dup,$p194);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 588, 12} true;
  assume {:verifier.code 0} true;
  $i196 := $shl.i32($i195,5);
  $i196.dup := $or.i1($i195.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 588, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p194.dup == 0));
  $M.4 := $store.i32($M.4,$p194,$i196);
  $M.4.dup := $store.i1($M.4.dup,$p194,$i196.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 589, 3} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(4,4));
  $p197.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 589, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p197.dup == 0));
  $i198 := $load.i32($M.4,$p197);
  $i198.dup := $load.i1($M.4.dup,$p197);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 589, 12} true;
  assume {:verifier.code 0} true;
  $i199 := $shl.i32($i198,6);
  $i199.dup := $or.i1($i198.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 589, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p197.dup == 0));
  $M.4 := $store.i32($M.4,$p197,$i199);
  $M.4.dup := $store.i1($M.4.dup,$p197,$i199.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 590, 3} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(6,4));
  $p200.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 590, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p200.dup == 0));
  $i201 := $load.i32($M.4,$p200);
  $i201.dup := $load.i1($M.4.dup,$p200);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 590, 12} true;
  assume {:verifier.code 0} true;
  $i202 := $shl.i32($i201,1);
  $i202.dup := $or.i1($i201.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 590, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p200.dup == 0));
  $M.4 := $store.i32($M.4,$p200,$i202);
  $M.4.dup := $store.i1($M.4.dup,$p200,$i202.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 591, 3} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(7,4));
  $p203.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 591, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p203.dup == 0));
  $i204 := $load.i32($M.4,$p203);
  $i204.dup := $load.i1($M.4.dup,$p203);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 591, 12} true;
  assume {:verifier.code 0} true;
  $i205 := $shl.i32($i204,3);
  $i205.dup := $or.i1($i204.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 591, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p203.dup == 0));
  $M.4 := $store.i32($M.4,$p203,$i205);
  $M.4.dup := $store.i1($M.4.dup,$p203,$i205.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 592, 3} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(8,4));
  $p206.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 592, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p206.dup == 0));
  $i207 := $load.i32($M.4,$p206);
  $i207.dup := $load.i1($M.4.dup,$p206);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 592, 12} true;
  assume {:verifier.code 0} true;
  $i208 := $shl.i32($i207,4);
  $i208.dup := $or.i1($i207.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 592, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p206.dup == 0));
  $M.4 := $store.i32($M.4,$p206,$i208);
  $M.4.dup := $store.i1($M.4.dup,$p206,$i208.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 593, 3} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p209.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 593, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p209.dup == 0));
  $i210 := $load.i32($M.4,$p209);
  $i210.dup := $load.i1($M.4.dup,$p209);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 593, 12} true;
  assume {:verifier.code 0} true;
  $i211 := $shl.i32($i210,6);
  $i211.dup := $or.i1($i210.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 593, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p209.dup == 0));
  $M.4 := $store.i32($M.4,$p209,$i211);
  $M.4.dup := $store.i1($M.4.dup,$p209,$i211.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 599, 3} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p0,$mul.ref(0,1));
  $p212.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 599, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p212.dup == 0));
  $M.5 := $store.i8($M.5,$p212,0);
  $M.5.dup := $store.i1($M.5.dup,$p212,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 600, 3} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p0,$mul.ref(16,1));
  $p213.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 600, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p213.dup == 0));
  $M.6 := $store.i8($M.6,$p213,0);
  $M.6.dup := $store.i1($M.6.dup,$p213,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p214.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p214.dup == 0));
  $i215 := $load.i32($M.4,$p214);
  $i215.dup := $load.i1($M.4.dup,$p214);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i216 := $and.i32($i215,255);
  $i216.dup := $or.i1($i215.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p0,$mul.ref(0,1));
  $p217.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p217.dup == 0));
  $i218 := $load.i8($M.5,$p217);
  $i218.dup := $load.i1($M.5.dup,$p217);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i219 := $zext.i8.i32($i218);
  $i219.dup := $i218.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i220 := $or.i32($i219,$i216);
  $i220.dup := $or.i1($i219.dup,$i216.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i32.i8($i220);
  $i221.dup := $i220.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p217.dup == 0));
  $M.5 := $store.i8($M.5,$p217,$i221);
  $M.5.dup := $store.i1($M.5.dup,$p217,$i221.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p222.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p222.dup == 0));
  $i223 := $load.i32($M.4,$p222);
  $i223.dup := $load.i1($M.4.dup,$p222);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i224 := $ashr.i32($i223,8);
  $i224.dup := $or.i1($i223.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i225 := $and.i32($i224,255);
  $i225.dup := $or.i1($i224.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i32.i8($i225);
  $i226.dup := $i225.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($p0,$mul.ref(1,1));
  $p227.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p227.dup == 0));
  $M.7 := $store.i8($M.7,$p227,$i226);
  $M.7.dup := $store.i1($M.7.dup,$p227,$i226.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p228.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p228.dup == 0));
  $i229 := $load.i32($M.4,$p228);
  $i229.dup := $load.i1($M.4.dup,$p228);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i230 := $ashr.i32($i229,16);
  $i230.dup := $or.i1($i229.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i231 := $and.i32($i230,255);
  $i231.dup := $or.i1($i230.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i232 := $trunc.i32.i8($i231);
  $i232.dup := $i231.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p0,$mul.ref(2,1));
  $p233.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p233.dup == 0));
  $M.8 := $store.i8($M.8,$p233,$i232);
  $M.8.dup := $store.i1($M.8.dup,$p233,$i232.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(0,4));
  $p234.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p234.dup == 0));
  $i235 := $load.i32($M.4,$p234);
  $i235.dup := $load.i1($M.4.dup,$p234);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i236 := $ashr.i32($i235,24);
  $i236.dup := $or.i1($i235.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i237 := $and.i32($i236,255);
  $i237.dup := $or.i1($i236.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $i238 := $trunc.i32.i8($i237);
  $i238.dup := $i237.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p0,$mul.ref(3,1));
  $p239.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 601, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p239.dup == 0));
  $M.9 := $store.i8($M.9,$p239,$i238);
  $M.9.dup := $store.i1($M.9.dup,$p239,$i238.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p240.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p240.dup == 0));
  $i241 := $load.i32($M.4,$p240);
  $i241.dup := $load.i1($M.4.dup,$p240);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i242 := $and.i32($i241,255);
  $i242.dup := $or.i1($i241.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p0,$mul.ref(3,1));
  $p243.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p243.dup == 0));
  $i244 := $load.i8($M.9,$p243);
  $i244.dup := $load.i1($M.9.dup,$p243);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i245 := $zext.i8.i32($i244);
  $i245.dup := $i244.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i246 := $or.i32($i245,$i242);
  $i246.dup := $or.i1($i245.dup,$i242.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i247 := $trunc.i32.i8($i246);
  $i247.dup := $i246.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p243.dup == 0));
  $M.9 := $store.i8($M.9,$p243,$i247);
  $M.9.dup := $store.i1($M.9.dup,$p243,$i247.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p248.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p248.dup == 0));
  $i249 := $load.i32($M.4,$p248);
  $i249.dup := $load.i1($M.4.dup,$p248);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i250 := $ashr.i32($i249,8);
  $i250.dup := $or.i1($i249.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i251 := $and.i32($i250,255);
  $i251.dup := $or.i1($i250.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i252 := $trunc.i32.i8($i251);
  $i252.dup := $i251.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p0,$mul.ref(4,1));
  $p253.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p253.dup == 0));
  $M.10 := $store.i8($M.10,$p253,$i252);
  $M.10.dup := $store.i1($M.10.dup,$p253,$i252.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p254.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p254.dup == 0));
  $i255 := $load.i32($M.4,$p254);
  $i255.dup := $load.i1($M.4.dup,$p254);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i256 := $ashr.i32($i255,16);
  $i256.dup := $or.i1($i255.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i257 := $and.i32($i256,255);
  $i257.dup := $or.i1($i256.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i258 := $trunc.i32.i8($i257);
  $i258.dup := $i257.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p0,$mul.ref(5,1));
  $p259.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p259.dup == 0));
  $M.11 := $store.i8($M.11,$p259,$i258);
  $M.11.dup := $store.i1($M.11.dup,$p259,$i258.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(1,4));
  $p260.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p260.dup == 0));
  $i261 := $load.i32($M.4,$p260);
  $i261.dup := $load.i1($M.4.dup,$p260);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i262 := $ashr.i32($i261,24);
  $i262.dup := $or.i1($i261.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i263 := $and.i32($i262,255);
  $i263.dup := $or.i1($i262.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $i264 := $trunc.i32.i8($i263);
  $i264.dup := $i263.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p0,$mul.ref(6,1));
  $p265.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 602, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p265.dup == 0));
  $M.12 := $store.i8($M.12,$p265,$i264);
  $M.12.dup := $store.i1($M.12.dup,$p265,$i264.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(2,4));
  $p266.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p266.dup == 0));
  $i267 := $load.i32($M.4,$p266);
  $i267.dup := $load.i1($M.4.dup,$p266);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i268 := $and.i32($i267,255);
  $i268.dup := $or.i1($i267.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p0,$mul.ref(6,1));
  $p269.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p269.dup == 0));
  $i270 := $load.i8($M.12,$p269);
  $i270.dup := $load.i1($M.12.dup,$p269);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i271 := $zext.i8.i32($i270);
  $i271.dup := $i270.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i272 := $or.i32($i271,$i268);
  $i272.dup := $or.i1($i271.dup,$i268.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i273 := $trunc.i32.i8($i272);
  $i273.dup := $i272.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p269.dup == 0));
  $M.12 := $store.i8($M.12,$p269,$i273);
  $M.12.dup := $store.i1($M.12.dup,$p269,$i273.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(2,4));
  $p274.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p274.dup == 0));
  $i275 := $load.i32($M.4,$p274);
  $i275.dup := $load.i1($M.4.dup,$p274);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i276 := $ashr.i32($i275,8);
  $i276.dup := $or.i1($i275.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i277 := $and.i32($i276,255);
  $i277.dup := $or.i1($i276.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i278 := $trunc.i32.i8($i277);
  $i278.dup := $i277.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p0,$mul.ref(7,1));
  $p279.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p279.dup == 0));
  $M.13 := $store.i8($M.13,$p279,$i278);
  $M.13.dup := $store.i1($M.13.dup,$p279,$i278.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(2,4));
  $p280.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p280.dup == 0));
  $i281 := $load.i32($M.4,$p280);
  $i281.dup := $load.i1($M.4.dup,$p280);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i282 := $ashr.i32($i281,16);
  $i282.dup := $or.i1($i281.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i283 := $and.i32($i282,255);
  $i283.dup := $or.i1($i282.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i32.i8($i283);
  $i284.dup := $i283.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p285 := $add.ref($p0,$mul.ref(8,1));
  $p285.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p285.dup == 0));
  $M.14 := $store.i8($M.14,$p285,$i284);
  $M.14.dup := $store.i1($M.14.dup,$p285,$i284.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(2,4));
  $p286.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p286.dup == 0));
  $i287 := $load.i32($M.4,$p286);
  $i287.dup := $load.i1($M.4.dup,$p286);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i288 := $ashr.i32($i287,24);
  $i288.dup := $or.i1($i287.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i289 := $and.i32($i288,255);
  $i289.dup := $or.i1($i288.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $i290 := $trunc.i32.i8($i289);
  $i290.dup := $i289.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p0,$mul.ref(9,1));
  $p291.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 603, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p291.dup == 0));
  $M.15 := $store.i8($M.15,$p291,$i290);
  $M.15.dup := $store.i1($M.15.dup,$p291,$i290.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(3,4));
  $p292.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p292.dup == 0));
  $i293 := $load.i32($M.4,$p292);
  $i293.dup := $load.i1($M.4.dup,$p292);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i294 := $and.i32($i293,255);
  $i294.dup := $or.i1($i293.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p0,$mul.ref(9,1));
  $p295.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p295.dup == 0));
  $i296 := $load.i8($M.15,$p295);
  $i296.dup := $load.i1($M.15.dup,$p295);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i297 := $zext.i8.i32($i296);
  $i297.dup := $i296.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i298 := $or.i32($i297,$i294);
  $i298.dup := $or.i1($i297.dup,$i294.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i299 := $trunc.i32.i8($i298);
  $i299.dup := $i298.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p295.dup == 0));
  $M.15 := $store.i8($M.15,$p295,$i299);
  $M.15.dup := $store.i1($M.15.dup,$p295,$i299.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p300 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(3,4));
  $p300.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p300.dup == 0));
  $i301 := $load.i32($M.4,$p300);
  $i301.dup := $load.i1($M.4.dup,$p300);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i302 := $ashr.i32($i301,8);
  $i302.dup := $or.i1($i301.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i303 := $and.i32($i302,255);
  $i303.dup := $or.i1($i302.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i304 := $trunc.i32.i8($i303);
  $i304.dup := $i303.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p0,$mul.ref(10,1));
  $p305.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p305.dup == 0));
  $M.16 := $store.i8($M.16,$p305,$i304);
  $M.16.dup := $store.i1($M.16.dup,$p305,$i304.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p306 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(3,4));
  $p306.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p306.dup == 0));
  $i307 := $load.i32($M.4,$p306);
  $i307.dup := $load.i1($M.4.dup,$p306);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i308 := $ashr.i32($i307,16);
  $i308.dup := $or.i1($i307.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i309 := $and.i32($i308,255);
  $i309.dup := $or.i1($i308.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i310 := $trunc.i32.i8($i309);
  $i310.dup := $i309.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p311 := $add.ref($p0,$mul.ref(11,1));
  $p311.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p311.dup == 0));
  $M.17 := $store.i8($M.17,$p311,$i310);
  $M.17.dup := $store.i1($M.17.dup,$p311,$i310.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(3,4));
  $p312.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p312.dup == 0));
  $i313 := $load.i32($M.4,$p312);
  $i313.dup := $load.i1($M.4.dup,$p312);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i314 := $ashr.i32($i313,24);
  $i314.dup := $or.i1($i313.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i315 := $and.i32($i314,255);
  $i315.dup := $or.i1($i314.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i8($i315);
  $i316.dup := $i315.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $p317 := $add.ref($p0,$mul.ref(12,1));
  $p317.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p317.dup == 0));
  $M.18 := $store.i8($M.18,$p317,$i316);
  $M.18.dup := $store.i1($M.18.dup,$p317,$i316.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(4,4));
  $p318.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p318.dup == 0));
  $i319 := $load.i32($M.4,$p318);
  $i319.dup := $load.i1($M.4.dup,$p318);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i320 := $and.i32($i319,255);
  $i320.dup := $or.i1($i319.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p321 := $add.ref($p0,$mul.ref(12,1));
  $p321.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p321.dup == 0));
  $i322 := $load.i8($M.18,$p321);
  $i322.dup := $load.i1($M.18.dup,$p321);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i323 := $zext.i8.i32($i322);
  $i323.dup := $i322.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i324 := $or.i32($i323,$i320);
  $i324.dup := $or.i1($i323.dup,$i320.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i325 := $trunc.i32.i8($i324);
  $i325.dup := $i324.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p321.dup == 0));
  $M.18 := $store.i8($M.18,$p321,$i325);
  $M.18.dup := $store.i1($M.18.dup,$p321,$i325.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(4,4));
  $p326.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p326.dup == 0));
  $i327 := $load.i32($M.4,$p326);
  $i327.dup := $load.i1($M.4.dup,$p326);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i328 := $ashr.i32($i327,8);
  $i328.dup := $or.i1($i327.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i329 := $and.i32($i328,255);
  $i329.dup := $or.i1($i328.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i330 := $trunc.i32.i8($i329);
  $i330.dup := $i329.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p331 := $add.ref($p0,$mul.ref(13,1));
  $p331.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p331.dup == 0));
  $M.19 := $store.i8($M.19,$p331,$i330);
  $M.19.dup := $store.i1($M.19.dup,$p331,$i330.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(4,4));
  $p332.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p332.dup == 0));
  $i333 := $load.i32($M.4,$p332);
  $i333.dup := $load.i1($M.4.dup,$p332);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i334 := $ashr.i32($i333,16);
  $i334.dup := $or.i1($i333.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i335 := $and.i32($i334,255);
  $i335.dup := $or.i1($i334.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i336 := $trunc.i32.i8($i335);
  $i336.dup := $i335.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p337 := $add.ref($p0,$mul.ref(14,1));
  $p337.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p337.dup == 0));
  $M.20 := $store.i8($M.20,$p337,$i336);
  $M.20.dup := $store.i1($M.20.dup,$p337,$i336.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p338 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(4,4));
  $p338.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p338.dup == 0));
  $i339 := $load.i32($M.4,$p338);
  $i339.dup := $load.i1($M.4.dup,$p338);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i340 := $ashr.i32($i339,24);
  $i340.dup := $or.i1($i339.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i341 := $and.i32($i340,255);
  $i341.dup := $or.i1($i340.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i8($i341);
  $i342.dup := $i341.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($p0,$mul.ref(15,1));
  $p343.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 605, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p343.dup == 0));
  $M.21 := $store.i8($M.21,$p343,$i342);
  $M.21.dup := $store.i1($M.21.dup,$p343,$i342.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p344 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(5,4));
  $p344.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p344.dup == 0));
  $i345 := $load.i32($M.4,$p344);
  $i345.dup := $load.i1($M.4.dup,$p344);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i346 := $and.i32($i345,255);
  $i346.dup := $or.i1($i345.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p0,$mul.ref(16,1));
  $p347.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p347.dup == 0));
  $i348 := $load.i8($M.6,$p347);
  $i348.dup := $load.i1($M.6.dup,$p347);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i349 := $zext.i8.i32($i348);
  $i349.dup := $i348.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i350 := $or.i32($i349,$i346);
  $i350.dup := $or.i1($i349.dup,$i346.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i351 := $trunc.i32.i8($i350);
  $i351.dup := $i350.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p347.dup == 0));
  $M.6 := $store.i8($M.6,$p347,$i351);
  $M.6.dup := $store.i1($M.6.dup,$p347,$i351.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(5,4));
  $p352.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p352.dup == 0));
  $i353 := $load.i32($M.4,$p352);
  $i353.dup := $load.i1($M.4.dup,$p352);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i354 := $ashr.i32($i353,8);
  $i354.dup := $or.i1($i353.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i355 := $and.i32($i354,255);
  $i355.dup := $or.i1($i354.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i356 := $trunc.i32.i8($i355);
  $i356.dup := $i355.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p357 := $add.ref($p0,$mul.ref(17,1));
  $p357.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p357.dup == 0));
  $M.22 := $store.i8($M.22,$p357,$i356);
  $M.22.dup := $store.i1($M.22.dup,$p357,$i356.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(5,4));
  $p358.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p358.dup == 0));
  $i359 := $load.i32($M.4,$p358);
  $i359.dup := $load.i1($M.4.dup,$p358);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i360 := $ashr.i32($i359,16);
  $i360.dup := $or.i1($i359.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i361 := $and.i32($i360,255);
  $i361.dup := $or.i1($i360.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i362 := $trunc.i32.i8($i361);
  $i362.dup := $i361.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p363 := $add.ref($p0,$mul.ref(18,1));
  $p363.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p363.dup == 0));
  $M.23 := $store.i8($M.23,$p363,$i362);
  $M.23.dup := $store.i1($M.23.dup,$p363,$i362.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(5,4));
  $p364.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p364.dup == 0));
  $i365 := $load.i32($M.4,$p364);
  $i365.dup := $load.i1($M.4.dup,$p364);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i366 := $ashr.i32($i365,24);
  $i366.dup := $or.i1($i365.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i367 := $and.i32($i366,255);
  $i367.dup := $or.i1($i366.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i368 := $trunc.i32.i8($i367);
  $i368.dup := $i367.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p369 := $add.ref($p0,$mul.ref(19,1));
  $p369.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p369.dup == 0));
  $M.24 := $store.i8($M.24,$p369,$i368);
  $M.24.dup := $store.i1($M.24.dup,$p369,$i368.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(6,4));
  $p370.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p370.dup == 0));
  $i371 := $load.i32($M.4,$p370);
  $i371.dup := $load.i1($M.4.dup,$p370);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i372 := $and.i32($i371,255);
  $i372.dup := $or.i1($i371.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($p0,$mul.ref(19,1));
  $p373.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p373.dup == 0));
  $i374 := $load.i8($M.24,$p373);
  $i374.dup := $load.i1($M.24.dup,$p373);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i375 := $zext.i8.i32($i374);
  $i375.dup := $i374.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i376 := $or.i32($i375,$i372);
  $i376.dup := $or.i1($i375.dup,$i372.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i377 := $trunc.i32.i8($i376);
  $i377.dup := $i376.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p373.dup == 0));
  $M.24 := $store.i8($M.24,$p373,$i377);
  $M.24.dup := $store.i1($M.24.dup,$p373,$i377.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p378 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(6,4));
  $p378.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p378.dup == 0));
  $i379 := $load.i32($M.4,$p378);
  $i379.dup := $load.i1($M.4.dup,$p378);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i380 := $ashr.i32($i379,8);
  $i380.dup := $or.i1($i379.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i381 := $and.i32($i380,255);
  $i381.dup := $or.i1($i380.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i382 := $trunc.i32.i8($i381);
  $i382.dup := $i381.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p383 := $add.ref($p0,$mul.ref(20,1));
  $p383.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p383.dup == 0));
  $M.25 := $store.i8($M.25,$p383,$i382);
  $M.25.dup := $store.i1($M.25.dup,$p383,$i382.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p384 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(6,4));
  $p384.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p384.dup == 0));
  $i385 := $load.i32($M.4,$p384);
  $i385.dup := $load.i1($M.4.dup,$p384);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i386 := $ashr.i32($i385,16);
  $i386.dup := $or.i1($i385.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i387 := $and.i32($i386,255);
  $i387.dup := $or.i1($i386.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i388 := $trunc.i32.i8($i387);
  $i388.dup := $i387.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p389 := $add.ref($p0,$mul.ref(21,1));
  $p389.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p389.dup == 0));
  $M.26 := $store.i8($M.26,$p389,$i388);
  $M.26.dup := $store.i1($M.26.dup,$p389,$i388.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p390 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(6,4));
  $p390.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p390.dup == 0));
  $i391 := $load.i32($M.4,$p390);
  $i391.dup := $load.i1($M.4.dup,$p390);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i392 := $ashr.i32($i391,24);
  $i392.dup := $or.i1($i391.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i393 := $and.i32($i392,255);
  $i393.dup := $or.i1($i392.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $i394 := $trunc.i32.i8($i393);
  $i394.dup := $i393.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $p395 := $add.ref($p0,$mul.ref(22,1));
  $p395.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 607, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p395.dup == 0));
  $M.27 := $store.i8($M.27,$p395,$i394);
  $M.27.dup := $store.i1($M.27.dup,$p395,$i394.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p396 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(7,4));
  $p396.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p396.dup == 0));
  $i397 := $load.i32($M.4,$p396);
  $i397.dup := $load.i1($M.4.dup,$p396);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i398 := $and.i32($i397,255);
  $i398.dup := $or.i1($i397.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p399 := $add.ref($p0,$mul.ref(22,1));
  $p399.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p399.dup == 0));
  $i400 := $load.i8($M.27,$p399);
  $i400.dup := $load.i1($M.27.dup,$p399);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i401 := $zext.i8.i32($i400);
  $i401.dup := $i400.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i402 := $or.i32($i401,$i398);
  $i402.dup := $or.i1($i401.dup,$i398.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i403 := $trunc.i32.i8($i402);
  $i403.dup := $i402.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p399.dup == 0));
  $M.27 := $store.i8($M.27,$p399,$i403);
  $M.27.dup := $store.i1($M.27.dup,$p399,$i403.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p404 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(7,4));
  $p404.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p404.dup == 0));
  $i405 := $load.i32($M.4,$p404);
  $i405.dup := $load.i1($M.4.dup,$p404);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i406 := $ashr.i32($i405,8);
  $i406.dup := $or.i1($i405.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i407 := $and.i32($i406,255);
  $i407.dup := $or.i1($i406.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i408 := $trunc.i32.i8($i407);
  $i408.dup := $i407.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p409 := $add.ref($p0,$mul.ref(23,1));
  $p409.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p409.dup == 0));
  $M.28 := $store.i8($M.28,$p409,$i408);
  $M.28.dup := $store.i1($M.28.dup,$p409,$i408.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p410 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(7,4));
  $p410.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p410.dup == 0));
  $i411 := $load.i32($M.4,$p410);
  $i411.dup := $load.i1($M.4.dup,$p410);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i412 := $ashr.i32($i411,16);
  $i412.dup := $or.i1($i411.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i413 := $and.i32($i412,255);
  $i413.dup := $or.i1($i412.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i414 := $trunc.i32.i8($i413);
  $i414.dup := $i413.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p415 := $add.ref($p0,$mul.ref(24,1));
  $p415.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p415.dup == 0));
  $M.29 := $store.i8($M.29,$p415,$i414);
  $M.29.dup := $store.i1($M.29.dup,$p415,$i414.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(7,4));
  $p416.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p416.dup == 0));
  $i417 := $load.i32($M.4,$p416);
  $i417.dup := $load.i1($M.4.dup,$p416);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i418 := $ashr.i32($i417,24);
  $i418.dup := $or.i1($i417.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i419 := $and.i32($i418,255);
  $i419.dup := $or.i1($i418.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $i420 := $trunc.i32.i8($i419);
  $i420.dup := $i419.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $p421 := $add.ref($p0,$mul.ref(25,1));
  $p421.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 608, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p421.dup == 0));
  $M.30 := $store.i8($M.30,$p421,$i420);
  $M.30.dup := $store.i1($M.30.dup,$p421,$i420.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p422 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(8,4));
  $p422.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p422.dup == 0));
  $i423 := $load.i32($M.4,$p422);
  $i423.dup := $load.i1($M.4.dup,$p422);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i424 := $and.i32($i423,255);
  $i424.dup := $or.i1($i423.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p425 := $add.ref($p0,$mul.ref(25,1));
  $p425.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p425.dup == 0));
  $i426 := $load.i8($M.30,$p425);
  $i426.dup := $load.i1($M.30.dup,$p425);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i427 := $zext.i8.i32($i426);
  $i427.dup := $i426.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i428 := $or.i32($i427,$i424);
  $i428.dup := $or.i1($i427.dup,$i424.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i429 := $trunc.i32.i8($i428);
  $i429.dup := $i428.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p425.dup == 0));
  $M.30 := $store.i8($M.30,$p425,$i429);
  $M.30.dup := $store.i1($M.30.dup,$p425,$i429.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p430 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(8,4));
  $p430.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p430.dup == 0));
  $i431 := $load.i32($M.4,$p430);
  $i431.dup := $load.i1($M.4.dup,$p430);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i432 := $ashr.i32($i431,8);
  $i432.dup := $or.i1($i431.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i433 := $and.i32($i432,255);
  $i433.dup := $or.i1($i432.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i434 := $trunc.i32.i8($i433);
  $i434.dup := $i433.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p435 := $add.ref($p0,$mul.ref(26,1));
  $p435.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p435.dup == 0));
  $M.31 := $store.i8($M.31,$p435,$i434);
  $M.31.dup := $store.i1($M.31.dup,$p435,$i434.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p436 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(8,4));
  $p436.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p436.dup == 0));
  $i437 := $load.i32($M.4,$p436);
  $i437.dup := $load.i1($M.4.dup,$p436);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i438 := $ashr.i32($i437,16);
  $i438.dup := $or.i1($i437.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i439 := $and.i32($i438,255);
  $i439.dup := $or.i1($i438.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i440 := $trunc.i32.i8($i439);
  $i440.dup := $i439.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p441 := $add.ref($p0,$mul.ref(27,1));
  $p441.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p441.dup == 0));
  $M.32 := $store.i8($M.32,$p441,$i440);
  $M.32.dup := $store.i1($M.32.dup,$p441,$i440.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p442 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(8,4));
  $p442.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p442.dup == 0));
  $i443 := $load.i32($M.4,$p442);
  $i443.dup := $load.i1($M.4.dup,$p442);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i444 := $ashr.i32($i443,24);
  $i444.dup := $or.i1($i443.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i445 := $and.i32($i444,255);
  $i445.dup := $or.i1($i444.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $i446 := $trunc.i32.i8($i445);
  $i446.dup := $i445.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $p447 := $add.ref($p0,$mul.ref(28,1));
  $p447.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 609, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p447.dup == 0));
  $M.33 := $store.i8($M.33,$p447,$i446);
  $M.33.dup := $store.i1($M.33.dup,$p447,$i446.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p448 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p448.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p448.dup == 0));
  $i449 := $load.i32($M.4,$p448);
  $i449.dup := $load.i1($M.4.dup,$p448);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i450 := $and.i32($i449,255);
  $i450.dup := $or.i1($i449.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p451 := $add.ref($p0,$mul.ref(28,1));
  $p451.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p451.dup == 0));
  $i452 := $load.i8($M.33,$p451);
  $i452.dup := $load.i1($M.33.dup,$p451);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i453 := $zext.i8.i32($i452);
  $i453.dup := $i452.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i454 := $or.i32($i453,$i450);
  $i454.dup := $or.i1($i453.dup,$i450.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i455 := $trunc.i32.i8($i454);
  $i455.dup := $i454.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p451.dup == 0));
  $M.33 := $store.i8($M.33,$p451,$i455);
  $M.33.dup := $store.i1($M.33.dup,$p451,$i455.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p456 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p456.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p456.dup == 0));
  $i457 := $load.i32($M.4,$p456);
  $i457.dup := $load.i1($M.4.dup,$p456);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i458 := $ashr.i32($i457,8);
  $i458.dup := $or.i1($i457.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i459 := $and.i32($i458,255);
  $i459.dup := $or.i1($i458.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i460 := $trunc.i32.i8($i459);
  $i460.dup := $i459.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p461 := $add.ref($p0,$mul.ref(29,1));
  $p461.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p461.dup == 0));
  $M.34 := $store.i8($M.34,$p461,$i460);
  $M.34.dup := $store.i1($M.34.dup,$p461,$i460.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p462 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p462.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p462.dup == 0));
  $i463 := $load.i32($M.4,$p462);
  $i463.dup := $load.i1($M.4.dup,$p462);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i464 := $ashr.i32($i463,16);
  $i464.dup := $or.i1($i463.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i465 := $and.i32($i464,255);
  $i465.dup := $or.i1($i464.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i466 := $trunc.i32.i8($i465);
  $i466.dup := $i465.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p467 := $add.ref($p0,$mul.ref(30,1));
  $p467.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p467.dup == 0));
  $M.35 := $store.i8($M.35,$p467,$i466);
  $M.35.dup := $store.i1($M.35.dup,$p467,$i466.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p468 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref(9,4));
  $p468.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p468.dup == 0));
  $i469 := $load.i32($M.4,$p468);
  $i469.dup := $load.i1($M.4.dup,$p468);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i470 := $ashr.i32($i469,24);
  $i470.dup := $or.i1($i469.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i471 := $and.i32($i470,255);
  $i471.dup := $or.i1($i470.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $i472 := $trunc.i32.i8($i471);
  $i472.dup := $i471.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $p473 := $add.ref($p0,$mul.ref(31,1));
  $p473.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 610, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p473.dup == 0));
  $M.36 := $store.i8($M.36,$p473,$i472);
  $M.36.dup := $store.i1($M.36.dup,$p473,$i472.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 612, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb37:
  assume ($i176 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 580, 24} true;
  assume {:verifier.code 0} true;
  $i177 := $and.i32($i153,33554431);
  $i177.dup := $or.i1($i153.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 580, 7} true;
  assume {:verifier.code 0} true;
  $i178 := $sext.i32.i64($i173);
  $i178.dup := $i173.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 580, 7} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i178,4));
  $p179.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i178.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 580, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p179.dup == 0));
  $i180 := $load.i32($M.4,$p179);
  $i180.dup := $load.i1($M.4.dup,$p179);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 580, 16} true;
  assume {:verifier.code 0} true;
  $i181 := $sub.i32($i180,$i177);
  $i181.dup := $or.i1($i180.dup,$i177.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 580, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p179.dup == 0));
  $M.4 := $store.i32($M.4,$p179,$i181);
  $M.4.dup := $store.i1($M.4.dup,$p179,$i181.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 581, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !($i176 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 582, 24} true;
  assume {:verifier.code 0} true;
  $i182 := $and.i32($i153,67108863);
  $i182.dup := $or.i1($i153.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 582, 7} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i32.i64($i173);
  $i183.dup := $i173.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 582, 7} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($add.ref($p2,$mul.ref(0,40)),$mul.ref($i183,4));
  $p184.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1($i183.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 582, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p184.dup == 0));
  $i185 := $load.i32($M.4,$p184);
  $i185.dup := $load.i1($M.4.dup,$p184);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 582, 16} true;
  assume {:verifier.code 0} true;
  $i186 := $sub.i32($i185,$i182);
  $i186.dup := $or.i1($i185.dup,$i182.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 582, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p184.dup == 0));
  $M.4 := $store.i32($M.4,$p184,$i186);
  $M.4.dup := $store.i1($M.4.dup,$p184,$i186.dup);
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 584, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 578, 24} true;
  assume {:verifier.code 0} true;
  $i187 := $add.i32($i173,1);
  $i187.dup := $or.i1($i173.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i187);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 578, 3} true;
  assume {:verifier.code 0} true;
  $i173 := $i187;
  $i173.dup := $i187.dup;
  goto $bb34;
}
const s32_gte: ref;
axiom (s32_gte == $sub.ref(0,9288));
procedure {:inline 45} s32_gte($i0: i32, $i0.dup: i1, $i1: i32, $i1.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn;
{
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 462, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "s32_gte:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "s32_gte:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 462, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $sub.i32($i0,$i1);
  $i2.dup := $or.i1($i0.dup,$i1.dup);
  call {:cexpr "a"} boogie_si_record_i32($i2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 464, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $ashr.i32($i2,31);
  $i3.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 464, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $xor.i32($i3,$sub.i32(0,1));
  $i4.dup := $or.i1($i3.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 464, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $r.dup := $i4.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const s32_eq: ref;
axiom (s32_eq == $sub.ref(0,10320));
procedure {:inline 45} s32_eq($i0: i32, $i0.dup: i1, $i1: i32, $i1.dup: i1) returns ($r: i32, $r.dup: i1)
modifies $exn;
{
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i32;
  var $i5.dup: i1;
  var $i6: i32;
  var $i6.dup: i1;
  var $i7: i32;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $i10: i32;
  var $i10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
  var $i12: i32;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 450, 11} true;
  assume {:verifier.code 0} true;
  call {:cexpr "s32_eq:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "s32_eq:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 450, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $xor.i32($i0,$i1);
  $i2.dup := $or.i1($i0.dup,$i1.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 450, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $xor.i32($i2,$sub.i32(0,1));
  $i3.dup := $or.i1($i2.dup,$or.i1(0,0));
  call {:cexpr "a"} boogie_si_record_i32($i3);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 451, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i32($i3,16);
  $i4.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 451, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i3,$i4);
  $i5.dup := $or.i1($i3.dup,$i4.dup);
  call {:cexpr "a"} boogie_si_record_i32($i5);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 452, 10} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i32($i5,8);
  $i6.dup := $or.i1($i5.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 452, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i5,$i6);
  $i7.dup := $or.i1($i5.dup,$i6.dup);
  call {:cexpr "a"} boogie_si_record_i32($i7);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 453, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $shl.i32($i7,4);
  $i8.dup := $or.i1($i7.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 453, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i7,$i8);
  $i9.dup := $or.i1($i7.dup,$i8.dup);
  call {:cexpr "a"} boogie_si_record_i32($i9);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 454, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $shl.i32($i9,2);
  $i10.dup := $or.i1($i9.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 454, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i9,$i10);
  $i11.dup := $or.i1($i9.dup,$i10.dup);
  call {:cexpr "a"} boogie_si_record_i32($i11);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 455, 10} true;
  assume {:verifier.code 0} true;
  $i12 := $shl.i32($i11,1);
  $i12.dup := $or.i1($i11.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 455, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i11,$i12);
  $i13.dup := $or.i1($i11.dup,$i12.dup);
  call {:cexpr "a"} boogie_si_record_i32($i13);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 456, 12} true;
  assume {:verifier.code 0} true;
  $i14 := $ashr.i32($i13,31);
  $i14.dup := $or.i1($i13.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 456, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $r.dup := $i14.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const fproduct: ref;
axiom (fproduct == $sub.ref(0,11352));
procedure {:inline 45} fproduct($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1)
modifies $M.3, $exn;
{
  var $p3: ref;
  var $p3.dup: i1;
  var $i4: i64;
  var $i4.dup: i1;
  var $i5: i32;
  var $i5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i32;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $i14: i64;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $i18: i64;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i64;
  var $i20.dup: i1;
  var $i21: i64;
  var $i21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $i23: i64;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i64;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i64;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i64;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $i31: i64;
  var $i31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $p33: ref;
  var $p33.dup: i1;
  var $i34: i64;
  var $i34.dup: i1;
  var $i35: i32;
  var $i35.dup: i1;
  var $i36: i64;
  var $i36.dup: i1;
  var $i37: i64;
  var $i37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $i39: i64;
  var $i39.dup: i1;
  var $i40: i32;
  var $i40.dup: i1;
  var $i41: i64;
  var $i41.dup: i1;
  var $i42: i64;
  var $i42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $i44: i64;
  var $i44.dup: i1;
  var $i45: i32;
  var $i45.dup: i1;
  var $i46: i64;
  var $i46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $i48: i64;
  var $i48.dup: i1;
  var $i49: i32;
  var $i49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $i51: i64;
  var $i51.dup: i1;
  var $i52: i64;
  var $i52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $i54: i64;
  var $i54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i64;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i64;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $i60: i64;
  var $i60.dup: i1;
  var $i61: i64;
  var $i61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
  var $p63: ref;
  var $p63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $i65: i64;
  var $i65.dup: i1;
  var $i66: i32;
  var $i66.dup: i1;
  var $i67: i64;
  var $i67.dup: i1;
  var $p68: ref;
  var $p68.dup: i1;
  var $i69: i64;
  var $i69.dup: i1;
  var $i70: i32;
  var $i70.dup: i1;
  var $i71: i64;
  var $i71.dup: i1;
  var $i72: i64;
  var $i72.dup: i1;
  var $p73: ref;
  var $p73.dup: i1;
  var $i74: i64;
  var $i74.dup: i1;
  var $i75: i32;
  var $i75.dup: i1;
  var $i76: i64;
  var $i76.dup: i1;
  var $p77: ref;
  var $p77.dup: i1;
  var $i78: i64;
  var $i78.dup: i1;
  var $i79: i32;
  var $i79.dup: i1;
  var $i80: i64;
  var $i80.dup: i1;
  var $i81: i64;
  var $i81.dup: i1;
  var $i82: i64;
  var $i82.dup: i1;
  var $p83: ref;
  var $p83.dup: i1;
  var $i84: i64;
  var $i84.dup: i1;
  var $i85: i32;
  var $i85.dup: i1;
  var $i86: i64;
  var $i86.dup: i1;
  var $p87: ref;
  var $p87.dup: i1;
  var $i88: i64;
  var $i88.dup: i1;
  var $i89: i32;
  var $i89.dup: i1;
  var $i90: i64;
  var $i90.dup: i1;
  var $i91: i64;
  var $i91.dup: i1;
  var $i92: i64;
  var $i92.dup: i1;
  var $p93: ref;
  var $p93.dup: i1;
  var $i94: i64;
  var $i94.dup: i1;
  var $i95: i32;
  var $i95.dup: i1;
  var $i96: i64;
  var $i96.dup: i1;
  var $p97: ref;
  var $p97.dup: i1;
  var $i98: i64;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $i100: i64;
  var $i100.dup: i1;
  var $i101: i64;
  var $i101.dup: i1;
  var $i102: i64;
  var $i102.dup: i1;
  var $p103: ref;
  var $p103.dup: i1;
  var $p104: ref;
  var $p104.dup: i1;
  var $i105: i64;
  var $i105.dup: i1;
  var $i106: i32;
  var $i106.dup: i1;
  var $i107: i64;
  var $i107.dup: i1;
  var $p108: ref;
  var $p108.dup: i1;
  var $i109: i64;
  var $i109.dup: i1;
  var $i110: i32;
  var $i110.dup: i1;
  var $i111: i64;
  var $i111.dup: i1;
  var $i112: i64;
  var $i112.dup: i1;
  var $p113: ref;
  var $p113.dup: i1;
  var $i114: i64;
  var $i114.dup: i1;
  var $i115: i32;
  var $i115.dup: i1;
  var $i116: i64;
  var $i116.dup: i1;
  var $p117: ref;
  var $p117.dup: i1;
  var $i118: i64;
  var $i118.dup: i1;
  var $i119: i32;
  var $i119.dup: i1;
  var $i120: i64;
  var $i120.dup: i1;
  var $i121: i64;
  var $i121.dup: i1;
  var $p122: ref;
  var $p122.dup: i1;
  var $i123: i64;
  var $i123.dup: i1;
  var $i124: i32;
  var $i124.dup: i1;
  var $i125: i64;
  var $i125.dup: i1;
  var $p126: ref;
  var $p126.dup: i1;
  var $i127: i64;
  var $i127.dup: i1;
  var $i128: i32;
  var $i128.dup: i1;
  var $i129: i64;
  var $i129.dup: i1;
  var $i130: i64;
  var $i130.dup: i1;
  var $i131: i64;
  var $i131.dup: i1;
  var $i132: i64;
  var $i132.dup: i1;
  var $i133: i64;
  var $i133.dup: i1;
  var $p134: ref;
  var $p134.dup: i1;
  var $i135: i64;
  var $i135.dup: i1;
  var $i136: i32;
  var $i136.dup: i1;
  var $i137: i64;
  var $i137.dup: i1;
  var $p138: ref;
  var $p138.dup: i1;
  var $i139: i64;
  var $i139.dup: i1;
  var $i140: i32;
  var $i140.dup: i1;
  var $i141: i64;
  var $i141.dup: i1;
  var $i142: i64;
  var $i142.dup: i1;
  var $i143: i64;
  var $i143.dup: i1;
  var $p144: ref;
  var $p144.dup: i1;
  var $i145: i64;
  var $i145.dup: i1;
  var $i146: i32;
  var $i146.dup: i1;
  var $i147: i64;
  var $i147.dup: i1;
  var $p148: ref;
  var $p148.dup: i1;
  var $i149: i64;
  var $i149.dup: i1;
  var $i150: i32;
  var $i150.dup: i1;
  var $i151: i64;
  var $i151.dup: i1;
  var $i152: i64;
  var $i152.dup: i1;
  var $i153: i64;
  var $i153.dup: i1;
  var $p154: ref;
  var $p154.dup: i1;
  var $p155: ref;
  var $p155.dup: i1;
  var $i156: i64;
  var $i156.dup: i1;
  var $i157: i32;
  var $i157.dup: i1;
  var $i158: i64;
  var $i158.dup: i1;
  var $p159: ref;
  var $p159.dup: i1;
  var $i160: i64;
  var $i160.dup: i1;
  var $i161: i32;
  var $i161.dup: i1;
  var $i162: i64;
  var $i162.dup: i1;
  var $i163: i64;
  var $i163.dup: i1;
  var $p164: ref;
  var $p164.dup: i1;
  var $i165: i64;
  var $i165.dup: i1;
  var $i166: i32;
  var $i166.dup: i1;
  var $i167: i64;
  var $i167.dup: i1;
  var $p168: ref;
  var $p168.dup: i1;
  var $i169: i64;
  var $i169.dup: i1;
  var $i170: i32;
  var $i170.dup: i1;
  var $i171: i64;
  var $i171.dup: i1;
  var $i172: i64;
  var $i172.dup: i1;
  var $i173: i64;
  var $i173.dup: i1;
  var $p174: ref;
  var $p174.dup: i1;
  var $i175: i64;
  var $i175.dup: i1;
  var $i176: i32;
  var $i176.dup: i1;
  var $i177: i64;
  var $i177.dup: i1;
  var $p178: ref;
  var $p178.dup: i1;
  var $i179: i64;
  var $i179.dup: i1;
  var $i180: i32;
  var $i180.dup: i1;
  var $i181: i64;
  var $i181.dup: i1;
  var $i182: i64;
  var $i182.dup: i1;
  var $i183: i64;
  var $i183.dup: i1;
  var $p184: ref;
  var $p184.dup: i1;
  var $i185: i64;
  var $i185.dup: i1;
  var $i186: i32;
  var $i186.dup: i1;
  var $i187: i64;
  var $i187.dup: i1;
  var $p188: ref;
  var $p188.dup: i1;
  var $i189: i64;
  var $i189.dup: i1;
  var $i190: i32;
  var $i190.dup: i1;
  var $i191: i64;
  var $i191.dup: i1;
  var $i192: i64;
  var $i192.dup: i1;
  var $i193: i64;
  var $i193.dup: i1;
  var $p194: ref;
  var $p194.dup: i1;
  var $i195: i64;
  var $i195.dup: i1;
  var $i196: i32;
  var $i196.dup: i1;
  var $i197: i64;
  var $i197.dup: i1;
  var $p198: ref;
  var $p198.dup: i1;
  var $i199: i64;
  var $i199.dup: i1;
  var $i200: i32;
  var $i200.dup: i1;
  var $i201: i64;
  var $i201.dup: i1;
  var $i202: i64;
  var $i202.dup: i1;
  var $i203: i64;
  var $i203.dup: i1;
  var $p204: ref;
  var $p204.dup: i1;
  var $i205: i64;
  var $i205.dup: i1;
  var $i206: i32;
  var $i206.dup: i1;
  var $i207: i64;
  var $i207.dup: i1;
  var $p208: ref;
  var $p208.dup: i1;
  var $i209: i64;
  var $i209.dup: i1;
  var $i210: i32;
  var $i210.dup: i1;
  var $i211: i64;
  var $i211.dup: i1;
  var $i212: i64;
  var $i212.dup: i1;
  var $i213: i64;
  var $i213.dup: i1;
  var $p214: ref;
  var $p214.dup: i1;
  var $p215: ref;
  var $p215.dup: i1;
  var $i216: i64;
  var $i216.dup: i1;
  var $i217: i32;
  var $i217.dup: i1;
  var $i218: i64;
  var $i218.dup: i1;
  var $p219: ref;
  var $p219.dup: i1;
  var $i220: i64;
  var $i220.dup: i1;
  var $i221: i32;
  var $i221.dup: i1;
  var $i222: i64;
  var $i222.dup: i1;
  var $i223: i64;
  var $i223.dup: i1;
  var $p224: ref;
  var $p224.dup: i1;
  var $i225: i64;
  var $i225.dup: i1;
  var $i226: i32;
  var $i226.dup: i1;
  var $i227: i64;
  var $i227.dup: i1;
  var $p228: ref;
  var $p228.dup: i1;
  var $i229: i64;
  var $i229.dup: i1;
  var $i230: i32;
  var $i230.dup: i1;
  var $i231: i64;
  var $i231.dup: i1;
  var $i232: i64;
  var $i232.dup: i1;
  var $i233: i64;
  var $i233.dup: i1;
  var $p234: ref;
  var $p234.dup: i1;
  var $i235: i64;
  var $i235.dup: i1;
  var $i236: i32;
  var $i236.dup: i1;
  var $i237: i64;
  var $i237.dup: i1;
  var $p238: ref;
  var $p238.dup: i1;
  var $i239: i64;
  var $i239.dup: i1;
  var $i240: i32;
  var $i240.dup: i1;
  var $i241: i64;
  var $i241.dup: i1;
  var $i242: i64;
  var $i242.dup: i1;
  var $i243: i64;
  var $i243.dup: i1;
  var $i244: i64;
  var $i244.dup: i1;
  var $p245: ref;
  var $p245.dup: i1;
  var $i246: i64;
  var $i246.dup: i1;
  var $i247: i32;
  var $i247.dup: i1;
  var $i248: i64;
  var $i248.dup: i1;
  var $p249: ref;
  var $p249.dup: i1;
  var $i250: i64;
  var $i250.dup: i1;
  var $i251: i32;
  var $i251.dup: i1;
  var $i252: i64;
  var $i252.dup: i1;
  var $i253: i64;
  var $i253.dup: i1;
  var $i254: i64;
  var $i254.dup: i1;
  var $p255: ref;
  var $p255.dup: i1;
  var $i256: i64;
  var $i256.dup: i1;
  var $i257: i32;
  var $i257.dup: i1;
  var $i258: i64;
  var $i258.dup: i1;
  var $p259: ref;
  var $p259.dup: i1;
  var $i260: i64;
  var $i260.dup: i1;
  var $i261: i32;
  var $i261.dup: i1;
  var $i262: i64;
  var $i262.dup: i1;
  var $i263: i64;
  var $i263.dup: i1;
  var $i264: i64;
  var $i264.dup: i1;
  var $p265: ref;
  var $p265.dup: i1;
  var $i266: i64;
  var $i266.dup: i1;
  var $i267: i32;
  var $i267.dup: i1;
  var $i268: i64;
  var $i268.dup: i1;
  var $p269: ref;
  var $p269.dup: i1;
  var $i270: i64;
  var $i270.dup: i1;
  var $i271: i32;
  var $i271.dup: i1;
  var $i272: i64;
  var $i272.dup: i1;
  var $i273: i64;
  var $i273.dup: i1;
  var $i274: i64;
  var $i274.dup: i1;
  var $p275: ref;
  var $p275.dup: i1;
  var $i276: i64;
  var $i276.dup: i1;
  var $i277: i32;
  var $i277.dup: i1;
  var $i278: i64;
  var $i278.dup: i1;
  var $p279: ref;
  var $p279.dup: i1;
  var $i280: i64;
  var $i280.dup: i1;
  var $i281: i32;
  var $i281.dup: i1;
  var $i282: i64;
  var $i282.dup: i1;
  var $i283: i64;
  var $i283.dup: i1;
  var $i284: i64;
  var $i284.dup: i1;
  var $p285: ref;
  var $p285.dup: i1;
  var $p286: ref;
  var $p286.dup: i1;
  var $i287: i64;
  var $i287.dup: i1;
  var $i288: i32;
  var $i288.dup: i1;
  var $i289: i64;
  var $i289.dup: i1;
  var $p290: ref;
  var $p290.dup: i1;
  var $i291: i64;
  var $i291.dup: i1;
  var $i292: i32;
  var $i292.dup: i1;
  var $i293: i64;
  var $i293.dup: i1;
  var $i294: i64;
  var $i294.dup: i1;
  var $p295: ref;
  var $p295.dup: i1;
  var $i296: i64;
  var $i296.dup: i1;
  var $i297: i32;
  var $i297.dup: i1;
  var $i298: i64;
  var $i298.dup: i1;
  var $p299: ref;
  var $p299.dup: i1;
  var $i300: i64;
  var $i300.dup: i1;
  var $i301: i32;
  var $i301.dup: i1;
  var $i302: i64;
  var $i302.dup: i1;
  var $i303: i64;
  var $i303.dup: i1;
  var $i304: i64;
  var $i304.dup: i1;
  var $p305: ref;
  var $p305.dup: i1;
  var $i306: i64;
  var $i306.dup: i1;
  var $i307: i32;
  var $i307.dup: i1;
  var $i308: i64;
  var $i308.dup: i1;
  var $p309: ref;
  var $p309.dup: i1;
  var $i310: i64;
  var $i310.dup: i1;
  var $i311: i32;
  var $i311.dup: i1;
  var $i312: i64;
  var $i312.dup: i1;
  var $i313: i64;
  var $i313.dup: i1;
  var $i314: i64;
  var $i314.dup: i1;
  var $p315: ref;
  var $p315.dup: i1;
  var $i316: i64;
  var $i316.dup: i1;
  var $i317: i32;
  var $i317.dup: i1;
  var $i318: i64;
  var $i318.dup: i1;
  var $p319: ref;
  var $p319.dup: i1;
  var $i320: i64;
  var $i320.dup: i1;
  var $i321: i32;
  var $i321.dup: i1;
  var $i322: i64;
  var $i322.dup: i1;
  var $i323: i64;
  var $i323.dup: i1;
  var $i324: i64;
  var $i324.dup: i1;
  var $p325: ref;
  var $p325.dup: i1;
  var $i326: i64;
  var $i326.dup: i1;
  var $i327: i32;
  var $i327.dup: i1;
  var $i328: i64;
  var $i328.dup: i1;
  var $p329: ref;
  var $p329.dup: i1;
  var $i330: i64;
  var $i330.dup: i1;
  var $i331: i32;
  var $i331.dup: i1;
  var $i332: i64;
  var $i332.dup: i1;
  var $i333: i64;
  var $i333.dup: i1;
  var $i334: i64;
  var $i334.dup: i1;
  var $p335: ref;
  var $p335.dup: i1;
  var $i336: i64;
  var $i336.dup: i1;
  var $i337: i32;
  var $i337.dup: i1;
  var $i338: i64;
  var $i338.dup: i1;
  var $p339: ref;
  var $p339.dup: i1;
  var $i340: i64;
  var $i340.dup: i1;
  var $i341: i32;
  var $i341.dup: i1;
  var $i342: i64;
  var $i342.dup: i1;
  var $i343: i64;
  var $i343.dup: i1;
  var $i344: i64;
  var $i344.dup: i1;
  var $p345: ref;
  var $p345.dup: i1;
  var $i346: i64;
  var $i346.dup: i1;
  var $i347: i32;
  var $i347.dup: i1;
  var $i348: i64;
  var $i348.dup: i1;
  var $p349: ref;
  var $p349.dup: i1;
  var $i350: i64;
  var $i350.dup: i1;
  var $i351: i32;
  var $i351.dup: i1;
  var $i352: i64;
  var $i352.dup: i1;
  var $i353: i64;
  var $i353.dup: i1;
  var $i354: i64;
  var $i354.dup: i1;
  var $p355: ref;
  var $p355.dup: i1;
  var $i356: i64;
  var $i356.dup: i1;
  var $i357: i32;
  var $i357.dup: i1;
  var $i358: i64;
  var $i358.dup: i1;
  var $p359: ref;
  var $p359.dup: i1;
  var $i360: i64;
  var $i360.dup: i1;
  var $i361: i32;
  var $i361.dup: i1;
  var $i362: i64;
  var $i362.dup: i1;
  var $i363: i64;
  var $i363.dup: i1;
  var $i364: i64;
  var $i364.dup: i1;
  var $p365: ref;
  var $p365.dup: i1;
  var $p366: ref;
  var $p366.dup: i1;
  var $i367: i64;
  var $i367.dup: i1;
  var $i368: i32;
  var $i368.dup: i1;
  var $i369: i64;
  var $i369.dup: i1;
  var $p370: ref;
  var $p370.dup: i1;
  var $i371: i64;
  var $i371.dup: i1;
  var $i372: i32;
  var $i372.dup: i1;
  var $i373: i64;
  var $i373.dup: i1;
  var $i374: i64;
  var $i374.dup: i1;
  var $p375: ref;
  var $p375.dup: i1;
  var $i376: i64;
  var $i376.dup: i1;
  var $i377: i32;
  var $i377.dup: i1;
  var $i378: i64;
  var $i378.dup: i1;
  var $p379: ref;
  var $p379.dup: i1;
  var $i380: i64;
  var $i380.dup: i1;
  var $i381: i32;
  var $i381.dup: i1;
  var $i382: i64;
  var $i382.dup: i1;
  var $i383: i64;
  var $i383.dup: i1;
  var $p384: ref;
  var $p384.dup: i1;
  var $i385: i64;
  var $i385.dup: i1;
  var $i386: i32;
  var $i386.dup: i1;
  var $i387: i64;
  var $i387.dup: i1;
  var $p388: ref;
  var $p388.dup: i1;
  var $i389: i64;
  var $i389.dup: i1;
  var $i390: i32;
  var $i390.dup: i1;
  var $i391: i64;
  var $i391.dup: i1;
  var $i392: i64;
  var $i392.dup: i1;
  var $i393: i64;
  var $i393.dup: i1;
  var $p394: ref;
  var $p394.dup: i1;
  var $i395: i64;
  var $i395.dup: i1;
  var $i396: i32;
  var $i396.dup: i1;
  var $i397: i64;
  var $i397.dup: i1;
  var $p398: ref;
  var $p398.dup: i1;
  var $i399: i64;
  var $i399.dup: i1;
  var $i400: i32;
  var $i400.dup: i1;
  var $i401: i64;
  var $i401.dup: i1;
  var $i402: i64;
  var $i402.dup: i1;
  var $i403: i64;
  var $i403.dup: i1;
  var $p404: ref;
  var $p404.dup: i1;
  var $i405: i64;
  var $i405.dup: i1;
  var $i406: i32;
  var $i406.dup: i1;
  var $i407: i64;
  var $i407.dup: i1;
  var $p408: ref;
  var $p408.dup: i1;
  var $i409: i64;
  var $i409.dup: i1;
  var $i410: i32;
  var $i410.dup: i1;
  var $i411: i64;
  var $i411.dup: i1;
  var $i412: i64;
  var $i412.dup: i1;
  var $i413: i64;
  var $i413.dup: i1;
  var $i414: i64;
  var $i414.dup: i1;
  var $i415: i64;
  var $i415.dup: i1;
  var $p416: ref;
  var $p416.dup: i1;
  var $i417: i64;
  var $i417.dup: i1;
  var $i418: i32;
  var $i418.dup: i1;
  var $i419: i64;
  var $i419.dup: i1;
  var $p420: ref;
  var $p420.dup: i1;
  var $i421: i64;
  var $i421.dup: i1;
  var $i422: i32;
  var $i422.dup: i1;
  var $i423: i64;
  var $i423.dup: i1;
  var $i424: i64;
  var $i424.dup: i1;
  var $i425: i64;
  var $i425.dup: i1;
  var $p426: ref;
  var $p426.dup: i1;
  var $i427: i64;
  var $i427.dup: i1;
  var $i428: i32;
  var $i428.dup: i1;
  var $i429: i64;
  var $i429.dup: i1;
  var $p430: ref;
  var $p430.dup: i1;
  var $i431: i64;
  var $i431.dup: i1;
  var $i432: i32;
  var $i432.dup: i1;
  var $i433: i64;
  var $i433.dup: i1;
  var $i434: i64;
  var $i434.dup: i1;
  var $i435: i64;
  var $i435.dup: i1;
  var $p436: ref;
  var $p436.dup: i1;
  var $i437: i64;
  var $i437.dup: i1;
  var $i438: i32;
  var $i438.dup: i1;
  var $i439: i64;
  var $i439.dup: i1;
  var $p440: ref;
  var $p440.dup: i1;
  var $i441: i64;
  var $i441.dup: i1;
  var $i442: i32;
  var $i442.dup: i1;
  var $i443: i64;
  var $i443.dup: i1;
  var $i444: i64;
  var $i444.dup: i1;
  var $i445: i64;
  var $i445.dup: i1;
  var $p446: ref;
  var $p446.dup: i1;
  var $i447: i64;
  var $i447.dup: i1;
  var $i448: i32;
  var $i448.dup: i1;
  var $i449: i64;
  var $i449.dup: i1;
  var $p450: ref;
  var $p450.dup: i1;
  var $i451: i64;
  var $i451.dup: i1;
  var $i452: i32;
  var $i452.dup: i1;
  var $i453: i64;
  var $i453.dup: i1;
  var $i454: i64;
  var $i454.dup: i1;
  var $i455: i64;
  var $i455.dup: i1;
  var $p456: ref;
  var $p456.dup: i1;
  var $p457: ref;
  var $p457.dup: i1;
  var $i458: i64;
  var $i458.dup: i1;
  var $i459: i32;
  var $i459.dup: i1;
  var $i460: i64;
  var $i460.dup: i1;
  var $p461: ref;
  var $p461.dup: i1;
  var $i462: i64;
  var $i462.dup: i1;
  var $i463: i32;
  var $i463.dup: i1;
  var $i464: i64;
  var $i464.dup: i1;
  var $i465: i64;
  var $i465.dup: i1;
  var $p466: ref;
  var $p466.dup: i1;
  var $i467: i64;
  var $i467.dup: i1;
  var $i468: i32;
  var $i468.dup: i1;
  var $i469: i64;
  var $i469.dup: i1;
  var $p470: ref;
  var $p470.dup: i1;
  var $i471: i64;
  var $i471.dup: i1;
  var $i472: i32;
  var $i472.dup: i1;
  var $i473: i64;
  var $i473.dup: i1;
  var $i474: i64;
  var $i474.dup: i1;
  var $i475: i64;
  var $i475.dup: i1;
  var $p476: ref;
  var $p476.dup: i1;
  var $i477: i64;
  var $i477.dup: i1;
  var $i478: i32;
  var $i478.dup: i1;
  var $i479: i64;
  var $i479.dup: i1;
  var $p480: ref;
  var $p480.dup: i1;
  var $i481: i64;
  var $i481.dup: i1;
  var $i482: i32;
  var $i482.dup: i1;
  var $i483: i64;
  var $i483.dup: i1;
  var $i484: i64;
  var $i484.dup: i1;
  var $i485: i64;
  var $i485.dup: i1;
  var $p486: ref;
  var $p486.dup: i1;
  var $i487: i64;
  var $i487.dup: i1;
  var $i488: i32;
  var $i488.dup: i1;
  var $i489: i64;
  var $i489.dup: i1;
  var $p490: ref;
  var $p490.dup: i1;
  var $i491: i64;
  var $i491.dup: i1;
  var $i492: i32;
  var $i492.dup: i1;
  var $i493: i64;
  var $i493.dup: i1;
  var $i494: i64;
  var $i494.dup: i1;
  var $i495: i64;
  var $i495.dup: i1;
  var $p496: ref;
  var $p496.dup: i1;
  var $i497: i64;
  var $i497.dup: i1;
  var $i498: i32;
  var $i498.dup: i1;
  var $i499: i64;
  var $i499.dup: i1;
  var $p500: ref;
  var $p500.dup: i1;
  var $i501: i64;
  var $i501.dup: i1;
  var $i502: i32;
  var $i502.dup: i1;
  var $i503: i64;
  var $i503.dup: i1;
  var $i504: i64;
  var $i504.dup: i1;
  var $i505: i64;
  var $i505.dup: i1;
  var $p506: ref;
  var $p506.dup: i1;
  var $i507: i64;
  var $i507.dup: i1;
  var $i508: i32;
  var $i508.dup: i1;
  var $i509: i64;
  var $i509.dup: i1;
  var $p510: ref;
  var $p510.dup: i1;
  var $i511: i64;
  var $i511.dup: i1;
  var $i512: i32;
  var $i512.dup: i1;
  var $i513: i64;
  var $i513.dup: i1;
  var $i514: i64;
  var $i514.dup: i1;
  var $i515: i64;
  var $i515.dup: i1;
  var $p516: ref;
  var $p516.dup: i1;
  var $i517: i64;
  var $i517.dup: i1;
  var $i518: i32;
  var $i518.dup: i1;
  var $i519: i64;
  var $i519.dup: i1;
  var $p520: ref;
  var $p520.dup: i1;
  var $i521: i64;
  var $i521.dup: i1;
  var $i522: i32;
  var $i522.dup: i1;
  var $i523: i64;
  var $i523.dup: i1;
  var $i524: i64;
  var $i524.dup: i1;
  var $i525: i64;
  var $i525.dup: i1;
  var $p526: ref;
  var $p526.dup: i1;
  var $i527: i64;
  var $i527.dup: i1;
  var $i528: i32;
  var $i528.dup: i1;
  var $i529: i64;
  var $i529.dup: i1;
  var $p530: ref;
  var $p530.dup: i1;
  var $i531: i64;
  var $i531.dup: i1;
  var $i532: i32;
  var $i532.dup: i1;
  var $i533: i64;
  var $i533.dup: i1;
  var $i534: i64;
  var $i534.dup: i1;
  var $i535: i64;
  var $i535.dup: i1;
  var $p536: ref;
  var $p536.dup: i1;
  var $i537: i64;
  var $i537.dup: i1;
  var $i538: i32;
  var $i538.dup: i1;
  var $i539: i64;
  var $i539.dup: i1;
  var $p540: ref;
  var $p540.dup: i1;
  var $i541: i64;
  var $i541.dup: i1;
  var $i542: i32;
  var $i542.dup: i1;
  var $i543: i64;
  var $i543.dup: i1;
  var $i544: i64;
  var $i544.dup: i1;
  var $i545: i64;
  var $i545.dup: i1;
  var $p546: ref;
  var $p546.dup: i1;
  var $i547: i64;
  var $i547.dup: i1;
  var $i548: i32;
  var $i548.dup: i1;
  var $i549: i64;
  var $i549.dup: i1;
  var $p550: ref;
  var $p550.dup: i1;
  var $i551: i64;
  var $i551.dup: i1;
  var $i552: i32;
  var $i552.dup: i1;
  var $i553: i64;
  var $i553.dup: i1;
  var $i554: i64;
  var $i554.dup: i1;
  var $i555: i64;
  var $i555.dup: i1;
  var $p556: ref;
  var $p556.dup: i1;
  var $p557: ref;
  var $p557.dup: i1;
  var $i558: i64;
  var $i558.dup: i1;
  var $i559: i32;
  var $i559.dup: i1;
  var $i560: i64;
  var $i560.dup: i1;
  var $p561: ref;
  var $p561.dup: i1;
  var $i562: i64;
  var $i562.dup: i1;
  var $i563: i32;
  var $i563.dup: i1;
  var $i564: i64;
  var $i564.dup: i1;
  var $i565: i64;
  var $i565.dup: i1;
  var $p566: ref;
  var $p566.dup: i1;
  var $i567: i64;
  var $i567.dup: i1;
  var $i568: i32;
  var $i568.dup: i1;
  var $i569: i64;
  var $i569.dup: i1;
  var $p570: ref;
  var $p570.dup: i1;
  var $i571: i64;
  var $i571.dup: i1;
  var $i572: i32;
  var $i572.dup: i1;
  var $i573: i64;
  var $i573.dup: i1;
  var $i574: i64;
  var $i574.dup: i1;
  var $i575: i64;
  var $i575.dup: i1;
  var $p576: ref;
  var $p576.dup: i1;
  var $i577: i64;
  var $i577.dup: i1;
  var $i578: i32;
  var $i578.dup: i1;
  var $i579: i64;
  var $i579.dup: i1;
  var $p580: ref;
  var $p580.dup: i1;
  var $i581: i64;
  var $i581.dup: i1;
  var $i582: i32;
  var $i582.dup: i1;
  var $i583: i64;
  var $i583.dup: i1;
  var $i584: i64;
  var $i584.dup: i1;
  var $i585: i64;
  var $i585.dup: i1;
  var $p586: ref;
  var $p586.dup: i1;
  var $i587: i64;
  var $i587.dup: i1;
  var $i588: i32;
  var $i588.dup: i1;
  var $i589: i64;
  var $i589.dup: i1;
  var $p590: ref;
  var $p590.dup: i1;
  var $i591: i64;
  var $i591.dup: i1;
  var $i592: i32;
  var $i592.dup: i1;
  var $i593: i64;
  var $i593.dup: i1;
  var $i594: i64;
  var $i594.dup: i1;
  var $i595: i64;
  var $i595.dup: i1;
  var $p596: ref;
  var $p596.dup: i1;
  var $i597: i64;
  var $i597.dup: i1;
  var $i598: i32;
  var $i598.dup: i1;
  var $i599: i64;
  var $i599.dup: i1;
  var $p600: ref;
  var $p600.dup: i1;
  var $i601: i64;
  var $i601.dup: i1;
  var $i602: i32;
  var $i602.dup: i1;
  var $i603: i64;
  var $i603.dup: i1;
  var $i604: i64;
  var $i604.dup: i1;
  var $i605: i64;
  var $i605.dup: i1;
  var $i606: i64;
  var $i606.dup: i1;
  var $p607: ref;
  var $p607.dup: i1;
  var $i608: i64;
  var $i608.dup: i1;
  var $i609: i32;
  var $i609.dup: i1;
  var $i610: i64;
  var $i610.dup: i1;
  var $p611: ref;
  var $p611.dup: i1;
  var $i612: i64;
  var $i612.dup: i1;
  var $i613: i32;
  var $i613.dup: i1;
  var $i614: i64;
  var $i614.dup: i1;
  var $i615: i64;
  var $i615.dup: i1;
  var $i616: i64;
  var $i616.dup: i1;
  var $p617: ref;
  var $p617.dup: i1;
  var $i618: i64;
  var $i618.dup: i1;
  var $i619: i32;
  var $i619.dup: i1;
  var $i620: i64;
  var $i620.dup: i1;
  var $p621: ref;
  var $p621.dup: i1;
  var $i622: i64;
  var $i622.dup: i1;
  var $i623: i32;
  var $i623.dup: i1;
  var $i624: i64;
  var $i624.dup: i1;
  var $i625: i64;
  var $i625.dup: i1;
  var $i626: i64;
  var $i626.dup: i1;
  var $p627: ref;
  var $p627.dup: i1;
  var $i628: i64;
  var $i628.dup: i1;
  var $i629: i32;
  var $i629.dup: i1;
  var $i630: i64;
  var $i630.dup: i1;
  var $p631: ref;
  var $p631.dup: i1;
  var $i632: i64;
  var $i632.dup: i1;
  var $i633: i32;
  var $i633.dup: i1;
  var $i634: i64;
  var $i634.dup: i1;
  var $i635: i64;
  var $i635.dup: i1;
  var $i636: i64;
  var $i636.dup: i1;
  var $p637: ref;
  var $p637.dup: i1;
  var $i638: i64;
  var $i638.dup: i1;
  var $i639: i32;
  var $i639.dup: i1;
  var $i640: i64;
  var $i640.dup: i1;
  var $p641: ref;
  var $p641.dup: i1;
  var $i642: i64;
  var $i642.dup: i1;
  var $i643: i32;
  var $i643.dup: i1;
  var $i644: i64;
  var $i644.dup: i1;
  var $i645: i64;
  var $i645.dup: i1;
  var $i646: i64;
  var $i646.dup: i1;
  var $p647: ref;
  var $p647.dup: i1;
  var $p648: ref;
  var $p648.dup: i1;
  var $i649: i64;
  var $i649.dup: i1;
  var $i650: i32;
  var $i650.dup: i1;
  var $i651: i64;
  var $i651.dup: i1;
  var $p652: ref;
  var $p652.dup: i1;
  var $i653: i64;
  var $i653.dup: i1;
  var $i654: i32;
  var $i654.dup: i1;
  var $i655: i64;
  var $i655.dup: i1;
  var $i656: i64;
  var $i656.dup: i1;
  var $p657: ref;
  var $p657.dup: i1;
  var $i658: i64;
  var $i658.dup: i1;
  var $i659: i32;
  var $i659.dup: i1;
  var $i660: i64;
  var $i660.dup: i1;
  var $p661: ref;
  var $p661.dup: i1;
  var $i662: i64;
  var $i662.dup: i1;
  var $i663: i32;
  var $i663.dup: i1;
  var $i664: i64;
  var $i664.dup: i1;
  var $i665: i64;
  var $i665.dup: i1;
  var $i666: i64;
  var $i666.dup: i1;
  var $p667: ref;
  var $p667.dup: i1;
  var $i668: i64;
  var $i668.dup: i1;
  var $i669: i32;
  var $i669.dup: i1;
  var $i670: i64;
  var $i670.dup: i1;
  var $p671: ref;
  var $p671.dup: i1;
  var $i672: i64;
  var $i672.dup: i1;
  var $i673: i32;
  var $i673.dup: i1;
  var $i674: i64;
  var $i674.dup: i1;
  var $i675: i64;
  var $i675.dup: i1;
  var $i676: i64;
  var $i676.dup: i1;
  var $p677: ref;
  var $p677.dup: i1;
  var $i678: i64;
  var $i678.dup: i1;
  var $i679: i32;
  var $i679.dup: i1;
  var $i680: i64;
  var $i680.dup: i1;
  var $p681: ref;
  var $p681.dup: i1;
  var $i682: i64;
  var $i682.dup: i1;
  var $i683: i32;
  var $i683.dup: i1;
  var $i684: i64;
  var $i684.dup: i1;
  var $i685: i64;
  var $i685.dup: i1;
  var $i686: i64;
  var $i686.dup: i1;
  var $p687: ref;
  var $p687.dup: i1;
  var $i688: i64;
  var $i688.dup: i1;
  var $i689: i32;
  var $i689.dup: i1;
  var $i690: i64;
  var $i690.dup: i1;
  var $p691: ref;
  var $p691.dup: i1;
  var $i692: i64;
  var $i692.dup: i1;
  var $i693: i32;
  var $i693.dup: i1;
  var $i694: i64;
  var $i694.dup: i1;
  var $i695: i64;
  var $i695.dup: i1;
  var $i696: i64;
  var $i696.dup: i1;
  var $p697: ref;
  var $p697.dup: i1;
  var $i698: i64;
  var $i698.dup: i1;
  var $i699: i32;
  var $i699.dup: i1;
  var $i700: i64;
  var $i700.dup: i1;
  var $p701: ref;
  var $p701.dup: i1;
  var $i702: i64;
  var $i702.dup: i1;
  var $i703: i32;
  var $i703.dup: i1;
  var $i704: i64;
  var $i704.dup: i1;
  var $i705: i64;
  var $i705.dup: i1;
  var $i706: i64;
  var $i706.dup: i1;
  var $p707: ref;
  var $p707.dup: i1;
  var $i708: i64;
  var $i708.dup: i1;
  var $i709: i32;
  var $i709.dup: i1;
  var $i710: i64;
  var $i710.dup: i1;
  var $p711: ref;
  var $p711.dup: i1;
  var $i712: i64;
  var $i712.dup: i1;
  var $i713: i32;
  var $i713.dup: i1;
  var $i714: i64;
  var $i714.dup: i1;
  var $i715: i64;
  var $i715.dup: i1;
  var $i716: i64;
  var $i716.dup: i1;
  var $p717: ref;
  var $p717.dup: i1;
  var $i718: i64;
  var $i718.dup: i1;
  var $i719: i32;
  var $i719.dup: i1;
  var $i720: i64;
  var $i720.dup: i1;
  var $p721: ref;
  var $p721.dup: i1;
  var $i722: i64;
  var $i722.dup: i1;
  var $i723: i32;
  var $i723.dup: i1;
  var $i724: i64;
  var $i724.dup: i1;
  var $i725: i64;
  var $i725.dup: i1;
  var $i726: i64;
  var $i726.dup: i1;
  var $p727: ref;
  var $p727.dup: i1;
  var $p728: ref;
  var $p728.dup: i1;
  var $i729: i64;
  var $i729.dup: i1;
  var $i730: i32;
  var $i730.dup: i1;
  var $i731: i64;
  var $i731.dup: i1;
  var $p732: ref;
  var $p732.dup: i1;
  var $i733: i64;
  var $i733.dup: i1;
  var $i734: i32;
  var $i734.dup: i1;
  var $i735: i64;
  var $i735.dup: i1;
  var $i736: i64;
  var $i736.dup: i1;
  var $p737: ref;
  var $p737.dup: i1;
  var $i738: i64;
  var $i738.dup: i1;
  var $i739: i32;
  var $i739.dup: i1;
  var $i740: i64;
  var $i740.dup: i1;
  var $p741: ref;
  var $p741.dup: i1;
  var $i742: i64;
  var $i742.dup: i1;
  var $i743: i32;
  var $i743.dup: i1;
  var $i744: i64;
  var $i744.dup: i1;
  var $i745: i64;
  var $i745.dup: i1;
  var $p746: ref;
  var $p746.dup: i1;
  var $i747: i64;
  var $i747.dup: i1;
  var $i748: i32;
  var $i748.dup: i1;
  var $i749: i64;
  var $i749.dup: i1;
  var $p750: ref;
  var $p750.dup: i1;
  var $i751: i64;
  var $i751.dup: i1;
  var $i752: i32;
  var $i752.dup: i1;
  var $i753: i64;
  var $i753.dup: i1;
  var $i754: i64;
  var $i754.dup: i1;
  var $i755: i64;
  var $i755.dup: i1;
  var $p756: ref;
  var $p756.dup: i1;
  var $i757: i64;
  var $i757.dup: i1;
  var $i758: i32;
  var $i758.dup: i1;
  var $i759: i64;
  var $i759.dup: i1;
  var $p760: ref;
  var $p760.dup: i1;
  var $i761: i64;
  var $i761.dup: i1;
  var $i762: i32;
  var $i762.dup: i1;
  var $i763: i64;
  var $i763.dup: i1;
  var $i764: i64;
  var $i764.dup: i1;
  var $i765: i64;
  var $i765.dup: i1;
  var $p766: ref;
  var $p766.dup: i1;
  var $i767: i64;
  var $i767.dup: i1;
  var $i768: i32;
  var $i768.dup: i1;
  var $i769: i64;
  var $i769.dup: i1;
  var $p770: ref;
  var $p770.dup: i1;
  var $i771: i64;
  var $i771.dup: i1;
  var $i772: i32;
  var $i772.dup: i1;
  var $i773: i64;
  var $i773.dup: i1;
  var $i774: i64;
  var $i774.dup: i1;
  var $i775: i64;
  var $i775.dup: i1;
  var $i776: i64;
  var $i776.dup: i1;
  var $i777: i64;
  var $i777.dup: i1;
  var $p778: ref;
  var $p778.dup: i1;
  var $i779: i64;
  var $i779.dup: i1;
  var $i780: i32;
  var $i780.dup: i1;
  var $i781: i64;
  var $i781.dup: i1;
  var $p782: ref;
  var $p782.dup: i1;
  var $i783: i64;
  var $i783.dup: i1;
  var $i784: i32;
  var $i784.dup: i1;
  var $i785: i64;
  var $i785.dup: i1;
  var $i786: i64;
  var $i786.dup: i1;
  var $i787: i64;
  var $i787.dup: i1;
  var $p788: ref;
  var $p788.dup: i1;
  var $i789: i64;
  var $i789.dup: i1;
  var $i790: i32;
  var $i790.dup: i1;
  var $i791: i64;
  var $i791.dup: i1;
  var $p792: ref;
  var $p792.dup: i1;
  var $i793: i64;
  var $i793.dup: i1;
  var $i794: i32;
  var $i794.dup: i1;
  var $i795: i64;
  var $i795.dup: i1;
  var $i796: i64;
  var $i796.dup: i1;
  var $i797: i64;
  var $i797.dup: i1;
  var $p798: ref;
  var $p798.dup: i1;
  var $p799: ref;
  var $p799.dup: i1;
  var $i800: i64;
  var $i800.dup: i1;
  var $i801: i32;
  var $i801.dup: i1;
  var $i802: i64;
  var $i802.dup: i1;
  var $p803: ref;
  var $p803.dup: i1;
  var $i804: i64;
  var $i804.dup: i1;
  var $i805: i32;
  var $i805.dup: i1;
  var $i806: i64;
  var $i806.dup: i1;
  var $i807: i64;
  var $i807.dup: i1;
  var $p808: ref;
  var $p808.dup: i1;
  var $i809: i64;
  var $i809.dup: i1;
  var $i810: i32;
  var $i810.dup: i1;
  var $i811: i64;
  var $i811.dup: i1;
  var $p812: ref;
  var $p812.dup: i1;
  var $i813: i64;
  var $i813.dup: i1;
  var $i814: i32;
  var $i814.dup: i1;
  var $i815: i64;
  var $i815.dup: i1;
  var $i816: i64;
  var $i816.dup: i1;
  var $i817: i64;
  var $i817.dup: i1;
  var $p818: ref;
  var $p818.dup: i1;
  var $i819: i64;
  var $i819.dup: i1;
  var $i820: i32;
  var $i820.dup: i1;
  var $i821: i64;
  var $i821.dup: i1;
  var $p822: ref;
  var $p822.dup: i1;
  var $i823: i64;
  var $i823.dup: i1;
  var $i824: i32;
  var $i824.dup: i1;
  var $i825: i64;
  var $i825.dup: i1;
  var $i826: i64;
  var $i826.dup: i1;
  var $i827: i64;
  var $i827.dup: i1;
  var $p828: ref;
  var $p828.dup: i1;
  var $i829: i64;
  var $i829.dup: i1;
  var $i830: i32;
  var $i830.dup: i1;
  var $i831: i64;
  var $i831.dup: i1;
  var $p832: ref;
  var $p832.dup: i1;
  var $i833: i64;
  var $i833.dup: i1;
  var $i834: i32;
  var $i834.dup: i1;
  var $i835: i64;
  var $i835.dup: i1;
  var $i836: i64;
  var $i836.dup: i1;
  var $i837: i64;
  var $i837.dup: i1;
  var $p838: ref;
  var $p838.dup: i1;
  var $i839: i64;
  var $i839.dup: i1;
  var $i840: i32;
  var $i840.dup: i1;
  var $i841: i64;
  var $i841.dup: i1;
  var $p842: ref;
  var $p842.dup: i1;
  var $i843: i64;
  var $i843.dup: i1;
  var $i844: i32;
  var $i844.dup: i1;
  var $i845: i64;
  var $i845.dup: i1;
  var $i846: i64;
  var $i846.dup: i1;
  var $i847: i64;
  var $i847.dup: i1;
  var $p848: ref;
  var $p848.dup: i1;
  var $i849: i64;
  var $i849.dup: i1;
  var $i850: i32;
  var $i850.dup: i1;
  var $i851: i64;
  var $i851.dup: i1;
  var $p852: ref;
  var $p852.dup: i1;
  var $i853: i64;
  var $i853.dup: i1;
  var $i854: i32;
  var $i854.dup: i1;
  var $i855: i64;
  var $i855.dup: i1;
  var $i856: i64;
  var $i856.dup: i1;
  var $i857: i64;
  var $i857.dup: i1;
  var $p858: ref;
  var $p858.dup: i1;
  var $p859: ref;
  var $p859.dup: i1;
  var $i860: i64;
  var $i860.dup: i1;
  var $i861: i32;
  var $i861.dup: i1;
  var $i862: i64;
  var $i862.dup: i1;
  var $p863: ref;
  var $p863.dup: i1;
  var $i864: i64;
  var $i864.dup: i1;
  var $i865: i32;
  var $i865.dup: i1;
  var $i866: i64;
  var $i866.dup: i1;
  var $i867: i64;
  var $i867.dup: i1;
  var $p868: ref;
  var $p868.dup: i1;
  var $i869: i64;
  var $i869.dup: i1;
  var $i870: i32;
  var $i870.dup: i1;
  var $i871: i64;
  var $i871.dup: i1;
  var $p872: ref;
  var $p872.dup: i1;
  var $i873: i64;
  var $i873.dup: i1;
  var $i874: i32;
  var $i874.dup: i1;
  var $i875: i64;
  var $i875.dup: i1;
  var $i876: i64;
  var $i876.dup: i1;
  var $i877: i64;
  var $i877.dup: i1;
  var $p878: ref;
  var $p878.dup: i1;
  var $i879: i64;
  var $i879.dup: i1;
  var $i880: i32;
  var $i880.dup: i1;
  var $i881: i64;
  var $i881.dup: i1;
  var $p882: ref;
  var $p882.dup: i1;
  var $i883: i64;
  var $i883.dup: i1;
  var $i884: i32;
  var $i884.dup: i1;
  var $i885: i64;
  var $i885.dup: i1;
  var $i886: i64;
  var $i886.dup: i1;
  var $i887: i64;
  var $i887.dup: i1;
  var $i888: i64;
  var $i888.dup: i1;
  var $p889: ref;
  var $p889.dup: i1;
  var $i890: i64;
  var $i890.dup: i1;
  var $i891: i32;
  var $i891.dup: i1;
  var $i892: i64;
  var $i892.dup: i1;
  var $p893: ref;
  var $p893.dup: i1;
  var $i894: i64;
  var $i894.dup: i1;
  var $i895: i32;
  var $i895.dup: i1;
  var $i896: i64;
  var $i896.dup: i1;
  var $i897: i64;
  var $i897.dup: i1;
  var $i898: i64;
  var $i898.dup: i1;
  var $p899: ref;
  var $p899.dup: i1;
  var $i900: i64;
  var $i900.dup: i1;
  var $i901: i32;
  var $i901.dup: i1;
  var $i902: i64;
  var $i902.dup: i1;
  var $p903: ref;
  var $p903.dup: i1;
  var $i904: i64;
  var $i904.dup: i1;
  var $i905: i32;
  var $i905.dup: i1;
  var $i906: i64;
  var $i906.dup: i1;
  var $i907: i64;
  var $i907.dup: i1;
  var $i908: i64;
  var $i908.dup: i1;
  var $p909: ref;
  var $p909.dup: i1;
  var $p910: ref;
  var $p910.dup: i1;
  var $i911: i64;
  var $i911.dup: i1;
  var $i912: i32;
  var $i912.dup: i1;
  var $i913: i64;
  var $i913.dup: i1;
  var $p914: ref;
  var $p914.dup: i1;
  var $i915: i64;
  var $i915.dup: i1;
  var $i916: i32;
  var $i916.dup: i1;
  var $i917: i64;
  var $i917.dup: i1;
  var $i918: i64;
  var $i918.dup: i1;
  var $p919: ref;
  var $p919.dup: i1;
  var $i920: i64;
  var $i920.dup: i1;
  var $i921: i32;
  var $i921.dup: i1;
  var $i922: i64;
  var $i922.dup: i1;
  var $p923: ref;
  var $p923.dup: i1;
  var $i924: i64;
  var $i924.dup: i1;
  var $i925: i32;
  var $i925.dup: i1;
  var $i926: i64;
  var $i926.dup: i1;
  var $i927: i64;
  var $i927.dup: i1;
  var $i928: i64;
  var $i928.dup: i1;
  var $p929: ref;
  var $p929.dup: i1;
  var $i930: i64;
  var $i930.dup: i1;
  var $i931: i32;
  var $i931.dup: i1;
  var $i932: i64;
  var $i932.dup: i1;
  var $p933: ref;
  var $p933.dup: i1;
  var $i934: i64;
  var $i934.dup: i1;
  var $i935: i32;
  var $i935.dup: i1;
  var $i936: i64;
  var $i936.dup: i1;
  var $i937: i64;
  var $i937.dup: i1;
  var $i938: i64;
  var $i938.dup: i1;
  var $p939: ref;
  var $p939.dup: i1;
  var $i940: i64;
  var $i940.dup: i1;
  var $i941: i32;
  var $i941.dup: i1;
  var $i942: i64;
  var $i942.dup: i1;
  var $p943: ref;
  var $p943.dup: i1;
  var $i944: i64;
  var $i944.dup: i1;
  var $i945: i32;
  var $i945.dup: i1;
  var $i946: i64;
  var $i946.dup: i1;
  var $i947: i64;
  var $i947.dup: i1;
  var $i948: i64;
  var $i948.dup: i1;
  var $p949: ref;
  var $p949.dup: i1;
  var $p950: ref;
  var $p950.dup: i1;
  var $i951: i64;
  var $i951.dup: i1;
  var $i952: i32;
  var $i952.dup: i1;
  var $i953: i64;
  var $i953.dup: i1;
  var $p954: ref;
  var $p954.dup: i1;
  var $i955: i64;
  var $i955.dup: i1;
  var $i956: i32;
  var $i956.dup: i1;
  var $i957: i64;
  var $i957.dup: i1;
  var $i958: i64;
  var $i958.dup: i1;
  var $p959: ref;
  var $p959.dup: i1;
  var $i960: i64;
  var $i960.dup: i1;
  var $i961: i32;
  var $i961.dup: i1;
  var $i962: i64;
  var $i962.dup: i1;
  var $p963: ref;
  var $p963.dup: i1;
  var $i964: i64;
  var $i964.dup: i1;
  var $i965: i32;
  var $i965.dup: i1;
  var $i966: i64;
  var $i966.dup: i1;
  var $i967: i64;
  var $i967.dup: i1;
  var $p968: ref;
  var $p968.dup: i1;
  var $i969: i64;
  var $i969.dup: i1;
  var $i970: i32;
  var $i970.dup: i1;
  var $i971: i64;
  var $i971.dup: i1;
  var $p972: ref;
  var $p972.dup: i1;
  var $i973: i64;
  var $i973.dup: i1;
  var $i974: i32;
  var $i974.dup: i1;
  var $i975: i64;
  var $i975.dup: i1;
  var $i976: i64;
  var $i976.dup: i1;
  var $i977: i64;
  var $i977.dup: i1;
  var $i978: i64;
  var $i978.dup: i1;
  var $i979: i64;
  var $i979.dup: i1;
  var $p980: ref;
  var $p980.dup: i1;
  var $p981: ref;
  var $p981.dup: i1;
  var $i982: i64;
  var $i982.dup: i1;
  var $i983: i32;
  var $i983.dup: i1;
  var $i984: i64;
  var $i984.dup: i1;
  var $p985: ref;
  var $p985.dup: i1;
  var $i986: i64;
  var $i986.dup: i1;
  var $i987: i32;
  var $i987.dup: i1;
  var $i988: i64;
  var $i988.dup: i1;
  var $i989: i64;
  var $i989.dup: i1;
  var $p990: ref;
  var $p990.dup: i1;
  var $i991: i64;
  var $i991.dup: i1;
  var $i992: i32;
  var $i992.dup: i1;
  var $i993: i64;
  var $i993.dup: i1;
  var $p994: ref;
  var $p994.dup: i1;
  var $i995: i64;
  var $i995.dup: i1;
  var $i996: i32;
  var $i996.dup: i1;
  var $i997: i64;
  var $i997.dup: i1;
  var $i998: i64;
  var $i998.dup: i1;
  var $i999: i64;
  var $i999.dup: i1;
  var $p1000: ref;
  var $p1000.dup: i1;
  var $p1001: ref;
  var $p1001.dup: i1;
  var $i1002: i64;
  var $i1002.dup: i1;
  var $i1003: i32;
  var $i1003.dup: i1;
  var $i1004: i64;
  var $i1004.dup: i1;
  var $i1005: i64;
  var $i1005.dup: i1;
  var $p1006: ref;
  var $p1006.dup: i1;
  var $i1007: i64;
  var $i1007.dup: i1;
  var $i1008: i32;
  var $i1008.dup: i1;
  var $i1009: i64;
  var $i1009.dup: i1;
  var $i1010: i64;
  var $i1010.dup: i1;
  var $p1011: ref;
  var $p1011.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 36} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1,$mul.ref(0,8));
  $p3.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p3.dup == 0));
  $i4 := $load.i64($M.3,$p3);
  $i4.dup := $load.i1($M.3.dup,$p3);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 30} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  $i5.dup := $i4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  $i6.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 54} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2,$mul.ref(0,8));
  $p7.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p7.dup == 0));
  $i8 := $load.i64($M.3,$p7);
  $i8.dup := $load.i1($M.3.dup,$p7);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 48} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  $i9.dup := $i8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  $i10.dup := $i9.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 45} true;
  assume {:verifier.code 0} true;
  $i11 := $mul.i64($i6,$i10);
  $i11.dup := $or.i1($i6.dup,$i10.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0,$mul.ref(0,8));
  $p12.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 100, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12.dup == 0));
  $M.3 := $store.i64($M.3,$p12,$i11);
  $M.3.dup := $store.i1($M.3.dup,$p12,$i11.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 36} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1,$mul.ref(0,8));
  $p13.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p13.dup == 0));
  $i14 := $load.i64($M.3,$p13);
  $i14.dup := $load.i1($M.3.dup,$p13);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 30} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  $i15.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i15);
  $i16.dup := $i15.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 54} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2,$mul.ref(1,8));
  $p17.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p17.dup == 0));
  $i18 := $load.i64($M.3,$p17);
  $i18.dup := $load.i1($M.3.dup,$p17);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 48} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i64.i32($i18);
  $i19.dup := $i18.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 47} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  $i20.dup := $i19.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 45} true;
  assume {:verifier.code 0} true;
  $i21 := $mul.i64($i16,$i20);
  $i21.dup := $or.i1($i16.dup,$i20.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 36} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1,$mul.ref(1,8));
  $p22.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22.dup == 0));
  $i23 := $load.i64($M.3,$p22);
  $i23.dup := $load.i1($M.3.dup,$p22);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 30} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i64.i32($i23);
  $i24.dup := $i23.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  $i25.dup := $i24.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 54} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p2,$mul.ref(0,8));
  $p26.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $i27 := $load.i64($M.3,$p26);
  $i27.dup := $load.i1($M.3.dup,$p26);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 48} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i64.i32($i27);
  $i28.dup := $i27.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 47} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  $i29.dup := $i28.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 102, 45} true;
  assume {:verifier.code 0} true;
  $i30 := $mul.i64($i25,$i29);
  $i30.dup := $or.i1($i25.dup,$i29.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 61} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i21,$i30);
  $i31.dup := $or.i1($i21.dup,$i30.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 3} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0,$mul.ref(1,8));
  $p32.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 101, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p32.dup == 0));
  $M.3 := $store.i64($M.3,$p32,$i31);
  $M.3.dup := $store.i1($M.3.dup,$p32,$i31.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 36} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1,$mul.ref(1,8));
  $p33.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p33.dup == 0));
  $i34 := $load.i64($M.3,$p33);
  $i34.dup := $load.i1($M.3.dup,$p33);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 30} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i64.i32($i34);
  $i35.dup := $i34.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 22} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i35);
  $i36.dup := $i35.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 18} true;
  assume {:verifier.code 0} true;
  $i37 := $mul.i64(2,$i36);
  $i37.dup := $or.i1(0,$i36.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 54} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2,$mul.ref(1,8));
  $p38.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38.dup == 0));
  $i39 := $load.i64($M.3,$p38);
  $i39.dup := $load.i1($M.3.dup,$p38);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 48} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i64.i32($i39);
  $i40.dup := $i39.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 47} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  $i41.dup := $i40.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 45} true;
  assume {:verifier.code 0} true;
  $i42 := $mul.i64($i37,$i41);
  $i42.dup := $or.i1($i37.dup,$i41.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 36} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1,$mul.ref(0,8));
  $p43.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p43.dup == 0));
  $i44 := $load.i64($M.3,$p43);
  $i44.dup := $load.i1($M.3.dup,$p43);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 30} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  $i45.dup := $i44.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 22} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i45);
  $i46.dup := $i45.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 54} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p2,$mul.ref(2,8));
  $p47.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p47.dup == 0));
  $i48 := $load.i64($M.3,$p47);
  $i48.dup := $load.i1($M.3.dup,$p47);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 48} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i64.i32($i48);
  $i49.dup := $i48.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 47} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  $i50.dup := $i49.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 45} true;
  assume {:verifier.code 0} true;
  $i51 := $mul.i64($i46,$i50);
  $i51.dup := $or.i1($i46.dup,$i50.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 61} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i42,$i51);
  $i52.dup := $or.i1($i42.dup,$i51.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 36} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1,$mul.ref(2,8));
  $p53.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p53.dup == 0));
  $i54 := $load.i64($M.3,$p53);
  $i54.dup := $load.i1($M.3.dup,$p53);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 30} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i64.i32($i54);
  $i55.dup := $i54.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 22} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i55);
  $i56.dup := $i55.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 54} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p2,$mul.ref(0,8));
  $p57.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57.dup == 0));
  $i58 := $load.i64($M.3,$p57);
  $i58.dup := $load.i1($M.3.dup,$p57);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 48} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i64.i32($i58);
  $i59.dup := $i58.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 47} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i59);
  $i60.dup := $i59.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 105, 45} true;
  assume {:verifier.code 0} true;
  $i61 := $mul.i64($i56,$i60);
  $i61.dup := $or.i1($i56.dup,$i60.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 104, 61} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i52,$i61);
  $i62.dup := $or.i1($i52.dup,$i61.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 3} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0,$mul.ref(2,8));
  $p63.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 103, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p63.dup == 0));
  $M.3 := $store.i64($M.3,$p63,$i62);
  $M.3.dup := $store.i1($M.3.dup,$p63,$i62.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 36} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p1,$mul.ref(1,8));
  $p64.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p64.dup == 0));
  $i65 := $load.i64($M.3,$p64);
  $i65.dup := $load.i1($M.3.dup,$p64);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 30} true;
  assume {:verifier.code 0} true;
  $i66 := $trunc.i64.i32($i65);
  $i66.dup := $i65.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 22} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i32.i64($i66);
  $i67.dup := $i66.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 54} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p2,$mul.ref(2,8));
  $p68.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p68.dup == 0));
  $i69 := $load.i64($M.3,$p68);
  $i69.dup := $load.i1($M.3.dup,$p68);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 48} true;
  assume {:verifier.code 0} true;
  $i70 := $trunc.i64.i32($i69);
  $i70.dup := $i69.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 47} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i70);
  $i71.dup := $i70.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 45} true;
  assume {:verifier.code 0} true;
  $i72 := $mul.i64($i67,$i71);
  $i72.dup := $or.i1($i67.dup,$i71.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 36} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p1,$mul.ref(2,8));
  $p73.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p73.dup == 0));
  $i74 := $load.i64($M.3,$p73);
  $i74.dup := $load.i1($M.3.dup,$p73);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 30} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i64.i32($i74);
  $i75.dup := $i74.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 22} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i32.i64($i75);
  $i76.dup := $i75.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 54} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p2,$mul.ref(1,8));
  $p77.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p77.dup == 0));
  $i78 := $load.i64($M.3,$p77);
  $i78.dup := $load.i1($M.3.dup,$p77);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 48} true;
  assume {:verifier.code 0} true;
  $i79 := $trunc.i64.i32($i78);
  $i79.dup := $i78.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 47} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i32.i64($i79);
  $i80.dup := $i79.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 45} true;
  assume {:verifier.code 0} true;
  $i81 := $mul.i64($i76,$i80);
  $i81.dup := $or.i1($i76.dup,$i80.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 61} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i64($i72,$i81);
  $i82.dup := $or.i1($i72.dup,$i81.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 36} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p1,$mul.ref(0,8));
  $p83.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p83.dup == 0));
  $i84 := $load.i64($M.3,$p83);
  $i84.dup := $load.i1($M.3.dup,$p83);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 30} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i64.i32($i84);
  $i85.dup := $i84.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 22} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i32.i64($i85);
  $i86.dup := $i85.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 54} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p2,$mul.ref(3,8));
  $p87.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p87.dup == 0));
  $i88 := $load.i64($M.3,$p87);
  $i88.dup := $load.i1($M.3.dup,$p87);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 48} true;
  assume {:verifier.code 0} true;
  $i89 := $trunc.i64.i32($i88);
  $i89.dup := $i88.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 47} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i32.i64($i89);
  $i90.dup := $i89.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 45} true;
  assume {:verifier.code 0} true;
  $i91 := $mul.i64($i86,$i90);
  $i91.dup := $or.i1($i86.dup,$i90.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 107, 61} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i64($i82,$i91);
  $i92.dup := $or.i1($i82.dup,$i91.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 36} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p1,$mul.ref(3,8));
  $p93.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p93.dup == 0));
  $i94 := $load.i64($M.3,$p93);
  $i94.dup := $load.i1($M.3.dup,$p93);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 30} true;
  assume {:verifier.code 0} true;
  $i95 := $trunc.i64.i32($i94);
  $i95.dup := $i94.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 22} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i32.i64($i95);
  $i96.dup := $i95.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 54} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p2,$mul.ref(0,8));
  $p97.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p97.dup == 0));
  $i98 := $load.i64($M.3,$p97);
  $i98.dup := $load.i1($M.3.dup,$p97);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 48} true;
  assume {:verifier.code 0} true;
  $i99 := $trunc.i64.i32($i98);
  $i99.dup := $i98.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 47} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  $i100.dup := $i99.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 109, 45} true;
  assume {:verifier.code 0} true;
  $i101 := $mul.i64($i96,$i100);
  $i101.dup := $or.i1($i96.dup,$i100.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 108, 61} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i64($i92,$i101);
  $i102.dup := $or.i1($i92.dup,$i101.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 3} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0,$mul.ref(3,8));
  $p103.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 106, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p103.dup == 0));
  $M.3 := $store.i64($M.3,$p103,$i102);
  $M.3.dup := $store.i1($M.3.dup,$p103,$i102.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 36} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p1,$mul.ref(2,8));
  $p104.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p104.dup == 0));
  $i105 := $load.i64($M.3,$p104);
  $i105.dup := $load.i1($M.3.dup,$p104);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 30} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i64.i32($i105);
  $i106.dup := $i105.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 22} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i32.i64($i106);
  $i107.dup := $i106.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 54} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p2,$mul.ref(2,8));
  $p108.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p108.dup == 0));
  $i109 := $load.i64($M.3,$p108);
  $i109.dup := $load.i1($M.3.dup,$p108);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 48} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i64.i32($i109);
  $i110.dup := $i109.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 47} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i32.i64($i110);
  $i111.dup := $i110.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 45} true;
  assume {:verifier.code 0} true;
  $i112 := $mul.i64($i107,$i111);
  $i112.dup := $or.i1($i107.dup,$i111.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 36} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p1,$mul.ref(1,8));
  $p113.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p113.dup == 0));
  $i114 := $load.i64($M.3,$p113);
  $i114.dup := $load.i1($M.3.dup,$p113);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 30} true;
  assume {:verifier.code 0} true;
  $i115 := $trunc.i64.i32($i114);
  $i115.dup := $i114.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 22} true;
  assume {:verifier.code 0} true;
  $i116 := $sext.i32.i64($i115);
  $i116.dup := $i115.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 54} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p2,$mul.ref(3,8));
  $p117.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p117.dup == 0));
  $i118 := $load.i64($M.3,$p117);
  $i118.dup := $load.i1($M.3.dup,$p117);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 48} true;
  assume {:verifier.code 0} true;
  $i119 := $trunc.i64.i32($i118);
  $i119.dup := $i118.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 47} true;
  assume {:verifier.code 0} true;
  $i120 := $sext.i32.i64($i119);
  $i120.dup := $i119.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 45} true;
  assume {:verifier.code 0} true;
  $i121 := $mul.i64($i116,$i120);
  $i121.dup := $or.i1($i116.dup,$i120.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 36} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p1,$mul.ref(3,8));
  $p122.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p122.dup == 0));
  $i123 := $load.i64($M.3,$p122);
  $i123.dup := $load.i1($M.3.dup,$p122);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 30} true;
  assume {:verifier.code 0} true;
  $i124 := $trunc.i64.i32($i123);
  $i124.dup := $i123.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 22} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i32.i64($i124);
  $i125.dup := $i124.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 54} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p2,$mul.ref(1,8));
  $p126.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p126.dup == 0));
  $i127 := $load.i64($M.3,$p126);
  $i127.dup := $load.i1($M.3.dup,$p126);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 48} true;
  assume {:verifier.code 0} true;
  $i128 := $trunc.i64.i32($i127);
  $i128.dup := $i127.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 47} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i128);
  $i129.dup := $i128.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 45} true;
  assume {:verifier.code 0} true;
  $i130 := $mul.i64($i125,$i129);
  $i130.dup := $or.i1($i125.dup,$i129.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 61} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i64($i121,$i130);
  $i131.dup := $or.i1($i121.dup,$i130.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 111, 18} true;
  assume {:verifier.code 0} true;
  $i132 := $mul.i64(2,$i131);
  $i132.dup := $or.i1(0,$i131.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 61} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i64($i112,$i132);
  $i133.dup := $or.i1($i112.dup,$i132.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 36} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p1,$mul.ref(0,8));
  $p134.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p134.dup == 0));
  $i135 := $load.i64($M.3,$p134);
  $i135.dup := $load.i1($M.3.dup,$p134);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 30} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i64.i32($i135);
  $i136.dup := $i135.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 22} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i32.i64($i136);
  $i137.dup := $i136.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 54} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p2,$mul.ref(4,8));
  $p138.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p138.dup == 0));
  $i139 := $load.i64($M.3,$p138);
  $i139.dup := $load.i1($M.3.dup,$p138);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 48} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i64.i32($i139);
  $i140.dup := $i139.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 47} true;
  assume {:verifier.code 0} true;
  $i141 := $sext.i32.i64($i140);
  $i141.dup := $i140.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 45} true;
  assume {:verifier.code 0} true;
  $i142 := $mul.i64($i137,$i141);
  $i142.dup := $or.i1($i137.dup,$i141.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 112, 62} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i64($i133,$i142);
  $i143.dup := $or.i1($i133.dup,$i142.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 36} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p1,$mul.ref(4,8));
  $p144.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p144.dup == 0));
  $i145 := $load.i64($M.3,$p144);
  $i145.dup := $load.i1($M.3.dup,$p144);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 30} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i64.i32($i145);
  $i146.dup := $i145.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 22} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i32.i64($i146);
  $i147.dup := $i146.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 54} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p2,$mul.ref(0,8));
  $p148.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p148.dup == 0));
  $i149 := $load.i64($M.3,$p148);
  $i149.dup := $load.i1($M.3.dup,$p148);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 48} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i64.i32($i149);
  $i150.dup := $i149.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 47} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i32.i64($i150);
  $i151.dup := $i150.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 114, 45} true;
  assume {:verifier.code 0} true;
  $i152 := $mul.i64($i147,$i151);
  $i152.dup := $or.i1($i147.dup,$i151.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 113, 61} true;
  assume {:verifier.code 0} true;
  $i153 := $add.i64($i143,$i152);
  $i153.dup := $or.i1($i143.dup,$i152.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 3} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0,$mul.ref(4,8));
  $p154.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 110, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p154.dup == 0));
  $M.3 := $store.i64($M.3,$p154,$i153);
  $M.3.dup := $store.i1($M.3.dup,$p154,$i153.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 36} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p1,$mul.ref(2,8));
  $p155.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p155.dup == 0));
  $i156 := $load.i64($M.3,$p155);
  $i156.dup := $load.i1($M.3.dup,$p155);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 30} true;
  assume {:verifier.code 0} true;
  $i157 := $trunc.i64.i32($i156);
  $i157.dup := $i156.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 22} true;
  assume {:verifier.code 0} true;
  $i158 := $sext.i32.i64($i157);
  $i158.dup := $i157.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 54} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p2,$mul.ref(3,8));
  $p159.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p159.dup == 0));
  $i160 := $load.i64($M.3,$p159);
  $i160.dup := $load.i1($M.3.dup,$p159);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 48} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i160);
  $i161.dup := $i160.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 47} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i32.i64($i161);
  $i162.dup := $i161.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 45} true;
  assume {:verifier.code 0} true;
  $i163 := $mul.i64($i158,$i162);
  $i163.dup := $or.i1($i158.dup,$i162.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 36} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p1,$mul.ref(3,8));
  $p164.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p164.dup == 0));
  $i165 := $load.i64($M.3,$p164);
  $i165.dup := $load.i1($M.3.dup,$p164);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 30} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i64.i32($i165);
  $i166.dup := $i165.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 22} true;
  assume {:verifier.code 0} true;
  $i167 := $sext.i32.i64($i166);
  $i167.dup := $i166.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 54} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p2,$mul.ref(2,8));
  $p168.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p168.dup == 0));
  $i169 := $load.i64($M.3,$p168);
  $i169.dup := $load.i1($M.3.dup,$p168);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 48} true;
  assume {:verifier.code 0} true;
  $i170 := $trunc.i64.i32($i169);
  $i170.dup := $i169.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 47} true;
  assume {:verifier.code 0} true;
  $i171 := $sext.i32.i64($i170);
  $i171.dup := $i170.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 45} true;
  assume {:verifier.code 0} true;
  $i172 := $mul.i64($i167,$i171);
  $i172.dup := $or.i1($i167.dup,$i171.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 61} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i64($i163,$i172);
  $i173.dup := $or.i1($i163.dup,$i172.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 36} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p1,$mul.ref(1,8));
  $p174.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p174.dup == 0));
  $i175 := $load.i64($M.3,$p174);
  $i175.dup := $load.i1($M.3.dup,$p174);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 30} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i32($i175);
  $i176.dup := $i175.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 22} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i32.i64($i176);
  $i177.dup := $i176.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 54} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p2,$mul.ref(4,8));
  $p178.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p178.dup == 0));
  $i179 := $load.i64($M.3,$p178);
  $i179.dup := $load.i1($M.3.dup,$p178);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 48} true;
  assume {:verifier.code 0} true;
  $i180 := $trunc.i64.i32($i179);
  $i180.dup := $i179.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 47} true;
  assume {:verifier.code 0} true;
  $i181 := $sext.i32.i64($i180);
  $i181.dup := $i180.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 45} true;
  assume {:verifier.code 0} true;
  $i182 := $mul.i64($i177,$i181);
  $i182.dup := $or.i1($i177.dup,$i181.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 116, 61} true;
  assume {:verifier.code 0} true;
  $i183 := $add.i64($i173,$i182);
  $i183.dup := $or.i1($i173.dup,$i182.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 36} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p1,$mul.ref(4,8));
  $p184.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p184.dup == 0));
  $i185 := $load.i64($M.3,$p184);
  $i185.dup := $load.i1($M.3.dup,$p184);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 30} true;
  assume {:verifier.code 0} true;
  $i186 := $trunc.i64.i32($i185);
  $i186.dup := $i185.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 22} true;
  assume {:verifier.code 0} true;
  $i187 := $sext.i32.i64($i186);
  $i187.dup := $i186.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 54} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p2,$mul.ref(1,8));
  $p188.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p188.dup == 0));
  $i189 := $load.i64($M.3,$p188);
  $i189.dup := $load.i1($M.3.dup,$p188);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 48} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i64.i32($i189);
  $i190.dup := $i189.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 47} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i32.i64($i190);
  $i191.dup := $i190.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 45} true;
  assume {:verifier.code 0} true;
  $i192 := $mul.i64($i187,$i191);
  $i192.dup := $or.i1($i187.dup,$i191.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 117, 61} true;
  assume {:verifier.code 0} true;
  $i193 := $add.i64($i183,$i192);
  $i193.dup := $or.i1($i183.dup,$i192.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 36} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p1,$mul.ref(0,8));
  $p194.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p194.dup == 0));
  $i195 := $load.i64($M.3,$p194);
  $i195.dup := $load.i1($M.3.dup,$p194);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 30} true;
  assume {:verifier.code 0} true;
  $i196 := $trunc.i64.i32($i195);
  $i196.dup := $i195.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 22} true;
  assume {:verifier.code 0} true;
  $i197 := $sext.i32.i64($i196);
  $i197.dup := $i196.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 54} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p2,$mul.ref(5,8));
  $p198.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p198.dup == 0));
  $i199 := $load.i64($M.3,$p198);
  $i199.dup := $load.i1($M.3.dup,$p198);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 48} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i64.i32($i199);
  $i200.dup := $i199.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 47} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i32.i64($i200);
  $i201.dup := $i200.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 45} true;
  assume {:verifier.code 0} true;
  $i202 := $mul.i64($i197,$i201);
  $i202.dup := $or.i1($i197.dup,$i201.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 118, 61} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i64($i193,$i202);
  $i203.dup := $or.i1($i193.dup,$i202.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 36} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p1,$mul.ref(5,8));
  $p204.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p204.dup == 0));
  $i205 := $load.i64($M.3,$p204);
  $i205.dup := $load.i1($M.3.dup,$p204);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 30} true;
  assume {:verifier.code 0} true;
  $i206 := $trunc.i64.i32($i205);
  $i206.dup := $i205.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 22} true;
  assume {:verifier.code 0} true;
  $i207 := $sext.i32.i64($i206);
  $i207.dup := $i206.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 54} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p2,$mul.ref(0,8));
  $p208.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p208.dup == 0));
  $i209 := $load.i64($M.3,$p208);
  $i209.dup := $load.i1($M.3.dup,$p208);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 48} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i64.i32($i209);
  $i210.dup := $i209.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 47} true;
  assume {:verifier.code 0} true;
  $i211 := $sext.i32.i64($i210);
  $i211.dup := $i210.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 120, 45} true;
  assume {:verifier.code 0} true;
  $i212 := $mul.i64($i207,$i211);
  $i212.dup := $or.i1($i207.dup,$i211.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 119, 61} true;
  assume {:verifier.code 0} true;
  $i213 := $add.i64($i203,$i212);
  $i213.dup := $or.i1($i203.dup,$i212.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 3} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p0,$mul.ref(5,8));
  $p214.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 115, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p214.dup == 0));
  $M.3 := $store.i64($M.3,$p214,$i213);
  $M.3.dup := $store.i1($M.3.dup,$p214,$i213.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 36} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p1,$mul.ref(3,8));
  $p215.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p215.dup == 0));
  $i216 := $load.i64($M.3,$p215);
  $i216.dup := $load.i1($M.3.dup,$p215);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 30} true;
  assume {:verifier.code 0} true;
  $i217 := $trunc.i64.i32($i216);
  $i217.dup := $i216.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 22} true;
  assume {:verifier.code 0} true;
  $i218 := $sext.i32.i64($i217);
  $i218.dup := $i217.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 54} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p2,$mul.ref(3,8));
  $p219.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p219.dup == 0));
  $i220 := $load.i64($M.3,$p219);
  $i220.dup := $load.i1($M.3.dup,$p219);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 48} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i64.i32($i220);
  $i221.dup := $i220.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 47} true;
  assume {:verifier.code 0} true;
  $i222 := $sext.i32.i64($i221);
  $i222.dup := $i221.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 45} true;
  assume {:verifier.code 0} true;
  $i223 := $mul.i64($i218,$i222);
  $i223.dup := $or.i1($i218.dup,$i222.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 36} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p1,$mul.ref(1,8));
  $p224.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p224.dup == 0));
  $i225 := $load.i64($M.3,$p224);
  $i225.dup := $load.i1($M.3.dup,$p224);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 30} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i64.i32($i225);
  $i226.dup := $i225.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 22} true;
  assume {:verifier.code 0} true;
  $i227 := $sext.i32.i64($i226);
  $i227.dup := $i226.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 54} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p2,$mul.ref(5,8));
  $p228.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p228.dup == 0));
  $i229 := $load.i64($M.3,$p228);
  $i229.dup := $load.i1($M.3.dup,$p228);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 48} true;
  assume {:verifier.code 0} true;
  $i230 := $trunc.i64.i32($i229);
  $i230.dup := $i229.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 47} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i32.i64($i230);
  $i231.dup := $i230.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 45} true;
  assume {:verifier.code 0} true;
  $i232 := $mul.i64($i227,$i231);
  $i232.dup := $or.i1($i227.dup,$i231.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 61} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i64($i223,$i232);
  $i233.dup := $or.i1($i223.dup,$i232.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 36} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p1,$mul.ref(5,8));
  $p234.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p234.dup == 0));
  $i235 := $load.i64($M.3,$p234);
  $i235.dup := $load.i1($M.3.dup,$p234);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 30} true;
  assume {:verifier.code 0} true;
  $i236 := $trunc.i64.i32($i235);
  $i236.dup := $i235.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 22} true;
  assume {:verifier.code 0} true;
  $i237 := $sext.i32.i64($i236);
  $i237.dup := $i236.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 54} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p2,$mul.ref(1,8));
  $p238.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p238.dup == 0));
  $i239 := $load.i64($M.3,$p238);
  $i239.dup := $load.i1($M.3.dup,$p238);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 48} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i64.i32($i239);
  $i240.dup := $i239.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 47} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i32.i64($i240);
  $i241.dup := $i240.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 45} true;
  assume {:verifier.code 0} true;
  $i242 := $mul.i64($i237,$i241);
  $i242.dup := $or.i1($i237.dup,$i241.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 122, 61} true;
  assume {:verifier.code 0} true;
  $i243 := $add.i64($i233,$i242);
  $i243.dup := $or.i1($i233.dup,$i242.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 18} true;
  assume {:verifier.code 0} true;
  $i244 := $mul.i64(2,$i243);
  $i244.dup := $or.i1(0,$i243.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 36} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p1,$mul.ref(2,8));
  $p245.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p245.dup == 0));
  $i246 := $load.i64($M.3,$p245);
  $i246.dup := $load.i1($M.3.dup,$p245);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 30} true;
  assume {:verifier.code 0} true;
  $i247 := $trunc.i64.i32($i246);
  $i247.dup := $i246.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 22} true;
  assume {:verifier.code 0} true;
  $i248 := $sext.i32.i64($i247);
  $i248.dup := $i247.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 54} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($p2,$mul.ref(4,8));
  $p249.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p249.dup == 0));
  $i250 := $load.i64($M.3,$p249);
  $i250.dup := $load.i1($M.3.dup,$p249);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 48} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i64.i32($i250);
  $i251.dup := $i250.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 47} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i32.i64($i251);
  $i252.dup := $i251.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 45} true;
  assume {:verifier.code 0} true;
  $i253 := $mul.i64($i248,$i252);
  $i253.dup := $or.i1($i248.dup,$i252.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 123, 62} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i64($i244,$i253);
  $i254.dup := $or.i1($i244.dup,$i253.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 36} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($p1,$mul.ref(4,8));
  $p255.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p255.dup == 0));
  $i256 := $load.i64($M.3,$p255);
  $i256.dup := $load.i1($M.3.dup,$p255);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 30} true;
  assume {:verifier.code 0} true;
  $i257 := $trunc.i64.i32($i256);
  $i257.dup := $i256.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 22} true;
  assume {:verifier.code 0} true;
  $i258 := $sext.i32.i64($i257);
  $i258.dup := $i257.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 54} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p2,$mul.ref(2,8));
  $p259.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p259.dup == 0));
  $i260 := $load.i64($M.3,$p259);
  $i260.dup := $load.i1($M.3.dup,$p259);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 48} true;
  assume {:verifier.code 0} true;
  $i261 := $trunc.i64.i32($i260);
  $i261.dup := $i260.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 47} true;
  assume {:verifier.code 0} true;
  $i262 := $sext.i32.i64($i261);
  $i262.dup := $i261.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 45} true;
  assume {:verifier.code 0} true;
  $i263 := $mul.i64($i258,$i262);
  $i263.dup := $or.i1($i258.dup,$i262.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 124, 61} true;
  assume {:verifier.code 0} true;
  $i264 := $add.i64($i254,$i263);
  $i264.dup := $or.i1($i254.dup,$i263.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 36} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p1,$mul.ref(0,8));
  $p265.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p265.dup == 0));
  $i266 := $load.i64($M.3,$p265);
  $i266.dup := $load.i1($M.3.dup,$p265);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 30} true;
  assume {:verifier.code 0} true;
  $i267 := $trunc.i64.i32($i266);
  $i267.dup := $i266.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 22} true;
  assume {:verifier.code 0} true;
  $i268 := $sext.i32.i64($i267);
  $i268.dup := $i267.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 54} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p2,$mul.ref(6,8));
  $p269.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p269.dup == 0));
  $i270 := $load.i64($M.3,$p269);
  $i270.dup := $load.i1($M.3.dup,$p269);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 48} true;
  assume {:verifier.code 0} true;
  $i271 := $trunc.i64.i32($i270);
  $i271.dup := $i270.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 47} true;
  assume {:verifier.code 0} true;
  $i272 := $sext.i32.i64($i271);
  $i272.dup := $i271.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 45} true;
  assume {:verifier.code 0} true;
  $i273 := $mul.i64($i268,$i272);
  $i273.dup := $or.i1($i268.dup,$i272.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 125, 61} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i64($i264,$i273);
  $i274.dup := $or.i1($i264.dup,$i273.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 36} true;
  assume {:verifier.code 0} true;
  $p275 := $add.ref($p1,$mul.ref(6,8));
  $p275.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p275.dup == 0));
  $i276 := $load.i64($M.3,$p275);
  $i276.dup := $load.i1($M.3.dup,$p275);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 30} true;
  assume {:verifier.code 0} true;
  $i277 := $trunc.i64.i32($i276);
  $i277.dup := $i276.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 22} true;
  assume {:verifier.code 0} true;
  $i278 := $sext.i32.i64($i277);
  $i278.dup := $i277.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 54} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p2,$mul.ref(0,8));
  $p279.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p279.dup == 0));
  $i280 := $load.i64($M.3,$p279);
  $i280.dup := $load.i1($M.3.dup,$p279);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 48} true;
  assume {:verifier.code 0} true;
  $i281 := $trunc.i64.i32($i280);
  $i281.dup := $i280.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 47} true;
  assume {:verifier.code 0} true;
  $i282 := $sext.i32.i64($i281);
  $i282.dup := $i281.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 127, 45} true;
  assume {:verifier.code 0} true;
  $i283 := $mul.i64($i278,$i282);
  $i283.dup := $or.i1($i278.dup,$i282.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 126, 61} true;
  assume {:verifier.code 0} true;
  $i284 := $add.i64($i274,$i283);
  $i284.dup := $or.i1($i274.dup,$i283.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 3} true;
  assume {:verifier.code 0} true;
  $p285 := $add.ref($p0,$mul.ref(6,8));
  $p285.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 121, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p285.dup == 0));
  $M.3 := $store.i64($M.3,$p285,$i284);
  $M.3.dup := $store.i1($M.3.dup,$p285,$i284.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 36} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p1,$mul.ref(3,8));
  $p286.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p286.dup == 0));
  $i287 := $load.i64($M.3,$p286);
  $i287.dup := $load.i1($M.3.dup,$p286);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 30} true;
  assume {:verifier.code 0} true;
  $i288 := $trunc.i64.i32($i287);
  $i288.dup := $i287.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 22} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i32.i64($i288);
  $i289.dup := $i288.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 54} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($p2,$mul.ref(4,8));
  $p290.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p290.dup == 0));
  $i291 := $load.i64($M.3,$p290);
  $i291.dup := $load.i1($M.3.dup,$p290);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 48} true;
  assume {:verifier.code 0} true;
  $i292 := $trunc.i64.i32($i291);
  $i292.dup := $i291.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 47} true;
  assume {:verifier.code 0} true;
  $i293 := $sext.i32.i64($i292);
  $i293.dup := $i292.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 45} true;
  assume {:verifier.code 0} true;
  $i294 := $mul.i64($i289,$i293);
  $i294.dup := $or.i1($i289.dup,$i293.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 36} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p1,$mul.ref(4,8));
  $p295.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p295.dup == 0));
  $i296 := $load.i64($M.3,$p295);
  $i296.dup := $load.i1($M.3.dup,$p295);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 30} true;
  assume {:verifier.code 0} true;
  $i297 := $trunc.i64.i32($i296);
  $i297.dup := $i296.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 22} true;
  assume {:verifier.code 0} true;
  $i298 := $sext.i32.i64($i297);
  $i298.dup := $i297.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 54} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p2,$mul.ref(3,8));
  $p299.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p299.dup == 0));
  $i300 := $load.i64($M.3,$p299);
  $i300.dup := $load.i1($M.3.dup,$p299);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 48} true;
  assume {:verifier.code 0} true;
  $i301 := $trunc.i64.i32($i300);
  $i301.dup := $i300.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 47} true;
  assume {:verifier.code 0} true;
  $i302 := $sext.i32.i64($i301);
  $i302.dup := $i301.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 45} true;
  assume {:verifier.code 0} true;
  $i303 := $mul.i64($i298,$i302);
  $i303.dup := $or.i1($i298.dup,$i302.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 61} true;
  assume {:verifier.code 0} true;
  $i304 := $add.i64($i294,$i303);
  $i304.dup := $or.i1($i294.dup,$i303.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 36} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p1,$mul.ref(2,8));
  $p305.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p305.dup == 0));
  $i306 := $load.i64($M.3,$p305);
  $i306.dup := $load.i1($M.3.dup,$p305);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 30} true;
  assume {:verifier.code 0} true;
  $i307 := $trunc.i64.i32($i306);
  $i307.dup := $i306.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 22} true;
  assume {:verifier.code 0} true;
  $i308 := $sext.i32.i64($i307);
  $i308.dup := $i307.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 54} true;
  assume {:verifier.code 0} true;
  $p309 := $add.ref($p2,$mul.ref(5,8));
  $p309.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p309.dup == 0));
  $i310 := $load.i64($M.3,$p309);
  $i310.dup := $load.i1($M.3.dup,$p309);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 48} true;
  assume {:verifier.code 0} true;
  $i311 := $trunc.i64.i32($i310);
  $i311.dup := $i310.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 47} true;
  assume {:verifier.code 0} true;
  $i312 := $sext.i32.i64($i311);
  $i312.dup := $i311.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 45} true;
  assume {:verifier.code 0} true;
  $i313 := $mul.i64($i308,$i312);
  $i313.dup := $or.i1($i308.dup,$i312.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 129, 61} true;
  assume {:verifier.code 0} true;
  $i314 := $add.i64($i304,$i313);
  $i314.dup := $or.i1($i304.dup,$i313.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 36} true;
  assume {:verifier.code 0} true;
  $p315 := $add.ref($p1,$mul.ref(5,8));
  $p315.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p315.dup == 0));
  $i316 := $load.i64($M.3,$p315);
  $i316.dup := $load.i1($M.3.dup,$p315);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 30} true;
  assume {:verifier.code 0} true;
  $i317 := $trunc.i64.i32($i316);
  $i317.dup := $i316.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 22} true;
  assume {:verifier.code 0} true;
  $i318 := $sext.i32.i64($i317);
  $i318.dup := $i317.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 54} true;
  assume {:verifier.code 0} true;
  $p319 := $add.ref($p2,$mul.ref(2,8));
  $p319.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p319.dup == 0));
  $i320 := $load.i64($M.3,$p319);
  $i320.dup := $load.i1($M.3.dup,$p319);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 48} true;
  assume {:verifier.code 0} true;
  $i321 := $trunc.i64.i32($i320);
  $i321.dup := $i320.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 47} true;
  assume {:verifier.code 0} true;
  $i322 := $sext.i32.i64($i321);
  $i322.dup := $i321.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 45} true;
  assume {:verifier.code 0} true;
  $i323 := $mul.i64($i318,$i322);
  $i323.dup := $or.i1($i318.dup,$i322.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 130, 61} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i64($i314,$i323);
  $i324.dup := $or.i1($i314.dup,$i323.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 36} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($p1,$mul.ref(1,8));
  $p325.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p325.dup == 0));
  $i326 := $load.i64($M.3,$p325);
  $i326.dup := $load.i1($M.3.dup,$p325);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 30} true;
  assume {:verifier.code 0} true;
  $i327 := $trunc.i64.i32($i326);
  $i327.dup := $i326.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 22} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i32.i64($i327);
  $i328.dup := $i327.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 54} true;
  assume {:verifier.code 0} true;
  $p329 := $add.ref($p2,$mul.ref(6,8));
  $p329.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p329.dup == 0));
  $i330 := $load.i64($M.3,$p329);
  $i330.dup := $load.i1($M.3.dup,$p329);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 48} true;
  assume {:verifier.code 0} true;
  $i331 := $trunc.i64.i32($i330);
  $i331.dup := $i330.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 47} true;
  assume {:verifier.code 0} true;
  $i332 := $sext.i32.i64($i331);
  $i332.dup := $i331.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 45} true;
  assume {:verifier.code 0} true;
  $i333 := $mul.i64($i328,$i332);
  $i333.dup := $or.i1($i328.dup,$i332.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 131, 61} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i64($i324,$i333);
  $i334.dup := $or.i1($i324.dup,$i333.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 36} true;
  assume {:verifier.code 0} true;
  $p335 := $add.ref($p1,$mul.ref(6,8));
  $p335.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p335.dup == 0));
  $i336 := $load.i64($M.3,$p335);
  $i336.dup := $load.i1($M.3.dup,$p335);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 30} true;
  assume {:verifier.code 0} true;
  $i337 := $trunc.i64.i32($i336);
  $i337.dup := $i336.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 22} true;
  assume {:verifier.code 0} true;
  $i338 := $sext.i32.i64($i337);
  $i338.dup := $i337.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 54} true;
  assume {:verifier.code 0} true;
  $p339 := $add.ref($p2,$mul.ref(1,8));
  $p339.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p339.dup == 0));
  $i340 := $load.i64($M.3,$p339);
  $i340.dup := $load.i1($M.3.dup,$p339);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 48} true;
  assume {:verifier.code 0} true;
  $i341 := $trunc.i64.i32($i340);
  $i341.dup := $i340.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 47} true;
  assume {:verifier.code 0} true;
  $i342 := $sext.i32.i64($i341);
  $i342.dup := $i341.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 45} true;
  assume {:verifier.code 0} true;
  $i343 := $mul.i64($i338,$i342);
  $i343.dup := $or.i1($i338.dup,$i342.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 132, 61} true;
  assume {:verifier.code 0} true;
  $i344 := $add.i64($i334,$i343);
  $i344.dup := $or.i1($i334.dup,$i343.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 36} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p1,$mul.ref(0,8));
  $p345.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p345.dup == 0));
  $i346 := $load.i64($M.3,$p345);
  $i346.dup := $load.i1($M.3.dup,$p345);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 30} true;
  assume {:verifier.code 0} true;
  $i347 := $trunc.i64.i32($i346);
  $i347.dup := $i346.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 22} true;
  assume {:verifier.code 0} true;
  $i348 := $sext.i32.i64($i347);
  $i348.dup := $i347.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 54} true;
  assume {:verifier.code 0} true;
  $p349 := $add.ref($p2,$mul.ref(7,8));
  $p349.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p349.dup == 0));
  $i350 := $load.i64($M.3,$p349);
  $i350.dup := $load.i1($M.3.dup,$p349);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 48} true;
  assume {:verifier.code 0} true;
  $i351 := $trunc.i64.i32($i350);
  $i351.dup := $i350.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 47} true;
  assume {:verifier.code 0} true;
  $i352 := $sext.i32.i64($i351);
  $i352.dup := $i351.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 45} true;
  assume {:verifier.code 0} true;
  $i353 := $mul.i64($i348,$i352);
  $i353.dup := $or.i1($i348.dup,$i352.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 133, 61} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i64($i344,$i353);
  $i354.dup := $or.i1($i344.dup,$i353.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 36} true;
  assume {:verifier.code 0} true;
  $p355 := $add.ref($p1,$mul.ref(7,8));
  $p355.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p355.dup == 0));
  $i356 := $load.i64($M.3,$p355);
  $i356.dup := $load.i1($M.3.dup,$p355);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 30} true;
  assume {:verifier.code 0} true;
  $i357 := $trunc.i64.i32($i356);
  $i357.dup := $i356.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 22} true;
  assume {:verifier.code 0} true;
  $i358 := $sext.i32.i64($i357);
  $i358.dup := $i357.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 54} true;
  assume {:verifier.code 0} true;
  $p359 := $add.ref($p2,$mul.ref(0,8));
  $p359.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p359.dup == 0));
  $i360 := $load.i64($M.3,$p359);
  $i360.dup := $load.i1($M.3.dup,$p359);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 48} true;
  assume {:verifier.code 0} true;
  $i361 := $trunc.i64.i32($i360);
  $i361.dup := $i360.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 47} true;
  assume {:verifier.code 0} true;
  $i362 := $sext.i32.i64($i361);
  $i362.dup := $i361.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 135, 45} true;
  assume {:verifier.code 0} true;
  $i363 := $mul.i64($i358,$i362);
  $i363.dup := $or.i1($i358.dup,$i362.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 134, 61} true;
  assume {:verifier.code 0} true;
  $i364 := $add.i64($i354,$i363);
  $i364.dup := $or.i1($i354.dup,$i363.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 3} true;
  assume {:verifier.code 0} true;
  $p365 := $add.ref($p0,$mul.ref(7,8));
  $p365.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 128, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p365.dup == 0));
  $M.3 := $store.i64($M.3,$p365,$i364);
  $M.3.dup := $store.i1($M.3.dup,$p365,$i364.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 36} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p1,$mul.ref(4,8));
  $p366.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p366.dup == 0));
  $i367 := $load.i64($M.3,$p366);
  $i367.dup := $load.i1($M.3.dup,$p366);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 30} true;
  assume {:verifier.code 0} true;
  $i368 := $trunc.i64.i32($i367);
  $i368.dup := $i367.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 22} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i32.i64($i368);
  $i369.dup := $i368.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 54} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p2,$mul.ref(4,8));
  $p370.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p370.dup == 0));
  $i371 := $load.i64($M.3,$p370);
  $i371.dup := $load.i1($M.3.dup,$p370);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 48} true;
  assume {:verifier.code 0} true;
  $i372 := $trunc.i64.i32($i371);
  $i372.dup := $i371.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 47} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i372);
  $i373.dup := $i372.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 45} true;
  assume {:verifier.code 0} true;
  $i374 := $mul.i64($i369,$i373);
  $i374.dup := $or.i1($i369.dup,$i373.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 36} true;
  assume {:verifier.code 0} true;
  $p375 := $add.ref($p1,$mul.ref(3,8));
  $p375.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p375.dup == 0));
  $i376 := $load.i64($M.3,$p375);
  $i376.dup := $load.i1($M.3.dup,$p375);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 30} true;
  assume {:verifier.code 0} true;
  $i377 := $trunc.i64.i32($i376);
  $i377.dup := $i376.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 22} true;
  assume {:verifier.code 0} true;
  $i378 := $sext.i32.i64($i377);
  $i378.dup := $i377.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 54} true;
  assume {:verifier.code 0} true;
  $p379 := $add.ref($p2,$mul.ref(5,8));
  $p379.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p379.dup == 0));
  $i380 := $load.i64($M.3,$p379);
  $i380.dup := $load.i1($M.3.dup,$p379);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 48} true;
  assume {:verifier.code 0} true;
  $i381 := $trunc.i64.i32($i380);
  $i381.dup := $i380.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 47} true;
  assume {:verifier.code 0} true;
  $i382 := $sext.i32.i64($i381);
  $i382.dup := $i381.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 45} true;
  assume {:verifier.code 0} true;
  $i383 := $mul.i64($i378,$i382);
  $i383.dup := $or.i1($i378.dup,$i382.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 36} true;
  assume {:verifier.code 0} true;
  $p384 := $add.ref($p1,$mul.ref(5,8));
  $p384.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p384.dup == 0));
  $i385 := $load.i64($M.3,$p384);
  $i385.dup := $load.i1($M.3.dup,$p384);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 30} true;
  assume {:verifier.code 0} true;
  $i386 := $trunc.i64.i32($i385);
  $i386.dup := $i385.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 22} true;
  assume {:verifier.code 0} true;
  $i387 := $sext.i32.i64($i386);
  $i387.dup := $i386.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 54} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p2,$mul.ref(3,8));
  $p388.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p388.dup == 0));
  $i389 := $load.i64($M.3,$p388);
  $i389.dup := $load.i1($M.3.dup,$p388);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 48} true;
  assume {:verifier.code 0} true;
  $i390 := $trunc.i64.i32($i389);
  $i390.dup := $i389.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 47} true;
  assume {:verifier.code 0} true;
  $i391 := $sext.i32.i64($i390);
  $i391.dup := $i390.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 45} true;
  assume {:verifier.code 0} true;
  $i392 := $mul.i64($i387,$i391);
  $i392.dup := $or.i1($i387.dup,$i391.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 61} true;
  assume {:verifier.code 0} true;
  $i393 := $add.i64($i383,$i392);
  $i393.dup := $or.i1($i383.dup,$i392.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 36} true;
  assume {:verifier.code 0} true;
  $p394 := $add.ref($p1,$mul.ref(1,8));
  $p394.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p394.dup == 0));
  $i395 := $load.i64($M.3,$p394);
  $i395.dup := $load.i1($M.3.dup,$p394);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 30} true;
  assume {:verifier.code 0} true;
  $i396 := $trunc.i64.i32($i395);
  $i396.dup := $i395.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 22} true;
  assume {:verifier.code 0} true;
  $i397 := $sext.i32.i64($i396);
  $i397.dup := $i396.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 54} true;
  assume {:verifier.code 0} true;
  $p398 := $add.ref($p2,$mul.ref(7,8));
  $p398.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p398.dup == 0));
  $i399 := $load.i64($M.3,$p398);
  $i399.dup := $load.i1($M.3.dup,$p398);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 48} true;
  assume {:verifier.code 0} true;
  $i400 := $trunc.i64.i32($i399);
  $i400.dup := $i399.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 47} true;
  assume {:verifier.code 0} true;
  $i401 := $sext.i32.i64($i400);
  $i401.dup := $i400.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 45} true;
  assume {:verifier.code 0} true;
  $i402 := $mul.i64($i397,$i401);
  $i402.dup := $or.i1($i397.dup,$i401.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 138, 61} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i64($i393,$i402);
  $i403.dup := $or.i1($i393.dup,$i402.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 36} true;
  assume {:verifier.code 0} true;
  $p404 := $add.ref($p1,$mul.ref(7,8));
  $p404.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p404.dup == 0));
  $i405 := $load.i64($M.3,$p404);
  $i405.dup := $load.i1($M.3.dup,$p404);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 30} true;
  assume {:verifier.code 0} true;
  $i406 := $trunc.i64.i32($i405);
  $i406.dup := $i405.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 22} true;
  assume {:verifier.code 0} true;
  $i407 := $sext.i32.i64($i406);
  $i407.dup := $i406.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 54} true;
  assume {:verifier.code 0} true;
  $p408 := $add.ref($p2,$mul.ref(1,8));
  $p408.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p408.dup == 0));
  $i409 := $load.i64($M.3,$p408);
  $i409.dup := $load.i1($M.3.dup,$p408);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 48} true;
  assume {:verifier.code 0} true;
  $i410 := $trunc.i64.i32($i409);
  $i410.dup := $i409.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 47} true;
  assume {:verifier.code 0} true;
  $i411 := $sext.i32.i64($i410);
  $i411.dup := $i410.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 45} true;
  assume {:verifier.code 0} true;
  $i412 := $mul.i64($i407,$i411);
  $i412.dup := $or.i1($i407.dup,$i411.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 139, 61} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i64($i403,$i412);
  $i413.dup := $or.i1($i403.dup,$i412.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 137, 18} true;
  assume {:verifier.code 0} true;
  $i414 := $mul.i64(2,$i413);
  $i414.dup := $or.i1(0,$i413.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 61} true;
  assume {:verifier.code 0} true;
  $i415 := $add.i64($i374,$i414);
  $i415.dup := $or.i1($i374.dup,$i414.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 36} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($p1,$mul.ref(2,8));
  $p416.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p416.dup == 0));
  $i417 := $load.i64($M.3,$p416);
  $i417.dup := $load.i1($M.3.dup,$p416);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 30} true;
  assume {:verifier.code 0} true;
  $i418 := $trunc.i64.i32($i417);
  $i418.dup := $i417.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 22} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i418);
  $i419.dup := $i418.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 54} true;
  assume {:verifier.code 0} true;
  $p420 := $add.ref($p2,$mul.ref(6,8));
  $p420.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p420.dup == 0));
  $i421 := $load.i64($M.3,$p420);
  $i421.dup := $load.i1($M.3.dup,$p420);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 48} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i64.i32($i421);
  $i422.dup := $i421.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 47} true;
  assume {:verifier.code 0} true;
  $i423 := $sext.i32.i64($i422);
  $i423.dup := $i422.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 45} true;
  assume {:verifier.code 0} true;
  $i424 := $mul.i64($i419,$i423);
  $i424.dup := $or.i1($i419.dup,$i423.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 140, 62} true;
  assume {:verifier.code 0} true;
  $i425 := $add.i64($i415,$i424);
  $i425.dup := $or.i1($i415.dup,$i424.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 36} true;
  assume {:verifier.code 0} true;
  $p426 := $add.ref($p1,$mul.ref(6,8));
  $p426.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p426.dup == 0));
  $i427 := $load.i64($M.3,$p426);
  $i427.dup := $load.i1($M.3.dup,$p426);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 30} true;
  assume {:verifier.code 0} true;
  $i428 := $trunc.i64.i32($i427);
  $i428.dup := $i427.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 22} true;
  assume {:verifier.code 0} true;
  $i429 := $sext.i32.i64($i428);
  $i429.dup := $i428.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 54} true;
  assume {:verifier.code 0} true;
  $p430 := $add.ref($p2,$mul.ref(2,8));
  $p430.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p430.dup == 0));
  $i431 := $load.i64($M.3,$p430);
  $i431.dup := $load.i1($M.3.dup,$p430);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 48} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i64.i32($i431);
  $i432.dup := $i431.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 47} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i32.i64($i432);
  $i433.dup := $i432.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 45} true;
  assume {:verifier.code 0} true;
  $i434 := $mul.i64($i429,$i433);
  $i434.dup := $or.i1($i429.dup,$i433.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 141, 61} true;
  assume {:verifier.code 0} true;
  $i435 := $add.i64($i425,$i434);
  $i435.dup := $or.i1($i425.dup,$i434.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 36} true;
  assume {:verifier.code 0} true;
  $p436 := $add.ref($p1,$mul.ref(0,8));
  $p436.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p436.dup == 0));
  $i437 := $load.i64($M.3,$p436);
  $i437.dup := $load.i1($M.3.dup,$p436);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 30} true;
  assume {:verifier.code 0} true;
  $i438 := $trunc.i64.i32($i437);
  $i438.dup := $i437.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 22} true;
  assume {:verifier.code 0} true;
  $i439 := $sext.i32.i64($i438);
  $i439.dup := $i438.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 54} true;
  assume {:verifier.code 0} true;
  $p440 := $add.ref($p2,$mul.ref(8,8));
  $p440.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p440.dup == 0));
  $i441 := $load.i64($M.3,$p440);
  $i441.dup := $load.i1($M.3.dup,$p440);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 48} true;
  assume {:verifier.code 0} true;
  $i442 := $trunc.i64.i32($i441);
  $i442.dup := $i441.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 47} true;
  assume {:verifier.code 0} true;
  $i443 := $sext.i32.i64($i442);
  $i443.dup := $i442.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 45} true;
  assume {:verifier.code 0} true;
  $i444 := $mul.i64($i439,$i443);
  $i444.dup := $or.i1($i439.dup,$i443.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 142, 61} true;
  assume {:verifier.code 0} true;
  $i445 := $add.i64($i435,$i444);
  $i445.dup := $or.i1($i435.dup,$i444.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 36} true;
  assume {:verifier.code 0} true;
  $p446 := $add.ref($p1,$mul.ref(8,8));
  $p446.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p446.dup == 0));
  $i447 := $load.i64($M.3,$p446);
  $i447.dup := $load.i1($M.3.dup,$p446);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 30} true;
  assume {:verifier.code 0} true;
  $i448 := $trunc.i64.i32($i447);
  $i448.dup := $i447.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 22} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i32.i64($i448);
  $i449.dup := $i448.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 54} true;
  assume {:verifier.code 0} true;
  $p450 := $add.ref($p2,$mul.ref(0,8));
  $p450.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p450.dup == 0));
  $i451 := $load.i64($M.3,$p450);
  $i451.dup := $load.i1($M.3.dup,$p450);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 48} true;
  assume {:verifier.code 0} true;
  $i452 := $trunc.i64.i32($i451);
  $i452.dup := $i451.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 47} true;
  assume {:verifier.code 0} true;
  $i453 := $sext.i32.i64($i452);
  $i453.dup := $i452.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 144, 45} true;
  assume {:verifier.code 0} true;
  $i454 := $mul.i64($i449,$i453);
  $i454.dup := $or.i1($i449.dup,$i453.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 143, 61} true;
  assume {:verifier.code 0} true;
  $i455 := $add.i64($i445,$i454);
  $i455.dup := $or.i1($i445.dup,$i454.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 3} true;
  assume {:verifier.code 0} true;
  $p456 := $add.ref($p0,$mul.ref(8,8));
  $p456.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 136, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p456.dup == 0));
  $M.3 := $store.i64($M.3,$p456,$i455);
  $M.3.dup := $store.i1($M.3.dup,$p456,$i455.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 36} true;
  assume {:verifier.code 0} true;
  $p457 := $add.ref($p1,$mul.ref(4,8));
  $p457.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p457.dup == 0));
  $i458 := $load.i64($M.3,$p457);
  $i458.dup := $load.i1($M.3.dup,$p457);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 30} true;
  assume {:verifier.code 0} true;
  $i459 := $trunc.i64.i32($i458);
  $i459.dup := $i458.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 22} true;
  assume {:verifier.code 0} true;
  $i460 := $sext.i32.i64($i459);
  $i460.dup := $i459.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 54} true;
  assume {:verifier.code 0} true;
  $p461 := $add.ref($p2,$mul.ref(5,8));
  $p461.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p461.dup == 0));
  $i462 := $load.i64($M.3,$p461);
  $i462.dup := $load.i1($M.3.dup,$p461);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 48} true;
  assume {:verifier.code 0} true;
  $i463 := $trunc.i64.i32($i462);
  $i463.dup := $i462.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 47} true;
  assume {:verifier.code 0} true;
  $i464 := $sext.i32.i64($i463);
  $i464.dup := $i463.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 45} true;
  assume {:verifier.code 0} true;
  $i465 := $mul.i64($i460,$i464);
  $i465.dup := $or.i1($i460.dup,$i464.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 36} true;
  assume {:verifier.code 0} true;
  $p466 := $add.ref($p1,$mul.ref(5,8));
  $p466.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p466.dup == 0));
  $i467 := $load.i64($M.3,$p466);
  $i467.dup := $load.i1($M.3.dup,$p466);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 30} true;
  assume {:verifier.code 0} true;
  $i468 := $trunc.i64.i32($i467);
  $i468.dup := $i467.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 22} true;
  assume {:verifier.code 0} true;
  $i469 := $sext.i32.i64($i468);
  $i469.dup := $i468.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 54} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($p2,$mul.ref(4,8));
  $p470.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p470.dup == 0));
  $i471 := $load.i64($M.3,$p470);
  $i471.dup := $load.i1($M.3.dup,$p470);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 48} true;
  assume {:verifier.code 0} true;
  $i472 := $trunc.i64.i32($i471);
  $i472.dup := $i471.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 47} true;
  assume {:verifier.code 0} true;
  $i473 := $sext.i32.i64($i472);
  $i473.dup := $i472.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 45} true;
  assume {:verifier.code 0} true;
  $i474 := $mul.i64($i469,$i473);
  $i474.dup := $or.i1($i469.dup,$i473.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 61} true;
  assume {:verifier.code 0} true;
  $i475 := $add.i64($i465,$i474);
  $i475.dup := $or.i1($i465.dup,$i474.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 36} true;
  assume {:verifier.code 0} true;
  $p476 := $add.ref($p1,$mul.ref(3,8));
  $p476.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p476.dup == 0));
  $i477 := $load.i64($M.3,$p476);
  $i477.dup := $load.i1($M.3.dup,$p476);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 30} true;
  assume {:verifier.code 0} true;
  $i478 := $trunc.i64.i32($i477);
  $i478.dup := $i477.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 22} true;
  assume {:verifier.code 0} true;
  $i479 := $sext.i32.i64($i478);
  $i479.dup := $i478.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 54} true;
  assume {:verifier.code 0} true;
  $p480 := $add.ref($p2,$mul.ref(6,8));
  $p480.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p480.dup == 0));
  $i481 := $load.i64($M.3,$p480);
  $i481.dup := $load.i1($M.3.dup,$p480);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 48} true;
  assume {:verifier.code 0} true;
  $i482 := $trunc.i64.i32($i481);
  $i482.dup := $i481.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 47} true;
  assume {:verifier.code 0} true;
  $i483 := $sext.i32.i64($i482);
  $i483.dup := $i482.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 45} true;
  assume {:verifier.code 0} true;
  $i484 := $mul.i64($i479,$i483);
  $i484.dup := $or.i1($i479.dup,$i483.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 146, 61} true;
  assume {:verifier.code 0} true;
  $i485 := $add.i64($i475,$i484);
  $i485.dup := $or.i1($i475.dup,$i484.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 36} true;
  assume {:verifier.code 0} true;
  $p486 := $add.ref($p1,$mul.ref(6,8));
  $p486.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p486.dup == 0));
  $i487 := $load.i64($M.3,$p486);
  $i487.dup := $load.i1($M.3.dup,$p486);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 30} true;
  assume {:verifier.code 0} true;
  $i488 := $trunc.i64.i32($i487);
  $i488.dup := $i487.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 22} true;
  assume {:verifier.code 0} true;
  $i489 := $sext.i32.i64($i488);
  $i489.dup := $i488.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 54} true;
  assume {:verifier.code 0} true;
  $p490 := $add.ref($p2,$mul.ref(3,8));
  $p490.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p490.dup == 0));
  $i491 := $load.i64($M.3,$p490);
  $i491.dup := $load.i1($M.3.dup,$p490);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 48} true;
  assume {:verifier.code 0} true;
  $i492 := $trunc.i64.i32($i491);
  $i492.dup := $i491.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 47} true;
  assume {:verifier.code 0} true;
  $i493 := $sext.i32.i64($i492);
  $i493.dup := $i492.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 45} true;
  assume {:verifier.code 0} true;
  $i494 := $mul.i64($i489,$i493);
  $i494.dup := $or.i1($i489.dup,$i493.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 147, 61} true;
  assume {:verifier.code 0} true;
  $i495 := $add.i64($i485,$i494);
  $i495.dup := $or.i1($i485.dup,$i494.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 36} true;
  assume {:verifier.code 0} true;
  $p496 := $add.ref($p1,$mul.ref(2,8));
  $p496.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p496.dup == 0));
  $i497 := $load.i64($M.3,$p496);
  $i497.dup := $load.i1($M.3.dup,$p496);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 30} true;
  assume {:verifier.code 0} true;
  $i498 := $trunc.i64.i32($i497);
  $i498.dup := $i497.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 22} true;
  assume {:verifier.code 0} true;
  $i499 := $sext.i32.i64($i498);
  $i499.dup := $i498.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 54} true;
  assume {:verifier.code 0} true;
  $p500 := $add.ref($p2,$mul.ref(7,8));
  $p500.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p500.dup == 0));
  $i501 := $load.i64($M.3,$p500);
  $i501.dup := $load.i1($M.3.dup,$p500);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 48} true;
  assume {:verifier.code 0} true;
  $i502 := $trunc.i64.i32($i501);
  $i502.dup := $i501.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 47} true;
  assume {:verifier.code 0} true;
  $i503 := $sext.i32.i64($i502);
  $i503.dup := $i502.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 45} true;
  assume {:verifier.code 0} true;
  $i504 := $mul.i64($i499,$i503);
  $i504.dup := $or.i1($i499.dup,$i503.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 148, 61} true;
  assume {:verifier.code 0} true;
  $i505 := $add.i64($i495,$i504);
  $i505.dup := $or.i1($i495.dup,$i504.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 36} true;
  assume {:verifier.code 0} true;
  $p506 := $add.ref($p1,$mul.ref(7,8));
  $p506.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p506.dup == 0));
  $i507 := $load.i64($M.3,$p506);
  $i507.dup := $load.i1($M.3.dup,$p506);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 30} true;
  assume {:verifier.code 0} true;
  $i508 := $trunc.i64.i32($i507);
  $i508.dup := $i507.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 22} true;
  assume {:verifier.code 0} true;
  $i509 := $sext.i32.i64($i508);
  $i509.dup := $i508.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 54} true;
  assume {:verifier.code 0} true;
  $p510 := $add.ref($p2,$mul.ref(2,8));
  $p510.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p510.dup == 0));
  $i511 := $load.i64($M.3,$p510);
  $i511.dup := $load.i1($M.3.dup,$p510);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 48} true;
  assume {:verifier.code 0} true;
  $i512 := $trunc.i64.i32($i511);
  $i512.dup := $i511.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 47} true;
  assume {:verifier.code 0} true;
  $i513 := $sext.i32.i64($i512);
  $i513.dup := $i512.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 45} true;
  assume {:verifier.code 0} true;
  $i514 := $mul.i64($i509,$i513);
  $i514.dup := $or.i1($i509.dup,$i513.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 149, 61} true;
  assume {:verifier.code 0} true;
  $i515 := $add.i64($i505,$i514);
  $i515.dup := $or.i1($i505.dup,$i514.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 36} true;
  assume {:verifier.code 0} true;
  $p516 := $add.ref($p1,$mul.ref(1,8));
  $p516.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p516.dup == 0));
  $i517 := $load.i64($M.3,$p516);
  $i517.dup := $load.i1($M.3.dup,$p516);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 30} true;
  assume {:verifier.code 0} true;
  $i518 := $trunc.i64.i32($i517);
  $i518.dup := $i517.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 22} true;
  assume {:verifier.code 0} true;
  $i519 := $sext.i32.i64($i518);
  $i519.dup := $i518.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 54} true;
  assume {:verifier.code 0} true;
  $p520 := $add.ref($p2,$mul.ref(8,8));
  $p520.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p520.dup == 0));
  $i521 := $load.i64($M.3,$p520);
  $i521.dup := $load.i1($M.3.dup,$p520);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 48} true;
  assume {:verifier.code 0} true;
  $i522 := $trunc.i64.i32($i521);
  $i522.dup := $i521.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 47} true;
  assume {:verifier.code 0} true;
  $i523 := $sext.i32.i64($i522);
  $i523.dup := $i522.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 45} true;
  assume {:verifier.code 0} true;
  $i524 := $mul.i64($i519,$i523);
  $i524.dup := $or.i1($i519.dup,$i523.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 150, 61} true;
  assume {:verifier.code 0} true;
  $i525 := $add.i64($i515,$i524);
  $i525.dup := $or.i1($i515.dup,$i524.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 36} true;
  assume {:verifier.code 0} true;
  $p526 := $add.ref($p1,$mul.ref(8,8));
  $p526.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p526.dup == 0));
  $i527 := $load.i64($M.3,$p526);
  $i527.dup := $load.i1($M.3.dup,$p526);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 30} true;
  assume {:verifier.code 0} true;
  $i528 := $trunc.i64.i32($i527);
  $i528.dup := $i527.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 22} true;
  assume {:verifier.code 0} true;
  $i529 := $sext.i32.i64($i528);
  $i529.dup := $i528.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 54} true;
  assume {:verifier.code 0} true;
  $p530 := $add.ref($p2,$mul.ref(1,8));
  $p530.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p530.dup == 0));
  $i531 := $load.i64($M.3,$p530);
  $i531.dup := $load.i1($M.3.dup,$p530);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 48} true;
  assume {:verifier.code 0} true;
  $i532 := $trunc.i64.i32($i531);
  $i532.dup := $i531.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 47} true;
  assume {:verifier.code 0} true;
  $i533 := $sext.i32.i64($i532);
  $i533.dup := $i532.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 45} true;
  assume {:verifier.code 0} true;
  $i534 := $mul.i64($i529,$i533);
  $i534.dup := $or.i1($i529.dup,$i533.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 151, 61} true;
  assume {:verifier.code 0} true;
  $i535 := $add.i64($i525,$i534);
  $i535.dup := $or.i1($i525.dup,$i534.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 36} true;
  assume {:verifier.code 0} true;
  $p536 := $add.ref($p1,$mul.ref(0,8));
  $p536.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p536.dup == 0));
  $i537 := $load.i64($M.3,$p536);
  $i537.dup := $load.i1($M.3.dup,$p536);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 30} true;
  assume {:verifier.code 0} true;
  $i538 := $trunc.i64.i32($i537);
  $i538.dup := $i537.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 22} true;
  assume {:verifier.code 0} true;
  $i539 := $sext.i32.i64($i538);
  $i539.dup := $i538.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 54} true;
  assume {:verifier.code 0} true;
  $p540 := $add.ref($p2,$mul.ref(9,8));
  $p540.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p540.dup == 0));
  $i541 := $load.i64($M.3,$p540);
  $i541.dup := $load.i1($M.3.dup,$p540);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 48} true;
  assume {:verifier.code 0} true;
  $i542 := $trunc.i64.i32($i541);
  $i542.dup := $i541.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 47} true;
  assume {:verifier.code 0} true;
  $i543 := $sext.i32.i64($i542);
  $i543.dup := $i542.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 45} true;
  assume {:verifier.code 0} true;
  $i544 := $mul.i64($i539,$i543);
  $i544.dup := $or.i1($i539.dup,$i543.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 152, 61} true;
  assume {:verifier.code 0} true;
  $i545 := $add.i64($i535,$i544);
  $i545.dup := $or.i1($i535.dup,$i544.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 36} true;
  assume {:verifier.code 0} true;
  $p546 := $add.ref($p1,$mul.ref(9,8));
  $p546.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p546.dup == 0));
  $i547 := $load.i64($M.3,$p546);
  $i547.dup := $load.i1($M.3.dup,$p546);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 30} true;
  assume {:verifier.code 0} true;
  $i548 := $trunc.i64.i32($i547);
  $i548.dup := $i547.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 22} true;
  assume {:verifier.code 0} true;
  $i549 := $sext.i32.i64($i548);
  $i549.dup := $i548.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 54} true;
  assume {:verifier.code 0} true;
  $p550 := $add.ref($p2,$mul.ref(0,8));
  $p550.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p550.dup == 0));
  $i551 := $load.i64($M.3,$p550);
  $i551.dup := $load.i1($M.3.dup,$p550);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 48} true;
  assume {:verifier.code 0} true;
  $i552 := $trunc.i64.i32($i551);
  $i552.dup := $i551.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 47} true;
  assume {:verifier.code 0} true;
  $i553 := $sext.i32.i64($i552);
  $i553.dup := $i552.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 154, 45} true;
  assume {:verifier.code 0} true;
  $i554 := $mul.i64($i549,$i553);
  $i554.dup := $or.i1($i549.dup,$i553.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 153, 61} true;
  assume {:verifier.code 0} true;
  $i555 := $add.i64($i545,$i554);
  $i555.dup := $or.i1($i545.dup,$i554.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 3} true;
  assume {:verifier.code 0} true;
  $p556 := $add.ref($p0,$mul.ref(9,8));
  $p556.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 145, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p556.dup == 0));
  $M.3 := $store.i64($M.3,$p556,$i555);
  $M.3.dup := $store.i1($M.3.dup,$p556,$i555.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 36} true;
  assume {:verifier.code 0} true;
  $p557 := $add.ref($p1,$mul.ref(5,8));
  $p557.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p557.dup == 0));
  $i558 := $load.i64($M.3,$p557);
  $i558.dup := $load.i1($M.3.dup,$p557);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 30} true;
  assume {:verifier.code 0} true;
  $i559 := $trunc.i64.i32($i558);
  $i559.dup := $i558.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 22} true;
  assume {:verifier.code 0} true;
  $i560 := $sext.i32.i64($i559);
  $i560.dup := $i559.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 54} true;
  assume {:verifier.code 0} true;
  $p561 := $add.ref($p2,$mul.ref(5,8));
  $p561.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p561.dup == 0));
  $i562 := $load.i64($M.3,$p561);
  $i562.dup := $load.i1($M.3.dup,$p561);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 48} true;
  assume {:verifier.code 0} true;
  $i563 := $trunc.i64.i32($i562);
  $i563.dup := $i562.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 47} true;
  assume {:verifier.code 0} true;
  $i564 := $sext.i32.i64($i563);
  $i564.dup := $i563.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 45} true;
  assume {:verifier.code 0} true;
  $i565 := $mul.i64($i560,$i564);
  $i565.dup := $or.i1($i560.dup,$i564.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 36} true;
  assume {:verifier.code 0} true;
  $p566 := $add.ref($p1,$mul.ref(3,8));
  $p566.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p566.dup == 0));
  $i567 := $load.i64($M.3,$p566);
  $i567.dup := $load.i1($M.3.dup,$p566);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 30} true;
  assume {:verifier.code 0} true;
  $i568 := $trunc.i64.i32($i567);
  $i568.dup := $i567.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 22} true;
  assume {:verifier.code 0} true;
  $i569 := $sext.i32.i64($i568);
  $i569.dup := $i568.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 54} true;
  assume {:verifier.code 0} true;
  $p570 := $add.ref($p2,$mul.ref(7,8));
  $p570.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p570.dup == 0));
  $i571 := $load.i64($M.3,$p570);
  $i571.dup := $load.i1($M.3.dup,$p570);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 48} true;
  assume {:verifier.code 0} true;
  $i572 := $trunc.i64.i32($i571);
  $i572.dup := $i571.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 47} true;
  assume {:verifier.code 0} true;
  $i573 := $sext.i32.i64($i572);
  $i573.dup := $i572.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 45} true;
  assume {:verifier.code 0} true;
  $i574 := $mul.i64($i569,$i573);
  $i574.dup := $or.i1($i569.dup,$i573.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 61} true;
  assume {:verifier.code 0} true;
  $i575 := $add.i64($i565,$i574);
  $i575.dup := $or.i1($i565.dup,$i574.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 36} true;
  assume {:verifier.code 0} true;
  $p576 := $add.ref($p1,$mul.ref(7,8));
  $p576.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p576.dup == 0));
  $i577 := $load.i64($M.3,$p576);
  $i577.dup := $load.i1($M.3.dup,$p576);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 30} true;
  assume {:verifier.code 0} true;
  $i578 := $trunc.i64.i32($i577);
  $i578.dup := $i577.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 22} true;
  assume {:verifier.code 0} true;
  $i579 := $sext.i32.i64($i578);
  $i579.dup := $i578.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 54} true;
  assume {:verifier.code 0} true;
  $p580 := $add.ref($p2,$mul.ref(3,8));
  $p580.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p580.dup == 0));
  $i581 := $load.i64($M.3,$p580);
  $i581.dup := $load.i1($M.3.dup,$p580);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 48} true;
  assume {:verifier.code 0} true;
  $i582 := $trunc.i64.i32($i581);
  $i582.dup := $i581.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 47} true;
  assume {:verifier.code 0} true;
  $i583 := $sext.i32.i64($i582);
  $i583.dup := $i582.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 45} true;
  assume {:verifier.code 0} true;
  $i584 := $mul.i64($i579,$i583);
  $i584.dup := $or.i1($i579.dup,$i583.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 156, 61} true;
  assume {:verifier.code 0} true;
  $i585 := $add.i64($i575,$i584);
  $i585.dup := $or.i1($i575.dup,$i584.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 36} true;
  assume {:verifier.code 0} true;
  $p586 := $add.ref($p1,$mul.ref(1,8));
  $p586.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p586.dup == 0));
  $i587 := $load.i64($M.3,$p586);
  $i587.dup := $load.i1($M.3.dup,$p586);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 30} true;
  assume {:verifier.code 0} true;
  $i588 := $trunc.i64.i32($i587);
  $i588.dup := $i587.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 22} true;
  assume {:verifier.code 0} true;
  $i589 := $sext.i32.i64($i588);
  $i589.dup := $i588.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 54} true;
  assume {:verifier.code 0} true;
  $p590 := $add.ref($p2,$mul.ref(9,8));
  $p590.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p590.dup == 0));
  $i591 := $load.i64($M.3,$p590);
  $i591.dup := $load.i1($M.3.dup,$p590);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 48} true;
  assume {:verifier.code 0} true;
  $i592 := $trunc.i64.i32($i591);
  $i592.dup := $i591.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 47} true;
  assume {:verifier.code 0} true;
  $i593 := $sext.i32.i64($i592);
  $i593.dup := $i592.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 45} true;
  assume {:verifier.code 0} true;
  $i594 := $mul.i64($i589,$i593);
  $i594.dup := $or.i1($i589.dup,$i593.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 157, 61} true;
  assume {:verifier.code 0} true;
  $i595 := $add.i64($i585,$i594);
  $i595.dup := $or.i1($i585.dup,$i594.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 36} true;
  assume {:verifier.code 0} true;
  $p596 := $add.ref($p1,$mul.ref(9,8));
  $p596.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p596.dup == 0));
  $i597 := $load.i64($M.3,$p596);
  $i597.dup := $load.i1($M.3.dup,$p596);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 30} true;
  assume {:verifier.code 0} true;
  $i598 := $trunc.i64.i32($i597);
  $i598.dup := $i597.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 22} true;
  assume {:verifier.code 0} true;
  $i599 := $sext.i32.i64($i598);
  $i599.dup := $i598.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 54} true;
  assume {:verifier.code 0} true;
  $p600 := $add.ref($p2,$mul.ref(1,8));
  $p600.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p600.dup == 0));
  $i601 := $load.i64($M.3,$p600);
  $i601.dup := $load.i1($M.3.dup,$p600);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 48} true;
  assume {:verifier.code 0} true;
  $i602 := $trunc.i64.i32($i601);
  $i602.dup := $i601.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 47} true;
  assume {:verifier.code 0} true;
  $i603 := $sext.i32.i64($i602);
  $i603.dup := $i602.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 45} true;
  assume {:verifier.code 0} true;
  $i604 := $mul.i64($i599,$i603);
  $i604.dup := $or.i1($i599.dup,$i603.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 158, 61} true;
  assume {:verifier.code 0} true;
  $i605 := $add.i64($i595,$i604);
  $i605.dup := $or.i1($i595.dup,$i604.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 18} true;
  assume {:verifier.code 0} true;
  $i606 := $mul.i64(2,$i605);
  $i606.dup := $or.i1(0,$i605.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 36} true;
  assume {:verifier.code 0} true;
  $p607 := $add.ref($p1,$mul.ref(4,8));
  $p607.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p607.dup == 0));
  $i608 := $load.i64($M.3,$p607);
  $i608.dup := $load.i1($M.3.dup,$p607);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 30} true;
  assume {:verifier.code 0} true;
  $i609 := $trunc.i64.i32($i608);
  $i609.dup := $i608.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 22} true;
  assume {:verifier.code 0} true;
  $i610 := $sext.i32.i64($i609);
  $i610.dup := $i609.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 54} true;
  assume {:verifier.code 0} true;
  $p611 := $add.ref($p2,$mul.ref(6,8));
  $p611.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p611.dup == 0));
  $i612 := $load.i64($M.3,$p611);
  $i612.dup := $load.i1($M.3.dup,$p611);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 48} true;
  assume {:verifier.code 0} true;
  $i613 := $trunc.i64.i32($i612);
  $i613.dup := $i612.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 47} true;
  assume {:verifier.code 0} true;
  $i614 := $sext.i32.i64($i613);
  $i614.dup := $i613.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 45} true;
  assume {:verifier.code 0} true;
  $i615 := $mul.i64($i610,$i614);
  $i615.dup := $or.i1($i610.dup,$i614.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 159, 62} true;
  assume {:verifier.code 0} true;
  $i616 := $add.i64($i606,$i615);
  $i616.dup := $or.i1($i606.dup,$i615.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 36} true;
  assume {:verifier.code 0} true;
  $p617 := $add.ref($p1,$mul.ref(6,8));
  $p617.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p617.dup == 0));
  $i618 := $load.i64($M.3,$p617);
  $i618.dup := $load.i1($M.3.dup,$p617);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 30} true;
  assume {:verifier.code 0} true;
  $i619 := $trunc.i64.i32($i618);
  $i619.dup := $i618.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 22} true;
  assume {:verifier.code 0} true;
  $i620 := $sext.i32.i64($i619);
  $i620.dup := $i619.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 54} true;
  assume {:verifier.code 0} true;
  $p621 := $add.ref($p2,$mul.ref(4,8));
  $p621.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p621.dup == 0));
  $i622 := $load.i64($M.3,$p621);
  $i622.dup := $load.i1($M.3.dup,$p621);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 48} true;
  assume {:verifier.code 0} true;
  $i623 := $trunc.i64.i32($i622);
  $i623.dup := $i622.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 47} true;
  assume {:verifier.code 0} true;
  $i624 := $sext.i32.i64($i623);
  $i624.dup := $i623.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 45} true;
  assume {:verifier.code 0} true;
  $i625 := $mul.i64($i620,$i624);
  $i625.dup := $or.i1($i620.dup,$i624.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 160, 61} true;
  assume {:verifier.code 0} true;
  $i626 := $add.i64($i616,$i625);
  $i626.dup := $or.i1($i616.dup,$i625.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 36} true;
  assume {:verifier.code 0} true;
  $p627 := $add.ref($p1,$mul.ref(2,8));
  $p627.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p627.dup == 0));
  $i628 := $load.i64($M.3,$p627);
  $i628.dup := $load.i1($M.3.dup,$p627);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 30} true;
  assume {:verifier.code 0} true;
  $i629 := $trunc.i64.i32($i628);
  $i629.dup := $i628.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 22} true;
  assume {:verifier.code 0} true;
  $i630 := $sext.i32.i64($i629);
  $i630.dup := $i629.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 54} true;
  assume {:verifier.code 0} true;
  $p631 := $add.ref($p2,$mul.ref(8,8));
  $p631.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p631.dup == 0));
  $i632 := $load.i64($M.3,$p631);
  $i632.dup := $load.i1($M.3.dup,$p631);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 48} true;
  assume {:verifier.code 0} true;
  $i633 := $trunc.i64.i32($i632);
  $i633.dup := $i632.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 47} true;
  assume {:verifier.code 0} true;
  $i634 := $sext.i32.i64($i633);
  $i634.dup := $i633.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 45} true;
  assume {:verifier.code 0} true;
  $i635 := $mul.i64($i630,$i634);
  $i635.dup := $or.i1($i630.dup,$i634.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 161, 61} true;
  assume {:verifier.code 0} true;
  $i636 := $add.i64($i626,$i635);
  $i636.dup := $or.i1($i626.dup,$i635.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 36} true;
  assume {:verifier.code 0} true;
  $p637 := $add.ref($p1,$mul.ref(8,8));
  $p637.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p637.dup == 0));
  $i638 := $load.i64($M.3,$p637);
  $i638.dup := $load.i1($M.3.dup,$p637);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 30} true;
  assume {:verifier.code 0} true;
  $i639 := $trunc.i64.i32($i638);
  $i639.dup := $i638.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 22} true;
  assume {:verifier.code 0} true;
  $i640 := $sext.i32.i64($i639);
  $i640.dup := $i639.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 54} true;
  assume {:verifier.code 0} true;
  $p641 := $add.ref($p2,$mul.ref(2,8));
  $p641.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p641.dup == 0));
  $i642 := $load.i64($M.3,$p641);
  $i642.dup := $load.i1($M.3.dup,$p641);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 48} true;
  assume {:verifier.code 0} true;
  $i643 := $trunc.i64.i32($i642);
  $i643.dup := $i642.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 47} true;
  assume {:verifier.code 0} true;
  $i644 := $sext.i32.i64($i643);
  $i644.dup := $i643.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 163, 45} true;
  assume {:verifier.code 0} true;
  $i645 := $mul.i64($i640,$i644);
  $i645.dup := $or.i1($i640.dup,$i644.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 162, 61} true;
  assume {:verifier.code 0} true;
  $i646 := $add.i64($i636,$i645);
  $i646.dup := $or.i1($i636.dup,$i645.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 3} true;
  assume {:verifier.code 0} true;
  $p647 := $add.ref($p0,$mul.ref(10,8));
  $p647.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 155, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p647.dup == 0));
  $M.3 := $store.i64($M.3,$p647,$i646);
  $M.3.dup := $store.i1($M.3.dup,$p647,$i646.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 36} true;
  assume {:verifier.code 0} true;
  $p648 := $add.ref($p1,$mul.ref(5,8));
  $p648.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p648.dup == 0));
  $i649 := $load.i64($M.3,$p648);
  $i649.dup := $load.i1($M.3.dup,$p648);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 30} true;
  assume {:verifier.code 0} true;
  $i650 := $trunc.i64.i32($i649);
  $i650.dup := $i649.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 22} true;
  assume {:verifier.code 0} true;
  $i651 := $sext.i32.i64($i650);
  $i651.dup := $i650.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 54} true;
  assume {:verifier.code 0} true;
  $p652 := $add.ref($p2,$mul.ref(6,8));
  $p652.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p652.dup == 0));
  $i653 := $load.i64($M.3,$p652);
  $i653.dup := $load.i1($M.3.dup,$p652);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 48} true;
  assume {:verifier.code 0} true;
  $i654 := $trunc.i64.i32($i653);
  $i654.dup := $i653.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 47} true;
  assume {:verifier.code 0} true;
  $i655 := $sext.i32.i64($i654);
  $i655.dup := $i654.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 45} true;
  assume {:verifier.code 0} true;
  $i656 := $mul.i64($i651,$i655);
  $i656.dup := $or.i1($i651.dup,$i655.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 36} true;
  assume {:verifier.code 0} true;
  $p657 := $add.ref($p1,$mul.ref(6,8));
  $p657.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p657.dup == 0));
  $i658 := $load.i64($M.3,$p657);
  $i658.dup := $load.i1($M.3.dup,$p657);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 30} true;
  assume {:verifier.code 0} true;
  $i659 := $trunc.i64.i32($i658);
  $i659.dup := $i658.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 22} true;
  assume {:verifier.code 0} true;
  $i660 := $sext.i32.i64($i659);
  $i660.dup := $i659.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 54} true;
  assume {:verifier.code 0} true;
  $p661 := $add.ref($p2,$mul.ref(5,8));
  $p661.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p661.dup == 0));
  $i662 := $load.i64($M.3,$p661);
  $i662.dup := $load.i1($M.3.dup,$p661);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 48} true;
  assume {:verifier.code 0} true;
  $i663 := $trunc.i64.i32($i662);
  $i663.dup := $i662.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 47} true;
  assume {:verifier.code 0} true;
  $i664 := $sext.i32.i64($i663);
  $i664.dup := $i663.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 45} true;
  assume {:verifier.code 0} true;
  $i665 := $mul.i64($i660,$i664);
  $i665.dup := $or.i1($i660.dup,$i664.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 61} true;
  assume {:verifier.code 0} true;
  $i666 := $add.i64($i656,$i665);
  $i666.dup := $or.i1($i656.dup,$i665.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 36} true;
  assume {:verifier.code 0} true;
  $p667 := $add.ref($p1,$mul.ref(4,8));
  $p667.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p667.dup == 0));
  $i668 := $load.i64($M.3,$p667);
  $i668.dup := $load.i1($M.3.dup,$p667);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 30} true;
  assume {:verifier.code 0} true;
  $i669 := $trunc.i64.i32($i668);
  $i669.dup := $i668.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 22} true;
  assume {:verifier.code 0} true;
  $i670 := $sext.i32.i64($i669);
  $i670.dup := $i669.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 54} true;
  assume {:verifier.code 0} true;
  $p671 := $add.ref($p2,$mul.ref(7,8));
  $p671.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p671.dup == 0));
  $i672 := $load.i64($M.3,$p671);
  $i672.dup := $load.i1($M.3.dup,$p671);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 48} true;
  assume {:verifier.code 0} true;
  $i673 := $trunc.i64.i32($i672);
  $i673.dup := $i672.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 47} true;
  assume {:verifier.code 0} true;
  $i674 := $sext.i32.i64($i673);
  $i674.dup := $i673.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 45} true;
  assume {:verifier.code 0} true;
  $i675 := $mul.i64($i670,$i674);
  $i675.dup := $or.i1($i670.dup,$i674.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 165, 61} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i64($i666,$i675);
  $i676.dup := $or.i1($i666.dup,$i675.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 36} true;
  assume {:verifier.code 0} true;
  $p677 := $add.ref($p1,$mul.ref(7,8));
  $p677.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p677.dup == 0));
  $i678 := $load.i64($M.3,$p677);
  $i678.dup := $load.i1($M.3.dup,$p677);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 30} true;
  assume {:verifier.code 0} true;
  $i679 := $trunc.i64.i32($i678);
  $i679.dup := $i678.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 22} true;
  assume {:verifier.code 0} true;
  $i680 := $sext.i32.i64($i679);
  $i680.dup := $i679.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 54} true;
  assume {:verifier.code 0} true;
  $p681 := $add.ref($p2,$mul.ref(4,8));
  $p681.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p681.dup == 0));
  $i682 := $load.i64($M.3,$p681);
  $i682.dup := $load.i1($M.3.dup,$p681);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 48} true;
  assume {:verifier.code 0} true;
  $i683 := $trunc.i64.i32($i682);
  $i683.dup := $i682.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 47} true;
  assume {:verifier.code 0} true;
  $i684 := $sext.i32.i64($i683);
  $i684.dup := $i683.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 45} true;
  assume {:verifier.code 0} true;
  $i685 := $mul.i64($i680,$i684);
  $i685.dup := $or.i1($i680.dup,$i684.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 166, 61} true;
  assume {:verifier.code 0} true;
  $i686 := $add.i64($i676,$i685);
  $i686.dup := $or.i1($i676.dup,$i685.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 36} true;
  assume {:verifier.code 0} true;
  $p687 := $add.ref($p1,$mul.ref(3,8));
  $p687.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p687.dup == 0));
  $i688 := $load.i64($M.3,$p687);
  $i688.dup := $load.i1($M.3.dup,$p687);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 30} true;
  assume {:verifier.code 0} true;
  $i689 := $trunc.i64.i32($i688);
  $i689.dup := $i688.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 22} true;
  assume {:verifier.code 0} true;
  $i690 := $sext.i32.i64($i689);
  $i690.dup := $i689.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 54} true;
  assume {:verifier.code 0} true;
  $p691 := $add.ref($p2,$mul.ref(8,8));
  $p691.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p691.dup == 0));
  $i692 := $load.i64($M.3,$p691);
  $i692.dup := $load.i1($M.3.dup,$p691);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 48} true;
  assume {:verifier.code 0} true;
  $i693 := $trunc.i64.i32($i692);
  $i693.dup := $i692.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 47} true;
  assume {:verifier.code 0} true;
  $i694 := $sext.i32.i64($i693);
  $i694.dup := $i693.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 45} true;
  assume {:verifier.code 0} true;
  $i695 := $mul.i64($i690,$i694);
  $i695.dup := $or.i1($i690.dup,$i694.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 167, 61} true;
  assume {:verifier.code 0} true;
  $i696 := $add.i64($i686,$i695);
  $i696.dup := $or.i1($i686.dup,$i695.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 36} true;
  assume {:verifier.code 0} true;
  $p697 := $add.ref($p1,$mul.ref(8,8));
  $p697.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p697.dup == 0));
  $i698 := $load.i64($M.3,$p697);
  $i698.dup := $load.i1($M.3.dup,$p697);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 30} true;
  assume {:verifier.code 0} true;
  $i699 := $trunc.i64.i32($i698);
  $i699.dup := $i698.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 22} true;
  assume {:verifier.code 0} true;
  $i700 := $sext.i32.i64($i699);
  $i700.dup := $i699.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 54} true;
  assume {:verifier.code 0} true;
  $p701 := $add.ref($p2,$mul.ref(3,8));
  $p701.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p701.dup == 0));
  $i702 := $load.i64($M.3,$p701);
  $i702.dup := $load.i1($M.3.dup,$p701);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 48} true;
  assume {:verifier.code 0} true;
  $i703 := $trunc.i64.i32($i702);
  $i703.dup := $i702.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 47} true;
  assume {:verifier.code 0} true;
  $i704 := $sext.i32.i64($i703);
  $i704.dup := $i703.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 45} true;
  assume {:verifier.code 0} true;
  $i705 := $mul.i64($i700,$i704);
  $i705.dup := $or.i1($i700.dup,$i704.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 168, 61} true;
  assume {:verifier.code 0} true;
  $i706 := $add.i64($i696,$i705);
  $i706.dup := $or.i1($i696.dup,$i705.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 36} true;
  assume {:verifier.code 0} true;
  $p707 := $add.ref($p1,$mul.ref(2,8));
  $p707.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p707.dup == 0));
  $i708 := $load.i64($M.3,$p707);
  $i708.dup := $load.i1($M.3.dup,$p707);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 30} true;
  assume {:verifier.code 0} true;
  $i709 := $trunc.i64.i32($i708);
  $i709.dup := $i708.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 22} true;
  assume {:verifier.code 0} true;
  $i710 := $sext.i32.i64($i709);
  $i710.dup := $i709.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 54} true;
  assume {:verifier.code 0} true;
  $p711 := $add.ref($p2,$mul.ref(9,8));
  $p711.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p711.dup == 0));
  $i712 := $load.i64($M.3,$p711);
  $i712.dup := $load.i1($M.3.dup,$p711);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 48} true;
  assume {:verifier.code 0} true;
  $i713 := $trunc.i64.i32($i712);
  $i713.dup := $i712.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 47} true;
  assume {:verifier.code 0} true;
  $i714 := $sext.i32.i64($i713);
  $i714.dup := $i713.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 45} true;
  assume {:verifier.code 0} true;
  $i715 := $mul.i64($i710,$i714);
  $i715.dup := $or.i1($i710.dup,$i714.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 169, 61} true;
  assume {:verifier.code 0} true;
  $i716 := $add.i64($i706,$i715);
  $i716.dup := $or.i1($i706.dup,$i715.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 36} true;
  assume {:verifier.code 0} true;
  $p717 := $add.ref($p1,$mul.ref(9,8));
  $p717.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p717.dup == 0));
  $i718 := $load.i64($M.3,$p717);
  $i718.dup := $load.i1($M.3.dup,$p717);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 30} true;
  assume {:verifier.code 0} true;
  $i719 := $trunc.i64.i32($i718);
  $i719.dup := $i718.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 22} true;
  assume {:verifier.code 0} true;
  $i720 := $sext.i32.i64($i719);
  $i720.dup := $i719.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 54} true;
  assume {:verifier.code 0} true;
  $p721 := $add.ref($p2,$mul.ref(2,8));
  $p721.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p721.dup == 0));
  $i722 := $load.i64($M.3,$p721);
  $i722.dup := $load.i1($M.3.dup,$p721);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 48} true;
  assume {:verifier.code 0} true;
  $i723 := $trunc.i64.i32($i722);
  $i723.dup := $i722.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 47} true;
  assume {:verifier.code 0} true;
  $i724 := $sext.i32.i64($i723);
  $i724.dup := $i723.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 171, 45} true;
  assume {:verifier.code 0} true;
  $i725 := $mul.i64($i720,$i724);
  $i725.dup := $or.i1($i720.dup,$i724.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 170, 61} true;
  assume {:verifier.code 0} true;
  $i726 := $add.i64($i716,$i725);
  $i726.dup := $or.i1($i716.dup,$i725.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 3} true;
  assume {:verifier.code 0} true;
  $p727 := $add.ref($p0,$mul.ref(11,8));
  $p727.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 164, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p727.dup == 0));
  $M.3 := $store.i64($M.3,$p727,$i726);
  $M.3.dup := $store.i1($M.3.dup,$p727,$i726.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 36} true;
  assume {:verifier.code 0} true;
  $p728 := $add.ref($p1,$mul.ref(6,8));
  $p728.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p728.dup == 0));
  $i729 := $load.i64($M.3,$p728);
  $i729.dup := $load.i1($M.3.dup,$p728);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 30} true;
  assume {:verifier.code 0} true;
  $i730 := $trunc.i64.i32($i729);
  $i730.dup := $i729.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 22} true;
  assume {:verifier.code 0} true;
  $i731 := $sext.i32.i64($i730);
  $i731.dup := $i730.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 54} true;
  assume {:verifier.code 0} true;
  $p732 := $add.ref($p2,$mul.ref(6,8));
  $p732.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p732.dup == 0));
  $i733 := $load.i64($M.3,$p732);
  $i733.dup := $load.i1($M.3.dup,$p732);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 48} true;
  assume {:verifier.code 0} true;
  $i734 := $trunc.i64.i32($i733);
  $i734.dup := $i733.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 47} true;
  assume {:verifier.code 0} true;
  $i735 := $sext.i32.i64($i734);
  $i735.dup := $i734.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 45} true;
  assume {:verifier.code 0} true;
  $i736 := $mul.i64($i731,$i735);
  $i736.dup := $or.i1($i731.dup,$i735.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 36} true;
  assume {:verifier.code 0} true;
  $p737 := $add.ref($p1,$mul.ref(5,8));
  $p737.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p737.dup == 0));
  $i738 := $load.i64($M.3,$p737);
  $i738.dup := $load.i1($M.3.dup,$p737);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 30} true;
  assume {:verifier.code 0} true;
  $i739 := $trunc.i64.i32($i738);
  $i739.dup := $i738.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 22} true;
  assume {:verifier.code 0} true;
  $i740 := $sext.i32.i64($i739);
  $i740.dup := $i739.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 54} true;
  assume {:verifier.code 0} true;
  $p741 := $add.ref($p2,$mul.ref(7,8));
  $p741.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p741.dup == 0));
  $i742 := $load.i64($M.3,$p741);
  $i742.dup := $load.i1($M.3.dup,$p741);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 48} true;
  assume {:verifier.code 0} true;
  $i743 := $trunc.i64.i32($i742);
  $i743.dup := $i742.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 47} true;
  assume {:verifier.code 0} true;
  $i744 := $sext.i32.i64($i743);
  $i744.dup := $i743.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 45} true;
  assume {:verifier.code 0} true;
  $i745 := $mul.i64($i740,$i744);
  $i745.dup := $or.i1($i740.dup,$i744.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 36} true;
  assume {:verifier.code 0} true;
  $p746 := $add.ref($p1,$mul.ref(7,8));
  $p746.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p746.dup == 0));
  $i747 := $load.i64($M.3,$p746);
  $i747.dup := $load.i1($M.3.dup,$p746);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 30} true;
  assume {:verifier.code 0} true;
  $i748 := $trunc.i64.i32($i747);
  $i748.dup := $i747.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 22} true;
  assume {:verifier.code 0} true;
  $i749 := $sext.i32.i64($i748);
  $i749.dup := $i748.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 54} true;
  assume {:verifier.code 0} true;
  $p750 := $add.ref($p2,$mul.ref(5,8));
  $p750.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p750.dup == 0));
  $i751 := $load.i64($M.3,$p750);
  $i751.dup := $load.i1($M.3.dup,$p750);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 48} true;
  assume {:verifier.code 0} true;
  $i752 := $trunc.i64.i32($i751);
  $i752.dup := $i751.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 47} true;
  assume {:verifier.code 0} true;
  $i753 := $sext.i32.i64($i752);
  $i753.dup := $i752.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 45} true;
  assume {:verifier.code 0} true;
  $i754 := $mul.i64($i749,$i753);
  $i754.dup := $or.i1($i749.dup,$i753.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 61} true;
  assume {:verifier.code 0} true;
  $i755 := $add.i64($i745,$i754);
  $i755.dup := $or.i1($i745.dup,$i754.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 36} true;
  assume {:verifier.code 0} true;
  $p756 := $add.ref($p1,$mul.ref(3,8));
  $p756.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p756.dup == 0));
  $i757 := $load.i64($M.3,$p756);
  $i757.dup := $load.i1($M.3.dup,$p756);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 30} true;
  assume {:verifier.code 0} true;
  $i758 := $trunc.i64.i32($i757);
  $i758.dup := $i757.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 22} true;
  assume {:verifier.code 0} true;
  $i759 := $sext.i32.i64($i758);
  $i759.dup := $i758.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 54} true;
  assume {:verifier.code 0} true;
  $p760 := $add.ref($p2,$mul.ref(9,8));
  $p760.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p760.dup == 0));
  $i761 := $load.i64($M.3,$p760);
  $i761.dup := $load.i1($M.3.dup,$p760);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 48} true;
  assume {:verifier.code 0} true;
  $i762 := $trunc.i64.i32($i761);
  $i762.dup := $i761.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 47} true;
  assume {:verifier.code 0} true;
  $i763 := $sext.i32.i64($i762);
  $i763.dup := $i762.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 45} true;
  assume {:verifier.code 0} true;
  $i764 := $mul.i64($i759,$i763);
  $i764.dup := $or.i1($i759.dup,$i763.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 174, 61} true;
  assume {:verifier.code 0} true;
  $i765 := $add.i64($i755,$i764);
  $i765.dup := $or.i1($i755.dup,$i764.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 36} true;
  assume {:verifier.code 0} true;
  $p766 := $add.ref($p1,$mul.ref(9,8));
  $p766.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p766.dup == 0));
  $i767 := $load.i64($M.3,$p766);
  $i767.dup := $load.i1($M.3.dup,$p766);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 30} true;
  assume {:verifier.code 0} true;
  $i768 := $trunc.i64.i32($i767);
  $i768.dup := $i767.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 22} true;
  assume {:verifier.code 0} true;
  $i769 := $sext.i32.i64($i768);
  $i769.dup := $i768.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 54} true;
  assume {:verifier.code 0} true;
  $p770 := $add.ref($p2,$mul.ref(3,8));
  $p770.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p770.dup == 0));
  $i771 := $load.i64($M.3,$p770);
  $i771.dup := $load.i1($M.3.dup,$p770);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 48} true;
  assume {:verifier.code 0} true;
  $i772 := $trunc.i64.i32($i771);
  $i772.dup := $i771.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 47} true;
  assume {:verifier.code 0} true;
  $i773 := $sext.i32.i64($i772);
  $i773.dup := $i772.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 45} true;
  assume {:verifier.code 0} true;
  $i774 := $mul.i64($i769,$i773);
  $i774.dup := $or.i1($i769.dup,$i773.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 175, 61} true;
  assume {:verifier.code 0} true;
  $i775 := $add.i64($i765,$i774);
  $i775.dup := $or.i1($i765.dup,$i774.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 173, 18} true;
  assume {:verifier.code 0} true;
  $i776 := $mul.i64(2,$i775);
  $i776.dup := $or.i1(0,$i775.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 61} true;
  assume {:verifier.code 0} true;
  $i777 := $add.i64($i736,$i776);
  $i777.dup := $or.i1($i736.dup,$i776.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 36} true;
  assume {:verifier.code 0} true;
  $p778 := $add.ref($p1,$mul.ref(4,8));
  $p778.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p778.dup == 0));
  $i779 := $load.i64($M.3,$p778);
  $i779.dup := $load.i1($M.3.dup,$p778);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 30} true;
  assume {:verifier.code 0} true;
  $i780 := $trunc.i64.i32($i779);
  $i780.dup := $i779.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 22} true;
  assume {:verifier.code 0} true;
  $i781 := $sext.i32.i64($i780);
  $i781.dup := $i780.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 54} true;
  assume {:verifier.code 0} true;
  $p782 := $add.ref($p2,$mul.ref(8,8));
  $p782.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p782.dup == 0));
  $i783 := $load.i64($M.3,$p782);
  $i783.dup := $load.i1($M.3.dup,$p782);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 48} true;
  assume {:verifier.code 0} true;
  $i784 := $trunc.i64.i32($i783);
  $i784.dup := $i783.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 47} true;
  assume {:verifier.code 0} true;
  $i785 := $sext.i32.i64($i784);
  $i785.dup := $i784.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 45} true;
  assume {:verifier.code 0} true;
  $i786 := $mul.i64($i781,$i785);
  $i786.dup := $or.i1($i781.dup,$i785.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 176, 62} true;
  assume {:verifier.code 0} true;
  $i787 := $add.i64($i777,$i786);
  $i787.dup := $or.i1($i777.dup,$i786.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 36} true;
  assume {:verifier.code 0} true;
  $p788 := $add.ref($p1,$mul.ref(8,8));
  $p788.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p788.dup == 0));
  $i789 := $load.i64($M.3,$p788);
  $i789.dup := $load.i1($M.3.dup,$p788);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 30} true;
  assume {:verifier.code 0} true;
  $i790 := $trunc.i64.i32($i789);
  $i790.dup := $i789.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 22} true;
  assume {:verifier.code 0} true;
  $i791 := $sext.i32.i64($i790);
  $i791.dup := $i790.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 54} true;
  assume {:verifier.code 0} true;
  $p792 := $add.ref($p2,$mul.ref(4,8));
  $p792.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p792.dup == 0));
  $i793 := $load.i64($M.3,$p792);
  $i793.dup := $load.i1($M.3.dup,$p792);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 48} true;
  assume {:verifier.code 0} true;
  $i794 := $trunc.i64.i32($i793);
  $i794.dup := $i793.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 47} true;
  assume {:verifier.code 0} true;
  $i795 := $sext.i32.i64($i794);
  $i795.dup := $i794.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 178, 45} true;
  assume {:verifier.code 0} true;
  $i796 := $mul.i64($i791,$i795);
  $i796.dup := $or.i1($i791.dup,$i795.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 177, 61} true;
  assume {:verifier.code 0} true;
  $i797 := $add.i64($i787,$i796);
  $i797.dup := $or.i1($i787.dup,$i796.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 3} true;
  assume {:verifier.code 0} true;
  $p798 := $add.ref($p0,$mul.ref(12,8));
  $p798.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 172, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p798.dup == 0));
  $M.3 := $store.i64($M.3,$p798,$i797);
  $M.3.dup := $store.i1($M.3.dup,$p798,$i797.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 36} true;
  assume {:verifier.code 0} true;
  $p799 := $add.ref($p1,$mul.ref(6,8));
  $p799.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p799.dup == 0));
  $i800 := $load.i64($M.3,$p799);
  $i800.dup := $load.i1($M.3.dup,$p799);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 30} true;
  assume {:verifier.code 0} true;
  $i801 := $trunc.i64.i32($i800);
  $i801.dup := $i800.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 22} true;
  assume {:verifier.code 0} true;
  $i802 := $sext.i32.i64($i801);
  $i802.dup := $i801.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 54} true;
  assume {:verifier.code 0} true;
  $p803 := $add.ref($p2,$mul.ref(7,8));
  $p803.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p803.dup == 0));
  $i804 := $load.i64($M.3,$p803);
  $i804.dup := $load.i1($M.3.dup,$p803);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 48} true;
  assume {:verifier.code 0} true;
  $i805 := $trunc.i64.i32($i804);
  $i805.dup := $i804.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 47} true;
  assume {:verifier.code 0} true;
  $i806 := $sext.i32.i64($i805);
  $i806.dup := $i805.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 45} true;
  assume {:verifier.code 0} true;
  $i807 := $mul.i64($i802,$i806);
  $i807.dup := $or.i1($i802.dup,$i806.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 36} true;
  assume {:verifier.code 0} true;
  $p808 := $add.ref($p1,$mul.ref(7,8));
  $p808.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p808.dup == 0));
  $i809 := $load.i64($M.3,$p808);
  $i809.dup := $load.i1($M.3.dup,$p808);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 30} true;
  assume {:verifier.code 0} true;
  $i810 := $trunc.i64.i32($i809);
  $i810.dup := $i809.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 22} true;
  assume {:verifier.code 0} true;
  $i811 := $sext.i32.i64($i810);
  $i811.dup := $i810.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 54} true;
  assume {:verifier.code 0} true;
  $p812 := $add.ref($p2,$mul.ref(6,8));
  $p812.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p812.dup == 0));
  $i813 := $load.i64($M.3,$p812);
  $i813.dup := $load.i1($M.3.dup,$p812);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 48} true;
  assume {:verifier.code 0} true;
  $i814 := $trunc.i64.i32($i813);
  $i814.dup := $i813.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 47} true;
  assume {:verifier.code 0} true;
  $i815 := $sext.i32.i64($i814);
  $i815.dup := $i814.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 45} true;
  assume {:verifier.code 0} true;
  $i816 := $mul.i64($i811,$i815);
  $i816.dup := $or.i1($i811.dup,$i815.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 61} true;
  assume {:verifier.code 0} true;
  $i817 := $add.i64($i807,$i816);
  $i817.dup := $or.i1($i807.dup,$i816.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 36} true;
  assume {:verifier.code 0} true;
  $p818 := $add.ref($p1,$mul.ref(5,8));
  $p818.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p818.dup == 0));
  $i819 := $load.i64($M.3,$p818);
  $i819.dup := $load.i1($M.3.dup,$p818);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 30} true;
  assume {:verifier.code 0} true;
  $i820 := $trunc.i64.i32($i819);
  $i820.dup := $i819.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 22} true;
  assume {:verifier.code 0} true;
  $i821 := $sext.i32.i64($i820);
  $i821.dup := $i820.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 54} true;
  assume {:verifier.code 0} true;
  $p822 := $add.ref($p2,$mul.ref(8,8));
  $p822.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p822.dup == 0));
  $i823 := $load.i64($M.3,$p822);
  $i823.dup := $load.i1($M.3.dup,$p822);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 48} true;
  assume {:verifier.code 0} true;
  $i824 := $trunc.i64.i32($i823);
  $i824.dup := $i823.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 47} true;
  assume {:verifier.code 0} true;
  $i825 := $sext.i32.i64($i824);
  $i825.dup := $i824.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 45} true;
  assume {:verifier.code 0} true;
  $i826 := $mul.i64($i821,$i825);
  $i826.dup := $or.i1($i821.dup,$i825.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 180, 61} true;
  assume {:verifier.code 0} true;
  $i827 := $add.i64($i817,$i826);
  $i827.dup := $or.i1($i817.dup,$i826.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 36} true;
  assume {:verifier.code 0} true;
  $p828 := $add.ref($p1,$mul.ref(8,8));
  $p828.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p828.dup == 0));
  $i829 := $load.i64($M.3,$p828);
  $i829.dup := $load.i1($M.3.dup,$p828);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 30} true;
  assume {:verifier.code 0} true;
  $i830 := $trunc.i64.i32($i829);
  $i830.dup := $i829.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 22} true;
  assume {:verifier.code 0} true;
  $i831 := $sext.i32.i64($i830);
  $i831.dup := $i830.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 54} true;
  assume {:verifier.code 0} true;
  $p832 := $add.ref($p2,$mul.ref(5,8));
  $p832.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p832.dup == 0));
  $i833 := $load.i64($M.3,$p832);
  $i833.dup := $load.i1($M.3.dup,$p832);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 48} true;
  assume {:verifier.code 0} true;
  $i834 := $trunc.i64.i32($i833);
  $i834.dup := $i833.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 47} true;
  assume {:verifier.code 0} true;
  $i835 := $sext.i32.i64($i834);
  $i835.dup := $i834.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 45} true;
  assume {:verifier.code 0} true;
  $i836 := $mul.i64($i831,$i835);
  $i836.dup := $or.i1($i831.dup,$i835.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 181, 61} true;
  assume {:verifier.code 0} true;
  $i837 := $add.i64($i827,$i836);
  $i837.dup := $or.i1($i827.dup,$i836.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 36} true;
  assume {:verifier.code 0} true;
  $p838 := $add.ref($p1,$mul.ref(4,8));
  $p838.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p838.dup == 0));
  $i839 := $load.i64($M.3,$p838);
  $i839.dup := $load.i1($M.3.dup,$p838);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 30} true;
  assume {:verifier.code 0} true;
  $i840 := $trunc.i64.i32($i839);
  $i840.dup := $i839.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 22} true;
  assume {:verifier.code 0} true;
  $i841 := $sext.i32.i64($i840);
  $i841.dup := $i840.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 54} true;
  assume {:verifier.code 0} true;
  $p842 := $add.ref($p2,$mul.ref(9,8));
  $p842.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p842.dup == 0));
  $i843 := $load.i64($M.3,$p842);
  $i843.dup := $load.i1($M.3.dup,$p842);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 48} true;
  assume {:verifier.code 0} true;
  $i844 := $trunc.i64.i32($i843);
  $i844.dup := $i843.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 47} true;
  assume {:verifier.code 0} true;
  $i845 := $sext.i32.i64($i844);
  $i845.dup := $i844.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 45} true;
  assume {:verifier.code 0} true;
  $i846 := $mul.i64($i841,$i845);
  $i846.dup := $or.i1($i841.dup,$i845.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 182, 61} true;
  assume {:verifier.code 0} true;
  $i847 := $add.i64($i837,$i846);
  $i847.dup := $or.i1($i837.dup,$i846.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 36} true;
  assume {:verifier.code 0} true;
  $p848 := $add.ref($p1,$mul.ref(9,8));
  $p848.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p848.dup == 0));
  $i849 := $load.i64($M.3,$p848);
  $i849.dup := $load.i1($M.3.dup,$p848);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 30} true;
  assume {:verifier.code 0} true;
  $i850 := $trunc.i64.i32($i849);
  $i850.dup := $i849.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 22} true;
  assume {:verifier.code 0} true;
  $i851 := $sext.i32.i64($i850);
  $i851.dup := $i850.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 54} true;
  assume {:verifier.code 0} true;
  $p852 := $add.ref($p2,$mul.ref(4,8));
  $p852.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p852.dup == 0));
  $i853 := $load.i64($M.3,$p852);
  $i853.dup := $load.i1($M.3.dup,$p852);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 48} true;
  assume {:verifier.code 0} true;
  $i854 := $trunc.i64.i32($i853);
  $i854.dup := $i853.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 47} true;
  assume {:verifier.code 0} true;
  $i855 := $sext.i32.i64($i854);
  $i855.dup := $i854.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 184, 45} true;
  assume {:verifier.code 0} true;
  $i856 := $mul.i64($i851,$i855);
  $i856.dup := $or.i1($i851.dup,$i855.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 183, 61} true;
  assume {:verifier.code 0} true;
  $i857 := $add.i64($i847,$i856);
  $i857.dup := $or.i1($i847.dup,$i856.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 3} true;
  assume {:verifier.code 0} true;
  $p858 := $add.ref($p0,$mul.ref(13,8));
  $p858.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 179, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p858.dup == 0));
  $M.3 := $store.i64($M.3,$p858,$i857);
  $M.3.dup := $store.i1($M.3.dup,$p858,$i857.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 36} true;
  assume {:verifier.code 0} true;
  $p859 := $add.ref($p1,$mul.ref(7,8));
  $p859.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p859.dup == 0));
  $i860 := $load.i64($M.3,$p859);
  $i860.dup := $load.i1($M.3.dup,$p859);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 30} true;
  assume {:verifier.code 0} true;
  $i861 := $trunc.i64.i32($i860);
  $i861.dup := $i860.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 22} true;
  assume {:verifier.code 0} true;
  $i862 := $sext.i32.i64($i861);
  $i862.dup := $i861.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 54} true;
  assume {:verifier.code 0} true;
  $p863 := $add.ref($p2,$mul.ref(7,8));
  $p863.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p863.dup == 0));
  $i864 := $load.i64($M.3,$p863);
  $i864.dup := $load.i1($M.3.dup,$p863);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 48} true;
  assume {:verifier.code 0} true;
  $i865 := $trunc.i64.i32($i864);
  $i865.dup := $i864.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 47} true;
  assume {:verifier.code 0} true;
  $i866 := $sext.i32.i64($i865);
  $i866.dup := $i865.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 45} true;
  assume {:verifier.code 0} true;
  $i867 := $mul.i64($i862,$i866);
  $i867.dup := $or.i1($i862.dup,$i866.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 36} true;
  assume {:verifier.code 0} true;
  $p868 := $add.ref($p1,$mul.ref(5,8));
  $p868.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p868.dup == 0));
  $i869 := $load.i64($M.3,$p868);
  $i869.dup := $load.i1($M.3.dup,$p868);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 30} true;
  assume {:verifier.code 0} true;
  $i870 := $trunc.i64.i32($i869);
  $i870.dup := $i869.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 22} true;
  assume {:verifier.code 0} true;
  $i871 := $sext.i32.i64($i870);
  $i871.dup := $i870.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 54} true;
  assume {:verifier.code 0} true;
  $p872 := $add.ref($p2,$mul.ref(9,8));
  $p872.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p872.dup == 0));
  $i873 := $load.i64($M.3,$p872);
  $i873.dup := $load.i1($M.3.dup,$p872);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 48} true;
  assume {:verifier.code 0} true;
  $i874 := $trunc.i64.i32($i873);
  $i874.dup := $i873.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 47} true;
  assume {:verifier.code 0} true;
  $i875 := $sext.i32.i64($i874);
  $i875.dup := $i874.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 45} true;
  assume {:verifier.code 0} true;
  $i876 := $mul.i64($i871,$i875);
  $i876.dup := $or.i1($i871.dup,$i875.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 61} true;
  assume {:verifier.code 0} true;
  $i877 := $add.i64($i867,$i876);
  $i877.dup := $or.i1($i867.dup,$i876.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 36} true;
  assume {:verifier.code 0} true;
  $p878 := $add.ref($p1,$mul.ref(9,8));
  $p878.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p878.dup == 0));
  $i879 := $load.i64($M.3,$p878);
  $i879.dup := $load.i1($M.3.dup,$p878);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 30} true;
  assume {:verifier.code 0} true;
  $i880 := $trunc.i64.i32($i879);
  $i880.dup := $i879.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 22} true;
  assume {:verifier.code 0} true;
  $i881 := $sext.i32.i64($i880);
  $i881.dup := $i880.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 54} true;
  assume {:verifier.code 0} true;
  $p882 := $add.ref($p2,$mul.ref(5,8));
  $p882.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p882.dup == 0));
  $i883 := $load.i64($M.3,$p882);
  $i883.dup := $load.i1($M.3.dup,$p882);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 48} true;
  assume {:verifier.code 0} true;
  $i884 := $trunc.i64.i32($i883);
  $i884.dup := $i883.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 47} true;
  assume {:verifier.code 0} true;
  $i885 := $sext.i32.i64($i884);
  $i885.dup := $i884.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 45} true;
  assume {:verifier.code 0} true;
  $i886 := $mul.i64($i881,$i885);
  $i886.dup := $or.i1($i881.dup,$i885.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 186, 61} true;
  assume {:verifier.code 0} true;
  $i887 := $add.i64($i877,$i886);
  $i887.dup := $or.i1($i877.dup,$i886.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 18} true;
  assume {:verifier.code 0} true;
  $i888 := $mul.i64(2,$i887);
  $i888.dup := $or.i1(0,$i887.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 36} true;
  assume {:verifier.code 0} true;
  $p889 := $add.ref($p1,$mul.ref(6,8));
  $p889.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p889.dup == 0));
  $i890 := $load.i64($M.3,$p889);
  $i890.dup := $load.i1($M.3.dup,$p889);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 30} true;
  assume {:verifier.code 0} true;
  $i891 := $trunc.i64.i32($i890);
  $i891.dup := $i890.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 22} true;
  assume {:verifier.code 0} true;
  $i892 := $sext.i32.i64($i891);
  $i892.dup := $i891.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 54} true;
  assume {:verifier.code 0} true;
  $p893 := $add.ref($p2,$mul.ref(8,8));
  $p893.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p893.dup == 0));
  $i894 := $load.i64($M.3,$p893);
  $i894.dup := $load.i1($M.3.dup,$p893);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 48} true;
  assume {:verifier.code 0} true;
  $i895 := $trunc.i64.i32($i894);
  $i895.dup := $i894.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 47} true;
  assume {:verifier.code 0} true;
  $i896 := $sext.i32.i64($i895);
  $i896.dup := $i895.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 45} true;
  assume {:verifier.code 0} true;
  $i897 := $mul.i64($i892,$i896);
  $i897.dup := $or.i1($i892.dup,$i896.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 187, 62} true;
  assume {:verifier.code 0} true;
  $i898 := $add.i64($i888,$i897);
  $i898.dup := $or.i1($i888.dup,$i897.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 36} true;
  assume {:verifier.code 0} true;
  $p899 := $add.ref($p1,$mul.ref(8,8));
  $p899.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p899.dup == 0));
  $i900 := $load.i64($M.3,$p899);
  $i900.dup := $load.i1($M.3.dup,$p899);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 30} true;
  assume {:verifier.code 0} true;
  $i901 := $trunc.i64.i32($i900);
  $i901.dup := $i900.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 22} true;
  assume {:verifier.code 0} true;
  $i902 := $sext.i32.i64($i901);
  $i902.dup := $i901.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 54} true;
  assume {:verifier.code 0} true;
  $p903 := $add.ref($p2,$mul.ref(6,8));
  $p903.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p903.dup == 0));
  $i904 := $load.i64($M.3,$p903);
  $i904.dup := $load.i1($M.3.dup,$p903);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 48} true;
  assume {:verifier.code 0} true;
  $i905 := $trunc.i64.i32($i904);
  $i905.dup := $i904.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 47} true;
  assume {:verifier.code 0} true;
  $i906 := $sext.i32.i64($i905);
  $i906.dup := $i905.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 189, 45} true;
  assume {:verifier.code 0} true;
  $i907 := $mul.i64($i902,$i906);
  $i907.dup := $or.i1($i902.dup,$i906.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 188, 61} true;
  assume {:verifier.code 0} true;
  $i908 := $add.i64($i898,$i907);
  $i908.dup := $or.i1($i898.dup,$i907.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 3} true;
  assume {:verifier.code 0} true;
  $p909 := $add.ref($p0,$mul.ref(14,8));
  $p909.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 185, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p909.dup == 0));
  $M.3 := $store.i64($M.3,$p909,$i908);
  $M.3.dup := $store.i1($M.3.dup,$p909,$i908.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 36} true;
  assume {:verifier.code 0} true;
  $p910 := $add.ref($p1,$mul.ref(7,8));
  $p910.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p910.dup == 0));
  $i911 := $load.i64($M.3,$p910);
  $i911.dup := $load.i1($M.3.dup,$p910);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 30} true;
  assume {:verifier.code 0} true;
  $i912 := $trunc.i64.i32($i911);
  $i912.dup := $i911.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 22} true;
  assume {:verifier.code 0} true;
  $i913 := $sext.i32.i64($i912);
  $i913.dup := $i912.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 54} true;
  assume {:verifier.code 0} true;
  $p914 := $add.ref($p2,$mul.ref(8,8));
  $p914.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p914.dup == 0));
  $i915 := $load.i64($M.3,$p914);
  $i915.dup := $load.i1($M.3.dup,$p914);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 48} true;
  assume {:verifier.code 0} true;
  $i916 := $trunc.i64.i32($i915);
  $i916.dup := $i915.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 47} true;
  assume {:verifier.code 0} true;
  $i917 := $sext.i32.i64($i916);
  $i917.dup := $i916.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 45} true;
  assume {:verifier.code 0} true;
  $i918 := $mul.i64($i913,$i917);
  $i918.dup := $or.i1($i913.dup,$i917.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 36} true;
  assume {:verifier.code 0} true;
  $p919 := $add.ref($p1,$mul.ref(8,8));
  $p919.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p919.dup == 0));
  $i920 := $load.i64($M.3,$p919);
  $i920.dup := $load.i1($M.3.dup,$p919);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 30} true;
  assume {:verifier.code 0} true;
  $i921 := $trunc.i64.i32($i920);
  $i921.dup := $i920.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 22} true;
  assume {:verifier.code 0} true;
  $i922 := $sext.i32.i64($i921);
  $i922.dup := $i921.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 54} true;
  assume {:verifier.code 0} true;
  $p923 := $add.ref($p2,$mul.ref(7,8));
  $p923.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p923.dup == 0));
  $i924 := $load.i64($M.3,$p923);
  $i924.dup := $load.i1($M.3.dup,$p923);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 48} true;
  assume {:verifier.code 0} true;
  $i925 := $trunc.i64.i32($i924);
  $i925.dup := $i924.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 47} true;
  assume {:verifier.code 0} true;
  $i926 := $sext.i32.i64($i925);
  $i926.dup := $i925.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 45} true;
  assume {:verifier.code 0} true;
  $i927 := $mul.i64($i922,$i926);
  $i927.dup := $or.i1($i922.dup,$i926.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 61} true;
  assume {:verifier.code 0} true;
  $i928 := $add.i64($i918,$i927);
  $i928.dup := $or.i1($i918.dup,$i927.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 36} true;
  assume {:verifier.code 0} true;
  $p929 := $add.ref($p1,$mul.ref(6,8));
  $p929.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p929.dup == 0));
  $i930 := $load.i64($M.3,$p929);
  $i930.dup := $load.i1($M.3.dup,$p929);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 30} true;
  assume {:verifier.code 0} true;
  $i931 := $trunc.i64.i32($i930);
  $i931.dup := $i930.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 22} true;
  assume {:verifier.code 0} true;
  $i932 := $sext.i32.i64($i931);
  $i932.dup := $i931.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 54} true;
  assume {:verifier.code 0} true;
  $p933 := $add.ref($p2,$mul.ref(9,8));
  $p933.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p933.dup == 0));
  $i934 := $load.i64($M.3,$p933);
  $i934.dup := $load.i1($M.3.dup,$p933);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 48} true;
  assume {:verifier.code 0} true;
  $i935 := $trunc.i64.i32($i934);
  $i935.dup := $i934.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 47} true;
  assume {:verifier.code 0} true;
  $i936 := $sext.i32.i64($i935);
  $i936.dup := $i935.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 45} true;
  assume {:verifier.code 0} true;
  $i937 := $mul.i64($i932,$i936);
  $i937.dup := $or.i1($i932.dup,$i936.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 191, 61} true;
  assume {:verifier.code 0} true;
  $i938 := $add.i64($i928,$i937);
  $i938.dup := $or.i1($i928.dup,$i937.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 36} true;
  assume {:verifier.code 0} true;
  $p939 := $add.ref($p1,$mul.ref(9,8));
  $p939.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p939.dup == 0));
  $i940 := $load.i64($M.3,$p939);
  $i940.dup := $load.i1($M.3.dup,$p939);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 30} true;
  assume {:verifier.code 0} true;
  $i941 := $trunc.i64.i32($i940);
  $i941.dup := $i940.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 22} true;
  assume {:verifier.code 0} true;
  $i942 := $sext.i32.i64($i941);
  $i942.dup := $i941.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 54} true;
  assume {:verifier.code 0} true;
  $p943 := $add.ref($p2,$mul.ref(6,8));
  $p943.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p943.dup == 0));
  $i944 := $load.i64($M.3,$p943);
  $i944.dup := $load.i1($M.3.dup,$p943);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 48} true;
  assume {:verifier.code 0} true;
  $i945 := $trunc.i64.i32($i944);
  $i945.dup := $i944.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 47} true;
  assume {:verifier.code 0} true;
  $i946 := $sext.i32.i64($i945);
  $i946.dup := $i945.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 193, 45} true;
  assume {:verifier.code 0} true;
  $i947 := $mul.i64($i942,$i946);
  $i947.dup := $or.i1($i942.dup,$i946.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 192, 61} true;
  assume {:verifier.code 0} true;
  $i948 := $add.i64($i938,$i947);
  $i948.dup := $or.i1($i938.dup,$i947.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 3} true;
  assume {:verifier.code 0} true;
  $p949 := $add.ref($p0,$mul.ref(15,8));
  $p949.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 190, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p949.dup == 0));
  $M.3 := $store.i64($M.3,$p949,$i948);
  $M.3.dup := $store.i1($M.3.dup,$p949,$i948.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 36} true;
  assume {:verifier.code 0} true;
  $p950 := $add.ref($p1,$mul.ref(8,8));
  $p950.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p950.dup == 0));
  $i951 := $load.i64($M.3,$p950);
  $i951.dup := $load.i1($M.3.dup,$p950);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 30} true;
  assume {:verifier.code 0} true;
  $i952 := $trunc.i64.i32($i951);
  $i952.dup := $i951.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 22} true;
  assume {:verifier.code 0} true;
  $i953 := $sext.i32.i64($i952);
  $i953.dup := $i952.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 54} true;
  assume {:verifier.code 0} true;
  $p954 := $add.ref($p2,$mul.ref(8,8));
  $p954.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p954.dup == 0));
  $i955 := $load.i64($M.3,$p954);
  $i955.dup := $load.i1($M.3.dup,$p954);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 48} true;
  assume {:verifier.code 0} true;
  $i956 := $trunc.i64.i32($i955);
  $i956.dup := $i955.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 47} true;
  assume {:verifier.code 0} true;
  $i957 := $sext.i32.i64($i956);
  $i957.dup := $i956.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 45} true;
  assume {:verifier.code 0} true;
  $i958 := $mul.i64($i953,$i957);
  $i958.dup := $or.i1($i953.dup,$i957.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 36} true;
  assume {:verifier.code 0} true;
  $p959 := $add.ref($p1,$mul.ref(7,8));
  $p959.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p959.dup == 0));
  $i960 := $load.i64($M.3,$p959);
  $i960.dup := $load.i1($M.3.dup,$p959);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 30} true;
  assume {:verifier.code 0} true;
  $i961 := $trunc.i64.i32($i960);
  $i961.dup := $i960.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 22} true;
  assume {:verifier.code 0} true;
  $i962 := $sext.i32.i64($i961);
  $i962.dup := $i961.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 54} true;
  assume {:verifier.code 0} true;
  $p963 := $add.ref($p2,$mul.ref(9,8));
  $p963.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p963.dup == 0));
  $i964 := $load.i64($M.3,$p963);
  $i964.dup := $load.i1($M.3.dup,$p963);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 48} true;
  assume {:verifier.code 0} true;
  $i965 := $trunc.i64.i32($i964);
  $i965.dup := $i964.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 47} true;
  assume {:verifier.code 0} true;
  $i966 := $sext.i32.i64($i965);
  $i966.dup := $i965.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 45} true;
  assume {:verifier.code 0} true;
  $i967 := $mul.i64($i962,$i966);
  $i967.dup := $or.i1($i962.dup,$i966.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 36} true;
  assume {:verifier.code 0} true;
  $p968 := $add.ref($p1,$mul.ref(9,8));
  $p968.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p968.dup == 0));
  $i969 := $load.i64($M.3,$p968);
  $i969.dup := $load.i1($M.3.dup,$p968);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 30} true;
  assume {:verifier.code 0} true;
  $i970 := $trunc.i64.i32($i969);
  $i970.dup := $i969.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 22} true;
  assume {:verifier.code 0} true;
  $i971 := $sext.i32.i64($i970);
  $i971.dup := $i970.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 54} true;
  assume {:verifier.code 0} true;
  $p972 := $add.ref($p2,$mul.ref(7,8));
  $p972.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p972.dup == 0));
  $i973 := $load.i64($M.3,$p972);
  $i973.dup := $load.i1($M.3.dup,$p972);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 48} true;
  assume {:verifier.code 0} true;
  $i974 := $trunc.i64.i32($i973);
  $i974.dup := $i973.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 47} true;
  assume {:verifier.code 0} true;
  $i975 := $sext.i32.i64($i974);
  $i975.dup := $i974.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 196, 45} true;
  assume {:verifier.code 0} true;
  $i976 := $mul.i64($i971,$i975);
  $i976.dup := $or.i1($i971.dup,$i975.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 61} true;
  assume {:verifier.code 0} true;
  $i977 := $add.i64($i967,$i976);
  $i977.dup := $or.i1($i967.dup,$i976.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 195, 18} true;
  assume {:verifier.code 0} true;
  $i978 := $mul.i64(2,$i977);
  $i978.dup := $or.i1(0,$i977.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 61} true;
  assume {:verifier.code 0} true;
  $i979 := $add.i64($i958,$i978);
  $i979.dup := $or.i1($i958.dup,$i978.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 3} true;
  assume {:verifier.code 0} true;
  $p980 := $add.ref($p0,$mul.ref(16,8));
  $p980.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 194, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p980.dup == 0));
  $M.3 := $store.i64($M.3,$p980,$i979);
  $M.3.dup := $store.i1($M.3.dup,$p980,$i979.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 36} true;
  assume {:verifier.code 0} true;
  $p981 := $add.ref($p1,$mul.ref(8,8));
  $p981.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p981.dup == 0));
  $i982 := $load.i64($M.3,$p981);
  $i982.dup := $load.i1($M.3.dup,$p981);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 30} true;
  assume {:verifier.code 0} true;
  $i983 := $trunc.i64.i32($i982);
  $i983.dup := $i982.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 22} true;
  assume {:verifier.code 0} true;
  $i984 := $sext.i32.i64($i983);
  $i984.dup := $i983.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 54} true;
  assume {:verifier.code 0} true;
  $p985 := $add.ref($p2,$mul.ref(9,8));
  $p985.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p985.dup == 0));
  $i986 := $load.i64($M.3,$p985);
  $i986.dup := $load.i1($M.3.dup,$p985);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 48} true;
  assume {:verifier.code 0} true;
  $i987 := $trunc.i64.i32($i986);
  $i987.dup := $i986.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 47} true;
  assume {:verifier.code 0} true;
  $i988 := $sext.i32.i64($i987);
  $i988.dup := $i987.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 45} true;
  assume {:verifier.code 0} true;
  $i989 := $mul.i64($i984,$i988);
  $i989.dup := $or.i1($i984.dup,$i988.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 36} true;
  assume {:verifier.code 0} true;
  $p990 := $add.ref($p1,$mul.ref(9,8));
  $p990.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p990.dup == 0));
  $i991 := $load.i64($M.3,$p990);
  $i991.dup := $load.i1($M.3.dup,$p990);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 30} true;
  assume {:verifier.code 0} true;
  $i992 := $trunc.i64.i32($i991);
  $i992.dup := $i991.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 22} true;
  assume {:verifier.code 0} true;
  $i993 := $sext.i32.i64($i992);
  $i993.dup := $i992.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 54} true;
  assume {:verifier.code 0} true;
  $p994 := $add.ref($p2,$mul.ref(8,8));
  $p994.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p994.dup == 0));
  $i995 := $load.i64($M.3,$p994);
  $i995.dup := $load.i1($M.3.dup,$p994);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 48} true;
  assume {:verifier.code 0} true;
  $i996 := $trunc.i64.i32($i995);
  $i996.dup := $i995.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 47} true;
  assume {:verifier.code 0} true;
  $i997 := $sext.i32.i64($i996);
  $i997.dup := $i996.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 198, 45} true;
  assume {:verifier.code 0} true;
  $i998 := $mul.i64($i993,$i997);
  $i998.dup := $or.i1($i993.dup,$i997.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 61} true;
  assume {:verifier.code 0} true;
  $i999 := $add.i64($i989,$i998);
  $i999.dup := $or.i1($i989.dup,$i998.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 3} true;
  assume {:verifier.code 0} true;
  $p1000 := $add.ref($p0,$mul.ref(17,8));
  $p1000.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 197, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1000.dup == 0));
  $M.3 := $store.i64($M.3,$p1000,$i999);
  $M.3.dup := $store.i1($M.3.dup,$p1000,$i999.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 36} true;
  assume {:verifier.code 0} true;
  $p1001 := $add.ref($p1,$mul.ref(9,8));
  $p1001.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1001.dup == 0));
  $i1002 := $load.i64($M.3,$p1001);
  $i1002.dup := $load.i1($M.3.dup,$p1001);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 30} true;
  assume {:verifier.code 0} true;
  $i1003 := $trunc.i64.i32($i1002);
  $i1003.dup := $i1002.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 22} true;
  assume {:verifier.code 0} true;
  $i1004 := $sext.i32.i64($i1003);
  $i1004.dup := $i1003.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 18} true;
  assume {:verifier.code 0} true;
  $i1005 := $mul.i64(2,$i1004);
  $i1005.dup := $or.i1(0,$i1004.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 54} true;
  assume {:verifier.code 0} true;
  $p1006 := $add.ref($p2,$mul.ref(9,8));
  $p1006.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 54} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1006.dup == 0));
  $i1007 := $load.i64($M.3,$p1006);
  $i1007.dup := $load.i1($M.3.dup,$p1006);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 48} true;
  assume {:verifier.code 0} true;
  $i1008 := $trunc.i64.i32($i1007);
  $i1008.dup := $i1007.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 47} true;
  assume {:verifier.code 0} true;
  $i1009 := $sext.i32.i64($i1008);
  $i1009.dup := $i1008.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 45} true;
  assume {:verifier.code 0} true;
  $i1010 := $mul.i64($i1005,$i1009);
  $i1010.dup := $or.i1($i1005.dup,$i1009.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 3} true;
  assume {:verifier.code 0} true;
  $p1011 := $add.ref($p0,$mul.ref(18,8));
  $p1011.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 199, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1011.dup == 0));
  $M.3 := $store.i64($M.3,$p1011,$i1010);
  $M.3.dup := $store.i1($M.3.dup,$p1011,$i1010.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 200, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const freduce_degree: ref;
axiom (freduce_degree == $sub.ref(0,12384));
procedure {:inline 45} freduce_degree($p0: ref, $p0.dup: i1)
modifies $M.3, $exn;
{
  var $p1: ref;
  var $p1.dup: i1;
  var $i2: i64;
  var $i2.dup: i1;
  var $i3: i64;
  var $i3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $i12: i64;
  var $i12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $i14: i64;
  var $i14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $i17: i64;
  var $i17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $i19: i64;
  var $i19.dup: i1;
  var $i20: i64;
  var $i20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $i22: i64;
  var $i22.dup: i1;
  var $i23: i64;
  var $i23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $i25: i64;
  var $i25.dup: i1;
  var $i26: i64;
  var $i26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $i28: i64;
  var $i28.dup: i1;
  var $i29: i64;
  var $i29.dup: i1;
  var $p30: ref;
  var $p30.dup: i1;
  var $i31: i64;
  var $i31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $i33: i64;
  var $i33.dup: i1;
  var $i34: i64;
  var $i34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $i36: i64;
  var $i36.dup: i1;
  var $i37: i64;
  var $i37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $i39: i64;
  var $i39.dup: i1;
  var $i40: i64;
  var $i40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $i42: i64;
  var $i42.dup: i1;
  var $i43: i64;
  var $i43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i64;
  var $i45.dup: i1;
  var $i46: i64;
  var $i46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $i48: i64;
  var $i48.dup: i1;
  var $p49: ref;
  var $p49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $i51: i64;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $i53: i64;
  var $i53.dup: i1;
  var $i54: i64;
  var $i54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $i56: i64;
  var $i56.dup: i1;
  var $i57: i64;
  var $i57.dup: i1;
  var $p58: ref;
  var $p58.dup: i1;
  var $i59: i64;
  var $i59.dup: i1;
  var $i60: i64;
  var $i60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
  var $i63: i64;
  var $i63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $i65: i64;
  var $i65.dup: i1;
  var $p66: ref;
  var $p66.dup: i1;
  var $i67: i64;
  var $i67.dup: i1;
  var $i68: i64;
  var $i68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $i70: i64;
  var $i70.dup: i1;
  var $i71: i64;
  var $i71.dup: i1;
  var $p72: ref;
  var $p72.dup: i1;
  var $i73: i64;
  var $i73.dup: i1;
  var $i74: i64;
  var $i74.dup: i1;
  var $p75: ref;
  var $p75.dup: i1;
  var $i76: i64;
  var $i76.dup: i1;
  var $i77: i64;
  var $i77.dup: i1;
  var $p78: ref;
  var $p78.dup: i1;
  var $i79: i64;
  var $i79.dup: i1;
  var $i80: i64;
  var $i80.dup: i1;
  var $p81: ref;
  var $p81.dup: i1;
  var $i82: i64;
  var $i82.dup: i1;
  var $p83: ref;
  var $p83.dup: i1;
  var $i84: i64;
  var $i84.dup: i1;
  var $i85: i64;
  var $i85.dup: i1;
  var $p86: ref;
  var $p86.dup: i1;
  var $i87: i64;
  var $i87.dup: i1;
  var $i88: i64;
  var $i88.dup: i1;
  var $p89: ref;
  var $p89.dup: i1;
  var $i90: i64;
  var $i90.dup: i1;
  var $i91: i64;
  var $i91.dup: i1;
  var $p92: ref;
  var $p92.dup: i1;
  var $i93: i64;
  var $i93.dup: i1;
  var $i94: i64;
  var $i94.dup: i1;
  var $p95: ref;
  var $p95.dup: i1;
  var $i96: i64;
  var $i96.dup: i1;
  var $i97: i64;
  var $i97.dup: i1;
  var $p98: ref;
  var $p98.dup: i1;
  var $i99: i64;
  var $i99.dup: i1;
  var $p100: ref;
  var $p100.dup: i1;
  var $i101: i64;
  var $i101.dup: i1;
  var $i102: i64;
  var $i102.dup: i1;
  var $p103: ref;
  var $p103.dup: i1;
  var $i104: i64;
  var $i104.dup: i1;
  var $i105: i64;
  var $i105.dup: i1;
  var $p106: ref;
  var $p106.dup: i1;
  var $i107: i64;
  var $i107.dup: i1;
  var $i108: i64;
  var $i108.dup: i1;
  var $p109: ref;
  var $p109.dup: i1;
  var $i110: i64;
  var $i110.dup: i1;
  var $i111: i64;
  var $i111.dup: i1;
  var $p112: ref;
  var $p112.dup: i1;
  var $i113: i64;
  var $i113.dup: i1;
  var $i114: i64;
  var $i114.dup: i1;
  var $p115: ref;
  var $p115.dup: i1;
  var $i116: i64;
  var $i116.dup: i1;
  var $p117: ref;
  var $p117.dup: i1;
  var $i118: i64;
  var $i118.dup: i1;
  var $i119: i64;
  var $i119.dup: i1;
  var $p120: ref;
  var $p120.dup: i1;
  var $i121: i64;
  var $i121.dup: i1;
  var $i122: i64;
  var $i122.dup: i1;
  var $p123: ref;
  var $p123.dup: i1;
  var $i124: i64;
  var $i124.dup: i1;
  var $i125: i64;
  var $i125.dup: i1;
  var $p126: ref;
  var $p126.dup: i1;
  var $i127: i64;
  var $i127.dup: i1;
  var $i128: i64;
  var $i128.dup: i1;
  var $p129: ref;
  var $p129.dup: i1;
  var $i130: i64;
  var $i130.dup: i1;
  var $i131: i64;
  var $i131.dup: i1;
  var $p132: ref;
  var $p132.dup: i1;
  var $i133: i64;
  var $i133.dup: i1;
  var $p134: ref;
  var $p134.dup: i1;
  var $i135: i64;
  var $i135.dup: i1;
  var $i136: i64;
  var $i136.dup: i1;
  var $p137: ref;
  var $p137.dup: i1;
  var $i138: i64;
  var $i138.dup: i1;
  var $i139: i64;
  var $i139.dup: i1;
  var $p140: ref;
  var $p140.dup: i1;
  var $i141: i64;
  var $i141.dup: i1;
  var $i142: i64;
  var $i142.dup: i1;
  var $p143: ref;
  var $p143.dup: i1;
  var $i144: i64;
  var $i144.dup: i1;
  var $i145: i64;
  var $i145.dup: i1;
  var $p146: ref;
  var $p146.dup: i1;
  var $i147: i64;
  var $i147.dup: i1;
  var $i148: i64;
  var $i148.dup: i1;
  var $p149: ref;
  var $p149.dup: i1;
  var $i150: i64;
  var $i150.dup: i1;
  var $p151: ref;
  var $p151.dup: i1;
  var $i152: i64;
  var $i152.dup: i1;
  var $i153: i64;
  var $i153.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0,$mul.ref(18,8));
  $p1.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1.dup == 0));
  $i2 := $load.i64($M.3,$p1);
  $i2.dup := $load.i1($M.3.dup,$p1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $shl.i64($i2,4);
  $i3.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0,$mul.ref(8,8));
  $p4.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p4.dup == 0));
  $i5 := $load.i64($M.3,$p4);
  $i5.dup := $load.i1($M.3.dup,$p4);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5,$i3);
  $i6.dup := $or.i1($i5.dup,$i3.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 211, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p4.dup == 0));
  $M.3 := $store.i64($M.3,$p4,$i6);
  $M.3.dup := $store.i1($M.3.dup,$p4,$i6.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0,$mul.ref(18,8));
  $p7.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p7.dup == 0));
  $i8 := $load.i64($M.3,$p7);
  $i8.dup := $load.i1($M.3.dup,$p7);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $shl.i64($i8,1);
  $i9.dup := $or.i1($i8.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0,$mul.ref(8,8));
  $p10.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $i11 := $load.i64($M.3,$p10);
  $i11.dup := $load.i1($M.3.dup,$p10);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11,$i9);
  $i12.dup := $or.i1($i11.dup,$i9.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 212, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $M.3 := $store.i64($M.3,$p10,$i12);
  $M.3.dup := $store.i1($M.3.dup,$p10,$i12.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 213, 16} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0,$mul.ref(18,8));
  $p13.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 213, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p13.dup == 0));
  $i14 := $load.i64($M.3,$p13);
  $i14.dup := $load.i1($M.3.dup,$p13);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 213, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0,$mul.ref(8,8));
  $p15.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 213, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $i16 := $load.i64($M.3,$p15);
  $i16.dup := $load.i1($M.3.dup,$p15);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 213, 13} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16,$i14);
  $i17.dup := $or.i1($i16.dup,$i14.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 213, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $M.3 := $store.i64($M.3,$p15,$i17);
  $M.3.dup := $store.i1($M.3.dup,$p15,$i17.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 16} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0,$mul.ref(17,8));
  $p18.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p18.dup == 0));
  $i19 := $load.i64($M.3,$p18);
  $i19.dup := $load.i1($M.3.dup,$p18);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $shl.i64($i19,4);
  $i20.dup := $or.i1($i19.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0,$mul.ref(7,8));
  $p21.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p21.dup == 0));
  $i22 := $load.i64($M.3,$p21);
  $i22.dup := $load.i1($M.3.dup,$p21);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22,$i20);
  $i23.dup := $or.i1($i22.dup,$i20.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 214, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p21.dup == 0));
  $M.3 := $store.i64($M.3,$p21,$i23);
  $M.3.dup := $store.i1($M.3.dup,$p21,$i23.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 16} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0,$mul.ref(17,8));
  $p24.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p24.dup == 0));
  $i25 := $load.i64($M.3,$p24);
  $i25.dup := $load.i1($M.3.dup,$p24);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 27} true;
  assume {:verifier.code 0} true;
  $i26 := $shl.i64($i25,1);
  $i26.dup := $or.i1($i25.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 3} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0,$mul.ref(7,8));
  $p27.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27.dup == 0));
  $i28 := $load.i64($M.3,$p27);
  $i28.dup := $load.i1($M.3.dup,$p27);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28,$i26);
  $i29.dup := $or.i1($i28.dup,$i26.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 215, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27.dup == 0));
  $M.3 := $store.i64($M.3,$p27,$i29);
  $M.3.dup := $store.i1($M.3.dup,$p27,$i29.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 216, 16} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0,$mul.ref(17,8));
  $p30.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 216, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p30.dup == 0));
  $i31 := $load.i64($M.3,$p30);
  $i31.dup := $load.i1($M.3.dup,$p30);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 216, 3} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0,$mul.ref(7,8));
  $p32.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 216, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p32.dup == 0));
  $i33 := $load.i64($M.3,$p32);
  $i33.dup := $load.i1($M.3.dup,$p32);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 216, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33,$i31);
  $i34.dup := $or.i1($i33.dup,$i31.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 216, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p32.dup == 0));
  $M.3 := $store.i64($M.3,$p32,$i34);
  $M.3.dup := $store.i1($M.3.dup,$p32,$i34.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 16} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0,$mul.ref(16,8));
  $p35.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p35.dup == 0));
  $i36 := $load.i64($M.3,$p35);
  $i36.dup := $load.i1($M.3.dup,$p35);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 27} true;
  assume {:verifier.code 0} true;
  $i37 := $shl.i64($i36,4);
  $i37.dup := $or.i1($i36.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 3} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0,$mul.ref(6,8));
  $p38.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38.dup == 0));
  $i39 := $load.i64($M.3,$p38);
  $i39.dup := $load.i1($M.3.dup,$p38);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39,$i37);
  $i40.dup := $or.i1($i39.dup,$i37.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 217, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38.dup == 0));
  $M.3 := $store.i64($M.3,$p38,$i40);
  $M.3.dup := $store.i1($M.3.dup,$p38,$i40.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 16} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0,$mul.ref(16,8));
  $p41.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p41.dup == 0));
  $i42 := $load.i64($M.3,$p41);
  $i42.dup := $load.i1($M.3.dup,$p41);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 27} true;
  assume {:verifier.code 0} true;
  $i43 := $shl.i64($i42,1);
  $i43.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0,$mul.ref(6,8));
  $p44.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $i45 := $load.i64($M.3,$p44);
  $i45.dup := $load.i1($M.3.dup,$p44);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45,$i43);
  $i46.dup := $or.i1($i45.dup,$i43.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 218, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $M.3 := $store.i64($M.3,$p44,$i46);
  $M.3.dup := $store.i1($M.3.dup,$p44,$i46.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 219, 16} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0,$mul.ref(16,8));
  $p47.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 219, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p47.dup == 0));
  $i48 := $load.i64($M.3,$p47);
  $i48.dup := $load.i1($M.3.dup,$p47);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 219, 3} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0,$mul.ref(6,8));
  $p49.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 219, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49.dup == 0));
  $i50 := $load.i64($M.3,$p49);
  $i50.dup := $load.i1($M.3.dup,$p49);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 219, 13} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50,$i48);
  $i51.dup := $or.i1($i50.dup,$i48.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 219, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49.dup == 0));
  $M.3 := $store.i64($M.3,$p49,$i51);
  $M.3.dup := $store.i1($M.3.dup,$p49,$i51.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 16} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0,$mul.ref(15,8));
  $p52.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p52.dup == 0));
  $i53 := $load.i64($M.3,$p52);
  $i53.dup := $load.i1($M.3.dup,$p52);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 27} true;
  assume {:verifier.code 0} true;
  $i54 := $shl.i64($i53,4);
  $i54.dup := $or.i1($i53.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 3} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0,$mul.ref(5,8));
  $p55.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p55.dup == 0));
  $i56 := $load.i64($M.3,$p55);
  $i56.dup := $load.i1($M.3.dup,$p55);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 13} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56,$i54);
  $i57.dup := $or.i1($i56.dup,$i54.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 220, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p55.dup == 0));
  $M.3 := $store.i64($M.3,$p55,$i57);
  $M.3.dup := $store.i1($M.3.dup,$p55,$i57.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 16} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0,$mul.ref(15,8));
  $p58.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p58.dup == 0));
  $i59 := $load.i64($M.3,$p58);
  $i59.dup := $load.i1($M.3.dup,$p58);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 27} true;
  assume {:verifier.code 0} true;
  $i60 := $shl.i64($i59,1);
  $i60.dup := $or.i1($i59.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 3} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0,$mul.ref(5,8));
  $p61.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p61.dup == 0));
  $i62 := $load.i64($M.3,$p61);
  $i62.dup := $load.i1($M.3.dup,$p61);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 13} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62,$i60);
  $i63.dup := $or.i1($i62.dup,$i60.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 221, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p61.dup == 0));
  $M.3 := $store.i64($M.3,$p61,$i63);
  $M.3.dup := $store.i1($M.3.dup,$p61,$i63.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 222, 16} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0,$mul.ref(15,8));
  $p64.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 222, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p64.dup == 0));
  $i65 := $load.i64($M.3,$p64);
  $i65.dup := $load.i1($M.3.dup,$p64);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 222, 3} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0,$mul.ref(5,8));
  $p66.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 222, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p66.dup == 0));
  $i67 := $load.i64($M.3,$p66);
  $i67.dup := $load.i1($M.3.dup,$p66);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 222, 13} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67,$i65);
  $i68.dup := $or.i1($i67.dup,$i65.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 222, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p66.dup == 0));
  $M.3 := $store.i64($M.3,$p66,$i68);
  $M.3.dup := $store.i1($M.3.dup,$p66,$i68.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 16} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0,$mul.ref(14,8));
  $p69.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p69.dup == 0));
  $i70 := $load.i64($M.3,$p69);
  $i70.dup := $load.i1($M.3.dup,$p69);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 27} true;
  assume {:verifier.code 0} true;
  $i71 := $shl.i64($i70,4);
  $i71.dup := $or.i1($i70.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 3} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0,$mul.ref(4,8));
  $p72.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p72.dup == 0));
  $i73 := $load.i64($M.3,$p72);
  $i73.dup := $load.i1($M.3.dup,$p72);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 13} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73,$i71);
  $i74.dup := $or.i1($i73.dup,$i71.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 223, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p72.dup == 0));
  $M.3 := $store.i64($M.3,$p72,$i74);
  $M.3.dup := $store.i1($M.3.dup,$p72,$i74.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 16} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p0,$mul.ref(14,8));
  $p75.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p75.dup == 0));
  $i76 := $load.i64($M.3,$p75);
  $i76.dup := $load.i1($M.3.dup,$p75);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 27} true;
  assume {:verifier.code 0} true;
  $i77 := $shl.i64($i76,1);
  $i77.dup := $or.i1($i76.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 3} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0,$mul.ref(4,8));
  $p78.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p78.dup == 0));
  $i79 := $load.i64($M.3,$p78);
  $i79.dup := $load.i1($M.3.dup,$p78);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 13} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79,$i77);
  $i80.dup := $or.i1($i79.dup,$i77.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 224, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p78.dup == 0));
  $M.3 := $store.i64($M.3,$p78,$i80);
  $M.3.dup := $store.i1($M.3.dup,$p78,$i80.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 225, 16} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0,$mul.ref(14,8));
  $p81.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 225, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p81.dup == 0));
  $i82 := $load.i64($M.3,$p81);
  $i82.dup := $load.i1($M.3.dup,$p81);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 225, 3} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0,$mul.ref(4,8));
  $p83.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 225, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p83.dup == 0));
  $i84 := $load.i64($M.3,$p83);
  $i84.dup := $load.i1($M.3.dup,$p83);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 225, 13} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i64($i84,$i82);
  $i85.dup := $or.i1($i84.dup,$i82.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 225, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p83.dup == 0));
  $M.3 := $store.i64($M.3,$p83,$i85);
  $M.3.dup := $store.i1($M.3.dup,$p83,$i85.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 16} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0,$mul.ref(13,8));
  $p86.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p86.dup == 0));
  $i87 := $load.i64($M.3,$p86);
  $i87.dup := $load.i1($M.3.dup,$p86);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 27} true;
  assume {:verifier.code 0} true;
  $i88 := $shl.i64($i87,4);
  $i88.dup := $or.i1($i87.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 3} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p0,$mul.ref(3,8));
  $p89.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p89.dup == 0));
  $i90 := $load.i64($M.3,$p89);
  $i90.dup := $load.i1($M.3.dup,$p89);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 13} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90,$i88);
  $i91.dup := $or.i1($i90.dup,$i88.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 226, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p89.dup == 0));
  $M.3 := $store.i64($M.3,$p89,$i91);
  $M.3.dup := $store.i1($M.3.dup,$p89,$i91.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 16} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0,$mul.ref(13,8));
  $p92.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p92.dup == 0));
  $i93 := $load.i64($M.3,$p92);
  $i93.dup := $load.i1($M.3.dup,$p92);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 27} true;
  assume {:verifier.code 0} true;
  $i94 := $shl.i64($i93,1);
  $i94.dup := $or.i1($i93.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 3} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0,$mul.ref(3,8));
  $p95.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p95.dup == 0));
  $i96 := $load.i64($M.3,$p95);
  $i96.dup := $load.i1($M.3.dup,$p95);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 13} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64($i96,$i94);
  $i97.dup := $or.i1($i96.dup,$i94.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 227, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p95.dup == 0));
  $M.3 := $store.i64($M.3,$p95,$i97);
  $M.3.dup := $store.i1($M.3.dup,$p95,$i97.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 228, 16} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p0,$mul.ref(13,8));
  $p98.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 228, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p98.dup == 0));
  $i99 := $load.i64($M.3,$p98);
  $i99.dup := $load.i1($M.3.dup,$p98);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 228, 3} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0,$mul.ref(3,8));
  $p100.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 228, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p100.dup == 0));
  $i101 := $load.i64($M.3,$p100);
  $i101.dup := $load.i1($M.3.dup,$p100);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 228, 13} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i64($i101,$i99);
  $i102.dup := $or.i1($i101.dup,$i99.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 228, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p100.dup == 0));
  $M.3 := $store.i64($M.3,$p100,$i102);
  $M.3.dup := $store.i1($M.3.dup,$p100,$i102.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 16} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0,$mul.ref(12,8));
  $p103.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p103.dup == 0));
  $i104 := $load.i64($M.3,$p103);
  $i104.dup := $load.i1($M.3.dup,$p103);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 27} true;
  assume {:verifier.code 0} true;
  $i105 := $shl.i64($i104,4);
  $i105.dup := $or.i1($i104.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 3} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0,$mul.ref(2,8));
  $p106.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p106.dup == 0));
  $i107 := $load.i64($M.3,$p106);
  $i107.dup := $load.i1($M.3.dup,$p106);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 13} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i64($i107,$i105);
  $i108.dup := $or.i1($i107.dup,$i105.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 229, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p106.dup == 0));
  $M.3 := $store.i64($M.3,$p106,$i108);
  $M.3.dup := $store.i1($M.3.dup,$p106,$i108.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 16} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0,$mul.ref(12,8));
  $p109.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p109.dup == 0));
  $i110 := $load.i64($M.3,$p109);
  $i110.dup := $load.i1($M.3.dup,$p109);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 27} true;
  assume {:verifier.code 0} true;
  $i111 := $shl.i64($i110,1);
  $i111.dup := $or.i1($i110.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 3} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0,$mul.ref(2,8));
  $p112.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p112.dup == 0));
  $i113 := $load.i64($M.3,$p112);
  $i113.dup := $load.i1($M.3.dup,$p112);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 13} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($i113,$i111);
  $i114.dup := $or.i1($i113.dup,$i111.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 230, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p112.dup == 0));
  $M.3 := $store.i64($M.3,$p112,$i114);
  $M.3.dup := $store.i1($M.3.dup,$p112,$i114.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 231, 16} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0,$mul.ref(12,8));
  $p115.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 231, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p115.dup == 0));
  $i116 := $load.i64($M.3,$p115);
  $i116.dup := $load.i1($M.3.dup,$p115);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 231, 3} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p0,$mul.ref(2,8));
  $p117.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 231, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p117.dup == 0));
  $i118 := $load.i64($M.3,$p117);
  $i118.dup := $load.i1($M.3.dup,$p117);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 231, 13} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i64($i118,$i116);
  $i119.dup := $or.i1($i118.dup,$i116.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 231, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p117.dup == 0));
  $M.3 := $store.i64($M.3,$p117,$i119);
  $M.3.dup := $store.i1($M.3.dup,$p117,$i119.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 16} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p0,$mul.ref(11,8));
  $p120.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p120.dup == 0));
  $i121 := $load.i64($M.3,$p120);
  $i121.dup := $load.i1($M.3.dup,$p120);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 27} true;
  assume {:verifier.code 0} true;
  $i122 := $shl.i64($i121,4);
  $i122.dup := $or.i1($i121.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 3} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0,$mul.ref(1,8));
  $p123.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p123.dup == 0));
  $i124 := $load.i64($M.3,$p123);
  $i124.dup := $load.i1($M.3.dup,$p123);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 13} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64($i124,$i122);
  $i125.dup := $or.i1($i124.dup,$i122.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 232, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p123.dup == 0));
  $M.3 := $store.i64($M.3,$p123,$i125);
  $M.3.dup := $store.i1($M.3.dup,$p123,$i125.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 16} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p0,$mul.ref(11,8));
  $p126.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p126.dup == 0));
  $i127 := $load.i64($M.3,$p126);
  $i127.dup := $load.i1($M.3.dup,$p126);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 27} true;
  assume {:verifier.code 0} true;
  $i128 := $shl.i64($i127,1);
  $i128.dup := $or.i1($i127.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 3} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p0,$mul.ref(1,8));
  $p129.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p129.dup == 0));
  $i130 := $load.i64($M.3,$p129);
  $i130.dup := $load.i1($M.3.dup,$p129);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 13} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i64($i130,$i128);
  $i131.dup := $or.i1($i130.dup,$i128.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 233, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p129.dup == 0));
  $M.3 := $store.i64($M.3,$p129,$i131);
  $M.3.dup := $store.i1($M.3.dup,$p129,$i131.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 234, 16} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p0,$mul.ref(11,8));
  $p132.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 234, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p132.dup == 0));
  $i133 := $load.i64($M.3,$p132);
  $i133.dup := $load.i1($M.3.dup,$p132);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 234, 3} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p0,$mul.ref(1,8));
  $p134.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 234, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p134.dup == 0));
  $i135 := $load.i64($M.3,$p134);
  $i135.dup := $load.i1($M.3.dup,$p134);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 234, 13} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i64($i135,$i133);
  $i136.dup := $or.i1($i135.dup,$i133.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 234, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p134.dup == 0));
  $M.3 := $store.i64($M.3,$p134,$i136);
  $M.3.dup := $store.i1($M.3.dup,$p134,$i136.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 16} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p0,$mul.ref(10,8));
  $p137.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p137.dup == 0));
  $i138 := $load.i64($M.3,$p137);
  $i138.dup := $load.i1($M.3.dup,$p137);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 27} true;
  assume {:verifier.code 0} true;
  $i139 := $shl.i64($i138,4);
  $i139.dup := $or.i1($i138.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 3} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0,$mul.ref(0,8));
  $p140.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p140.dup == 0));
  $i141 := $load.i64($M.3,$p140);
  $i141.dup := $load.i1($M.3.dup,$p140);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 13} true;
  assume {:verifier.code 0} true;
  $i142 := $add.i64($i141,$i139);
  $i142.dup := $or.i1($i141.dup,$i139.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 235, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p140.dup == 0));
  $M.3 := $store.i64($M.3,$p140,$i142);
  $M.3.dup := $store.i1($M.3.dup,$p140,$i142.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 16} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p0,$mul.ref(10,8));
  $p143.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p143.dup == 0));
  $i144 := $load.i64($M.3,$p143);
  $i144.dup := $load.i1($M.3.dup,$p143);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 27} true;
  assume {:verifier.code 0} true;
  $i145 := $shl.i64($i144,1);
  $i145.dup := $or.i1($i144.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 3} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p0,$mul.ref(0,8));
  $p146.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p146.dup == 0));
  $i147 := $load.i64($M.3,$p146);
  $i147.dup := $load.i1($M.3.dup,$p146);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 13} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i64($i147,$i145);
  $i148.dup := $or.i1($i147.dup,$i145.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 236, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p146.dup == 0));
  $M.3 := $store.i64($M.3,$p146,$i148);
  $M.3.dup := $store.i1($M.3.dup,$p146,$i148.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 237, 16} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p0,$mul.ref(10,8));
  $p149.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 237, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p149.dup == 0));
  $i150 := $load.i64($M.3,$p149);
  $i150.dup := $load.i1($M.3.dup,$p149);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 237, 3} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p0,$mul.ref(0,8));
  $p151.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 237, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p151.dup == 0));
  $i152 := $load.i64($M.3,$p151);
  $i152.dup := $load.i1($M.3.dup,$p151);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 237, 13} true;
  assume {:verifier.code 0} true;
  $i153 := $add.i64($i152,$i150);
  $i153.dup := $or.i1($i152.dup,$i150.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 237, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p151.dup == 0));
  $M.3 := $store.i64($M.3,$p151,$i153);
  $M.3.dup := $store.i1($M.3.dup,$p151,$i153.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 238, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const freduce_coefficients: ref;
axiom (freduce_coefficients == $sub.ref(0,13416));
procedure {:inline 45} freduce_coefficients($p0: ref, $p0.dup: i1)
modifies $M.3, $exn;
{
  var $p1: ref;
  var $p1.dup: i1;
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i1;
  var $i3.dup: i1;
  var $i4: i64;
  var $i4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $i12: i64;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i64;
  var $i14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $i17: i64;
  var $i17.dup: i1;
  var $i18: i32;
  var $i18.dup: i1;
  var $i19: i64;
  var $i19.dup: i1;
  var $p20: ref;
  var $p20.dup: i1;
  var $i21: i64;
  var $i21.dup: i1;
  var $i22: i64;
  var $i22.dup: i1;
  var $i23: i64;
  var $i23.dup: i1;
  var $i24: i32;
  var $i24.dup: i1;
  var $i25: i64;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i64;
  var $i27.dup: i1;
  var $i28: i64;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $i32: i64;
  var $i32.dup: i1;
  var $i33: i64;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $i36: i64;
  var $i36.dup: i1;
  var $i37: i64;
  var $i37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $i39: i64;
  var $i39.dup: i1;
  var $i40: i64;
  var $i40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $i42: i64;
  var $i42.dup: i1;
  var $i43: i64;
  var $i43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i64;
  var $i45.dup: i1;
  var $i46: i64;
  var $i46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $i48: i64;
  var $i48.dup: i1;
  var $p49: ref;
  var $p49.dup: i1;
  var $i50: i64;
  var $i50.dup: i1;
  var $i51: i64;
  var $i51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $i54: i64;
  var $i54.dup: i1;
  var $i55: i64;
  var $i55.dup: i1;
  var $i56: i64;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i64;
  var $i58.dup: i1;
  var $i59: i64;
  var $i59.dup: i1;
  var $p60: ref;
  var $p60.dup: i1;
  var $i61: i64;
  var $i61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 282, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 282, 3} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0,$mul.ref(10,8));
  $p1.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 282, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1.dup == 0));
  $M.3 := $store.i64($M.3,$p1,0);
  $M.3.dup := $store.i1($M.3.dup,$p1,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 284, 8} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  $i2.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 284, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32($i2,10);
  $i3.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 284, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  $shadow_ok := ($shadow_ok && ($i3.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 285, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  $i4.dup := $i2.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 285, 29} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0,$mul.ref($i4,8));
  $p5.dup := $or.i1($p0.dup,$or.i1($i4.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 285, 29} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p5.dup == 0));
  $i6 := $load.i64($M.3,$p5);
  $i6.dup := $load.i1($M.3.dup,$p5);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 285, 17} true;
  assume {:verifier.code 0} true;
  call $i7, $i7.dup := div_by_2_26($i6, $i6.dup);
  call {:cexpr "over"} boogie_si_record_i64($i7);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 290, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $shl.i64($i7,26);
  $i8.dup := $or.i1($i7.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 290, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i32.i64($i2);
  $i9.dup := $i2.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 290, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0,$mul.ref($i9,8));
  $p10.dup := $or.i1($p0.dup,$or.i1($i9.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 290, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $i11 := $load.i64($M.3,$p10);
  $i11.dup := $load.i1($M.3.dup,$p10);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 290, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64($i11,$i8);
  $i12.dup := $or.i1($i11.dup,$i8.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 290, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $M.3 := $store.i64($M.3,$p10,$i12);
  $M.3.dup := $store.i1($M.3.dup,$p10,$i12.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 291, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i2,1);
  $i13.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 291, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i32.i64($i13);
  $i14.dup := $i13.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 291, 5} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0,$mul.ref($i14,8));
  $p15.dup := $or.i1($p0.dup,$or.i1($i14.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 291, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $i16 := $load.i64($M.3,$p15);
  $i16.dup := $load.i1($M.3.dup,$p15);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 291, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16,$i7);
  $i17.dup := $or.i1($i16.dup,$i7.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 291, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $M.3 := $store.i64($M.3,$p15,$i17);
  $M.3.dup := $store.i1($M.3.dup,$p15,$i17.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 299, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i32($i2,1);
  $i18.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 299, 24} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i32.i64($i18);
  $i19.dup := $i18.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 299, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0,$mul.ref($i19,8));
  $p20.dup := $or.i1($p0.dup,$or.i1($i19.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 299, 24} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p20.dup == 0));
  $i21 := $load.i64($M.3,$p20);
  $i21.dup := $load.i1($M.3.dup,$p20);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 299, 12} true;
  assume {:verifier.code 0} true;
  call $i22, $i22.dup := div_by_2_25($i21, $i21.dup);
  call {:cexpr "over"} boogie_si_record_i64($i22);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $shl.i64($i22,25);
  $i23.dup := $or.i1($i22.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 13} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i2,1);
  $i24.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i32.i64($i24);
  $i25.dup := $i24.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0,$mul.ref($i25,8));
  $p26.dup := $or.i1($p0.dup,$or.i1($i25.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $i27 := $load.i64($M.3,$p26);
  $i27.dup := $load.i1($M.3.dup,$p26);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64($i27,$i23);
  $i28.dup := $or.i1($i27.dup,$i23.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 300, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $M.3 := $store.i64($M.3,$p26,$i28);
  $M.3.dup := $store.i1($M.3.dup,$p26,$i28.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 301, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i2,2);
  $i29.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 301, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i32.i64($i29);
  $i30.dup := $i29.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 301, 5} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0,$mul.ref($i30,8));
  $p31.dup := $or.i1($p0.dup,$or.i1($i30.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 301, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p31.dup == 0));
  $i32 := $load.i64($M.3,$p31);
  $i32.dup := $load.i1($M.3.dup,$p31);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 301, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32,$i22);
  $i33.dup := $or.i1($i32.dup,$i22.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 301, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p31.dup == 0));
  $M.3 := $store.i64($M.3,$p31,$i33);
  $M.3.dup := $store.i1($M.3.dup,$p31,$i33.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 302, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i3 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 16} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0,$mul.ref(10,8));
  $p35.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p35.dup == 0));
  $i36 := $load.i64($M.3,$p35);
  $i36.dup := $load.i1($M.3.dup,$p35);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 27} true;
  assume {:verifier.code 0} true;
  $i37 := $shl.i64($i36,4);
  $i37.dup := $or.i1($i36.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 3} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0,$mul.ref(0,8));
  $p38.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38.dup == 0));
  $i39 := $load.i64($M.3,$p38);
  $i39.dup := $load.i1($M.3.dup,$p38);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39,$i37);
  $i40.dup := $or.i1($i39.dup,$i37.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 304, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38.dup == 0));
  $M.3 := $store.i64($M.3,$p38,$i40);
  $M.3.dup := $store.i1($M.3.dup,$p38,$i40.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 16} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0,$mul.ref(10,8));
  $p41.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p41.dup == 0));
  $i42 := $load.i64($M.3,$p41);
  $i42.dup := $load.i1($M.3.dup,$p41);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 27} true;
  assume {:verifier.code 0} true;
  $i43 := $shl.i64($i42,1);
  $i43.dup := $or.i1($i42.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0,$mul.ref(0,8));
  $p44.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $i45 := $load.i64($M.3,$p44);
  $i45.dup := $load.i1($M.3.dup,$p44);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45,$i43);
  $i46.dup := $or.i1($i45.dup,$i43.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 305, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $M.3 := $store.i64($M.3,$p44,$i46);
  $M.3.dup := $store.i1($M.3.dup,$p44,$i46.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 306, 16} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0,$mul.ref(10,8));
  $p47.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 306, 16} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p47.dup == 0));
  $i48 := $load.i64($M.3,$p47);
  $i48.dup := $load.i1($M.3.dup,$p47);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 306, 3} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0,$mul.ref(0,8));
  $p49.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 306, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49.dup == 0));
  $i50 := $load.i64($M.3,$p49);
  $i50.dup := $load.i1($M.3.dup,$p49);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 306, 13} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50,$i48);
  $i51.dup := $or.i1($i50.dup,$i48.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 306, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49.dup == 0));
  $M.3 := $store.i64($M.3,$p49,$i51);
  $M.3.dup := $store.i1($M.3.dup,$p49,$i51.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 308, 3} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0,$mul.ref(10,8));
  $p52.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 308, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p52.dup == 0));
  $M.3 := $store.i64($M.3,$p52,0);
  $M.3.dup := $store.i1($M.3.dup,$p52,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 313, 29} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0,$mul.ref(0,8));
  $p53.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 313, 29} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p53.dup == 0));
  $i54 := $load.i64($M.3,$p53);
  $i54.dup := $load.i1($M.3.dup,$p53);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 313, 17} true;
  assume {:verifier.code 0} true;
  call $i55, $i55.dup := div_by_2_26($i54, $i54.dup);
  call {:cexpr "over"} boogie_si_record_i64($i55);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 314, 23} true;
  assume {:verifier.code 0} true;
  $i56 := $shl.i64($i55,26);
  $i56.dup := $or.i1($i55.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 314, 5} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0,$mul.ref(0,8));
  $p57.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 314, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57.dup == 0));
  $i58 := $load.i64($M.3,$p57);
  $i58.dup := $load.i1($M.3.dup,$p57);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 314, 15} true;
  assume {:verifier.code 0} true;
  $i59 := $sub.i64($i58,$i56);
  $i59.dup := $or.i1($i58.dup,$i56.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 314, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57.dup == 0));
  $M.3 := $store.i64($M.3,$p57,$i59);
  $M.3.dup := $store.i1($M.3.dup,$p57,$i59.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 315, 5} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0,$mul.ref(1,8));
  $p60.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 315, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p60.dup == 0));
  $i61 := $load.i64($M.3,$p60);
  $i61.dup := $load.i1($M.3.dup,$p60);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 315, 15} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61,$i55);
  $i62.dup := $or.i1($i61.dup,$i55.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 315, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p60.dup == 0));
  $M.3 := $store.i64($M.3,$p60,$i62);
  $M.3.dup := $store.i1($M.3.dup,$p60,$i62.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 320, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 284, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i2,2);
  $i34.dup := $or.i1($i2.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i34);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 284, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i34;
  $i2.dup := $i34.dup;
  goto $bb1;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0,14448));
procedure {:inline 45} llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1, $i3: i1, $i3.dup: i1);
const div_by_2_26: ref;
axiom (div_by_2_26 == $sub.ref(0,15480));
procedure {:inline 45} div_by_2_26($i0: i64, $i0.dup: i1) returns ($r: i64, $r.dup: i1)
modifies $exn;
{
  var $i1: i64;
  var $i1.dup: i1;
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 251, 56} true;
  assume {:verifier.code 0} true;
  call {:cexpr "div_by_2_26:arg:v"} boogie_si_record_i64($i0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 251, 56} true;
  assume {:verifier.code 0} true;
  $i1 := $lshr.i64($i0,32);
  $i1.dup := $or.i1($i0.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 251, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i64.i32($i1);
  $i2.dup := $i1.dup;
  call {:cexpr "highword"} boogie_si_record_i32($i2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 253, 45} true;
  assume {:verifier.code 0} true;
  $i3 := $ashr.i32($i2,31);
  $i3.dup := $or.i1($i2.dup,0);
  call {:cexpr "sign"} boogie_si_record_i32($i3);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 255, 46} true;
  assume {:verifier.code 0} true;
  $i4 := $lshr.i32($i3,6);
  $i4.dup := $or.i1($i3.dup,0);
  call {:cexpr "roundoff"} boogie_si_record_i32($i4);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 257, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  $i5.dup := $i4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 257, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i0,$i5);
  $i6.dup := $or.i1($i0.dup,$i5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 257, 25} true;
  assume {:verifier.code 0} true;
  $i7 := $ashr.i64($i6,26);
  $i7.dup := $or.i1($i6.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 257, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $r.dup := $i7.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const div_by_2_25: ref;
axiom (div_by_2_25 == $sub.ref(0,16512));
procedure {:inline 45} div_by_2_25($i0: i64, $i0.dup: i1) returns ($r: i64, $r.dup: i1)
modifies $exn;
{
  var $i1: i64;
  var $i1.dup: i1;
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 267, 56} true;
  assume {:verifier.code 0} true;
  call {:cexpr "div_by_2_25:arg:v"} boogie_si_record_i64($i0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 267, 56} true;
  assume {:verifier.code 0} true;
  $i1 := $lshr.i64($i0,32);
  $i1.dup := $or.i1($i0.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 267, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i64.i32($i1);
  $i2.dup := $i1.dup;
  call {:cexpr "highword"} boogie_si_record_i32($i2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 269, 45} true;
  assume {:verifier.code 0} true;
  $i3 := $ashr.i32($i2,31);
  $i3.dup := $or.i1($i2.dup,0);
  call {:cexpr "sign"} boogie_si_record_i32($i3);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 271, 46} true;
  assume {:verifier.code 0} true;
  $i4 := $lshr.i32($i3,7);
  $i4.dup := $or.i1($i3.dup,0);
  call {:cexpr "roundoff"} boogie_si_record_i32($i4);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 273, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  $i5.dup := $i4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 273, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i0,$i5);
  $i6.dup := $or.i1($i0.dup,$i5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 273, 25} true;
  assume {:verifier.code 0} true;
  $i7 := $ashr.i64($i6,25);
  $i7.dup := $or.i1($i6.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 273, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $r.dup := $i7.dup;
  $exn := false;
  $exn.dup := false;
  return;
}
const fsquare: ref;
axiom (fsquare == $sub.ref(0,17544));
procedure {:inline 45} fsquare($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $M.3, $exn;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $p3: ref;
  var $p3.dup: i1;
  var $p4: ref;
  var $p4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 413, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p2.dup := 0;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 413, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2,$mul.ref(0,152)),$mul.ref(0,8));
  $p3.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 413, 3} true;
  assume {:verifier.code 0} true;
  call fsquare_inner($p3, $p3.dup, $p1, $p1.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 417, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2,$mul.ref(0,152)),$mul.ref(0,8));
  $p4.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 417, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p4, $p4.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 418, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2,$mul.ref(0,152)),$mul.ref(0,8));
  $p5.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 418, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p5, $p5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 420, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p0);
  $p6.dup := $p0.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 420, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2,$mul.ref(0,152)),$mul.ref(0,8));
  $p7.dup := $or.i1($or.i1($p2.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 420, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  $p8.dup := $p7.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 420, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6.dup == 0));
  $shadow_ok := ($shadow_ok && ($p8.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p6, $p6.dup, $p8, $p8.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 421, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const fsquare_inner: ref;
axiom (fsquare_inner == $sub.ref(0,18576));
procedure {:inline 45} fsquare_inner($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $M.3, $exn;
{
  var $p2: ref;
  var $p2.dup: i1;
  var $i3: i64;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $i15: i64;
  var $i15.dup: i1;
  var $i16: i64;
  var $i16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $i18: i64;
  var $i18.dup: i1;
  var $i19: i32;
  var $i19.dup: i1;
  var $i20: i64;
  var $i20.dup: i1;
  var $i21: i64;
  var $i21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $i24: i64;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i64;
  var $i26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $i28: i64;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $i31: i64;
  var $i31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $i33: i64;
  var $i33.dup: i1;
  var $i34: i32;
  var $i34.dup: i1;
  var $i35: i64;
  var $i35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $i37: i64;
  var $i37.dup: i1;
  var $i38: i32;
  var $i38.dup: i1;
  var $i39: i64;
  var $i39.dup: i1;
  var $i40: i64;
  var $i40.dup: i1;
  var $i41: i64;
  var $i41.dup: i1;
  var $i42: i64;
  var $i42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $i45: i64;
  var $i45.dup: i1;
  var $i46: i32;
  var $i46.dup: i1;
  var $i47: i64;
  var $i47.dup: i1;
  var $p48: ref;
  var $p48.dup: i1;
  var $i49: i64;
  var $i49.dup: i1;
  var $i50: i32;
  var $i50.dup: i1;
  var $i51: i64;
  var $i51.dup: i1;
  var $i52: i64;
  var $i52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $i54: i64;
  var $i54.dup: i1;
  var $i55: i32;
  var $i55.dup: i1;
  var $i56: i64;
  var $i56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $i58: i64;
  var $i58.dup: i1;
  var $i59: i32;
  var $i59.dup: i1;
  var $i60: i64;
  var $i60.dup: i1;
  var $i61: i64;
  var $i61.dup: i1;
  var $i62: i64;
  var $i62.dup: i1;
  var $i63: i64;
  var $i63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $i66: i64;
  var $i66.dup: i1;
  var $i67: i32;
  var $i67.dup: i1;
  var $i68: i64;
  var $i68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
  var $i70: i64;
  var $i70.dup: i1;
  var $i71: i32;
  var $i71.dup: i1;
  var $i72: i64;
  var $i72.dup: i1;
  var $i73: i64;
  var $i73.dup: i1;
  var $p74: ref;
  var $p74.dup: i1;
  var $i75: i64;
  var $i75.dup: i1;
  var $i76: i32;
  var $i76.dup: i1;
  var $i77: i64;
  var $i77.dup: i1;
  var $i78: i64;
  var $i78.dup: i1;
  var $p79: ref;
  var $p79.dup: i1;
  var $i80: i64;
  var $i80.dup: i1;
  var $i81: i32;
  var $i81.dup: i1;
  var $i82: i64;
  var $i82.dup: i1;
  var $i83: i64;
  var $i83.dup: i1;
  var $i84: i64;
  var $i84.dup: i1;
  var $p85: ref;
  var $p85.dup: i1;
  var $i86: i64;
  var $i86.dup: i1;
  var $i87: i32;
  var $i87.dup: i1;
  var $i88: i64;
  var $i88.dup: i1;
  var $i89: i64;
  var $i89.dup: i1;
  var $p90: ref;
  var $p90.dup: i1;
  var $i91: i64;
  var $i91.dup: i1;
  var $i92: i32;
  var $i92.dup: i1;
  var $i93: i64;
  var $i93.dup: i1;
  var $i94: i64;
  var $i94.dup: i1;
  var $i95: i64;
  var $i95.dup: i1;
  var $p96: ref;
  var $p96.dup: i1;
  var $p97: ref;
  var $p97.dup: i1;
  var $i98: i64;
  var $i98.dup: i1;
  var $i99: i32;
  var $i99.dup: i1;
  var $i100: i64;
  var $i100.dup: i1;
  var $p101: ref;
  var $p101.dup: i1;
  var $i102: i64;
  var $i102.dup: i1;
  var $i103: i32;
  var $i103.dup: i1;
  var $i104: i64;
  var $i104.dup: i1;
  var $i105: i64;
  var $i105.dup: i1;
  var $p106: ref;
  var $p106.dup: i1;
  var $i107: i64;
  var $i107.dup: i1;
  var $i108: i32;
  var $i108.dup: i1;
  var $i109: i64;
  var $i109.dup: i1;
  var $p110: ref;
  var $p110.dup: i1;
  var $i111: i64;
  var $i111.dup: i1;
  var $i112: i32;
  var $i112.dup: i1;
  var $i113: i64;
  var $i113.dup: i1;
  var $i114: i64;
  var $i114.dup: i1;
  var $i115: i64;
  var $i115.dup: i1;
  var $p116: ref;
  var $p116.dup: i1;
  var $i117: i64;
  var $i117.dup: i1;
  var $i118: i32;
  var $i118.dup: i1;
  var $i119: i64;
  var $i119.dup: i1;
  var $p120: ref;
  var $p120.dup: i1;
  var $i121: i64;
  var $i121.dup: i1;
  var $i122: i32;
  var $i122.dup: i1;
  var $i123: i64;
  var $i123.dup: i1;
  var $i124: i64;
  var $i124.dup: i1;
  var $i125: i64;
  var $i125.dup: i1;
  var $i126: i64;
  var $i126.dup: i1;
  var $p127: ref;
  var $p127.dup: i1;
  var $p128: ref;
  var $p128.dup: i1;
  var $i129: i64;
  var $i129.dup: i1;
  var $i130: i32;
  var $i130.dup: i1;
  var $i131: i64;
  var $i131.dup: i1;
  var $p132: ref;
  var $p132.dup: i1;
  var $i133: i64;
  var $i133.dup: i1;
  var $i134: i32;
  var $i134.dup: i1;
  var $i135: i64;
  var $i135.dup: i1;
  var $i136: i64;
  var $i136.dup: i1;
  var $p137: ref;
  var $p137.dup: i1;
  var $i138: i64;
  var $i138.dup: i1;
  var $i139: i32;
  var $i139.dup: i1;
  var $i140: i64;
  var $i140.dup: i1;
  var $p141: ref;
  var $p141.dup: i1;
  var $i142: i64;
  var $i142.dup: i1;
  var $i143: i32;
  var $i143.dup: i1;
  var $i144: i64;
  var $i144.dup: i1;
  var $i145: i64;
  var $i145.dup: i1;
  var $i146: i64;
  var $i146.dup: i1;
  var $p147: ref;
  var $p147.dup: i1;
  var $i148: i64;
  var $i148.dup: i1;
  var $i149: i32;
  var $i149.dup: i1;
  var $i150: i64;
  var $i150.dup: i1;
  var $p151: ref;
  var $p151.dup: i1;
  var $i152: i64;
  var $i152.dup: i1;
  var $i153: i32;
  var $i153.dup: i1;
  var $i154: i64;
  var $i154.dup: i1;
  var $i155: i64;
  var $i155.dup: i1;
  var $i156: i64;
  var $i156.dup: i1;
  var $p157: ref;
  var $p157.dup: i1;
  var $i158: i64;
  var $i158.dup: i1;
  var $i159: i32;
  var $i159.dup: i1;
  var $i160: i64;
  var $i160.dup: i1;
  var $i161: i64;
  var $i161.dup: i1;
  var $p162: ref;
  var $p162.dup: i1;
  var $i163: i64;
  var $i163.dup: i1;
  var $i164: i32;
  var $i164.dup: i1;
  var $i165: i64;
  var $i165.dup: i1;
  var $i166: i64;
  var $i166.dup: i1;
  var $i167: i64;
  var $i167.dup: i1;
  var $i168: i64;
  var $i168.dup: i1;
  var $p169: ref;
  var $p169.dup: i1;
  var $p170: ref;
  var $p170.dup: i1;
  var $i171: i64;
  var $i171.dup: i1;
  var $i172: i32;
  var $i172.dup: i1;
  var $i173: i64;
  var $i173.dup: i1;
  var $p174: ref;
  var $p174.dup: i1;
  var $i175: i64;
  var $i175.dup: i1;
  var $i176: i32;
  var $i176.dup: i1;
  var $i177: i64;
  var $i177.dup: i1;
  var $i178: i64;
  var $i178.dup: i1;
  var $p179: ref;
  var $p179.dup: i1;
  var $i180: i64;
  var $i180.dup: i1;
  var $i181: i32;
  var $i181.dup: i1;
  var $i182: i64;
  var $i182.dup: i1;
  var $p183: ref;
  var $p183.dup: i1;
  var $i184: i64;
  var $i184.dup: i1;
  var $i185: i32;
  var $i185.dup: i1;
  var $i186: i64;
  var $i186.dup: i1;
  var $i187: i64;
  var $i187.dup: i1;
  var $i188: i64;
  var $i188.dup: i1;
  var $p189: ref;
  var $p189.dup: i1;
  var $i190: i64;
  var $i190.dup: i1;
  var $i191: i32;
  var $i191.dup: i1;
  var $i192: i64;
  var $i192.dup: i1;
  var $p193: ref;
  var $p193.dup: i1;
  var $i194: i64;
  var $i194.dup: i1;
  var $i195: i32;
  var $i195.dup: i1;
  var $i196: i64;
  var $i196.dup: i1;
  var $i197: i64;
  var $i197.dup: i1;
  var $i198: i64;
  var $i198.dup: i1;
  var $p199: ref;
  var $p199.dup: i1;
  var $i200: i64;
  var $i200.dup: i1;
  var $i201: i32;
  var $i201.dup: i1;
  var $i202: i64;
  var $i202.dup: i1;
  var $p203: ref;
  var $p203.dup: i1;
  var $i204: i64;
  var $i204.dup: i1;
  var $i205: i32;
  var $i205.dup: i1;
  var $i206: i64;
  var $i206.dup: i1;
  var $i207: i64;
  var $i207.dup: i1;
  var $i208: i64;
  var $i208.dup: i1;
  var $i209: i64;
  var $i209.dup: i1;
  var $p210: ref;
  var $p210.dup: i1;
  var $p211: ref;
  var $p211.dup: i1;
  var $i212: i64;
  var $i212.dup: i1;
  var $i213: i32;
  var $i213.dup: i1;
  var $i214: i64;
  var $i214.dup: i1;
  var $p215: ref;
  var $p215.dup: i1;
  var $i216: i64;
  var $i216.dup: i1;
  var $i217: i32;
  var $i217.dup: i1;
  var $i218: i64;
  var $i218.dup: i1;
  var $i219: i64;
  var $i219.dup: i1;
  var $p220: ref;
  var $p220.dup: i1;
  var $i221: i64;
  var $i221.dup: i1;
  var $i222: i32;
  var $i222.dup: i1;
  var $i223: i64;
  var $i223.dup: i1;
  var $p224: ref;
  var $p224.dup: i1;
  var $i225: i64;
  var $i225.dup: i1;
  var $i226: i32;
  var $i226.dup: i1;
  var $i227: i64;
  var $i227.dup: i1;
  var $i228: i64;
  var $i228.dup: i1;
  var $p229: ref;
  var $p229.dup: i1;
  var $i230: i64;
  var $i230.dup: i1;
  var $i231: i32;
  var $i231.dup: i1;
  var $i232: i64;
  var $i232.dup: i1;
  var $p233: ref;
  var $p233.dup: i1;
  var $i234: i64;
  var $i234.dup: i1;
  var $i235: i32;
  var $i235.dup: i1;
  var $i236: i64;
  var $i236.dup: i1;
  var $i237: i64;
  var $i237.dup: i1;
  var $i238: i64;
  var $i238.dup: i1;
  var $p239: ref;
  var $p239.dup: i1;
  var $i240: i64;
  var $i240.dup: i1;
  var $i241: i32;
  var $i241.dup: i1;
  var $i242: i64;
  var $i242.dup: i1;
  var $p243: ref;
  var $p243.dup: i1;
  var $i244: i64;
  var $i244.dup: i1;
  var $i245: i32;
  var $i245.dup: i1;
  var $i246: i64;
  var $i246.dup: i1;
  var $i247: i64;
  var $i247.dup: i1;
  var $p248: ref;
  var $p248.dup: i1;
  var $i249: i64;
  var $i249.dup: i1;
  var $i250: i32;
  var $i250.dup: i1;
  var $i251: i64;
  var $i251.dup: i1;
  var $p252: ref;
  var $p252.dup: i1;
  var $i253: i64;
  var $i253.dup: i1;
  var $i254: i32;
  var $i254.dup: i1;
  var $i255: i64;
  var $i255.dup: i1;
  var $i256: i64;
  var $i256.dup: i1;
  var $i257: i64;
  var $i257.dup: i1;
  var $i258: i64;
  var $i258.dup: i1;
  var $i259: i64;
  var $i259.dup: i1;
  var $i260: i64;
  var $i260.dup: i1;
  var $i261: i64;
  var $i261.dup: i1;
  var $p262: ref;
  var $p262.dup: i1;
  var $p263: ref;
  var $p263.dup: i1;
  var $i264: i64;
  var $i264.dup: i1;
  var $i265: i32;
  var $i265.dup: i1;
  var $i266: i64;
  var $i266.dup: i1;
  var $p267: ref;
  var $p267.dup: i1;
  var $i268: i64;
  var $i268.dup: i1;
  var $i269: i32;
  var $i269.dup: i1;
  var $i270: i64;
  var $i270.dup: i1;
  var $i271: i64;
  var $i271.dup: i1;
  var $p272: ref;
  var $p272.dup: i1;
  var $i273: i64;
  var $i273.dup: i1;
  var $i274: i32;
  var $i274.dup: i1;
  var $i275: i64;
  var $i275.dup: i1;
  var $p276: ref;
  var $p276.dup: i1;
  var $i277: i64;
  var $i277.dup: i1;
  var $i278: i32;
  var $i278.dup: i1;
  var $i279: i64;
  var $i279.dup: i1;
  var $i280: i64;
  var $i280.dup: i1;
  var $i281: i64;
  var $i281.dup: i1;
  var $p282: ref;
  var $p282.dup: i1;
  var $i283: i64;
  var $i283.dup: i1;
  var $i284: i32;
  var $i284.dup: i1;
  var $i285: i64;
  var $i285.dup: i1;
  var $p286: ref;
  var $p286.dup: i1;
  var $i287: i64;
  var $i287.dup: i1;
  var $i288: i32;
  var $i288.dup: i1;
  var $i289: i64;
  var $i289.dup: i1;
  var $i290: i64;
  var $i290.dup: i1;
  var $i291: i64;
  var $i291.dup: i1;
  var $p292: ref;
  var $p292.dup: i1;
  var $i293: i64;
  var $i293.dup: i1;
  var $i294: i32;
  var $i294.dup: i1;
  var $i295: i64;
  var $i295.dup: i1;
  var $p296: ref;
  var $p296.dup: i1;
  var $i297: i64;
  var $i297.dup: i1;
  var $i298: i32;
  var $i298.dup: i1;
  var $i299: i64;
  var $i299.dup: i1;
  var $i300: i64;
  var $i300.dup: i1;
  var $i301: i64;
  var $i301.dup: i1;
  var $p302: ref;
  var $p302.dup: i1;
  var $i303: i64;
  var $i303.dup: i1;
  var $i304: i32;
  var $i304.dup: i1;
  var $i305: i64;
  var $i305.dup: i1;
  var $p306: ref;
  var $p306.dup: i1;
  var $i307: i64;
  var $i307.dup: i1;
  var $i308: i32;
  var $i308.dup: i1;
  var $i309: i64;
  var $i309.dup: i1;
  var $i310: i64;
  var $i310.dup: i1;
  var $i311: i64;
  var $i311.dup: i1;
  var $i312: i64;
  var $i312.dup: i1;
  var $p313: ref;
  var $p313.dup: i1;
  var $p314: ref;
  var $p314.dup: i1;
  var $i315: i64;
  var $i315.dup: i1;
  var $i316: i32;
  var $i316.dup: i1;
  var $i317: i64;
  var $i317.dup: i1;
  var $p318: ref;
  var $p318.dup: i1;
  var $i319: i64;
  var $i319.dup: i1;
  var $i320: i32;
  var $i320.dup: i1;
  var $i321: i64;
  var $i321.dup: i1;
  var $i322: i64;
  var $i322.dup: i1;
  var $p323: ref;
  var $p323.dup: i1;
  var $i324: i64;
  var $i324.dup: i1;
  var $i325: i32;
  var $i325.dup: i1;
  var $i326: i64;
  var $i326.dup: i1;
  var $p327: ref;
  var $p327.dup: i1;
  var $i328: i64;
  var $i328.dup: i1;
  var $i329: i32;
  var $i329.dup: i1;
  var $i330: i64;
  var $i330.dup: i1;
  var $i331: i64;
  var $i331.dup: i1;
  var $i332: i64;
  var $i332.dup: i1;
  var $p333: ref;
  var $p333.dup: i1;
  var $i334: i64;
  var $i334.dup: i1;
  var $i335: i32;
  var $i335.dup: i1;
  var $i336: i64;
  var $i336.dup: i1;
  var $p337: ref;
  var $p337.dup: i1;
  var $i338: i64;
  var $i338.dup: i1;
  var $i339: i32;
  var $i339.dup: i1;
  var $i340: i64;
  var $i340.dup: i1;
  var $i341: i64;
  var $i341.dup: i1;
  var $i342: i64;
  var $i342.dup: i1;
  var $p343: ref;
  var $p343.dup: i1;
  var $i344: i64;
  var $i344.dup: i1;
  var $i345: i32;
  var $i345.dup: i1;
  var $i346: i64;
  var $i346.dup: i1;
  var $p347: ref;
  var $p347.dup: i1;
  var $i348: i64;
  var $i348.dup: i1;
  var $i349: i32;
  var $i349.dup: i1;
  var $i350: i64;
  var $i350.dup: i1;
  var $i351: i64;
  var $i351.dup: i1;
  var $p352: ref;
  var $p352.dup: i1;
  var $i353: i64;
  var $i353.dup: i1;
  var $i354: i32;
  var $i354.dup: i1;
  var $i355: i64;
  var $i355.dup: i1;
  var $p356: ref;
  var $p356.dup: i1;
  var $i357: i64;
  var $i357.dup: i1;
  var $i358: i32;
  var $i358.dup: i1;
  var $i359: i64;
  var $i359.dup: i1;
  var $i360: i64;
  var $i360.dup: i1;
  var $i361: i64;
  var $i361.dup: i1;
  var $i362: i64;
  var $i362.dup: i1;
  var $i363: i64;
  var $i363.dup: i1;
  var $i364: i64;
  var $i364.dup: i1;
  var $p365: ref;
  var $p365.dup: i1;
  var $p366: ref;
  var $p366.dup: i1;
  var $i367: i64;
  var $i367.dup: i1;
  var $i368: i32;
  var $i368.dup: i1;
  var $i369: i64;
  var $i369.dup: i1;
  var $p370: ref;
  var $p370.dup: i1;
  var $i371: i64;
  var $i371.dup: i1;
  var $i372: i32;
  var $i372.dup: i1;
  var $i373: i64;
  var $i373.dup: i1;
  var $i374: i64;
  var $i374.dup: i1;
  var $p375: ref;
  var $p375.dup: i1;
  var $i376: i64;
  var $i376.dup: i1;
  var $i377: i32;
  var $i377.dup: i1;
  var $i378: i64;
  var $i378.dup: i1;
  var $p379: ref;
  var $p379.dup: i1;
  var $i380: i64;
  var $i380.dup: i1;
  var $i381: i32;
  var $i381.dup: i1;
  var $i382: i64;
  var $i382.dup: i1;
  var $i383: i64;
  var $i383.dup: i1;
  var $i384: i64;
  var $i384.dup: i1;
  var $p385: ref;
  var $p385.dup: i1;
  var $i386: i64;
  var $i386.dup: i1;
  var $i387: i32;
  var $i387.dup: i1;
  var $i388: i64;
  var $i388.dup: i1;
  var $p389: ref;
  var $p389.dup: i1;
  var $i390: i64;
  var $i390.dup: i1;
  var $i391: i32;
  var $i391.dup: i1;
  var $i392: i64;
  var $i392.dup: i1;
  var $i393: i64;
  var $i393.dup: i1;
  var $i394: i64;
  var $i394.dup: i1;
  var $p395: ref;
  var $p395.dup: i1;
  var $i396: i64;
  var $i396.dup: i1;
  var $i397: i32;
  var $i397.dup: i1;
  var $i398: i64;
  var $i398.dup: i1;
  var $p399: ref;
  var $p399.dup: i1;
  var $i400: i64;
  var $i400.dup: i1;
  var $i401: i32;
  var $i401.dup: i1;
  var $i402: i64;
  var $i402.dup: i1;
  var $i403: i64;
  var $i403.dup: i1;
  var $i404: i64;
  var $i404.dup: i1;
  var $i405: i64;
  var $i405.dup: i1;
  var $p406: ref;
  var $p406.dup: i1;
  var $p407: ref;
  var $p407.dup: i1;
  var $i408: i64;
  var $i408.dup: i1;
  var $i409: i32;
  var $i409.dup: i1;
  var $i410: i64;
  var $i410.dup: i1;
  var $p411: ref;
  var $p411.dup: i1;
  var $i412: i64;
  var $i412.dup: i1;
  var $i413: i32;
  var $i413.dup: i1;
  var $i414: i64;
  var $i414.dup: i1;
  var $i415: i64;
  var $i415.dup: i1;
  var $p416: ref;
  var $p416.dup: i1;
  var $i417: i64;
  var $i417.dup: i1;
  var $i418: i32;
  var $i418.dup: i1;
  var $i419: i64;
  var $i419.dup: i1;
  var $p420: ref;
  var $p420.dup: i1;
  var $i421: i64;
  var $i421.dup: i1;
  var $i422: i32;
  var $i422.dup: i1;
  var $i423: i64;
  var $i423.dup: i1;
  var $i424: i64;
  var $i424.dup: i1;
  var $p425: ref;
  var $p425.dup: i1;
  var $i426: i64;
  var $i426.dup: i1;
  var $i427: i32;
  var $i427.dup: i1;
  var $i428: i64;
  var $i428.dup: i1;
  var $p429: ref;
  var $p429.dup: i1;
  var $i430: i64;
  var $i430.dup: i1;
  var $i431: i32;
  var $i431.dup: i1;
  var $i432: i64;
  var $i432.dup: i1;
  var $i433: i64;
  var $i433.dup: i1;
  var $p434: ref;
  var $p434.dup: i1;
  var $i435: i64;
  var $i435.dup: i1;
  var $i436: i32;
  var $i436.dup: i1;
  var $i437: i64;
  var $i437.dup: i1;
  var $p438: ref;
  var $p438.dup: i1;
  var $i439: i64;
  var $i439.dup: i1;
  var $i440: i32;
  var $i440.dup: i1;
  var $i441: i64;
  var $i441.dup: i1;
  var $i442: i64;
  var $i442.dup: i1;
  var $i443: i64;
  var $i443.dup: i1;
  var $i444: i64;
  var $i444.dup: i1;
  var $i445: i64;
  var $i445.dup: i1;
  var $i446: i64;
  var $i446.dup: i1;
  var $i447: i64;
  var $i447.dup: i1;
  var $p448: ref;
  var $p448.dup: i1;
  var $p449: ref;
  var $p449.dup: i1;
  var $i450: i64;
  var $i450.dup: i1;
  var $i451: i32;
  var $i451.dup: i1;
  var $i452: i64;
  var $i452.dup: i1;
  var $p453: ref;
  var $p453.dup: i1;
  var $i454: i64;
  var $i454.dup: i1;
  var $i455: i32;
  var $i455.dup: i1;
  var $i456: i64;
  var $i456.dup: i1;
  var $i457: i64;
  var $i457.dup: i1;
  var $p458: ref;
  var $p458.dup: i1;
  var $i459: i64;
  var $i459.dup: i1;
  var $i460: i32;
  var $i460.dup: i1;
  var $i461: i64;
  var $i461.dup: i1;
  var $p462: ref;
  var $p462.dup: i1;
  var $i463: i64;
  var $i463.dup: i1;
  var $i464: i32;
  var $i464.dup: i1;
  var $i465: i64;
  var $i465.dup: i1;
  var $i466: i64;
  var $i466.dup: i1;
  var $i467: i64;
  var $i467.dup: i1;
  var $p468: ref;
  var $p468.dup: i1;
  var $i469: i64;
  var $i469.dup: i1;
  var $i470: i32;
  var $i470.dup: i1;
  var $i471: i64;
  var $i471.dup: i1;
  var $p472: ref;
  var $p472.dup: i1;
  var $i473: i64;
  var $i473.dup: i1;
  var $i474: i32;
  var $i474.dup: i1;
  var $i475: i64;
  var $i475.dup: i1;
  var $i476: i64;
  var $i476.dup: i1;
  var $i477: i64;
  var $i477.dup: i1;
  var $i478: i64;
  var $i478.dup: i1;
  var $p479: ref;
  var $p479.dup: i1;
  var $p480: ref;
  var $p480.dup: i1;
  var $i481: i64;
  var $i481.dup: i1;
  var $i482: i32;
  var $i482.dup: i1;
  var $i483: i64;
  var $i483.dup: i1;
  var $p484: ref;
  var $p484.dup: i1;
  var $i485: i64;
  var $i485.dup: i1;
  var $i486: i32;
  var $i486.dup: i1;
  var $i487: i64;
  var $i487.dup: i1;
  var $i488: i64;
  var $i488.dup: i1;
  var $p489: ref;
  var $p489.dup: i1;
  var $i490: i64;
  var $i490.dup: i1;
  var $i491: i32;
  var $i491.dup: i1;
  var $i492: i64;
  var $i492.dup: i1;
  var $p493: ref;
  var $p493.dup: i1;
  var $i494: i64;
  var $i494.dup: i1;
  var $i495: i32;
  var $i495.dup: i1;
  var $i496: i64;
  var $i496.dup: i1;
  var $i497: i64;
  var $i497.dup: i1;
  var $i498: i64;
  var $i498.dup: i1;
  var $p499: ref;
  var $p499.dup: i1;
  var $i500: i64;
  var $i500.dup: i1;
  var $i501: i32;
  var $i501.dup: i1;
  var $i502: i64;
  var $i502.dup: i1;
  var $i503: i64;
  var $i503.dup: i1;
  var $p504: ref;
  var $p504.dup: i1;
  var $i505: i64;
  var $i505.dup: i1;
  var $i506: i32;
  var $i506.dup: i1;
  var $i507: i64;
  var $i507.dup: i1;
  var $i508: i64;
  var $i508.dup: i1;
  var $i509: i64;
  var $i509.dup: i1;
  var $i510: i64;
  var $i510.dup: i1;
  var $p511: ref;
  var $p511.dup: i1;
  var $p512: ref;
  var $p512.dup: i1;
  var $i513: i64;
  var $i513.dup: i1;
  var $i514: i32;
  var $i514.dup: i1;
  var $i515: i64;
  var $i515.dup: i1;
  var $p516: ref;
  var $p516.dup: i1;
  var $i517: i64;
  var $i517.dup: i1;
  var $i518: i32;
  var $i518.dup: i1;
  var $i519: i64;
  var $i519.dup: i1;
  var $i520: i64;
  var $i520.dup: i1;
  var $p521: ref;
  var $p521.dup: i1;
  var $i522: i64;
  var $i522.dup: i1;
  var $i523: i32;
  var $i523.dup: i1;
  var $i524: i64;
  var $i524.dup: i1;
  var $p525: ref;
  var $p525.dup: i1;
  var $i526: i64;
  var $i526.dup: i1;
  var $i527: i32;
  var $i527.dup: i1;
  var $i528: i64;
  var $i528.dup: i1;
  var $i529: i64;
  var $i529.dup: i1;
  var $i530: i64;
  var $i530.dup: i1;
  var $i531: i64;
  var $i531.dup: i1;
  var $p532: ref;
  var $p532.dup: i1;
  var $p533: ref;
  var $p533.dup: i1;
  var $i534: i64;
  var $i534.dup: i1;
  var $i535: i32;
  var $i535.dup: i1;
  var $i536: i64;
  var $i536.dup: i1;
  var $p537: ref;
  var $p537.dup: i1;
  var $i538: i64;
  var $i538.dup: i1;
  var $i539: i32;
  var $i539.dup: i1;
  var $i540: i64;
  var $i540.dup: i1;
  var $i541: i64;
  var $i541.dup: i1;
  var $p542: ref;
  var $p542.dup: i1;
  var $i543: i64;
  var $i543.dup: i1;
  var $i544: i32;
  var $i544.dup: i1;
  var $i545: i64;
  var $i545.dup: i1;
  var $i546: i64;
  var $i546.dup: i1;
  var $p547: ref;
  var $p547.dup: i1;
  var $i548: i64;
  var $i548.dup: i1;
  var $i549: i32;
  var $i549.dup: i1;
  var $i550: i64;
  var $i550.dup: i1;
  var $i551: i64;
  var $i551.dup: i1;
  var $i552: i64;
  var $i552.dup: i1;
  var $p553: ref;
  var $p553.dup: i1;
  var $p554: ref;
  var $p554.dup: i1;
  var $i555: i64;
  var $i555.dup: i1;
  var $i556: i32;
  var $i556.dup: i1;
  var $i557: i64;
  var $i557.dup: i1;
  var $i558: i64;
  var $i558.dup: i1;
  var $p559: ref;
  var $p559.dup: i1;
  var $i560: i64;
  var $i560.dup: i1;
  var $i561: i32;
  var $i561.dup: i1;
  var $i562: i64;
  var $i562.dup: i1;
  var $i563: i64;
  var $i563.dup: i1;
  var $p564: ref;
  var $p564.dup: i1;
  var $p565: ref;
  var $p565.dup: i1;
  var $i566: i64;
  var $i566.dup: i1;
  var $i567: i32;
  var $i567.dup: i1;
  var $i568: i64;
  var $i568.dup: i1;
  var $i569: i64;
  var $i569.dup: i1;
  var $p570: ref;
  var $p570.dup: i1;
  var $i571: i64;
  var $i571.dup: i1;
  var $i572: i32;
  var $i572.dup: i1;
  var $i573: i64;
  var $i573.dup: i1;
  var $i574: i64;
  var $i574.dup: i1;
  var $p575: ref;
  var $p575.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 36} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 36} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1,$mul.ref(0,8));
  $p2.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p2.dup == 0));
  $i3 := $load.i64($M.3,$p2);
  $i3.dup := $load.i1($M.3.dup,$p2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i32($i3);
  $i4.dup := $i3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  $i5.dup := $i4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 53} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1,$mul.ref(0,8));
  $p6.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6.dup == 0));
  $i7 := $load.i64($M.3,$p6);
  $i7.dup := $load.i1($M.3.dup,$p6);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  $i8.dup := $i7.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 46} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  $i9.dup := $i8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $mul.i64($i5,$i9);
  $i10.dup := $or.i1($i5.dup,$i9.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0,$mul.ref(0,8));
  $p11.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 346, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p11.dup == 0));
  $M.3 := $store.i64($M.3,$p11,$i10);
  $M.3.dup := $store.i1($M.3.dup,$p11,$i10.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 36} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1,$mul.ref(0,8));
  $p12.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12.dup == 0));
  $i13 := $load.i64($M.3,$p12);
  $i13.dup := $load.i1($M.3.dup,$p12);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i13);
  $i14.dup := $i13.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 22} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  $i15.dup := $i14.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 18} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i64(2,$i15);
  $i16.dup := $or.i1(0,$i15.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 53} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1,$mul.ref(1,8));
  $p17.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p17.dup == 0));
  $i18 := $load.i64($M.3,$p17);
  $i18.dup := $load.i1($M.3.dup,$p17);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i64.i32($i18);
  $i19.dup := $i18.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 46} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  $i20.dup := $i19.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 44} true;
  assume {:verifier.code 0} true;
  $i21 := $mul.i64($i16,$i20);
  $i21.dup := $or.i1($i16.dup,$i20.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0,$mul.ref(1,8));
  $p22.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 347, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22.dup == 0));
  $M.3 := $store.i64($M.3,$p22,$i21);
  $M.3.dup := $store.i1($M.3.dup,$p22,$i21.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 36} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1,$mul.ref(1,8));
  $p23.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23.dup == 0));
  $i24 := $load.i64($M.3,$p23);
  $i24.dup := $load.i1($M.3.dup,$p23);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i64.i32($i24);
  $i25.dup := $i24.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 22} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i25);
  $i26.dup := $i25.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 53} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1,$mul.ref(1,8));
  $p27.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27.dup == 0));
  $i28 := $load.i64($M.3,$p27);
  $i28.dup := $load.i1($M.3.dup,$p27);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 47} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i64.i32($i28);
  $i29.dup := $i28.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 46} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  $i30.dup := $i29.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 44} true;
  assume {:verifier.code 0} true;
  $i31 := $mul.i64($i26,$i30);
  $i31.dup := $or.i1($i26.dup,$i30.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 36} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1,$mul.ref(0,8));
  $p32.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p32.dup == 0));
  $i33 := $load.i64($M.3,$p32);
  $i33.dup := $load.i1($M.3.dup,$p32);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 30} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i64.i32($i33);
  $i34.dup := $i33.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 22} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i34);
  $i35.dup := $i34.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 53} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1,$mul.ref(2,8));
  $p36.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36.dup == 0));
  $i37 := $load.i64($M.3,$p36);
  $i37.dup := $load.i1($M.3.dup,$p36);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 47} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i64.i32($i37);
  $i38.dup := $i37.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 46} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i38);
  $i39.dup := $i38.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 349, 44} true;
  assume {:verifier.code 0} true;
  $i40 := $mul.i64($i35,$i39);
  $i40.dup := $or.i1($i35.dup,$i39.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 60} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i31,$i40);
  $i41.dup := $or.i1($i31.dup,$i40.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 18} true;
  assume {:verifier.code 0} true;
  $i42 := $mul.i64(2,$i41);
  $i42.dup := $or.i1(0,$i41.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 3} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0,$mul.ref(2,8));
  $p43.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 348, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p43.dup == 0));
  $M.3 := $store.i64($M.3,$p43,$i42);
  $M.3.dup := $store.i1($M.3.dup,$p43,$i42.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 36} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1,$mul.ref(1,8));
  $p44.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44.dup == 0));
  $i45 := $load.i64($M.3,$p44);
  $i45.dup := $load.i1($M.3.dup,$p44);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 30} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i64.i32($i45);
  $i46.dup := $i45.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 22} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i46);
  $i47.dup := $i46.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 53} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1,$mul.ref(2,8));
  $p48.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p48.dup == 0));
  $i49 := $load.i64($M.3,$p48);
  $i49.dup := $load.i1($M.3.dup,$p48);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 47} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i64.i32($i49);
  $i50.dup := $i49.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 46} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  $i51.dup := $i50.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 44} true;
  assume {:verifier.code 0} true;
  $i52 := $mul.i64($i47,$i51);
  $i52.dup := $or.i1($i47.dup,$i51.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 36} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1,$mul.ref(0,8));
  $p53.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p53.dup == 0));
  $i54 := $load.i64($M.3,$p53);
  $i54.dup := $load.i1($M.3.dup,$p53);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 30} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i64.i32($i54);
  $i55.dup := $i54.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 22} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i55);
  $i56.dup := $i55.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 53} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p1,$mul.ref(3,8));
  $p57.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57.dup == 0));
  $i58 := $load.i64($M.3,$p57);
  $i58.dup := $load.i1($M.3.dup,$p57);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 47} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i64.i32($i58);
  $i59.dup := $i58.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 46} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i59);
  $i60.dup := $i59.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 351, 44} true;
  assume {:verifier.code 0} true;
  $i61 := $mul.i64($i56,$i60);
  $i61.dup := $or.i1($i56.dup,$i60.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 60} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i52,$i61);
  $i62.dup := $or.i1($i52.dup,$i61.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 18} true;
  assume {:verifier.code 0} true;
  $i63 := $mul.i64(2,$i62);
  $i63.dup := $or.i1(0,$i62.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 3} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0,$mul.ref(3,8));
  $p64.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 350, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p64.dup == 0));
  $M.3 := $store.i64($M.3,$p64,$i63);
  $M.3.dup := $store.i1($M.3.dup,$p64,$i63.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 36} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p1,$mul.ref(2,8));
  $p65.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p65.dup == 0));
  $i66 := $load.i64($M.3,$p65);
  $i66.dup := $load.i1($M.3.dup,$p65);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 30} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i64.i32($i66);
  $i67.dup := $i66.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 22} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i67);
  $i68.dup := $i67.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 53} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p1,$mul.ref(2,8));
  $p69.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p69.dup == 0));
  $i70 := $load.i64($M.3,$p69);
  $i70.dup := $load.i1($M.3.dup,$p69);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 47} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  $i71.dup := $i70.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 46} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i32.i64($i71);
  $i72.dup := $i71.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 44} true;
  assume {:verifier.code 0} true;
  $i73 := $mul.i64($i68,$i72);
  $i73.dup := $or.i1($i68.dup,$i72.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 36} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p1,$mul.ref(1,8));
  $p74.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p74.dup == 0));
  $i75 := $load.i64($M.3,$p74);
  $i75.dup := $load.i1($M.3.dup,$p74);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 30} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i32($i75);
  $i76.dup := $i75.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 22} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i32.i64($i76);
  $i77.dup := $i76.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 18} true;
  assume {:verifier.code 0} true;
  $i78 := $mul.i64(4,$i77);
  $i78.dup := $or.i1(0,$i77.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 53} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p1,$mul.ref(3,8));
  $p79.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p79.dup == 0));
  $i80 := $load.i64($M.3,$p79);
  $i80.dup := $load.i1($M.3.dup,$p79);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 47} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i64.i32($i80);
  $i81.dup := $i80.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 46} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i81);
  $i82.dup := $i81.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 44} true;
  assume {:verifier.code 0} true;
  $i83 := $mul.i64($i78,$i82);
  $i83.dup := $or.i1($i78.dup,$i82.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 60} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i73,$i83);
  $i84.dup := $or.i1($i73.dup,$i83.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 36} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p1,$mul.ref(0,8));
  $p85.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p85.dup == 0));
  $i86 := $load.i64($M.3,$p85);
  $i86.dup := $load.i1($M.3.dup,$p85);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 30} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  $i87.dup := $i86.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 22} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i87);
  $i88.dup := $i87.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 18} true;
  assume {:verifier.code 0} true;
  $i89 := $mul.i64(2,$i88);
  $i89.dup := $or.i1(0,$i88.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 53} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p1,$mul.ref(4,8));
  $p90.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p90.dup == 0));
  $i91 := $load.i64($M.3,$p90);
  $i91.dup := $load.i1($M.3.dup,$p90);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 47} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i64.i32($i91);
  $i92.dup := $i91.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 46} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i32.i64($i92);
  $i93.dup := $i92.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 354, 44} true;
  assume {:verifier.code 0} true;
  $i94 := $mul.i64($i89,$i93);
  $i94.dup := $or.i1($i89.dup,$i93.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 353, 60} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i84,$i94);
  $i95.dup := $or.i1($i84.dup,$i94.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 3} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0,$mul.ref(4,8));
  $p96.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 352, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p96.dup == 0));
  $M.3 := $store.i64($M.3,$p96,$i95);
  $M.3.dup := $store.i1($M.3.dup,$p96,$i95.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 36} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p1,$mul.ref(2,8));
  $p97.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p97.dup == 0));
  $i98 := $load.i64($M.3,$p97);
  $i98.dup := $load.i1($M.3.dup,$p97);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 30} true;
  assume {:verifier.code 0} true;
  $i99 := $trunc.i64.i32($i98);
  $i99.dup := $i98.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 22} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  $i100.dup := $i99.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 53} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p1,$mul.ref(3,8));
  $p101.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p101.dup == 0));
  $i102 := $load.i64($M.3,$p101);
  $i102.dup := $load.i1($M.3.dup,$p101);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 47} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i64.i32($i102);
  $i103.dup := $i102.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 46} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  $i104.dup := $i103.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 44} true;
  assume {:verifier.code 0} true;
  $i105 := $mul.i64($i100,$i104);
  $i105.dup := $or.i1($i100.dup,$i104.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 36} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p1,$mul.ref(1,8));
  $p106.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p106.dup == 0));
  $i107 := $load.i64($M.3,$p106);
  $i107.dup := $load.i1($M.3.dup,$p106);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 30} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.i64.i32($i107);
  $i108.dup := $i107.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 22} true;
  assume {:verifier.code 0} true;
  $i109 := $sext.i32.i64($i108);
  $i109.dup := $i108.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 53} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p1,$mul.ref(4,8));
  $p110.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p110.dup == 0));
  $i111 := $load.i64($M.3,$p110);
  $i111.dup := $load.i1($M.3.dup,$p110);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 47} true;
  assume {:verifier.code 0} true;
  $i112 := $trunc.i64.i32($i111);
  $i112.dup := $i111.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 46} true;
  assume {:verifier.code 0} true;
  $i113 := $sext.i32.i64($i112);
  $i113.dup := $i112.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 44} true;
  assume {:verifier.code 0} true;
  $i114 := $mul.i64($i109,$i113);
  $i114.dup := $or.i1($i109.dup,$i113.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 60} true;
  assume {:verifier.code 0} true;
  $i115 := $add.i64($i105,$i114);
  $i115.dup := $or.i1($i105.dup,$i114.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 36} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p1,$mul.ref(0,8));
  $p116.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p116.dup == 0));
  $i117 := $load.i64($M.3,$p116);
  $i117.dup := $load.i1($M.3.dup,$p116);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 30} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i64.i32($i117);
  $i118.dup := $i117.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 22} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i118);
  $i119.dup := $i118.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 53} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p1,$mul.ref(5,8));
  $p120.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p120.dup == 0));
  $i121 := $load.i64($M.3,$p120);
  $i121.dup := $load.i1($M.3.dup,$p120);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 47} true;
  assume {:verifier.code 0} true;
  $i122 := $trunc.i64.i32($i121);
  $i122.dup := $i121.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 46} true;
  assume {:verifier.code 0} true;
  $i123 := $sext.i32.i64($i122);
  $i123.dup := $i122.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 357, 44} true;
  assume {:verifier.code 0} true;
  $i124 := $mul.i64($i119,$i123);
  $i124.dup := $or.i1($i119.dup,$i123.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 356, 60} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64($i115,$i124);
  $i125.dup := $or.i1($i115.dup,$i124.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 18} true;
  assume {:verifier.code 0} true;
  $i126 := $mul.i64(2,$i125);
  $i126.dup := $or.i1(0,$i125.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 3} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p0,$mul.ref(5,8));
  $p127.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 355, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p127.dup == 0));
  $M.3 := $store.i64($M.3,$p127,$i126);
  $M.3.dup := $store.i1($M.3.dup,$p127,$i126.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 36} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p1,$mul.ref(3,8));
  $p128.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p128.dup == 0));
  $i129 := $load.i64($M.3,$p128);
  $i129.dup := $load.i1($M.3.dup,$p128);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 30} true;
  assume {:verifier.code 0} true;
  $i130 := $trunc.i64.i32($i129);
  $i130.dup := $i129.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 22} true;
  assume {:verifier.code 0} true;
  $i131 := $sext.i32.i64($i130);
  $i131.dup := $i130.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 53} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p1,$mul.ref(3,8));
  $p132.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p132.dup == 0));
  $i133 := $load.i64($M.3,$p132);
  $i133.dup := $load.i1($M.3.dup,$p132);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 47} true;
  assume {:verifier.code 0} true;
  $i134 := $trunc.i64.i32($i133);
  $i134.dup := $i133.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 46} true;
  assume {:verifier.code 0} true;
  $i135 := $sext.i32.i64($i134);
  $i135.dup := $i134.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 44} true;
  assume {:verifier.code 0} true;
  $i136 := $mul.i64($i131,$i135);
  $i136.dup := $or.i1($i131.dup,$i135.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 36} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p1,$mul.ref(2,8));
  $p137.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p137.dup == 0));
  $i138 := $load.i64($M.3,$p137);
  $i138.dup := $load.i1($M.3.dup,$p137);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 30} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i64.i32($i138);
  $i139.dup := $i138.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 22} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i32.i64($i139);
  $i140.dup := $i139.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 53} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p1,$mul.ref(4,8));
  $p141.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p141.dup == 0));
  $i142 := $load.i64($M.3,$p141);
  $i142.dup := $load.i1($M.3.dup,$p141);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 47} true;
  assume {:verifier.code 0} true;
  $i143 := $trunc.i64.i32($i142);
  $i143.dup := $i142.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 46} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i32.i64($i143);
  $i144.dup := $i143.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 44} true;
  assume {:verifier.code 0} true;
  $i145 := $mul.i64($i140,$i144);
  $i145.dup := $or.i1($i140.dup,$i144.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 60} true;
  assume {:verifier.code 0} true;
  $i146 := $add.i64($i136,$i145);
  $i146.dup := $or.i1($i136.dup,$i145.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 36} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p1,$mul.ref(0,8));
  $p147.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p147.dup == 0));
  $i148 := $load.i64($M.3,$p147);
  $i148.dup := $load.i1($M.3.dup,$p147);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 30} true;
  assume {:verifier.code 0} true;
  $i149 := $trunc.i64.i32($i148);
  $i149.dup := $i148.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 22} true;
  assume {:verifier.code 0} true;
  $i150 := $sext.i32.i64($i149);
  $i150.dup := $i149.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 53} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p1,$mul.ref(6,8));
  $p151.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p151.dup == 0));
  $i152 := $load.i64($M.3,$p151);
  $i152.dup := $load.i1($M.3.dup,$p151);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 47} true;
  assume {:verifier.code 0} true;
  $i153 := $trunc.i64.i32($i152);
  $i153.dup := $i152.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 46} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i32.i64($i153);
  $i154.dup := $i153.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 44} true;
  assume {:verifier.code 0} true;
  $i155 := $mul.i64($i150,$i154);
  $i155.dup := $or.i1($i150.dup,$i154.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 359, 60} true;
  assume {:verifier.code 0} true;
  $i156 := $add.i64($i146,$i155);
  $i156.dup := $or.i1($i146.dup,$i155.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 36} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p1,$mul.ref(1,8));
  $p157.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p157.dup == 0));
  $i158 := $load.i64($M.3,$p157);
  $i158.dup := $load.i1($M.3.dup,$p157);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 30} true;
  assume {:verifier.code 0} true;
  $i159 := $trunc.i64.i32($i158);
  $i159.dup := $i158.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 22} true;
  assume {:verifier.code 0} true;
  $i160 := $sext.i32.i64($i159);
  $i160.dup := $i159.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 18} true;
  assume {:verifier.code 0} true;
  $i161 := $mul.i64(2,$i160);
  $i161.dup := $or.i1(0,$i160.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 53} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p1,$mul.ref(5,8));
  $p162.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p162.dup == 0));
  $i163 := $load.i64($M.3,$p162);
  $i163.dup := $load.i1($M.3.dup,$p162);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 47} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i64.i32($i163);
  $i164.dup := $i163.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 46} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i32.i64($i164);
  $i165.dup := $i164.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 361, 44} true;
  assume {:verifier.code 0} true;
  $i166 := $mul.i64($i161,$i165);
  $i166.dup := $or.i1($i161.dup,$i165.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 360, 60} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i64($i156,$i166);
  $i167.dup := $or.i1($i156.dup,$i166.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 18} true;
  assume {:verifier.code 0} true;
  $i168 := $mul.i64(2,$i167);
  $i168.dup := $or.i1(0,$i167.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 3} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0,$mul.ref(6,8));
  $p169.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 358, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p169.dup == 0));
  $M.3 := $store.i64($M.3,$p169,$i168);
  $M.3.dup := $store.i1($M.3.dup,$p169,$i168.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 36} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p1,$mul.ref(3,8));
  $p170.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p170.dup == 0));
  $i171 := $load.i64($M.3,$p170);
  $i171.dup := $load.i1($M.3.dup,$p170);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 30} true;
  assume {:verifier.code 0} true;
  $i172 := $trunc.i64.i32($i171);
  $i172.dup := $i171.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 22} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i32.i64($i172);
  $i173.dup := $i172.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 53} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p1,$mul.ref(4,8));
  $p174.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p174.dup == 0));
  $i175 := $load.i64($M.3,$p174);
  $i175.dup := $load.i1($M.3.dup,$p174);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 47} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i32($i175);
  $i176.dup := $i175.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 46} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i32.i64($i176);
  $i177.dup := $i176.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 44} true;
  assume {:verifier.code 0} true;
  $i178 := $mul.i64($i173,$i177);
  $i178.dup := $or.i1($i173.dup,$i177.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 36} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p1,$mul.ref(2,8));
  $p179.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p179.dup == 0));
  $i180 := $load.i64($M.3,$p179);
  $i180.dup := $load.i1($M.3.dup,$p179);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 30} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i64.i32($i180);
  $i181.dup := $i180.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 22} true;
  assume {:verifier.code 0} true;
  $i182 := $sext.i32.i64($i181);
  $i182.dup := $i181.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 53} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p1,$mul.ref(5,8));
  $p183.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p183.dup == 0));
  $i184 := $load.i64($M.3,$p183);
  $i184.dup := $load.i1($M.3.dup,$p183);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 47} true;
  assume {:verifier.code 0} true;
  $i185 := $trunc.i64.i32($i184);
  $i185.dup := $i184.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 46} true;
  assume {:verifier.code 0} true;
  $i186 := $sext.i32.i64($i185);
  $i186.dup := $i185.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 44} true;
  assume {:verifier.code 0} true;
  $i187 := $mul.i64($i182,$i186);
  $i187.dup := $or.i1($i182.dup,$i186.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 60} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i64($i178,$i187);
  $i188.dup := $or.i1($i178.dup,$i187.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 36} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p1,$mul.ref(1,8));
  $p189.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p189.dup == 0));
  $i190 := $load.i64($M.3,$p189);
  $i190.dup := $load.i1($M.3.dup,$p189);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 30} true;
  assume {:verifier.code 0} true;
  $i191 := $trunc.i64.i32($i190);
  $i191.dup := $i190.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 22} true;
  assume {:verifier.code 0} true;
  $i192 := $sext.i32.i64($i191);
  $i192.dup := $i191.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 53} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p1,$mul.ref(6,8));
  $p193.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p193.dup == 0));
  $i194 := $load.i64($M.3,$p193);
  $i194.dup := $load.i1($M.3.dup,$p193);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 47} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i64.i32($i194);
  $i195.dup := $i194.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 46} true;
  assume {:verifier.code 0} true;
  $i196 := $sext.i32.i64($i195);
  $i196.dup := $i195.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 44} true;
  assume {:verifier.code 0} true;
  $i197 := $mul.i64($i192,$i196);
  $i197.dup := $or.i1($i192.dup,$i196.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 363, 60} true;
  assume {:verifier.code 0} true;
  $i198 := $add.i64($i188,$i197);
  $i198.dup := $or.i1($i188.dup,$i197.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 36} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p1,$mul.ref(0,8));
  $p199.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p199.dup == 0));
  $i200 := $load.i64($M.3,$p199);
  $i200.dup := $load.i1($M.3.dup,$p199);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 30} true;
  assume {:verifier.code 0} true;
  $i201 := $trunc.i64.i32($i200);
  $i201.dup := $i200.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 22} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i32.i64($i201);
  $i202.dup := $i201.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 53} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p1,$mul.ref(7,8));
  $p203.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p203.dup == 0));
  $i204 := $load.i64($M.3,$p203);
  $i204.dup := $load.i1($M.3.dup,$p203);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 47} true;
  assume {:verifier.code 0} true;
  $i205 := $trunc.i64.i32($i204);
  $i205.dup := $i204.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 46} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i32.i64($i205);
  $i206.dup := $i205.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 365, 44} true;
  assume {:verifier.code 0} true;
  $i207 := $mul.i64($i202,$i206);
  $i207.dup := $or.i1($i202.dup,$i206.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 364, 60} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i64($i198,$i207);
  $i208.dup := $or.i1($i198.dup,$i207.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 18} true;
  assume {:verifier.code 0} true;
  $i209 := $mul.i64(2,$i208);
  $i209.dup := $or.i1(0,$i208.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 3} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p0,$mul.ref(7,8));
  $p210.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 362, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p210.dup == 0));
  $M.3 := $store.i64($M.3,$p210,$i209);
  $M.3.dup := $store.i1($M.3.dup,$p210,$i209.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 36} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p1,$mul.ref(4,8));
  $p211.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p211.dup == 0));
  $i212 := $load.i64($M.3,$p211);
  $i212.dup := $load.i1($M.3.dup,$p211);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 30} true;
  assume {:verifier.code 0} true;
  $i213 := $trunc.i64.i32($i212);
  $i213.dup := $i212.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 22} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i32.i64($i213);
  $i214.dup := $i213.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 53} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p1,$mul.ref(4,8));
  $p215.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p215.dup == 0));
  $i216 := $load.i64($M.3,$p215);
  $i216.dup := $load.i1($M.3.dup,$p215);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 47} true;
  assume {:verifier.code 0} true;
  $i217 := $trunc.i64.i32($i216);
  $i217.dup := $i216.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 46} true;
  assume {:verifier.code 0} true;
  $i218 := $sext.i32.i64($i217);
  $i218.dup := $i217.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 44} true;
  assume {:verifier.code 0} true;
  $i219 := $mul.i64($i214,$i218);
  $i219.dup := $or.i1($i214.dup,$i218.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 36} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p1,$mul.ref(2,8));
  $p220.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p220.dup == 0));
  $i221 := $load.i64($M.3,$p220);
  $i221.dup := $load.i1($M.3.dup,$p220);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 30} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i64.i32($i221);
  $i222.dup := $i221.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 22} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i32.i64($i222);
  $i223.dup := $i222.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 53} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p1,$mul.ref(6,8));
  $p224.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p224.dup == 0));
  $i225 := $load.i64($M.3,$p224);
  $i225.dup := $load.i1($M.3.dup,$p224);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 47} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i64.i32($i225);
  $i226.dup := $i225.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 46} true;
  assume {:verifier.code 0} true;
  $i227 := $sext.i32.i64($i226);
  $i227.dup := $i226.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 44} true;
  assume {:verifier.code 0} true;
  $i228 := $mul.i64($i223,$i227);
  $i228.dup := $or.i1($i223.dup,$i227.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 36} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p1,$mul.ref(0,8));
  $p229.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p229.dup == 0));
  $i230 := $load.i64($M.3,$p229);
  $i230.dup := $load.i1($M.3.dup,$p229);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 30} true;
  assume {:verifier.code 0} true;
  $i231 := $trunc.i64.i32($i230);
  $i231.dup := $i230.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 22} true;
  assume {:verifier.code 0} true;
  $i232 := $sext.i32.i64($i231);
  $i232.dup := $i231.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 53} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p1,$mul.ref(8,8));
  $p233.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p233.dup == 0));
  $i234 := $load.i64($M.3,$p233);
  $i234.dup := $load.i1($M.3.dup,$p233);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 47} true;
  assume {:verifier.code 0} true;
  $i235 := $trunc.i64.i32($i234);
  $i235.dup := $i234.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 46} true;
  assume {:verifier.code 0} true;
  $i236 := $sext.i32.i64($i235);
  $i236.dup := $i235.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 44} true;
  assume {:verifier.code 0} true;
  $i237 := $mul.i64($i232,$i236);
  $i237.dup := $or.i1($i232.dup,$i236.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 60} true;
  assume {:verifier.code 0} true;
  $i238 := $add.i64($i228,$i237);
  $i238.dup := $or.i1($i228.dup,$i237.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 36} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p1,$mul.ref(1,8));
  $p239.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p239.dup == 0));
  $i240 := $load.i64($M.3,$p239);
  $i240.dup := $load.i1($M.3.dup,$p239);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 30} true;
  assume {:verifier.code 0} true;
  $i241 := $trunc.i64.i32($i240);
  $i241.dup := $i240.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 22} true;
  assume {:verifier.code 0} true;
  $i242 := $sext.i32.i64($i241);
  $i242.dup := $i241.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 53} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p1,$mul.ref(7,8));
  $p243.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p243.dup == 0));
  $i244 := $load.i64($M.3,$p243);
  $i244.dup := $load.i1($M.3.dup,$p243);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 47} true;
  assume {:verifier.code 0} true;
  $i245 := $trunc.i64.i32($i244);
  $i245.dup := $i244.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 46} true;
  assume {:verifier.code 0} true;
  $i246 := $sext.i32.i64($i245);
  $i246.dup := $i245.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 44} true;
  assume {:verifier.code 0} true;
  $i247 := $mul.i64($i242,$i246);
  $i247.dup := $or.i1($i242.dup,$i246.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 36} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p1,$mul.ref(3,8));
  $p248.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p248.dup == 0));
  $i249 := $load.i64($M.3,$p248);
  $i249.dup := $load.i1($M.3.dup,$p248);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 30} true;
  assume {:verifier.code 0} true;
  $i250 := $trunc.i64.i32($i249);
  $i250.dup := $i249.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 22} true;
  assume {:verifier.code 0} true;
  $i251 := $sext.i32.i64($i250);
  $i251.dup := $i250.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 53} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p1,$mul.ref(5,8));
  $p252.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p252.dup == 0));
  $i253 := $load.i64($M.3,$p252);
  $i253.dup := $load.i1($M.3.dup,$p252);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 47} true;
  assume {:verifier.code 0} true;
  $i254 := $trunc.i64.i32($i253);
  $i254.dup := $i253.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 46} true;
  assume {:verifier.code 0} true;
  $i255 := $sext.i32.i64($i254);
  $i255.dup := $i254.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 370, 44} true;
  assume {:verifier.code 0} true;
  $i256 := $mul.i64($i251,$i255);
  $i256.dup := $or.i1($i251.dup,$i255.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 60} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i64($i247,$i256);
  $i257.dup := $or.i1($i247.dup,$i256.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 369, 18} true;
  assume {:verifier.code 0} true;
  $i258 := $mul.i64(2,$i257);
  $i258.dup := $or.i1(0,$i257.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 368, 60} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i64($i238,$i258);
  $i259.dup := $or.i1($i238.dup,$i258.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 367, 18} true;
  assume {:verifier.code 0} true;
  $i260 := $mul.i64(2,$i259);
  $i260.dup := $or.i1(0,$i259.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 60} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i64($i219,$i260);
  $i261.dup := $or.i1($i219.dup,$i260.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 3} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p0,$mul.ref(8,8));
  $p262.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 366, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p262.dup == 0));
  $M.3 := $store.i64($M.3,$p262,$i261);
  $M.3.dup := $store.i1($M.3.dup,$p262,$i261.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 36} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p1,$mul.ref(4,8));
  $p263.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p263.dup == 0));
  $i264 := $load.i64($M.3,$p263);
  $i264.dup := $load.i1($M.3.dup,$p263);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 30} true;
  assume {:verifier.code 0} true;
  $i265 := $trunc.i64.i32($i264);
  $i265.dup := $i264.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 22} true;
  assume {:verifier.code 0} true;
  $i266 := $sext.i32.i64($i265);
  $i266.dup := $i265.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 53} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p1,$mul.ref(5,8));
  $p267.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p267.dup == 0));
  $i268 := $load.i64($M.3,$p267);
  $i268.dup := $load.i1($M.3.dup,$p267);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 47} true;
  assume {:verifier.code 0} true;
  $i269 := $trunc.i64.i32($i268);
  $i269.dup := $i268.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 46} true;
  assume {:verifier.code 0} true;
  $i270 := $sext.i32.i64($i269);
  $i270.dup := $i269.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 44} true;
  assume {:verifier.code 0} true;
  $i271 := $mul.i64($i266,$i270);
  $i271.dup := $or.i1($i266.dup,$i270.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 36} true;
  assume {:verifier.code 0} true;
  $p272 := $add.ref($p1,$mul.ref(3,8));
  $p272.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p272.dup == 0));
  $i273 := $load.i64($M.3,$p272);
  $i273.dup := $load.i1($M.3.dup,$p272);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 30} true;
  assume {:verifier.code 0} true;
  $i274 := $trunc.i64.i32($i273);
  $i274.dup := $i273.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 22} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i32.i64($i274);
  $i275.dup := $i274.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 53} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p1,$mul.ref(6,8));
  $p276.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p276.dup == 0));
  $i277 := $load.i64($M.3,$p276);
  $i277.dup := $load.i1($M.3.dup,$p276);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 47} true;
  assume {:verifier.code 0} true;
  $i278 := $trunc.i64.i32($i277);
  $i278.dup := $i277.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 46} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i32.i64($i278);
  $i279.dup := $i278.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 44} true;
  assume {:verifier.code 0} true;
  $i280 := $mul.i64($i275,$i279);
  $i280.dup := $or.i1($i275.dup,$i279.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 60} true;
  assume {:verifier.code 0} true;
  $i281 := $add.i64($i271,$i280);
  $i281.dup := $or.i1($i271.dup,$i280.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 36} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p1,$mul.ref(2,8));
  $p282.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p282.dup == 0));
  $i283 := $load.i64($M.3,$p282);
  $i283.dup := $load.i1($M.3.dup,$p282);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 30} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i64.i32($i283);
  $i284.dup := $i283.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 22} true;
  assume {:verifier.code 0} true;
  $i285 := $sext.i32.i64($i284);
  $i285.dup := $i284.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 53} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p1,$mul.ref(7,8));
  $p286.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p286.dup == 0));
  $i287 := $load.i64($M.3,$p286);
  $i287.dup := $load.i1($M.3.dup,$p286);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 47} true;
  assume {:verifier.code 0} true;
  $i288 := $trunc.i64.i32($i287);
  $i288.dup := $i287.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 46} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i32.i64($i288);
  $i289.dup := $i288.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 44} true;
  assume {:verifier.code 0} true;
  $i290 := $mul.i64($i285,$i289);
  $i290.dup := $or.i1($i285.dup,$i289.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 372, 60} true;
  assume {:verifier.code 0} true;
  $i291 := $add.i64($i281,$i290);
  $i291.dup := $or.i1($i281.dup,$i290.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 36} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($p1,$mul.ref(1,8));
  $p292.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p292.dup == 0));
  $i293 := $load.i64($M.3,$p292);
  $i293.dup := $load.i1($M.3.dup,$p292);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 30} true;
  assume {:verifier.code 0} true;
  $i294 := $trunc.i64.i32($i293);
  $i294.dup := $i293.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 22} true;
  assume {:verifier.code 0} true;
  $i295 := $sext.i32.i64($i294);
  $i295.dup := $i294.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 53} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($p1,$mul.ref(8,8));
  $p296.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p296.dup == 0));
  $i297 := $load.i64($M.3,$p296);
  $i297.dup := $load.i1($M.3.dup,$p296);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 47} true;
  assume {:verifier.code 0} true;
  $i298 := $trunc.i64.i32($i297);
  $i298.dup := $i297.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 46} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i32.i64($i298);
  $i299.dup := $i298.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 44} true;
  assume {:verifier.code 0} true;
  $i300 := $mul.i64($i295,$i299);
  $i300.dup := $or.i1($i295.dup,$i299.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 373, 60} true;
  assume {:verifier.code 0} true;
  $i301 := $add.i64($i291,$i300);
  $i301.dup := $or.i1($i291.dup,$i300.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 36} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p1,$mul.ref(0,8));
  $p302.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p302.dup == 0));
  $i303 := $load.i64($M.3,$p302);
  $i303.dup := $load.i1($M.3.dup,$p302);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 30} true;
  assume {:verifier.code 0} true;
  $i304 := $trunc.i64.i32($i303);
  $i304.dup := $i303.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 22} true;
  assume {:verifier.code 0} true;
  $i305 := $sext.i32.i64($i304);
  $i305.dup := $i304.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 53} true;
  assume {:verifier.code 0} true;
  $p306 := $add.ref($p1,$mul.ref(9,8));
  $p306.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p306.dup == 0));
  $i307 := $load.i64($M.3,$p306);
  $i307.dup := $load.i1($M.3.dup,$p306);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 47} true;
  assume {:verifier.code 0} true;
  $i308 := $trunc.i64.i32($i307);
  $i308.dup := $i307.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 46} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i308);
  $i309.dup := $i308.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 375, 44} true;
  assume {:verifier.code 0} true;
  $i310 := $mul.i64($i305,$i309);
  $i310.dup := $or.i1($i305.dup,$i309.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 374, 60} true;
  assume {:verifier.code 0} true;
  $i311 := $add.i64($i301,$i310);
  $i311.dup := $or.i1($i301.dup,$i310.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 18} true;
  assume {:verifier.code 0} true;
  $i312 := $mul.i64(2,$i311);
  $i312.dup := $or.i1(0,$i311.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 3} true;
  assume {:verifier.code 0} true;
  $p313 := $add.ref($p0,$mul.ref(9,8));
  $p313.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 371, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p313.dup == 0));
  $M.3 := $store.i64($M.3,$p313,$i312);
  $M.3.dup := $store.i1($M.3.dup,$p313,$i312.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 36} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p1,$mul.ref(5,8));
  $p314.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p314.dup == 0));
  $i315 := $load.i64($M.3,$p314);
  $i315.dup := $load.i1($M.3.dup,$p314);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 30} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i64.i32($i315);
  $i316.dup := $i315.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 22} true;
  assume {:verifier.code 0} true;
  $i317 := $sext.i32.i64($i316);
  $i317.dup := $i316.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 53} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p1,$mul.ref(5,8));
  $p318.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p318.dup == 0));
  $i319 := $load.i64($M.3,$p318);
  $i319.dup := $load.i1($M.3.dup,$p318);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 47} true;
  assume {:verifier.code 0} true;
  $i320 := $trunc.i64.i32($i319);
  $i320.dup := $i319.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 46} true;
  assume {:verifier.code 0} true;
  $i321 := $sext.i32.i64($i320);
  $i321.dup := $i320.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 44} true;
  assume {:verifier.code 0} true;
  $i322 := $mul.i64($i317,$i321);
  $i322.dup := $or.i1($i317.dup,$i321.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 36} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p1,$mul.ref(4,8));
  $p323.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p323.dup == 0));
  $i324 := $load.i64($M.3,$p323);
  $i324.dup := $load.i1($M.3.dup,$p323);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 30} true;
  assume {:verifier.code 0} true;
  $i325 := $trunc.i64.i32($i324);
  $i325.dup := $i324.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 22} true;
  assume {:verifier.code 0} true;
  $i326 := $sext.i32.i64($i325);
  $i326.dup := $i325.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 53} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p1,$mul.ref(6,8));
  $p327.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p327.dup == 0));
  $i328 := $load.i64($M.3,$p327);
  $i328.dup := $load.i1($M.3.dup,$p327);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 47} true;
  assume {:verifier.code 0} true;
  $i329 := $trunc.i64.i32($i328);
  $i329.dup := $i328.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 46} true;
  assume {:verifier.code 0} true;
  $i330 := $sext.i32.i64($i329);
  $i330.dup := $i329.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 44} true;
  assume {:verifier.code 0} true;
  $i331 := $mul.i64($i326,$i330);
  $i331.dup := $or.i1($i326.dup,$i330.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 60} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i64($i322,$i331);
  $i332.dup := $or.i1($i322.dup,$i331.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 36} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($p1,$mul.ref(2,8));
  $p333.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p333.dup == 0));
  $i334 := $load.i64($M.3,$p333);
  $i334.dup := $load.i1($M.3.dup,$p333);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 30} true;
  assume {:verifier.code 0} true;
  $i335 := $trunc.i64.i32($i334);
  $i335.dup := $i334.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 22} true;
  assume {:verifier.code 0} true;
  $i336 := $sext.i32.i64($i335);
  $i336.dup := $i335.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 53} true;
  assume {:verifier.code 0} true;
  $p337 := $add.ref($p1,$mul.ref(8,8));
  $p337.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p337.dup == 0));
  $i338 := $load.i64($M.3,$p337);
  $i338.dup := $load.i1($M.3.dup,$p337);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 47} true;
  assume {:verifier.code 0} true;
  $i339 := $trunc.i64.i32($i338);
  $i339.dup := $i338.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 46} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i32.i64($i339);
  $i340.dup := $i339.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 44} true;
  assume {:verifier.code 0} true;
  $i341 := $mul.i64($i336,$i340);
  $i341.dup := $or.i1($i336.dup,$i340.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 377, 60} true;
  assume {:verifier.code 0} true;
  $i342 := $add.i64($i332,$i341);
  $i342.dup := $or.i1($i332.dup,$i341.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 36} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($p1,$mul.ref(3,8));
  $p343.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p343.dup == 0));
  $i344 := $load.i64($M.3,$p343);
  $i344.dup := $load.i1($M.3.dup,$p343);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 30} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i64.i32($i344);
  $i345.dup := $i344.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 22} true;
  assume {:verifier.code 0} true;
  $i346 := $sext.i32.i64($i345);
  $i346.dup := $i345.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 53} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p1,$mul.ref(7,8));
  $p347.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p347.dup == 0));
  $i348 := $load.i64($M.3,$p347);
  $i348.dup := $load.i1($M.3.dup,$p347);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 47} true;
  assume {:verifier.code 0} true;
  $i349 := $trunc.i64.i32($i348);
  $i349.dup := $i348.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 46} true;
  assume {:verifier.code 0} true;
  $i350 := $sext.i32.i64($i349);
  $i350.dup := $i349.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 44} true;
  assume {:verifier.code 0} true;
  $i351 := $mul.i64($i346,$i350);
  $i351.dup := $or.i1($i346.dup,$i350.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 36} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($p1,$mul.ref(1,8));
  $p352.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p352.dup == 0));
  $i353 := $load.i64($M.3,$p352);
  $i353.dup := $load.i1($M.3.dup,$p352);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 30} true;
  assume {:verifier.code 0} true;
  $i354 := $trunc.i64.i32($i353);
  $i354.dup := $i353.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 22} true;
  assume {:verifier.code 0} true;
  $i355 := $sext.i32.i64($i354);
  $i355.dup := $i354.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 53} true;
  assume {:verifier.code 0} true;
  $p356 := $add.ref($p1,$mul.ref(9,8));
  $p356.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p356.dup == 0));
  $i357 := $load.i64($M.3,$p356);
  $i357.dup := $load.i1($M.3.dup,$p356);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 47} true;
  assume {:verifier.code 0} true;
  $i358 := $trunc.i64.i32($i357);
  $i358.dup := $i357.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 46} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i32.i64($i358);
  $i359.dup := $i358.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 380, 44} true;
  assume {:verifier.code 0} true;
  $i360 := $mul.i64($i355,$i359);
  $i360.dup := $or.i1($i355.dup,$i359.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 60} true;
  assume {:verifier.code 0} true;
  $i361 := $add.i64($i351,$i360);
  $i361.dup := $or.i1($i351.dup,$i360.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 379, 18} true;
  assume {:verifier.code 0} true;
  $i362 := $mul.i64(2,$i361);
  $i362.dup := $or.i1(0,$i361.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 378, 60} true;
  assume {:verifier.code 0} true;
  $i363 := $add.i64($i342,$i362);
  $i363.dup := $or.i1($i342.dup,$i362.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 18} true;
  assume {:verifier.code 0} true;
  $i364 := $mul.i64(2,$i363);
  $i364.dup := $or.i1(0,$i363.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 3} true;
  assume {:verifier.code 0} true;
  $p365 := $add.ref($p0,$mul.ref(10,8));
  $p365.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 376, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p365.dup == 0));
  $M.3 := $store.i64($M.3,$p365,$i364);
  $M.3.dup := $store.i1($M.3.dup,$p365,$i364.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 36} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p1,$mul.ref(5,8));
  $p366.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p366.dup == 0));
  $i367 := $load.i64($M.3,$p366);
  $i367.dup := $load.i1($M.3.dup,$p366);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 30} true;
  assume {:verifier.code 0} true;
  $i368 := $trunc.i64.i32($i367);
  $i368.dup := $i367.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 22} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i32.i64($i368);
  $i369.dup := $i368.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 53} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p1,$mul.ref(6,8));
  $p370.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p370.dup == 0));
  $i371 := $load.i64($M.3,$p370);
  $i371.dup := $load.i1($M.3.dup,$p370);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 47} true;
  assume {:verifier.code 0} true;
  $i372 := $trunc.i64.i32($i371);
  $i372.dup := $i371.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 46} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i372);
  $i373.dup := $i372.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 44} true;
  assume {:verifier.code 0} true;
  $i374 := $mul.i64($i369,$i373);
  $i374.dup := $or.i1($i369.dup,$i373.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 36} true;
  assume {:verifier.code 0} true;
  $p375 := $add.ref($p1,$mul.ref(4,8));
  $p375.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p375.dup == 0));
  $i376 := $load.i64($M.3,$p375);
  $i376.dup := $load.i1($M.3.dup,$p375);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 30} true;
  assume {:verifier.code 0} true;
  $i377 := $trunc.i64.i32($i376);
  $i377.dup := $i376.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 22} true;
  assume {:verifier.code 0} true;
  $i378 := $sext.i32.i64($i377);
  $i378.dup := $i377.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 53} true;
  assume {:verifier.code 0} true;
  $p379 := $add.ref($p1,$mul.ref(7,8));
  $p379.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p379.dup == 0));
  $i380 := $load.i64($M.3,$p379);
  $i380.dup := $load.i1($M.3.dup,$p379);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 47} true;
  assume {:verifier.code 0} true;
  $i381 := $trunc.i64.i32($i380);
  $i381.dup := $i380.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 46} true;
  assume {:verifier.code 0} true;
  $i382 := $sext.i32.i64($i381);
  $i382.dup := $i381.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 44} true;
  assume {:verifier.code 0} true;
  $i383 := $mul.i64($i378,$i382);
  $i383.dup := $or.i1($i378.dup,$i382.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 60} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i64($i374,$i383);
  $i384.dup := $or.i1($i374.dup,$i383.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 36} true;
  assume {:verifier.code 0} true;
  $p385 := $add.ref($p1,$mul.ref(3,8));
  $p385.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p385.dup == 0));
  $i386 := $load.i64($M.3,$p385);
  $i386.dup := $load.i1($M.3.dup,$p385);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 30} true;
  assume {:verifier.code 0} true;
  $i387 := $trunc.i64.i32($i386);
  $i387.dup := $i386.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 22} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i32.i64($i387);
  $i388.dup := $i387.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 53} true;
  assume {:verifier.code 0} true;
  $p389 := $add.ref($p1,$mul.ref(8,8));
  $p389.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p389.dup == 0));
  $i390 := $load.i64($M.3,$p389);
  $i390.dup := $load.i1($M.3.dup,$p389);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 47} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i64.i32($i390);
  $i391.dup := $i390.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 46} true;
  assume {:verifier.code 0} true;
  $i392 := $sext.i32.i64($i391);
  $i392.dup := $i391.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 44} true;
  assume {:verifier.code 0} true;
  $i393 := $mul.i64($i388,$i392);
  $i393.dup := $or.i1($i388.dup,$i392.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 382, 60} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i64($i384,$i393);
  $i394.dup := $or.i1($i384.dup,$i393.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 36} true;
  assume {:verifier.code 0} true;
  $p395 := $add.ref($p1,$mul.ref(2,8));
  $p395.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p395.dup == 0));
  $i396 := $load.i64($M.3,$p395);
  $i396.dup := $load.i1($M.3.dup,$p395);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 30} true;
  assume {:verifier.code 0} true;
  $i397 := $trunc.i64.i32($i396);
  $i397.dup := $i396.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 22} true;
  assume {:verifier.code 0} true;
  $i398 := $sext.i32.i64($i397);
  $i398.dup := $i397.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 53} true;
  assume {:verifier.code 0} true;
  $p399 := $add.ref($p1,$mul.ref(9,8));
  $p399.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p399.dup == 0));
  $i400 := $load.i64($M.3,$p399);
  $i400.dup := $load.i1($M.3.dup,$p399);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 47} true;
  assume {:verifier.code 0} true;
  $i401 := $trunc.i64.i32($i400);
  $i401.dup := $i400.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 46} true;
  assume {:verifier.code 0} true;
  $i402 := $sext.i32.i64($i401);
  $i402.dup := $i401.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 384, 44} true;
  assume {:verifier.code 0} true;
  $i403 := $mul.i64($i398,$i402);
  $i403.dup := $or.i1($i398.dup,$i402.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 383, 60} true;
  assume {:verifier.code 0} true;
  $i404 := $add.i64($i394,$i403);
  $i404.dup := $or.i1($i394.dup,$i403.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 18} true;
  assume {:verifier.code 0} true;
  $i405 := $mul.i64(2,$i404);
  $i405.dup := $or.i1(0,$i404.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 3} true;
  assume {:verifier.code 0} true;
  $p406 := $add.ref($p0,$mul.ref(11,8));
  $p406.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 381, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p406.dup == 0));
  $M.3 := $store.i64($M.3,$p406,$i405);
  $M.3.dup := $store.i1($M.3.dup,$p406,$i405.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 36} true;
  assume {:verifier.code 0} true;
  $p407 := $add.ref($p1,$mul.ref(6,8));
  $p407.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p407.dup == 0));
  $i408 := $load.i64($M.3,$p407);
  $i408.dup := $load.i1($M.3.dup,$p407);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 30} true;
  assume {:verifier.code 0} true;
  $i409 := $trunc.i64.i32($i408);
  $i409.dup := $i408.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 22} true;
  assume {:verifier.code 0} true;
  $i410 := $sext.i32.i64($i409);
  $i410.dup := $i409.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 53} true;
  assume {:verifier.code 0} true;
  $p411 := $add.ref($p1,$mul.ref(6,8));
  $p411.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p411.dup == 0));
  $i412 := $load.i64($M.3,$p411);
  $i412.dup := $load.i1($M.3.dup,$p411);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 47} true;
  assume {:verifier.code 0} true;
  $i413 := $trunc.i64.i32($i412);
  $i413.dup := $i412.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 46} true;
  assume {:verifier.code 0} true;
  $i414 := $sext.i32.i64($i413);
  $i414.dup := $i413.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 44} true;
  assume {:verifier.code 0} true;
  $i415 := $mul.i64($i410,$i414);
  $i415.dup := $or.i1($i410.dup,$i414.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 36} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($p1,$mul.ref(4,8));
  $p416.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p416.dup == 0));
  $i417 := $load.i64($M.3,$p416);
  $i417.dup := $load.i1($M.3.dup,$p416);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 30} true;
  assume {:verifier.code 0} true;
  $i418 := $trunc.i64.i32($i417);
  $i418.dup := $i417.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 22} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i418);
  $i419.dup := $i418.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 53} true;
  assume {:verifier.code 0} true;
  $p420 := $add.ref($p1,$mul.ref(8,8));
  $p420.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p420.dup == 0));
  $i421 := $load.i64($M.3,$p420);
  $i421.dup := $load.i1($M.3.dup,$p420);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 47} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i64.i32($i421);
  $i422.dup := $i421.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 46} true;
  assume {:verifier.code 0} true;
  $i423 := $sext.i32.i64($i422);
  $i423.dup := $i422.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 44} true;
  assume {:verifier.code 0} true;
  $i424 := $mul.i64($i419,$i423);
  $i424.dup := $or.i1($i419.dup,$i423.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 36} true;
  assume {:verifier.code 0} true;
  $p425 := $add.ref($p1,$mul.ref(5,8));
  $p425.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p425.dup == 0));
  $i426 := $load.i64($M.3,$p425);
  $i426.dup := $load.i1($M.3.dup,$p425);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 30} true;
  assume {:verifier.code 0} true;
  $i427 := $trunc.i64.i32($i426);
  $i427.dup := $i426.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 22} true;
  assume {:verifier.code 0} true;
  $i428 := $sext.i32.i64($i427);
  $i428.dup := $i427.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 53} true;
  assume {:verifier.code 0} true;
  $p429 := $add.ref($p1,$mul.ref(7,8));
  $p429.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p429.dup == 0));
  $i430 := $load.i64($M.3,$p429);
  $i430.dup := $load.i1($M.3.dup,$p429);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 47} true;
  assume {:verifier.code 0} true;
  $i431 := $trunc.i64.i32($i430);
  $i431.dup := $i430.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 46} true;
  assume {:verifier.code 0} true;
  $i432 := $sext.i32.i64($i431);
  $i432.dup := $i431.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 44} true;
  assume {:verifier.code 0} true;
  $i433 := $mul.i64($i428,$i432);
  $i433.dup := $or.i1($i428.dup,$i432.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 36} true;
  assume {:verifier.code 0} true;
  $p434 := $add.ref($p1,$mul.ref(3,8));
  $p434.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p434.dup == 0));
  $i435 := $load.i64($M.3,$p434);
  $i435.dup := $load.i1($M.3.dup,$p434);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 30} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i64.i32($i435);
  $i436.dup := $i435.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 22} true;
  assume {:verifier.code 0} true;
  $i437 := $sext.i32.i64($i436);
  $i437.dup := $i436.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 53} true;
  assume {:verifier.code 0} true;
  $p438 := $add.ref($p1,$mul.ref(9,8));
  $p438.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p438.dup == 0));
  $i439 := $load.i64($M.3,$p438);
  $i439.dup := $load.i1($M.3.dup,$p438);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 47} true;
  assume {:verifier.code 0} true;
  $i440 := $trunc.i64.i32($i439);
  $i440.dup := $i439.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 46} true;
  assume {:verifier.code 0} true;
  $i441 := $sext.i32.i64($i440);
  $i441.dup := $i440.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 388, 44} true;
  assume {:verifier.code 0} true;
  $i442 := $mul.i64($i437,$i441);
  $i442.dup := $or.i1($i437.dup,$i441.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 60} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i64($i433,$i442);
  $i443.dup := $or.i1($i433.dup,$i442.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 387, 18} true;
  assume {:verifier.code 0} true;
  $i444 := $mul.i64(2,$i443);
  $i444.dup := $or.i1(0,$i443.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 60} true;
  assume {:verifier.code 0} true;
  $i445 := $add.i64($i424,$i444);
  $i445.dup := $or.i1($i424.dup,$i444.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 386, 18} true;
  assume {:verifier.code 0} true;
  $i446 := $mul.i64(2,$i445);
  $i446.dup := $or.i1(0,$i445.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 60} true;
  assume {:verifier.code 0} true;
  $i447 := $add.i64($i415,$i446);
  $i447.dup := $or.i1($i415.dup,$i446.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 3} true;
  assume {:verifier.code 0} true;
  $p448 := $add.ref($p0,$mul.ref(12,8));
  $p448.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 385, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p448.dup == 0));
  $M.3 := $store.i64($M.3,$p448,$i447);
  $M.3.dup := $store.i1($M.3.dup,$p448,$i447.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 36} true;
  assume {:verifier.code 0} true;
  $p449 := $add.ref($p1,$mul.ref(6,8));
  $p449.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p449.dup == 0));
  $i450 := $load.i64($M.3,$p449);
  $i450.dup := $load.i1($M.3.dup,$p449);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 30} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i64.i32($i450);
  $i451.dup := $i450.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 22} true;
  assume {:verifier.code 0} true;
  $i452 := $sext.i32.i64($i451);
  $i452.dup := $i451.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 53} true;
  assume {:verifier.code 0} true;
  $p453 := $add.ref($p1,$mul.ref(7,8));
  $p453.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p453.dup == 0));
  $i454 := $load.i64($M.3,$p453);
  $i454.dup := $load.i1($M.3.dup,$p453);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 47} true;
  assume {:verifier.code 0} true;
  $i455 := $trunc.i64.i32($i454);
  $i455.dup := $i454.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 46} true;
  assume {:verifier.code 0} true;
  $i456 := $sext.i32.i64($i455);
  $i456.dup := $i455.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 44} true;
  assume {:verifier.code 0} true;
  $i457 := $mul.i64($i452,$i456);
  $i457.dup := $or.i1($i452.dup,$i456.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 36} true;
  assume {:verifier.code 0} true;
  $p458 := $add.ref($p1,$mul.ref(5,8));
  $p458.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p458.dup == 0));
  $i459 := $load.i64($M.3,$p458);
  $i459.dup := $load.i1($M.3.dup,$p458);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 30} true;
  assume {:verifier.code 0} true;
  $i460 := $trunc.i64.i32($i459);
  $i460.dup := $i459.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 22} true;
  assume {:verifier.code 0} true;
  $i461 := $sext.i32.i64($i460);
  $i461.dup := $i460.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 53} true;
  assume {:verifier.code 0} true;
  $p462 := $add.ref($p1,$mul.ref(8,8));
  $p462.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p462.dup == 0));
  $i463 := $load.i64($M.3,$p462);
  $i463.dup := $load.i1($M.3.dup,$p462);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 47} true;
  assume {:verifier.code 0} true;
  $i464 := $trunc.i64.i32($i463);
  $i464.dup := $i463.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 46} true;
  assume {:verifier.code 0} true;
  $i465 := $sext.i32.i64($i464);
  $i465.dup := $i464.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 44} true;
  assume {:verifier.code 0} true;
  $i466 := $mul.i64($i461,$i465);
  $i466.dup := $or.i1($i461.dup,$i465.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 60} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i64($i457,$i466);
  $i467.dup := $or.i1($i457.dup,$i466.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 36} true;
  assume {:verifier.code 0} true;
  $p468 := $add.ref($p1,$mul.ref(4,8));
  $p468.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p468.dup == 0));
  $i469 := $load.i64($M.3,$p468);
  $i469.dup := $load.i1($M.3.dup,$p468);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 30} true;
  assume {:verifier.code 0} true;
  $i470 := $trunc.i64.i32($i469);
  $i470.dup := $i469.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 22} true;
  assume {:verifier.code 0} true;
  $i471 := $sext.i32.i64($i470);
  $i471.dup := $i470.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 53} true;
  assume {:verifier.code 0} true;
  $p472 := $add.ref($p1,$mul.ref(9,8));
  $p472.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p472.dup == 0));
  $i473 := $load.i64($M.3,$p472);
  $i473.dup := $load.i1($M.3.dup,$p472);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 47} true;
  assume {:verifier.code 0} true;
  $i474 := $trunc.i64.i32($i473);
  $i474.dup := $i473.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 46} true;
  assume {:verifier.code 0} true;
  $i475 := $sext.i32.i64($i474);
  $i475.dup := $i474.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 391, 44} true;
  assume {:verifier.code 0} true;
  $i476 := $mul.i64($i471,$i475);
  $i476.dup := $or.i1($i471.dup,$i475.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 390, 60} true;
  assume {:verifier.code 0} true;
  $i477 := $add.i64($i467,$i476);
  $i477.dup := $or.i1($i467.dup,$i476.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 18} true;
  assume {:verifier.code 0} true;
  $i478 := $mul.i64(2,$i477);
  $i478.dup := $or.i1(0,$i477.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 3} true;
  assume {:verifier.code 0} true;
  $p479 := $add.ref($p0,$mul.ref(13,8));
  $p479.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 389, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p479.dup == 0));
  $M.3 := $store.i64($M.3,$p479,$i478);
  $M.3.dup := $store.i1($M.3.dup,$p479,$i478.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 36} true;
  assume {:verifier.code 0} true;
  $p480 := $add.ref($p1,$mul.ref(7,8));
  $p480.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p480.dup == 0));
  $i481 := $load.i64($M.3,$p480);
  $i481.dup := $load.i1($M.3.dup,$p480);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 30} true;
  assume {:verifier.code 0} true;
  $i482 := $trunc.i64.i32($i481);
  $i482.dup := $i481.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 22} true;
  assume {:verifier.code 0} true;
  $i483 := $sext.i32.i64($i482);
  $i483.dup := $i482.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 53} true;
  assume {:verifier.code 0} true;
  $p484 := $add.ref($p1,$mul.ref(7,8));
  $p484.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p484.dup == 0));
  $i485 := $load.i64($M.3,$p484);
  $i485.dup := $load.i1($M.3.dup,$p484);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 47} true;
  assume {:verifier.code 0} true;
  $i486 := $trunc.i64.i32($i485);
  $i486.dup := $i485.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 46} true;
  assume {:verifier.code 0} true;
  $i487 := $sext.i32.i64($i486);
  $i487.dup := $i486.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 44} true;
  assume {:verifier.code 0} true;
  $i488 := $mul.i64($i483,$i487);
  $i488.dup := $or.i1($i483.dup,$i487.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 36} true;
  assume {:verifier.code 0} true;
  $p489 := $add.ref($p1,$mul.ref(6,8));
  $p489.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p489.dup == 0));
  $i490 := $load.i64($M.3,$p489);
  $i490.dup := $load.i1($M.3.dup,$p489);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 30} true;
  assume {:verifier.code 0} true;
  $i491 := $trunc.i64.i32($i490);
  $i491.dup := $i490.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 22} true;
  assume {:verifier.code 0} true;
  $i492 := $sext.i32.i64($i491);
  $i492.dup := $i491.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 53} true;
  assume {:verifier.code 0} true;
  $p493 := $add.ref($p1,$mul.ref(8,8));
  $p493.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p493.dup == 0));
  $i494 := $load.i64($M.3,$p493);
  $i494.dup := $load.i1($M.3.dup,$p493);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 47} true;
  assume {:verifier.code 0} true;
  $i495 := $trunc.i64.i32($i494);
  $i495.dup := $i494.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 46} true;
  assume {:verifier.code 0} true;
  $i496 := $sext.i32.i64($i495);
  $i496.dup := $i495.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 44} true;
  assume {:verifier.code 0} true;
  $i497 := $mul.i64($i492,$i496);
  $i497.dup := $or.i1($i492.dup,$i496.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 60} true;
  assume {:verifier.code 0} true;
  $i498 := $add.i64($i488,$i497);
  $i498.dup := $or.i1($i488.dup,$i497.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 36} true;
  assume {:verifier.code 0} true;
  $p499 := $add.ref($p1,$mul.ref(5,8));
  $p499.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p499.dup == 0));
  $i500 := $load.i64($M.3,$p499);
  $i500.dup := $load.i1($M.3.dup,$p499);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 30} true;
  assume {:verifier.code 0} true;
  $i501 := $trunc.i64.i32($i500);
  $i501.dup := $i500.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 22} true;
  assume {:verifier.code 0} true;
  $i502 := $sext.i32.i64($i501);
  $i502.dup := $i501.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 18} true;
  assume {:verifier.code 0} true;
  $i503 := $mul.i64(2,$i502);
  $i503.dup := $or.i1(0,$i502.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 53} true;
  assume {:verifier.code 0} true;
  $p504 := $add.ref($p1,$mul.ref(9,8));
  $p504.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p504.dup == 0));
  $i505 := $load.i64($M.3,$p504);
  $i505.dup := $load.i1($M.3.dup,$p504);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 47} true;
  assume {:verifier.code 0} true;
  $i506 := $trunc.i64.i32($i505);
  $i506.dup := $i505.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 46} true;
  assume {:verifier.code 0} true;
  $i507 := $sext.i32.i64($i506);
  $i507.dup := $i506.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 394, 44} true;
  assume {:verifier.code 0} true;
  $i508 := $mul.i64($i503,$i507);
  $i508.dup := $or.i1($i503.dup,$i507.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 393, 60} true;
  assume {:verifier.code 0} true;
  $i509 := $add.i64($i498,$i508);
  $i509.dup := $or.i1($i498.dup,$i508.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 18} true;
  assume {:verifier.code 0} true;
  $i510 := $mul.i64(2,$i509);
  $i510.dup := $or.i1(0,$i509.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 3} true;
  assume {:verifier.code 0} true;
  $p511 := $add.ref($p0,$mul.ref(14,8));
  $p511.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 392, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p511.dup == 0));
  $M.3 := $store.i64($M.3,$p511,$i510);
  $M.3.dup := $store.i1($M.3.dup,$p511,$i510.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 36} true;
  assume {:verifier.code 0} true;
  $p512 := $add.ref($p1,$mul.ref(7,8));
  $p512.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p512.dup == 0));
  $i513 := $load.i64($M.3,$p512);
  $i513.dup := $load.i1($M.3.dup,$p512);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 30} true;
  assume {:verifier.code 0} true;
  $i514 := $trunc.i64.i32($i513);
  $i514.dup := $i513.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 22} true;
  assume {:verifier.code 0} true;
  $i515 := $sext.i32.i64($i514);
  $i515.dup := $i514.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 53} true;
  assume {:verifier.code 0} true;
  $p516 := $add.ref($p1,$mul.ref(8,8));
  $p516.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p516.dup == 0));
  $i517 := $load.i64($M.3,$p516);
  $i517.dup := $load.i1($M.3.dup,$p516);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 47} true;
  assume {:verifier.code 0} true;
  $i518 := $trunc.i64.i32($i517);
  $i518.dup := $i517.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 46} true;
  assume {:verifier.code 0} true;
  $i519 := $sext.i32.i64($i518);
  $i519.dup := $i518.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 44} true;
  assume {:verifier.code 0} true;
  $i520 := $mul.i64($i515,$i519);
  $i520.dup := $or.i1($i515.dup,$i519.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 36} true;
  assume {:verifier.code 0} true;
  $p521 := $add.ref($p1,$mul.ref(6,8));
  $p521.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p521.dup == 0));
  $i522 := $load.i64($M.3,$p521);
  $i522.dup := $load.i1($M.3.dup,$p521);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 30} true;
  assume {:verifier.code 0} true;
  $i523 := $trunc.i64.i32($i522);
  $i523.dup := $i522.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 22} true;
  assume {:verifier.code 0} true;
  $i524 := $sext.i32.i64($i523);
  $i524.dup := $i523.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 53} true;
  assume {:verifier.code 0} true;
  $p525 := $add.ref($p1,$mul.ref(9,8));
  $p525.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p525.dup == 0));
  $i526 := $load.i64($M.3,$p525);
  $i526.dup := $load.i1($M.3.dup,$p525);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 47} true;
  assume {:verifier.code 0} true;
  $i527 := $trunc.i64.i32($i526);
  $i527.dup := $i526.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 46} true;
  assume {:verifier.code 0} true;
  $i528 := $sext.i32.i64($i527);
  $i528.dup := $i527.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 396, 44} true;
  assume {:verifier.code 0} true;
  $i529 := $mul.i64($i524,$i528);
  $i529.dup := $or.i1($i524.dup,$i528.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 60} true;
  assume {:verifier.code 0} true;
  $i530 := $add.i64($i520,$i529);
  $i530.dup := $or.i1($i520.dup,$i529.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 18} true;
  assume {:verifier.code 0} true;
  $i531 := $mul.i64(2,$i530);
  $i531.dup := $or.i1(0,$i530.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 3} true;
  assume {:verifier.code 0} true;
  $p532 := $add.ref($p0,$mul.ref(15,8));
  $p532.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 395, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p532.dup == 0));
  $M.3 := $store.i64($M.3,$p532,$i531);
  $M.3.dup := $store.i1($M.3.dup,$p532,$i531.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 36} true;
  assume {:verifier.code 0} true;
  $p533 := $add.ref($p1,$mul.ref(8,8));
  $p533.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p533.dup == 0));
  $i534 := $load.i64($M.3,$p533);
  $i534.dup := $load.i1($M.3.dup,$p533);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 30} true;
  assume {:verifier.code 0} true;
  $i535 := $trunc.i64.i32($i534);
  $i535.dup := $i534.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 22} true;
  assume {:verifier.code 0} true;
  $i536 := $sext.i32.i64($i535);
  $i536.dup := $i535.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 53} true;
  assume {:verifier.code 0} true;
  $p537 := $add.ref($p1,$mul.ref(8,8));
  $p537.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p537.dup == 0));
  $i538 := $load.i64($M.3,$p537);
  $i538.dup := $load.i1($M.3.dup,$p537);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 47} true;
  assume {:verifier.code 0} true;
  $i539 := $trunc.i64.i32($i538);
  $i539.dup := $i538.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 46} true;
  assume {:verifier.code 0} true;
  $i540 := $sext.i32.i64($i539);
  $i540.dup := $i539.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 44} true;
  assume {:verifier.code 0} true;
  $i541 := $mul.i64($i536,$i540);
  $i541.dup := $or.i1($i536.dup,$i540.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 36} true;
  assume {:verifier.code 0} true;
  $p542 := $add.ref($p1,$mul.ref(7,8));
  $p542.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p542.dup == 0));
  $i543 := $load.i64($M.3,$p542);
  $i543.dup := $load.i1($M.3.dup,$p542);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 30} true;
  assume {:verifier.code 0} true;
  $i544 := $trunc.i64.i32($i543);
  $i544.dup := $i543.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 22} true;
  assume {:verifier.code 0} true;
  $i545 := $sext.i32.i64($i544);
  $i545.dup := $i544.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 18} true;
  assume {:verifier.code 0} true;
  $i546 := $mul.i64(4,$i545);
  $i546.dup := $or.i1(0,$i545.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 53} true;
  assume {:verifier.code 0} true;
  $p547 := $add.ref($p1,$mul.ref(9,8));
  $p547.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p547.dup == 0));
  $i548 := $load.i64($M.3,$p547);
  $i548.dup := $load.i1($M.3.dup,$p547);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 47} true;
  assume {:verifier.code 0} true;
  $i549 := $trunc.i64.i32($i548);
  $i549.dup := $i548.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 46} true;
  assume {:verifier.code 0} true;
  $i550 := $sext.i32.i64($i549);
  $i550.dup := $i549.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 398, 44} true;
  assume {:verifier.code 0} true;
  $i551 := $mul.i64($i546,$i550);
  $i551.dup := $or.i1($i546.dup,$i550.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 60} true;
  assume {:verifier.code 0} true;
  $i552 := $add.i64($i541,$i551);
  $i552.dup := $or.i1($i541.dup,$i551.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 3} true;
  assume {:verifier.code 0} true;
  $p553 := $add.ref($p0,$mul.ref(16,8));
  $p553.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 397, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p553.dup == 0));
  $M.3 := $store.i64($M.3,$p553,$i552);
  $M.3.dup := $store.i1($M.3.dup,$p553,$i552.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 36} true;
  assume {:verifier.code 0} true;
  $p554 := $add.ref($p1,$mul.ref(8,8));
  $p554.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p554.dup == 0));
  $i555 := $load.i64($M.3,$p554);
  $i555.dup := $load.i1($M.3.dup,$p554);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 30} true;
  assume {:verifier.code 0} true;
  $i556 := $trunc.i64.i32($i555);
  $i556.dup := $i555.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 22} true;
  assume {:verifier.code 0} true;
  $i557 := $sext.i32.i64($i556);
  $i557.dup := $i556.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 18} true;
  assume {:verifier.code 0} true;
  $i558 := $mul.i64(2,$i557);
  $i558.dup := $or.i1(0,$i557.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 53} true;
  assume {:verifier.code 0} true;
  $p559 := $add.ref($p1,$mul.ref(9,8));
  $p559.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p559.dup == 0));
  $i560 := $load.i64($M.3,$p559);
  $i560.dup := $load.i1($M.3.dup,$p559);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 47} true;
  assume {:verifier.code 0} true;
  $i561 := $trunc.i64.i32($i560);
  $i561.dup := $i560.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 46} true;
  assume {:verifier.code 0} true;
  $i562 := $sext.i32.i64($i561);
  $i562.dup := $i561.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 44} true;
  assume {:verifier.code 0} true;
  $i563 := $mul.i64($i558,$i562);
  $i563.dup := $or.i1($i558.dup,$i562.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 3} true;
  assume {:verifier.code 0} true;
  $p564 := $add.ref($p0,$mul.ref(17,8));
  $p564.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 399, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p564.dup == 0));
  $M.3 := $store.i64($M.3,$p564,$i563);
  $M.3.dup := $store.i1($M.3.dup,$p564,$i563.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 36} true;
  assume {:verifier.code 0} true;
  $p565 := $add.ref($p1,$mul.ref(9,8));
  $p565.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 36} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p565.dup == 0));
  $i566 := $load.i64($M.3,$p565);
  $i566.dup := $load.i1($M.3.dup,$p565);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 30} true;
  assume {:verifier.code 0} true;
  $i567 := $trunc.i64.i32($i566);
  $i567.dup := $i566.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 22} true;
  assume {:verifier.code 0} true;
  $i568 := $sext.i32.i64($i567);
  $i568.dup := $i567.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 18} true;
  assume {:verifier.code 0} true;
  $i569 := $mul.i64(2,$i568);
  $i569.dup := $or.i1(0,$i568.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 53} true;
  assume {:verifier.code 0} true;
  $p570 := $add.ref($p1,$mul.ref(9,8));
  $p570.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 53} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p570.dup == 0));
  $i571 := $load.i64($M.3,$p570);
  $i571.dup := $load.i1($M.3.dup,$p570);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 47} true;
  assume {:verifier.code 0} true;
  $i572 := $trunc.i64.i32($i571);
  $i572.dup := $i571.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 46} true;
  assume {:verifier.code 0} true;
  $i573 := $sext.i32.i64($i572);
  $i573.dup := $i572.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 44} true;
  assume {:verifier.code 0} true;
  $i574 := $mul.i64($i569,$i573);
  $i574.dup := $or.i1($i569.dup,$i573.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 3} true;
  assume {:verifier.code 0} true;
  $p575 := $add.ref($p0,$mul.ref(18,8));
  $p575.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 400, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p575.dup == 0));
  $M.3 := $store.i64($M.3,$p575,$i574);
  $M.3.dup := $store.i1($M.3.dup,$p575,$i574.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 401, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0,19608));
procedure {:inline 45} llvm.memset.p0i8.i64($p0: ref, $p0.dup: i1, $i1: i8, $i1.dup: i1, $i2: i64, $i2.dup: i1, $i3: i1, $i3.dup: i1);
const swap_conditional: ref;
axiom (swap_conditional == $sub.ref(0,20640));
procedure {:inline 45} swap_conditional($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1)
modifies $M.3, $exn;
{
  var $i3: i64;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i32;
  var $i5.dup: i1;
  var $i6: i1;
  var $i6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $i10: i32;
  var $i10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $i13: i64;
  var $i13.dup: i1;
  var $i14: i32;
  var $i14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i64;
  var $i17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $i19: i64;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i32;
  var $i21.dup: i1;
  var $i22: i64;
  var $i22.dup: i1;
  var $i23: i64;
  var $i23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $i25: i64;
  var $i25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $i27: i64;
  var $i27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
  var $i29: i32;
  var $i29.dup: i1;
  var $i30: i64;
  var $i30.dup: i1;
  var $i31: i64;
  var $i31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $i33: i32;
  var $i33.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 712, 26} true;
  assume {:verifier.code 0} true;
  call {:cexpr "swap_conditional:arg:iswap"} boogie_si_record_i64($i2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 712, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i64(0,$i2);
  $i3.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 712, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i32($i3);
  $i4.dup := $i3.dup;
  call {:cexpr "swap"} boogie_si_record_i32($i4);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 714, 8} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  $i5.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i5.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 714, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $ult.i32($i5,10);
  $i6.dup := $or.i1($i5.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 714, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $shadow_ok := ($shadow_ok && ($i6.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 34} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i5);
  $i7.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0,$mul.ref($i7,8));
  $p8.dup := $or.i1($p0.dup,$or.i1($i7.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 34} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p8.dup == 0));
  $i9 := $load.i64($M.3,$p8);
  $i9.dup := $load.i1($M.3.dup,$p8);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i64.i32($i9);
  $i10.dup := $i9.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 48} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i32.i64($i5);
  $i11.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 48} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1,$mul.ref($i11,8));
  $p12.dup := $or.i1($p1.dup,$or.i1($i11.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 48} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12.dup == 0));
  $i13 := $load.i64($M.3,$p12);
  $i13.dup := $load.i1($M.3.dup,$p12);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i13);
  $i14.dup := $i13.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $xor.i32($i10,$i14);
  $i15.dup := $or.i1($i10.dup,$i14.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 715, 24} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i4,$i15);
  $i16.dup := $or.i1($i4.dup,$i15.dup);
  call {:cexpr "x"} boogie_si_record_i32($i16);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i32.i64($i5);
  $i17.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 18} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0,$mul.ref($i17,8));
  $p18.dup := $or.i1($p0.dup,$or.i1($i17.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p18.dup == 0));
  $i19 := $load.i64($M.3,$p18);
  $i19.dup := $load.i1($M.3.dup,$p18);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i64.i32($i19);
  $i20.dup := $i19.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $xor.i32($i20,$i16);
  $i21.dup := $or.i1($i20.dup,$i16.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 12} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  $i22.dup := $i21.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i32.i64($i5);
  $i23.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 5} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0,$mul.ref($i23,8));
  $p24.dup := $or.i1($p0.dup,$or.i1($i23.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 716, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p24.dup == 0));
  $M.3 := $store.i64($M.3,$p24,$i22);
  $M.3.dup := $store.i1($M.3.dup,$p24,$i22.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 18} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i32.i64($i5);
  $i25.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 18} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1,$mul.ref($i25,8));
  $p26.dup := $or.i1($p1.dup,$or.i1($i25.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 18} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26.dup == 0));
  $i27 := $load.i64($M.3,$p26);
  $i27.dup := $load.i1($M.3.dup,$p26);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i64.i32($i27);
  $i28.dup := $i27.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 24} true;
  assume {:verifier.code 0} true;
  $i29 := $xor.i32($i28,$i16);
  $i29.dup := $or.i1($i28.dup,$i16.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 12} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  $i30.dup := $i29.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i32.i64($i5);
  $i31.dup := $i5.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 5} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1,$mul.ref($i31,8));
  $p32.dup := $or.i1($p1.dup,$or.i1($i31.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 717, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p32.dup == 0));
  $M.3 := $store.i64($M.3,$p32,$i30);
  $M.3.dup := $store.i1($M.3.dup,$p32,$i30.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 718, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i6 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 719, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 714, 23} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i5,1);
  $i33.dup := $or.i1($i5.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i33);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 714, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i33;
  $i5.dup := $i33.dup;
  goto $bb1;
}
const fmonty: ref;
axiom (fmonty == $sub.ref(0,21672));
procedure {:inline 45} fmonty($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1, $p3: ref, $p3.dup: i1, $p4: ref, $p4.dup: i1, $p5: ref, $p5.dup: i1, $p6: ref, $p6.dup: i1, $p7: ref, $p7.dup: i1, $p8: ref, $p8.dup: i1)
modifies $M.3, $exn;
modifies $CurrAddr;
{
  var $p9: ref;
  var $p9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $p16: ref;
  var $p16.dup: i1;
  var $p17: ref;
  var $p17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $p19: ref;
  var $p19.dup: i1;
  var $p20: ref;
  var $p20.dup: i1;
  var $p21: ref;
  var $p21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $p23: ref;
  var $p23.dup: i1;
  var $p24: ref;
  var $p24.dup: i1;
  var $p25: ref;
  var $p25.dup: i1;
  var $p26: ref;
  var $p26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $p28: ref;
  var $p28.dup: i1;
  var $p29: ref;
  var $p29.dup: i1;
  var $p30: ref;
  var $p30.dup: i1;
  var $p31: ref;
  var $p31.dup: i1;
  var $p32: ref;
  var $p32.dup: i1;
  var $p33: ref;
  var $p33.dup: i1;
  var $p34: ref;
  var $p34.dup: i1;
  var $p35: ref;
  var $p35.dup: i1;
  var $p36: ref;
  var $p36.dup: i1;
  var $p37: ref;
  var $p37.dup: i1;
  var $p38: ref;
  var $p38.dup: i1;
  var $p39: ref;
  var $p39.dup: i1;
  var $p40: ref;
  var $p40.dup: i1;
  var $p41: ref;
  var $p41.dup: i1;
  var $p42: ref;
  var $p42.dup: i1;
  var $p43: ref;
  var $p43.dup: i1;
  var $p44: ref;
  var $p44.dup: i1;
  var $p45: ref;
  var $p45.dup: i1;
  var $p46: ref;
  var $p46.dup: i1;
  var $p47: ref;
  var $p47.dup: i1;
  var $p48: ref;
  var $p48.dup: i1;
  var $p49: ref;
  var $p49.dup: i1;
  var $p50: ref;
  var $p50.dup: i1;
  var $p51: ref;
  var $p51.dup: i1;
  var $p52: ref;
  var $p52.dup: i1;
  var $p53: ref;
  var $p53.dup: i1;
  var $p54: ref;
  var $p54.dup: i1;
  var $p55: ref;
  var $p55.dup: i1;
  var $p56: ref;
  var $p56.dup: i1;
  var $p57: ref;
  var $p57.dup: i1;
  var $p58: ref;
  var $p58.dup: i1;
  var $p59: ref;
  var $p59.dup: i1;
  var $p60: ref;
  var $p60.dup: i1;
  var $p61: ref;
  var $p61.dup: i1;
  var $p62: ref;
  var $p62.dup: i1;
  var $p63: ref;
  var $p63.dup: i1;
  var $p64: ref;
  var $p64.dup: i1;
  var $p65: ref;
  var $p65.dup: i1;
  var $p66: ref;
  var $p66.dup: i1;
  var $p67: ref;
  var $p67.dup: i1;
  var $p68: ref;
  var $p68.dup: i1;
  var $p69: ref;
  var $p69.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 633, 3} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p9.dup := 0;
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  $p10.dup := 0;
  assume {:verifier.code 0} true;
  call $p11 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p11.dup := 0;
  assume {:verifier.code 0} true;
  call $p12 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p12.dup := 0;
  assume {:verifier.code 0} true;
  call $p13 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p13.dup := 0;
  assume {:verifier.code 0} true;
  call $p14 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p14.dup := 0;
  assume {:verifier.code 0} true;
  call $p15 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p15.dup := 0;
  assume {:verifier.code 0} true;
  call $p16 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p16.dup := 0;
  assume {:verifier.code 0} true;
  call $p17 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  $p17.dup := 0;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 633, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p9,$mul.ref(0,80)),$mul.ref(0,8));
  $p18.dup := $or.i1($or.i1($p9.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 633, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  $p19.dup := $p18.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 633, 3} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p4);
  $p20.dup := $p4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 633, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p19.dup == 0));
  $shadow_ok := ($shadow_ok && ($p20.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p19, $p19.dup, $p20, $p20.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 634, 3} true;
  assume {:verifier.code 0} true;
  call fsum($p4, $p4.dup, $p5, $p5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 636, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p9,$mul.ref(0,80)),$mul.ref(0,8));
  $p21.dup := $or.i1($or.i1($p9.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 636, 3} true;
  assume {:verifier.code 0} true;
  call fdifference($p5, $p5.dup, $p21, $p21.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 639, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p22.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 639, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  $p23.dup := $p22.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 639, 3} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p6);
  $p24.dup := $p6.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 639, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23.dup == 0));
  $shadow_ok := ($shadow_ok && ($p24.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p23, $p23.dup, $p24, $p24.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 640, 3} true;
  assume {:verifier.code 0} true;
  call fsum($p6, $p6.dup, $p7, $p7.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 642, 23} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p25.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 642, 3} true;
  assume {:verifier.code 0} true;
  call fdifference($p7, $p7.dup, $p25, $p25.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 644, 12} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,8));
  $p26.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 644, 3} true;
  assume {:verifier.code 0} true;
  call fproduct($p26, $p26.dup, $p6, $p6.dup, $p5, $p5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 648, 12} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p27.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 648, 3} true;
  assume {:verifier.code 0} true;
  call fproduct($p27, $p27.dup, $p4, $p4.dup, $p7, $p7.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 650, 18} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,8));
  $p28.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 650, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p28, $p28.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 651, 24} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,8));
  $p29.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 651, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p29, $p29.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 653, 18} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p30.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 653, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p30, $p30.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 654, 24} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p31.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 654, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p31, $p31.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 656, 3} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p32.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 656, 3} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  $p33.dup := $p32.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 656, 3} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,8));
  $p34.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 656, 3} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  $p35.dup := $p34.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 656, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p33.dup == 0));
  $shadow_ok := ($shadow_ok && ($p35.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p33, $p33.dup, $p35, $p35.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 657, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,8));
  $p36.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 657, 17} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p37.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 657, 3} true;
  assume {:verifier.code 0} true;
  call fsum($p36, $p36.dup, $p37, $p37.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 659, 15} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p38.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 659, 24} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p10,$mul.ref(0,80)),$mul.ref(0,8));
  $p39.dup := $or.i1($or.i1($p10.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 659, 3} true;
  assume {:verifier.code 0} true;
  call fdifference($p38, $p38.dup, $p39, $p39.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 661, 11} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p17,$mul.ref(0,152)),$mul.ref(0,8));
  $p40.dup := $or.i1($or.i1($p17.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 661, 21} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p14,$mul.ref(0,152)),$mul.ref(0,8));
  $p41.dup := $or.i1($or.i1($p14.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 661, 3} true;
  assume {:verifier.code 0} true;
  call fsquare($p40, $p40.dup, $p41, $p41.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 663, 11} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p16,$mul.ref(0,152)),$mul.ref(0,8));
  $p42.dup := $or.i1($or.i1($p16.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 663, 21} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p43.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 663, 3} true;
  assume {:verifier.code 0} true;
  call fsquare($p42, $p42.dup, $p43, $p43.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 665, 12} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p44.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 665, 21} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p16,$mul.ref(0,152)),$mul.ref(0,8));
  $p45.dup := $or.i1($or.i1($p16.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 665, 3} true;
  assume {:verifier.code 0} true;
  call fproduct($p44, $p44.dup, $p45, $p45.dup, $p8, $p8.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 667, 18} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p46.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 667, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p46, $p46.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 668, 24} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p47.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 668, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p47, $p47.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p2);
  $p48.dup := $p2.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p17,$mul.ref(0,152)),$mul.ref(0,8));
  $p49.dup := $or.i1($or.i1($p17.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p49);
  $p50.dup := $p49.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p48.dup == 0));
  $shadow_ok := ($shadow_ok && ($p50.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p48, $p48.dup, $p50, $p50.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 671, 3} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p3);
  $p51.dup := $p3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 671, 3} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p15,$mul.ref(0,152)),$mul.ref(0,8));
  $p52.dup := $or.i1($or.i1($p15.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 671, 3} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  $p53.dup := $p52.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 671, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p51.dup == 0));
  $shadow_ok := ($shadow_ok && ($p53.dup == 0));
  call $M.3, $M.3.dup := $memcpy.i8($M.3, $M.3.dup, $M.3, $M.3.dup, $p51, $p51.dup, $p53, $p53.dup, 80, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 673, 11} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p12,$mul.ref(0,152)),$mul.ref(0,8));
  $p54.dup := $or.i1($or.i1($p12.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 673, 3} true;
  assume {:verifier.code 0} true;
  call fsquare($p54, $p54.dup, $p4, $p4.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 675, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p13,$mul.ref(0,152)),$mul.ref(0,8));
  $p55.dup := $or.i1($or.i1($p13.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 675, 3} true;
  assume {:verifier.code 0} true;
  call fsquare($p55, $p55.dup, $p5, $p5.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 677, 16} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p12,$mul.ref(0,152)),$mul.ref(0,8));
  $p56.dup := $or.i1($or.i1($p12.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 677, 20} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p13,$mul.ref(0,152)),$mul.ref(0,8));
  $p57.dup := $or.i1($or.i1($p13.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 677, 3} true;
  assume {:verifier.code 0} true;
  call fproduct($p0, $p0.dup, $p56, $p56.dup, $p57, $p57.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 679, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p0, $p0.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 680, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p0, $p0.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 682, 15} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p13,$mul.ref(0,152)),$mul.ref(0,8));
  $p58.dup := $or.i1($or.i1($p13.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 682, 19} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p12,$mul.ref(0,152)),$mul.ref(0,8));
  $p59.dup := $or.i1($or.i1($p12.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 682, 3} true;
  assume {:verifier.code 0} true;
  call fdifference($p58, $p58.dup, $p59, $p59.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 684, 10} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(0,8));
  $p60.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  $p61 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(10,8));
  $p61.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 684, 3} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  $p62.dup := $p61.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 684, 3} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p62.dup == 0));
  call $M.3, $M.3.dup := $memset.i8($M.3, $M.3.dup, $p62, $p62.dup, 0, 0, 72, 0, false, false);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 685, 19} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(0,8));
  $p63.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 685, 24} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p13,$mul.ref(0,152)),$mul.ref(0,8));
  $p64.dup := $or.i1($or.i1($p13.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 685, 3} true;
  assume {:verifier.code 0} true;
  call fscalar_product($p63, $p63.dup, $p64, $p64.dup, 121665, 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 689, 24} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(0,8));
  $p65.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 689, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p65, $p65.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 691, 8} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(0,8));
  $p66.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 691, 13} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p12,$mul.ref(0,152)),$mul.ref(0,8));
  $p67.dup := $or.i1($or.i1($p12.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 691, 3} true;
  assume {:verifier.code 0} true;
  call fsum($p66, $p66.dup, $p67, $p67.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 693, 16} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p13,$mul.ref(0,152)),$mul.ref(0,8));
  $p68.dup := $or.i1($or.i1($p13.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 693, 20} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p11,$mul.ref(0,152)),$mul.ref(0,8));
  $p69.dup := $or.i1($or.i1($p11.dup,$or.i1(0,0)),$or.i1(0,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 693, 3} true;
  assume {:verifier.code 0} true;
  call fproduct($p1, $p1.dup, $p68, $p68.dup, $p69, $p69.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 695, 3} true;
  assume {:verifier.code 0} true;
  call freduce_degree($p1, $p1.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 696, 3} true;
  assume {:verifier.code 0} true;
  call freduce_coefficients($p1, $p1.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 698, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
}
const fsum: ref;
axiom (fsum == $sub.ref(0,22704));
procedure {:inline 45} fsum($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $M.3, $exn;
{
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i1;
  var $i3.dup: i1;
  var $i4: i32;
  var $i4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $i8: i32;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $i12: i64;
  var $i12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
  var $i14: i64;
  var $i14.dup: i1;
  var $p15: ref;
  var $p15.dup: i1;
  var $i16: i32;
  var $i16.dup: i1;
  var $i17: i64;
  var $i17.dup: i1;
  var $p18: ref;
  var $p18.dup: i1;
  var $i19: i64;
  var $i19.dup: i1;
  var $i20: i32;
  var $i20.dup: i1;
  var $i21: i64;
  var $i21.dup: i1;
  var $p22: ref;
  var $p22.dup: i1;
  var $i23: i64;
  var $i23.dup: i1;
  var $i24: i64;
  var $i24.dup: i1;
  var $i25: i32;
  var $i25.dup: i1;
  var $i26: i64;
  var $i26.dup: i1;
  var $p27: ref;
  var $p27.dup: i1;
  var $i28: i32;
  var $i28.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 70, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 70, 8} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  $i2.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 70, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32($i2,10);
  $i3.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 70, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  $shadow_ok := ($shadow_ok && ($i3.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32(0,$i2);
  $i4.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  $i5.dup := $i4.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0,$mul.ref($i5,8));
  $p6.dup := $or.i1($p0.dup,$or.i1($i5.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 19} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6.dup == 0));
  $i7 := $load.i64($M.3,$p6);
  $i7.dup := $load.i1($M.3.dup,$p6);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32(0,$i2);
  $i8.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i32.i64($i8);
  $i9.dup := $i8.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 33} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1,$mul.ref($i9,8));
  $p10.dup := $or.i1($p1.dup,$or.i1($i9.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 33} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $i11 := $load.i64($M.3,$p10);
  $i11.dup := $load.i1($M.3.dup,$p10);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i7,$i11);
  $i12.dup := $or.i1($i7.dup,$i11.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32(0,$i2);
  $i13.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i32.i64($i13);
  $i14.dup := $i13.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 5} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0,$mul.ref($i14,8));
  $p15.dup := $or.i1($p0.dup,$or.i1($i14.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 71, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15.dup == 0));
  $M.3 := $store.i64($M.3,$p15,$i12);
  $M.3.dup := $store.i1($M.3.dup,$p15,$i12.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 27} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32(1,$i2);
  $i16.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i32.i64($i16);
  $i17.dup := $i16.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0,$mul.ref($i17,8));
  $p18.dup := $or.i1($p0.dup,$or.i1($i17.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 19} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p18.dup == 0));
  $i19 := $load.i64($M.3,$p18);
  $i19.dup := $load.i1($M.3.dup,$p18);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32(1,$i2);
  $i20.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 33} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i32.i64($i20);
  $i21.dup := $i20.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 33} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1,$mul.ref($i21,8));
  $p22.dup := $or.i1($p1.dup,$or.i1($i21.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 33} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22.dup == 0));
  $i23 := $load.i64($M.3,$p22);
  $i23.dup := $load.i1($M.3.dup,$p22);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i19,$i23);
  $i24.dup := $or.i1($i19.dup,$i23.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32(1,$i2);
  $i25.dup := $or.i1(0,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i32.i64($i25);
  $i26.dup := $i25.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 5} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0,$mul.ref($i26,8));
  $p27.dup := $or.i1($p0.dup,$or.i1($i26.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 72, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27.dup == 0));
  $M.3 := $store.i64($M.3,$p27,$i24);
  $M.3.dup := $store.i1($M.3.dup,$p27,$i24.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 73, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i3 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 74, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 70, 25} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i2,2);
  $i28.dup := $or.i1($i2.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i28);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 70, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i28;
  $i2.dup := $i28.dup;
  goto $bb1;
}
const fdifference: ref;
axiom (fdifference == $sub.ref(0,23736));
procedure {:inline 45} fdifference($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1)
modifies $M.3, $exn;
{
  var $i2: i32;
  var $i2.dup: i1;
  var $i3: i1;
  var $i3.dup: i1;
  var $i4: i64;
  var $i4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i64;
  var $i6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $p8: ref;
  var $p8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $i10: i64;
  var $i10.dup: i1;
  var $i11: i64;
  var $i11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $i13: i32;
  var $i13.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 80, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 80, 8} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  $i2.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i2.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 80, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32($i2,10);
  $i3.dup := $or.i1($i2.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 80, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  $shadow_ok := ($shadow_ok && ($i3.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  $i4.dup := $i2.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1,$mul.ref($i4,8));
  $p5.dup := $or.i1($p1.dup,$or.i1($i4.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p5.dup == 0));
  $i6 := $load.i64($M.3,$p5);
  $i6.dup := $load.i1($M.3.dup,$p5);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 25} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i2);
  $i7.dup := $i2.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0,$mul.ref($i7,8));
  $p8.dup := $or.i1($p0.dup,$or.i1($i7.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 25} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p8.dup == 0));
  $i9 := $load.i64($M.3,$p8);
  $i9.dup := $load.i1($M.3.dup,$p8);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 23} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64($i6,$i9);
  $i10.dup := $or.i1($i6.dup,$i9.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i32.i64($i2);
  $i11.dup := $i2.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0,$mul.ref($i11,8));
  $p12.dup := $or.i1($p0.dup,$or.i1($i11.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 81, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12.dup == 0));
  $M.3 := $store.i64($M.3,$p12,$i10);
  $M.3.dup := $store.i1($M.3.dup,$p12,$i10.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 82, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i3 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 83, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 80, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i2,1);
  $i13.dup := $or.i1($i2.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 80, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i13;
  $i2.dup := $i13.dup;
  goto $bb1;
}
const fscalar_product: ref;
axiom (fscalar_product == $sub.ref(0,24768));
procedure {:inline 45} fscalar_product($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $i2: i64, $i2.dup: i1)
modifies $M.3, $exn;
{
  var $i3: i32;
  var $i3.dup: i1;
  var $i4: i1;
  var $i4.dup: i1;
  var $i5: i64;
  var $i5.dup: i1;
  var $p6: ref;
  var $p6.dup: i1;
  var $i7: i64;
  var $i7.dup: i1;
  var $i8: i64;
  var $i8.dup: i1;
  var $i9: i64;
  var $i9.dup: i1;
  var $p10: ref;
  var $p10.dup: i1;
  var $i11: i32;
  var $i11.dup: i1;
$bb0:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 88, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "fscalar_product:arg:scalar"} boogie_si_record_i64($i2);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 88, 8} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  $i3.dup := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i3.dup == 0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 88, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $ult.i32($i3,10);
  $i4.dup := $or.i1($i3.dup,0);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 88, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  $shadow_ok := ($shadow_ok && ($i4.dup == 0));
  goto $bb2, $bb3;
$bb2:
  assume ($i4 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i3);
  $i5.dup := $i3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 17} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1,$mul.ref($i5,8));
  $p6.dup := $or.i1($p1.dup,$or.i1($i5.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6.dup == 0));
  $i7 := $load.i64($M.3,$p6);
  $i7.dup := $load.i1($M.3.dup,$p6);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $mul.i64($i7,$i2);
  $i8.dup := $or.i1($i7.dup,$i2.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i32.i64($i3);
  $i9.dup := $i3.dup;
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0,$mul.ref($i9,8));
  $p10.dup := $or.i1($p0.dup,$or.i1($i9.dup,0));
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 89, 15} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10.dup == 0));
  $M.3 := $store.i64($M.3,$p10,$i8);
  $M.3.dup := $store.i1($M.3.dup,$p10,$i8.dup);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 90, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i4 == 1);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 91, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.dup := false;
  return;
$bb4:
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 88, 23} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i3,1);
  $i11.dup := $or.i1($i3.dup,0);
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "../curve25519-donna/curve25519-donna.c", 88, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $i11;
  $i3.dup := $i11.dup;
  goto $bb1;
}
const curve25519_donna_wrapper: ref;
axiom (curve25519_donna_wrapper == $sub.ref(0,25800));
procedure {:entrypoint} curve25519_donna_wrapper($p0: ref, $p0.dup: i1, $p1: ref, $p1.dup: i1, $p2: ref, $p2.dup: i1) returns ($r: i32, $r.dup: i1)
requires {:public_in $p0} true;
requires {:public_in $p1} true;
requires {:public_in $p2} true;
requires {:public_in $load.i8, $M.2, $p2, 1, 32} true;
modifies $exn;
modifies $M.1;
modifies $CurrAddr;
modifies $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36;
requires ($p0.dup == 0);
requires ($p1.dup == 0);
requires ($p2.dup == 0);
requires ($load.i8($M.2.dup,($p2 + 0)) == 0);
requires ($load.i8($M.2.dup,($p2 + 1)) == 0);
requires ($load.i8($M.2.dup,($p2 + 2)) == 0);
requires ($load.i8($M.2.dup,($p2 + 3)) == 0);
requires ($load.i8($M.2.dup,($p2 + 4)) == 0);
requires ($load.i8($M.2.dup,($p2 + 5)) == 0);
requires ($load.i8($M.2.dup,($p2 + 6)) == 0);
requires ($load.i8($M.2.dup,($p2 + 7)) == 0);
requires ($load.i8($M.2.dup,($p2 + 8)) == 0);
requires ($load.i8($M.2.dup,($p2 + 9)) == 0);
requires ($load.i8($M.2.dup,($p2 + 10)) == 0);
requires ($load.i8($M.2.dup,($p2 + 11)) == 0);
requires ($load.i8($M.2.dup,($p2 + 12)) == 0);
requires ($load.i8($M.2.dup,($p2 + 13)) == 0);
requires ($load.i8($M.2.dup,($p2 + 14)) == 0);
requires ($load.i8($M.2.dup,($p2 + 15)) == 0);
requires ($load.i8($M.2.dup,($p2 + 16)) == 0);
requires ($load.i8($M.2.dup,($p2 + 17)) == 0);
requires ($load.i8($M.2.dup,($p2 + 18)) == 0);
requires ($load.i8($M.2.dup,($p2 + 19)) == 0);
requires ($load.i8($M.2.dup,($p2 + 20)) == 0);
requires ($load.i8($M.2.dup,($p2 + 21)) == 0);
requires ($load.i8($M.2.dup,($p2 + 22)) == 0);
requires ($load.i8($M.2.dup,($p2 + 23)) == 0);
requires ($load.i8($M.2.dup,($p2 + 24)) == 0);
requires ($load.i8($M.2.dup,($p2 + 25)) == 0);
requires ($load.i8($M.2.dup,($p2 + 26)) == 0);
requires ($load.i8($M.2.dup,($p2 + 27)) == 0);
requires ($load.i8($M.2.dup,($p2 + 28)) == 0);
requires ($load.i8($M.2.dup,($p2 + 29)) == 0);
requires ($load.i8($M.2.dup,($p2 + 30)) == 0);
requires ($load.i8($M.2.dup,($p2 + 31)) == 0);
{
  var $p3: ref;
  var $p3.dup: i1;
  var $i4: i1;
  var $i4.dup: i1;
  var $p5: ref;
  var $p5.dup: i1;
  var $i6: i1;
  var $i6.dup: i1;
  var $p7: ref;
  var $p7.dup: i1;
  var $i8: i1;
  var $i8.dup: i1;
  var $p9: ref;
  var $p9.dup: i1;
  var $i10: i1;
  var $i10.dup: i1;
  var $p11: ref;
  var $p11.dup: i1;
  var $p12: ref;
  var $p12.dup: i1;
  var $p13: ref;
  var $p13.dup: i1;
  var $p14: ref;
  var $p14.dup: i1;
  var $i15: i32;
  var $i15.dup: i1;
$bb0:
  $shadow_ok := true;
  call $initialize();
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:curve25519_donna_wrapper"} boogie_si_record_ref(curve25519_donna_wrapper);
  call {:cexpr "smack:arg:curve25519_donna_wrapper:$p0"} boogie_si_record_ref($p0);
  call {:cexpr "smack:arg:curve25519_donna_wrapper:$p1"} boogie_si_record_ref($p1);
  call {:cexpr "smack:arg:curve25519_donna_wrapper:$p2"} boogie_si_record_ref($p2);
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0,$mul.ref(32,1));
  $p3.dup := $or.i1($p0.dup,$or.i1(0,0));
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $ult.ref($p3,$p1);
  $i4.dup := $or.i1($p3.dup,$p1.dup);
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  $shadow_ok := ($shadow_ok && ($i4.dup == 0));
  goto $bb2, $bb4;
$bb2:
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  assume ($i4 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume !($i4 == 1);
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1,$mul.ref(32,1));
  $p5.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $ult.ref($p5,$p0);
  $i6.dup := $or.i1($p5.dup,$p0.dup);
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $shadow_ok := ($shadow_ok && ($i6.dup == 0));
  goto $bb5, $bb6;
$bb5:
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb3;
$bb6:
  assume !($i6 == 1);
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume(0);
  assume {:sourceloc "curve25519_donna.c", 17, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2,$mul.ref(32,1));
  $p7.dup := $or.i1($p2.dup,$or.i1(0,0));
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $ult.ref($p7,$p1);
  $i8.dup := $or.i1($p7.dup,$p1.dup);
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  $shadow_ok := ($shadow_ok && ($i8.dup == 0));
  goto $bb9, $bb11;
$bb9:
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb10;
$bb10:
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb11:
  assume !($i8 == 1);
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1,$mul.ref(32,1));
  $p9.dup := $or.i1($p1.dup,$or.i1(0,0));
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $ult.ref($p9,$p2);
  $i10.dup := $or.i1($p9.dup,$p2.dup);
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  $shadow_ok := ($shadow_ok && ($i10.dup == 0));
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb10;
$bb13:
  assume !($i10 == 1);
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume(0);
  assume {:sourceloc "curve25519_donna.c", 18, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb14:
  assume {:sourceloc "curve25519_donna.c", 21, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p0} $p11 := __SMACK_value.ref($p0);
  $p11.dup := 0;
  assume $isExternal($p11);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p11);
  assume {:sourceloc "curve25519_donna.c", 21, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p11, $p11.dup);
  assume {:sourceloc "curve25519_donna.c", 22, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p1} $p12 := __SMACK_value.ref($p1);
  $p12.dup := 0;
  assume $isExternal($p12);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p12);
  assume {:sourceloc "curve25519_donna.c", 22, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p12, $p12.dup);
  assume {:sourceloc "curve25519_donna.c", 23, 13} true;
  assume {:verifier.code 0} true;
  call {:name $p2} $p13 := __SMACK_value.ref($p2);
  $p13.dup := 0;
  assume $isExternal($p13);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p13);
  assume {:sourceloc "curve25519_donna.c", 23, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p13, $p13.dup);
  assume {:sourceloc "curve25519_donna.c", 26, 13} true;
  assume {:verifier.code 1} true;
  call {:name $p2} {:array "$load.i8", $M.2, $p2, 1, 32} $p14 := __SMACK_values($p2, 32);
  $p14.dup := 0;
  assume $isExternal($p14);
  call {:cexpr "smack:ext:__SMACK_values"} boogie_si_record_ref($p14);
  assume {:sourceloc "curve25519_donna.c", 26, 3} true;
  assume {:verifier.code 0} true;
  call public_in($p14, $p14.dup);
  assume {:sourceloc "curve25519_donna.c", 30, 10} true;
  assume {:verifier.code 0} true;
  call $i15, $i15.dup := curve25519_donna($p0, $p0.dup, $p1, $p1.dup, $p2, $p2.dup);
  assume {:sourceloc "curve25519_donna.c", 30, 3} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $r.dup := $i15.dup;
  $exn := false;
  $exn.dup := false;
  assert $shadow_ok;
  return;
}
const __SMACK_value: ref;
axiom (__SMACK_value == $sub.ref(0,26832));
procedure {:inline 45} __SMACK_value.ref(p.0: ref) returns ($r: ref);
const public_in: ref;
axiom (public_in == $sub.ref(0,27864));
procedure {:inline 45} public_in($p0: ref, $p0.dup: i1);
const __SMACK_values: ref;
axiom (__SMACK_values == $sub.ref(0,28896));
procedure {:inline 45} __SMACK_values($p0: ref, $i1: i32) returns ($r: ref);
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0,29928));
procedure {:inline 45} __SMACK_code.ref($p0: ref);
procedure {:inline 45} __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0,30960));
procedure {:inline 45} __VERIFIER_assume($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 45, 3} true;
  assume {:verifier.code 1} true;
  assume ($i0 != $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 46, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0,31992));
procedure {:inline 45} __SMACK_dummy($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_and32: ref;
axiom (__SMACK_and32 == $sub.ref(0,33024));
procedure {:inline 45} __SMACK_and32($i0: i32, $i1: i32) returns ($r: i32)
modifies $exn;
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i4: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i20: i1;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i19: i32;
  var $i24: i64;
  var $i25: i64;
  var $i26: i32;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i35: i1;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i34: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i50: i1;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i49: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i32;
  var $i57: i32;
  var $i58: i64;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i65: i1;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i64: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i80: i1;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i79: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i32;
  var $i87: i32;
  var $i88: i64;
  var $i89: i64;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i95: i1;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i94: i32;
  var $i99: i64;
  var $i100: i64;
  var $i101: i32;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $i105: i32;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i110: i1;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i109: i32;
  var $i114: i64;
  var $i115: i64;
  var $i116: i32;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $i120: i32;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i125: i1;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i124: i32;
  var $i129: i64;
  var $i130: i64;
  var $i131: i32;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i140: i1;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i139: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i32;
  var $i147: i32;
  var $i148: i64;
  var $i149: i64;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i155: i1;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i154: i32;
  var $i159: i64;
  var $i160: i64;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i170: i1;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i169: i32;
  var $i174: i64;
  var $i175: i64;
  var $i176: i32;
  var $i177: i32;
  var $i178: i64;
  var $i179: i64;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i185: i1;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i184: i32;
  var $i189: i64;
  var $i190: i64;
  var $i191: i32;
  var $i192: i32;
  var $i193: i64;
  var $i194: i64;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i200: i1;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i199: i32;
  var $i204: i64;
  var $i205: i64;
  var $i206: i32;
  var $i207: i32;
  var $i208: i64;
  var $i209: i64;
  var $i210: i32;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i215: i1;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i214: i32;
  var $i219: i64;
  var $i220: i64;
  var $i221: i32;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $i225: i32;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i230: i1;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i229: i32;
  var $i234: i64;
  var $i235: i64;
  var $i236: i32;
  var $i237: i32;
  var $i238: i64;
  var $i239: i64;
  var $i240: i32;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i245: i1;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i244: i32;
  var $i249: i64;
  var $i250: i64;
  var $i251: i32;
  var $i252: i32;
  var $i253: i64;
  var $i254: i64;
  var $i255: i32;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i260: i1;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i259: i32;
  var $i264: i64;
  var $i265: i64;
  var $i266: i32;
  var $i267: i32;
  var $i268: i64;
  var $i269: i64;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i275: i1;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i274: i32;
  var $i279: i64;
  var $i280: i64;
  var $i281: i32;
  var $i282: i32;
  var $i283: i64;
  var $i284: i64;
  var $i285: i32;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i290: i1;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i289: i32;
  var $i294: i64;
  var $i295: i64;
  var $i296: i32;
  var $i297: i32;
  var $i298: i64;
  var $i299: i64;
  var $i300: i32;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i305: i1;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i304: i32;
  var $i309: i64;
  var $i310: i64;
  var $i311: i32;
  var $i312: i32;
  var $i313: i64;
  var $i314: i64;
  var $i315: i32;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i320: i1;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i319: i32;
  var $i324: i64;
  var $i325: i64;
  var $i326: i32;
  var $i327: i32;
  var $i328: i64;
  var $i329: i64;
  var $i330: i32;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i335: i1;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i334: i32;
  var $i339: i64;
  var $i340: i64;
  var $i341: i32;
  var $i342: i32;
  var $i343: i64;
  var $i344: i64;
  var $i345: i32;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i350: i1;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i349: i32;
  var $i354: i64;
  var $i355: i64;
  var $i356: i32;
  var $i357: i32;
  var $i358: i64;
  var $i359: i64;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i365: i1;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i364: i32;
  var $i369: i64;
  var $i370: i64;
  var $i371: i32;
  var $i372: i32;
  var $i373: i64;
  var $i374: i64;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i380: i1;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i379: i32;
  var $i384: i64;
  var $i385: i64;
  var $i386: i32;
  var $i387: i32;
  var $i388: i64;
  var $i389: i64;
  var $i390: i32;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i395: i1;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i394: i32;
  var $i399: i64;
  var $i400: i64;
  var $i401: i32;
  var $i402: i32;
  var $i403: i64;
  var $i404: i64;
  var $i405: i32;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i410: i1;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i409: i32;
  var $i414: i64;
  var $i415: i64;
  var $i416: i32;
  var $i417: i32;
  var $i418: i64;
  var $i419: i64;
  var $i420: i32;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i425: i1;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i424: i32;
  var $i429: i64;
  var $i430: i64;
  var $i431: i32;
  var $i432: i32;
  var $i433: i64;
  var $i434: i64;
  var $i435: i32;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i440: i1;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i439: i32;
  var $i444: i64;
  var $i445: i64;
  var $i446: i32;
  var $i447: i32;
  var $i448: i64;
  var $i449: i64;
  var $i450: i32;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i455: i1;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i454: i32;
  var $i459: i64;
  var $i460: i64;
  var $i461: i32;
  var $i462: i32;
  var $i463: i64;
  var $i464: i64;
  var $i465: i32;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i470: i1;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i469: i32;
  var $i474: i64;
  var $i475: i64;
  var $i476: i32;
  var $i477: i32;
  var $i478: i64;
  var $i479: i64;
  var $i480: i32;
  var $i481: i32;
  var $i482: i32;
  var $i483: i1;
  var $i485: i1;
  var $i486: i1;
  var $i488: i32;
  var $i487: i32;
  var $i484: i32;
  var $i489: i64;
  var $i490: i64;
  var $i491: i32;
  var $i492: i32;
  var $i493: i64;
  var $i494: i64;
  var $i495: i32;
  var $i496: i32;
  var $i497: i32;
  var $i498: i1;
  var $i500: i1;
  var $i501: i1;
  var $i503: i32;
  var $i502: i32;
  var $i499: i32;
  var $i504: i64;
  var $i505: i64;
  var $i506: i32;
  var $i507: i32;
  var $i508: i64;
  var $i509: i64;
  var $i510: i32;
  var $i511: i32;
  var $i512: i32;
  var $i513: i1;
  var $i515: i1;
  var $i516: i1;
  var $i518: i32;
  var $i517: i32;
  var $i514: i32;
  var $i519: i64;
  var $i520: i64;
  var $i521: i32;
  var $i522: i32;
  var $i523: i64;
  var $i524: i64;
  var $i525: i32;
  var $i526: i32;
  var $i527: i32;
  var $i528: i1;
  var $i530: i1;
  var $i531: i1;
  var $i533: i32;
  var $i532: i32;
  var $i529: i32;
  var $i534: i64;
  var $i535: i64;
  var $i536: i32;
  var $i537: i32;
  var $i538: i64;
  var $i539: i64;
  var $i540: i32;
  var $i541: i32;
  var $i542: i32;
  var $i543: i1;
  var $i545: i1;
  var $i546: i1;
  var $i548: i32;
  var $i547: i32;
  var $i544: i32;
  var $i549: i64;
  var $i550: i64;
  var $i551: i32;
  var $i552: i32;
  var $i553: i64;
  var $i554: i64;
  var $i555: i32;
  var $i556: i32;
  var $i557: i32;
  var $i558: i1;
  var $i560: i1;
  var $i561: i1;
  var $i563: i32;
  var $i562: i32;
  var $i559: i32;
  var $i564: i64;
  var $i565: i64;
  var $i566: i32;
  var $i567: i32;
  var $i568: i64;
  var $i569: i64;
  var $i570: i32;
  var $i571: i32;
  var $i572: i32;
  var $i573: i1;
  var $i575: i1;
  var $i576: i1;
  var $i578: i32;
  var $i577: i32;
  var $i574: i32;
  var $i579: i64;
  var $i580: i64;
  var $i581: i32;
  var $i582: i32;
  var $i583: i64;
  var $i584: i64;
  var $i585: i32;
  var $i586: i32;
  var $i587: i32;
  var $i588: i1;
  var $i590: i1;
  var $i591: i1;
  var $i593: i32;
  var $i592: i32;
  var $i589: i32;
  var $i594: i64;
  var $i595: i64;
  var $i596: i32;
  var $i597: i32;
  var $i598: i64;
  var $i599: i64;
  var $i600: i32;
  var $i601: i32;
  var $i602: i32;
  var $i603: i1;
  var $i605: i1;
  var $i606: i1;
  var $i608: i32;
  var $i607: i32;
  var $i604: i32;
  var $i609: i64;
  var $i610: i64;
  var $i611: i32;
  var $i612: i32;
  var $i613: i64;
  var $i614: i64;
  var $i615: i32;
  var $i616: i32;
  var $i617: i32;
  var $i618: i1;
  var $i620: i1;
  var $i621: i1;
  var $i623: i32;
  var $i622: i32;
  var $i619: i32;
  var $i624: i64;
  var $i625: i64;
  var $i626: i32;
  var $i627: i32;
  var $i628: i64;
  var $i629: i64;
  var $i630: i32;
  var $i631: i32;
  var $i632: i32;
  var $i633: i1;
  var $i635: i1;
  var $i636: i1;
  var $i638: i32;
  var $i637: i32;
  var $i634: i32;
  var $i639: i64;
  var $i640: i64;
  var $i641: i32;
  var $i642: i32;
  var $i643: i64;
  var $i644: i64;
  var $i645: i32;
  var $i646: i32;
  var $i647: i32;
  var $i648: i1;
  var $i650: i1;
  var $i651: i1;
  var $i653: i32;
  var $i652: i32;
  var $i649: i32;
  var $i654: i64;
  var $i655: i64;
  var $i656: i32;
  var $i657: i32;
  var $i658: i64;
  var $i659: i64;
  var $i660: i32;
  var $i661: i32;
  var $i662: i32;
  var $i663: i1;
  var $i665: i1;
  var $i666: i1;
  var $i668: i32;
  var $i667: i32;
  var $i664: i32;
  var $i669: i64;
  var $i670: i64;
  var $i671: i32;
  var $i672: i32;
  var $i673: i64;
  var $i674: i64;
  var $i675: i32;
  var $i676: i32;
  var $i677: i32;
  var $i678: i1;
  var $i680: i1;
  var $i681: i1;
  var $i683: i32;
  var $i682: i32;
  var $i679: i32;
  var $i684: i64;
  var $i685: i64;
  var $i686: i32;
  var $i687: i32;
  var $i688: i64;
  var $i689: i64;
  var $i690: i32;
  var $i691: i32;
  var $i692: i32;
  var $i693: i1;
  var $i695: i1;
  var $i696: i1;
  var $i698: i32;
  var $i697: i32;
  var $i694: i32;
  var $i699: i64;
  var $i700: i64;
  var $i701: i32;
  var $i702: i32;
  var $i703: i64;
  var $i704: i64;
  var $i705: i32;
  var $i706: i32;
  var $i707: i32;
  var $i708: i1;
  var $i710: i1;
  var $i711: i1;
  var $i713: i32;
  var $i712: i32;
  var $i709: i32;
  var $i714: i64;
  var $i715: i64;
  var $i716: i32;
  var $i717: i32;
  var $i718: i64;
  var $i719: i64;
  var $i720: i32;
  var $i721: i32;
  var $i722: i32;
  var $i723: i1;
  var $i725: i1;
  var $i726: i1;
  var $i728: i32;
  var $i727: i32;
  var $i724: i32;
  var $i729: i64;
  var $i730: i64;
  var $i731: i32;
  var $i732: i32;
  var $i733: i64;
  var $i734: i64;
  var $i735: i32;
  var $i736: i32;
  var $i737: i32;
  var $i738: i1;
  var $i740: i1;
  var $i741: i1;
  var $i743: i32;
  var $i742: i32;
  var $i739: i32;
  var $i744: i64;
  var $i745: i64;
  var $i746: i32;
  var $i747: i32;
  var $i748: i64;
  var $i749: i64;
  var $i750: i32;
  var $i751: i32;
  var $i752: i32;
  var $i753: i1;
  var $i755: i1;
  var $i756: i1;
  var $i758: i32;
  var $i757: i32;
  var $i754: i32;
  var $i759: i64;
  var $i760: i64;
  var $i761: i32;
  var $i762: i32;
  var $i763: i64;
  var $i764: i64;
  var $i765: i32;
  var $i766: i32;
  var $i767: i32;
  var $i768: i1;
  var $i770: i1;
  var $i771: i1;
  var $i773: i32;
  var $i772: i32;
  var $i769: i32;
  var $i774: i64;
  var $i775: i64;
  var $i776: i32;
  var $i777: i32;
  var $i778: i64;
  var $i779: i64;
  var $i780: i32;
  var $i781: i32;
  var $i782: i32;
  var $i783: i1;
  var $i785: i1;
  var $i786: i1;
  var $i788: i32;
  var $i787: i32;
  var $i784: i32;
  var $i789: i64;
  var $i790: i64;
  var $i791: i32;
  var $i792: i32;
  var $i793: i64;
  var $i794: i64;
  var $i795: i32;
  var $i796: i32;
  var $i797: i32;
  var $i798: i1;
  var $i800: i1;
  var $i801: i1;
  var $i803: i32;
  var $i802: i32;
  var $i799: i32;
  var $i804: i64;
  var $i805: i64;
  var $i806: i32;
  var $i807: i32;
  var $i808: i64;
  var $i809: i64;
  var $i810: i32;
  var $i811: i32;
  var $i812: i32;
  var $i813: i1;
  var $i815: i1;
  var $i816: i1;
  var $i818: i32;
  var $i817: i32;
  var $i814: i32;
  var $i819: i64;
  var $i820: i64;
  var $i821: i32;
  var $i822: i32;
  var $i823: i64;
  var $i824: i64;
  var $i825: i32;
  var $i826: i32;
  var $i827: i32;
  var $i828: i1;
  var $i830: i1;
  var $i831: i1;
  var $i833: i32;
  var $i832: i32;
  var $i829: i32;
  var $i834: i64;
  var $i835: i64;
  var $i836: i32;
  var $i837: i32;
  var $i838: i64;
  var $i839: i64;
  var $i840: i32;
  var $i841: i32;
  var $i842: i32;
  var $i843: i1;
  var $i845: i1;
  var $i846: i1;
  var $i848: i32;
  var $i847: i32;
  var $i844: i32;
  var $i849: i64;
  var $i850: i64;
  var $i851: i32;
  var $i852: i32;
  var $i853: i64;
  var $i854: i64;
  var $i855: i32;
  var $i856: i32;
  var $i857: i32;
  var $i858: i1;
  var $i860: i1;
  var $i861: i1;
  var $i863: i32;
  var $i862: i32;
  var $i859: i32;
  var $i864: i64;
  var $i865: i64;
  var $i866: i32;
  var $i867: i32;
  var $i868: i64;
  var $i869: i64;
  var $i870: i32;
  var $i871: i32;
  var $i872: i32;
  var $i873: i1;
  var $i875: i1;
  var $i876: i1;
  var $i878: i32;
  var $i877: i32;
  var $i874: i32;
  var $i879: i64;
  var $i880: i64;
  var $i881: i32;
  var $i882: i32;
  var $i883: i64;
  var $i884: i64;
  var $i885: i32;
  var $i886: i32;
  var $i887: i32;
  var $i888: i1;
  var $i890: i1;
  var $i891: i1;
  var $i893: i32;
  var $i892: i32;
  var $i889: i32;
  var $i894: i64;
  var $i895: i64;
  var $i896: i32;
  var $i897: i32;
  var $i898: i64;
  var $i899: i64;
  var $i900: i32;
  var $i901: i32;
  var $i902: i32;
  var $i903: i1;
  var $i905: i1;
  var $i906: i1;
  var $i908: i32;
  var $i907: i32;
  var $i904: i32;
  var $i909: i64;
  var $i910: i64;
  var $i911: i32;
  var $i912: i32;
  var $i913: i64;
  var $i914: i64;
  var $i915: i32;
  var $i916: i32;
  var $i917: i32;
  var $i918: i1;
  var $i920: i1;
  var $i921: i1;
  var $i923: i32;
  var $i922: i32;
  var $i919: i32;
  var $i924: i64;
  var $i925: i64;
  var $i926: i32;
  var $i927: i32;
  var $i928: i64;
  var $i929: i64;
  var $i930: i32;
  var $i931: i32;
  var $i932: i32;
  var $i933: i1;
  var $i935: i1;
  var $i936: i1;
  var $i938: i32;
  var $i937: i32;
  var $i934: i32;
  var $i939: i64;
  var $i940: i64;
  var $i941: i32;
  var $i942: i32;
  var $i943: i64;
  var $i944: i64;
  var $i945: i32;
  var $i946: i32;
  var $i947: i32;
  var $i948: i1;
  var $i950: i1;
  var $i951: i1;
  var $i953: i32;
  var $i952: i32;
  var $i949: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_and32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0,0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i1,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  assume !($i3 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $srem.i64($i9,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  call {:cexpr "a"} boogie_si_record_i32($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 67, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i11,$i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $srem.i64($i13,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  call {:cexpr "b"} boogie_si_record_i32($i15);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 69, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i15,$i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 71, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i4,$i4);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $i17;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb9;
$bb6:
  assume !($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i1,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume !($i6 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 65, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  goto $bb3;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i16,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  assume !($i18 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i64($i24,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i25);
  call {:cexpr "a"} boogie_si_record_i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 78, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26,$i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $srem.i64($i28,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  call {:cexpr "b"} boogie_si_record_i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 80, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i30,$i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 82, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i19,$i19);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i32;
  assume {:branchcond $i33} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 74, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 75, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb18;
$bb15:
  assume !($i20 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $sgt.i32($i16,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume !($i21 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 76, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i22;
  goto $bb12;
$bb19:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i31,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  assume !($i33 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $srem.i64($i39,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i64.i32($i40);
  call {:cexpr "a"} boogie_si_record_i32($i41);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 89, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i41,$i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $srem.i64($i43,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  call {:cexpr "b"} boogie_si_record_i32($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 91, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i45,$i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 93, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i34,$i34);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $i47;
  assume {:branchcond $i48} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 85, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 86, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb27;
$bb24:
  assume !($i35 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 20} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i31,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 87, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $i37;
  goto $bb21;
$bb28:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i46,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  assume !($i48 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $srem.i64($i54,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i64.i32($i55);
  call {:cexpr "a"} boogie_si_record_i32($i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 100, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i56,$i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $srem.i64($i58,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $trunc.i64.i32($i59);
  call {:cexpr "b"} boogie_si_record_i32($i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 102, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i60,$i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i49,$i49);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $i62;
  assume {:branchcond $i63} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 96, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 97, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb36;
$bb33:
  assume !($i50 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $sgt.i32($i46,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 98, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i52;
  goto $bb30;
$bb37:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i61,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  assume !($i63 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 9} true;
  assume {:verifier.code 0} true;
  $i70 := $srem.i64($i69,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  call {:cexpr "a"} boogie_si_record_i32($i71);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i71,$i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $srem.i64($i73,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i64.i32($i74);
  call {:cexpr "b"} boogie_si_record_i32($i75);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i75,$i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i64,$i64);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $i77;
  assume {:branchcond $i78} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 107, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb45;
$bb42:
  assume !($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 20} true;
  assume {:verifier.code 0} true;
  $i66 := $sgt.i32($i61,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume ($i66 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume !($i66 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 109, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $i67;
  goto $bb39;
$bb46:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 11} true;
  assume {:verifier.code 0} true;
  $i80 := $slt.i32($i76,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  assume !($i78 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $srem.i64($i84,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i64.i32($i85);
  call {:cexpr "a"} boogie_si_record_i32($i86);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 122, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $srem.i64($i88,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i64.i32($i89);
  call {:cexpr "b"} boogie_si_record_i32($i90);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i79,$i79);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $i92;
  assume {:branchcond $i93} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume ($i80 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 118, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb54;
$bb51:
  assume !($i80 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 20} true;
  assume {:verifier.code 0} true;
  $i81 := $sgt.i32($i76,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume ($i81 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume !($i81 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 120, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $i82;
  goto $bb48;
$bb55:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $slt.i32($i91,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  assume !($i93 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $sext.i32.i64($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $srem.i64($i99,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i64.i32($i100);
  call {:cexpr "a"} boogie_si_record_i32($i101);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,$i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $sext.i32.i64($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 9} true;
  assume {:verifier.code 0} true;
  $i104 := $srem.i64($i103,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i64.i32($i104);
  call {:cexpr "b"} boogie_si_record_i32($i105);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105,$i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i94,$i94);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $i107;
  assume {:branchcond $i108} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 129, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb63;
$bb60:
  assume !($i95 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 20} true;
  assume {:verifier.code 0} true;
  $i96 := $sgt.i32($i91,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume ($i96 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume !($i96 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 131, 3} true;
  assume {:verifier.code 0} true;
  $i94 := $i97;
  goto $bb57;
$bb64:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 11} true;
  assume {:verifier.code 0} true;
  $i110 := $slt.i32($i106,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  assume !($i108 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $srem.i64($i114,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i64.i32($i115);
  call {:cexpr "a"} boogie_si_record_i32($i116);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $add.i32($i116,$i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i32.i64($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $srem.i64($i118,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i32($i119);
  call {:cexpr "b"} boogie_si_record_i32($i120);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i120,$i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i109,$i109);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i122;
  assume {:branchcond $i123} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume ($i110 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb72;
$bb69:
  assume !($i110 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 20} true;
  assume {:verifier.code 0} true;
  $i111 := $sgt.i32($i106,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume !($i111 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 142, 3} true;
  assume {:verifier.code 0} true;
  $i109 := $i112;
  goto $bb66;
$bb73:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 11} true;
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i121,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $srem.i64($i129,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.i64.i32($i130);
  call {:cexpr "a"} boogie_si_record_i32($i131);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i131,$i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i64($i133,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i64.i32($i134);
  call {:cexpr "b"} boogie_si_record_i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i32($i135,$i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i124,$i124);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $i137;
  assume {:branchcond $i138} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume ($i125 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 151, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb81;
$bb78:
  assume !($i125 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 20} true;
  assume {:verifier.code 0} true;
  $i126 := $sgt.i32($i121,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume !($i126 == 1);
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 153, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i127;
  goto $bb75;
$bb82:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $slt.i32($i136,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  assume !($i138 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i32.i64($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 9} true;
  assume {:verifier.code 0} true;
  $i145 := $srem.i64($i144,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i64.i32($i145);
  call {:cexpr "a"} boogie_si_record_i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146,$i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i32.i64($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 9} true;
  assume {:verifier.code 0} true;
  $i149 := $srem.i64($i148,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i64.i32($i149);
  call {:cexpr "b"} boogie_si_record_i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i32($i150,$i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i139,$i139);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $i152;
  assume {:branchcond $i153} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume ($i140 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 162, 9} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb90;
$bb87:
  assume !($i140 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 20} true;
  assume {:verifier.code 0} true;
  $i141 := $sgt.i32($i136,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume ($i141 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume !($i141 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 164, 3} true;
  assume {:verifier.code 0} true;
  $i139 := $i142;
  goto $bb84;
$bb91:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  assume !($i153 == 1);
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i32.i64($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $srem.i64($i159,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i160);
  call {:cexpr "a"} boogie_si_record_i32($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i161,$i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 9} true;
  assume {:verifier.code 0} true;
  $i164 := $srem.i64($i163,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i165 := $trunc.i64.i32($i164);
  call {:cexpr "b"} boogie_si_record_i32($i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $add.i32($i165,$i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 181, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i154,$i154);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $i167;
  assume {:branchcond $i168} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb99;
$bb96:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 20} true;
  assume {:verifier.code 0} true;
  $i156 := $sgt.i32($i151,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume ($i156 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume !($i156 == 1);
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 175, 3} true;
  assume {:verifier.code 0} true;
  $i154 := $i157;
  goto $bb93;
$bb100:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 11} true;
  assume {:verifier.code 0} true;
  $i170 := $slt.i32($i166,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  assume !($i168 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i174 := $sext.i32.i64($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 9} true;
  assume {:verifier.code 0} true;
  $i175 := $srem.i64($i174,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i32($i175);
  call {:cexpr "a"} boogie_si_record_i32($i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 188, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i32($i176,$i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i178 := $sext.i32.i64($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 9} true;
  assume {:verifier.code 0} true;
  $i179 := $srem.i64($i178,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $trunc.i64.i32($i179);
  call {:cexpr "b"} boogie_si_record_i32($i180);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i32($i180,$i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i169,$i169);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $i182;
  assume {:branchcond $i183} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume ($i170 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 184, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb108;
$bb105:
  assume !($i170 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 20} true;
  assume {:verifier.code 0} true;
  $i171 := $sgt.i32($i166,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume ($i171 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume !($i171 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 186, 3} true;
  assume {:verifier.code 0} true;
  $i169 := $i172;
  goto $bb102;
$bb109:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 11} true;
  assume {:verifier.code 0} true;
  $i185 := $slt.i32($i181,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  assume !($i183 == 1);
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i189 := $sext.i32.i64($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $srem.i64($i189,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $trunc.i64.i32($i190);
  call {:cexpr "a"} boogie_si_record_i32($i191);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 199, 5} true;
  assume {:verifier.code 0} true;
  $i192 := $add.i32($i191,$i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $sext.i32.i64($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $srem.i64($i193,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i64.i32($i194);
  call {:cexpr "b"} boogie_si_record_i32($i195);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 203, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i184,$i184);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $i197;
  assume {:branchcond $i198} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume ($i185 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 195, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb117;
$bb114:
  assume !($i185 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i181,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 197, 3} true;
  assume {:verifier.code 0} true;
  $i184 := $i187;
  goto $bb111;
$bb118:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 11} true;
  assume {:verifier.code 0} true;
  $i200 := $slt.i32($i196,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  assume !($i198 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i204 := $sext.i32.i64($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 9} true;
  assume {:verifier.code 0} true;
  $i205 := $srem.i64($i204,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i206 := $trunc.i64.i32($i205);
  call {:cexpr "a"} boogie_si_record_i32($i206);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 210, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i208 := $sext.i32.i64($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 9} true;
  assume {:verifier.code 0} true;
  $i209 := $srem.i64($i208,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i64.i32($i209);
  call {:cexpr "b"} boogie_si_record_i32($i210);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 212, 5} true;
  assume {:verifier.code 0} true;
  $i211 := $add.i32($i210,$i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 214, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i199,$i199);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $i212;
  assume {:branchcond $i213} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume ($i200 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 206, 9} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb126;
$bb123:
  assume !($i200 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $sgt.i32($i196,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume ($i201 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume !($i201 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 208, 3} true;
  assume {:verifier.code 0} true;
  $i199 := $i202;
  goto $bb120;
$bb127:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 11} true;
  assume {:verifier.code 0} true;
  $i215 := $slt.i32($i211,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  assume !($i213 == 1);
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i219 := $sext.i32.i64($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 9} true;
  assume {:verifier.code 0} true;
  $i220 := $srem.i64($i219,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i64.i32($i220);
  call {:cexpr "a"} boogie_si_record_i32($i221);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 221, 5} true;
  assume {:verifier.code 0} true;
  $i222 := $add.i32($i221,$i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i32.i64($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 9} true;
  assume {:verifier.code 0} true;
  $i224 := $srem.i64($i223,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i225 := $trunc.i64.i32($i224);
  call {:cexpr "b"} boogie_si_record_i32($i225);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 223, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i32($i225,$i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 225, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i214,$i214);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $i227;
  assume {:branchcond $i228} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 217, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 218, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb135;
$bb132:
  assume !($i215 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 20} true;
  assume {:verifier.code 0} true;
  $i216 := $sgt.i32($i211,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume ($i216 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume !($i216 == 1);
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 219, 3} true;
  assume {:verifier.code 0} true;
  $i214 := $i217;
  goto $bb129;
$bb136:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 11} true;
  assume {:verifier.code 0} true;
  $i230 := $slt.i32($i226,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  assume !($i228 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i32.i64($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 9} true;
  assume {:verifier.code 0} true;
  $i235 := $srem.i64($i234,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i236 := $trunc.i64.i32($i235);
  call {:cexpr "a"} boogie_si_record_i32($i236);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $add.i32($i236,$i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $srem.i64($i238,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i64.i32($i239);
  call {:cexpr "b"} boogie_si_record_i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 234, 5} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i32($i240,$i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 236, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i229,$i229);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $i242;
  assume {:branchcond $i243} true;
  goto $bb145, $bb146;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume ($i230 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 228, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 229, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb144;
$bb141:
  assume !($i230 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 20} true;
  assume {:verifier.code 0} true;
  $i231 := $sgt.i32($i226,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume ($i231 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume !($i231 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 230, 3} true;
  assume {:verifier.code 0} true;
  $i229 := $i232;
  goto $bb138;
$bb145:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 11} true;
  assume {:verifier.code 0} true;
  $i245 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb148, $bb150;
$bb146:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  assume !($i243 == 1);
  goto $bb147;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i32.i64($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i64($i249,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i64.i32($i250);
  call {:cexpr "a"} boogie_si_record_i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i32($i251,$i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i32.i64($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 9} true;
  assume {:verifier.code 0} true;
  $i254 := $srem.i64($i253,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i64.i32($i254);
  call {:cexpr "b"} boogie_si_record_i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $add.i32($i255,$i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 247, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i244,$i244);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $i257;
  assume {:branchcond $i258} true;
  goto $bb154, $bb155;
$bb148:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume ($i245 == 1);
  goto $bb149;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 239, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb153;
$bb150:
  assume !($i245 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 20} true;
  assume {:verifier.code 0} true;
  $i246 := $sgt.i32($i241,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb151, $bb152;
$bb151:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume ($i246 == 1);
  goto $bb149;
$bb152:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume !($i246 == 1);
  goto $bb153;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 241, 3} true;
  assume {:verifier.code 0} true;
  $i244 := $i247;
  goto $bb147;
$bb154:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 11} true;
  assume {:verifier.code 0} true;
  $i260 := $slt.i32($i256,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i260} true;
  goto $bb157, $bb159;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume !($i258 == 1);
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i32.i64($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 9} true;
  assume {:verifier.code 0} true;
  $i265 := $srem.i64($i264,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i64.i32($i265);
  call {:cexpr "a"} boogie_si_record_i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i267 := $add.i32($i266,$i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i268 := $sext.i32.i64($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 9} true;
  assume {:verifier.code 0} true;
  $i269 := $srem.i64($i268,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i270 := $trunc.i64.i32($i269);
  call {:cexpr "b"} boogie_si_record_i32($i270);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i270,$i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i259,$i259);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $i272;
  assume {:branchcond $i273} true;
  goto $bb163, $bb164;
$bb157:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume ($i260 == 1);
  goto $bb158;
$bb158:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 250, 9} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 251, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb162;
$bb159:
  assume !($i260 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $sgt.i32($i256,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb160, $bb161;
$bb160:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume ($i261 == 1);
  goto $bb158;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume !($i261 == 1);
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 3} true;
  assume {:verifier.code 0} true;
  $i259 := $i262;
  goto $bb156;
$bb163:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 11} true;
  assume {:verifier.code 0} true;
  $i275 := $slt.i32($i271,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb166, $bb168;
$bb164:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  assume !($i273 == 1);
  goto $bb165;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i32.i64($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 9} true;
  assume {:verifier.code 0} true;
  $i280 := $srem.i64($i279,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i281 := $trunc.i64.i32($i280);
  call {:cexpr "a"} boogie_si_record_i32($i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 265, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i32($i281,$i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i283 := $sext.i32.i64($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 9} true;
  assume {:verifier.code 0} true;
  $i284 := $srem.i64($i283,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $trunc.i64.i32($i284);
  call {:cexpr "b"} boogie_si_record_i32($i285);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i32($i285,$i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i274,$i274);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $i287;
  assume {:branchcond $i288} true;
  goto $bb172, $bb173;
$bb166:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume ($i275 == 1);
  goto $bb167;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 261, 9} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb171;
$bb168:
  assume !($i275 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 20} true;
  assume {:verifier.code 0} true;
  $i276 := $sgt.i32($i271,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb169, $bb170;
$bb169:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume ($i276 == 1);
  goto $bb167;
$bb170:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume !($i276 == 1);
  goto $bb171;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 263, 3} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb165;
$bb172:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 11} true;
  assume {:verifier.code 0} true;
  $i290 := $slt.i32($i286,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i290} true;
  goto $bb175, $bb177;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  assume !($i288 == 1);
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i294 := $sext.i32.i64($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 9} true;
  assume {:verifier.code 0} true;
  $i295 := $srem.i64($i294,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $trunc.i64.i32($i295);
  call {:cexpr "a"} boogie_si_record_i32($i296);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 276, 5} true;
  assume {:verifier.code 0} true;
  $i297 := $add.i32($i296,$i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $sext.i32.i64($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $srem.i64($i298,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i300 := $trunc.i64.i32($i299);
  call {:cexpr "b"} boogie_si_record_i32($i300);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 278, 5} true;
  assume {:verifier.code 0} true;
  $i301 := $add.i32($i300,$i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 280, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i289,$i289);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $i302;
  assume {:branchcond $i303} true;
  goto $bb181, $bb182;
$bb175:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume ($i290 == 1);
  goto $bb176;
$bb176:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 272, 9} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb180;
$bb177:
  assume !($i290 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 20} true;
  assume {:verifier.code 0} true;
  $i291 := $sgt.i32($i286,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb178, $bb179;
$bb178:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume ($i291 == 1);
  goto $bb176;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume !($i291 == 1);
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 274, 3} true;
  assume {:verifier.code 0} true;
  $i289 := $i292;
  goto $bb174;
$bb181:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 11} true;
  assume {:verifier.code 0} true;
  $i305 := $slt.i32($i301,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb184, $bb186;
$bb182:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  assume !($i303 == 1);
  goto $bb183;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 9} true;
  assume {:verifier.code 0} true;
  $i310 := $srem.i64($i309,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i311 := $trunc.i64.i32($i310);
  call {:cexpr "a"} boogie_si_record_i32($i311);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 287, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311,$i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i313 := $sext.i32.i64($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 9} true;
  assume {:verifier.code 0} true;
  $i314 := $srem.i64($i313,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i315 := $trunc.i64.i32($i314);
  call {:cexpr "b"} boogie_si_record_i32($i315);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 289, 5} true;
  assume {:verifier.code 0} true;
  $i316 := $add.i32($i315,$i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 291, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i304,$i304);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $i317;
  assume {:branchcond $i318} true;
  goto $bb190, $bb191;
$bb184:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume ($i305 == 1);
  goto $bb185;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 283, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 284, 5} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb189;
$bb186:
  assume !($i305 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 20} true;
  assume {:verifier.code 0} true;
  $i306 := $sgt.i32($i301,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb187, $bb188;
$bb187:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume ($i306 == 1);
  goto $bb185;
$bb188:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume !($i306 == 1);
  goto $bb189;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 285, 3} true;
  assume {:verifier.code 0} true;
  $i304 := $i307;
  goto $bb183;
$bb190:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 11} true;
  assume {:verifier.code 0} true;
  $i320 := $slt.i32($i316,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i320} true;
  goto $bb193, $bb195;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  assume !($i318 == 1);
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i324 := $sext.i32.i64($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 9} true;
  assume {:verifier.code 0} true;
  $i325 := $srem.i64($i324,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i326 := $trunc.i64.i32($i325);
  call {:cexpr "a"} boogie_si_record_i32($i326);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 298, 5} true;
  assume {:verifier.code 0} true;
  $i327 := $add.i32($i326,$i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i32.i64($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 9} true;
  assume {:verifier.code 0} true;
  $i329 := $srem.i64($i328,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i330 := $trunc.i64.i32($i329);
  call {:cexpr "b"} boogie_si_record_i32($i330);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 300, 5} true;
  assume {:verifier.code 0} true;
  $i331 := $add.i32($i330,$i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 302, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i319,$i319);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $i332;
  assume {:branchcond $i333} true;
  goto $bb199, $bb200;
$bb193:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume ($i320 == 1);
  goto $bb194;
$bb194:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 294, 9} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 295, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb198;
$bb195:
  assume !($i320 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 20} true;
  assume {:verifier.code 0} true;
  $i321 := $sgt.i32($i316,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb196, $bb197;
$bb196:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume ($i321 == 1);
  goto $bb194;
$bb197:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume !($i321 == 1);
  goto $bb198;
$bb198:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 296, 3} true;
  assume {:verifier.code 0} true;
  $i319 := $i322;
  goto $bb192;
$bb199:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 11} true;
  assume {:verifier.code 0} true;
  $i335 := $slt.i32($i331,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb202, $bb204;
$bb200:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  assume !($i333 == 1);
  goto $bb201;
$bb201:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i32.i64($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 9} true;
  assume {:verifier.code 0} true;
  $i340 := $srem.i64($i339,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i341 := $trunc.i64.i32($i340);
  call {:cexpr "a"} boogie_si_record_i32($i341);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 309, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $add.i32($i341,$i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i32.i64($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i64($i343,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i64.i32($i344);
  call {:cexpr "b"} boogie_si_record_i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 311, 5} true;
  assume {:verifier.code 0} true;
  $i346 := $add.i32($i345,$i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 313, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i334,$i334);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $i347;
  assume {:branchcond $i348} true;
  goto $bb208, $bb209;
$bb202:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume ($i335 == 1);
  goto $bb203;
$bb203:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 305, 9} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 306, 5} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb207;
$bb204:
  assume !($i335 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 20} true;
  assume {:verifier.code 0} true;
  $i336 := $sgt.i32($i331,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb205, $bb206;
$bb205:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume ($i336 == 1);
  goto $bb203;
$bb206:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume !($i336 == 1);
  goto $bb207;
$bb207:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 307, 3} true;
  assume {:verifier.code 0} true;
  $i334 := $i337;
  goto $bb201;
$bb208:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 11} true;
  assume {:verifier.code 0} true;
  $i350 := $slt.i32($i346,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb211, $bb213;
$bb209:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  assume !($i348 == 1);
  goto $bb210;
$bb210:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i32.i64($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $srem.i64($i354,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $trunc.i64.i32($i355);
  call {:cexpr "a"} boogie_si_record_i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 320, 5} true;
  assume {:verifier.code 0} true;
  $i357 := $add.i32($i356,$i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i358 := $sext.i32.i64($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 9} true;
  assume {:verifier.code 0} true;
  $i359 := $srem.i64($i358,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i360 := $trunc.i64.i32($i359);
  call {:cexpr "b"} boogie_si_record_i32($i360);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 322, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $add.i32($i360,$i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 324, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i349,$i349);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $i362;
  assume {:branchcond $i363} true;
  goto $bb217, $bb218;
$bb211:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume ($i350 == 1);
  goto $bb212;
$bb212:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 316, 9} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 317, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb216;
$bb213:
  assume !($i350 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 20} true;
  assume {:verifier.code 0} true;
  $i351 := $sgt.i32($i346,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb214, $bb215;
$bb214:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume ($i351 == 1);
  goto $bb212;
$bb215:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume !($i351 == 1);
  goto $bb216;
$bb216:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 318, 3} true;
  assume {:verifier.code 0} true;
  $i349 := $i352;
  goto $bb210;
$bb217:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 11} true;
  assume {:verifier.code 0} true;
  $i365 := $slt.i32($i361,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i365} true;
  goto $bb220, $bb222;
$bb218:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  assume !($i363 == 1);
  goto $bb219;
$bb219:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i32.i64($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 9} true;
  assume {:verifier.code 0} true;
  $i370 := $srem.i64($i369,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i64.i32($i370);
  call {:cexpr "a"} boogie_si_record_i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 331, 5} true;
  assume {:verifier.code 0} true;
  $i372 := $add.i32($i371,$i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 9} true;
  assume {:verifier.code 0} true;
  $i374 := $srem.i64($i373,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i375 := $trunc.i64.i32($i374);
  call {:cexpr "b"} boogie_si_record_i32($i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 333, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $add.i32($i375,$i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 335, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i364,$i364);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $i377;
  assume {:branchcond $i378} true;
  goto $bb226, $bb227;
$bb220:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume ($i365 == 1);
  goto $bb221;
$bb221:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 327, 9} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 328, 5} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb225;
$bb222:
  assume !($i365 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 20} true;
  assume {:verifier.code 0} true;
  $i366 := $sgt.i32($i361,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb223, $bb224;
$bb223:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume ($i366 == 1);
  goto $bb221;
$bb224:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume !($i366 == 1);
  goto $bb225;
$bb225:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 329, 3} true;
  assume {:verifier.code 0} true;
  $i364 := $i367;
  goto $bb219;
$bb226:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 11} true;
  assume {:verifier.code 0} true;
  $i380 := $slt.i32($i376,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i380} true;
  goto $bb229, $bb231;
$bb227:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  assume !($i378 == 1);
  goto $bb228;
$bb228:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i384 := $sext.i32.i64($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 9} true;
  assume {:verifier.code 0} true;
  $i385 := $srem.i64($i384,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i386 := $trunc.i64.i32($i385);
  call {:cexpr "a"} boogie_si_record_i32($i386);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 342, 5} true;
  assume {:verifier.code 0} true;
  $i387 := $add.i32($i386,$i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i32.i64($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 9} true;
  assume {:verifier.code 0} true;
  $i389 := $srem.i64($i388,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i390 := $trunc.i64.i32($i389);
  call {:cexpr "b"} boogie_si_record_i32($i390);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 344, 5} true;
  assume {:verifier.code 0} true;
  $i391 := $add.i32($i390,$i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 346, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i379,$i379);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $i392;
  assume {:branchcond $i393} true;
  goto $bb235, $bb236;
$bb229:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume ($i380 == 1);
  goto $bb230;
$bb230:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 338, 9} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 339, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb234;
$bb231:
  assume !($i380 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 20} true;
  assume {:verifier.code 0} true;
  $i381 := $sgt.i32($i376,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb232, $bb233;
$bb232:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume ($i381 == 1);
  goto $bb230;
$bb233:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume !($i381 == 1);
  goto $bb234;
$bb234:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 340, 3} true;
  assume {:verifier.code 0} true;
  $i379 := $i382;
  goto $bb228;
$bb235:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 11} true;
  assume {:verifier.code 0} true;
  $i395 := $slt.i32($i391,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i395} true;
  goto $bb238, $bb240;
$bb236:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  assume !($i393 == 1);
  goto $bb237;
$bb237:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i399 := $sext.i32.i64($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 9} true;
  assume {:verifier.code 0} true;
  $i400 := $srem.i64($i399,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $trunc.i64.i32($i400);
  call {:cexpr "a"} boogie_si_record_i32($i401);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 353, 5} true;
  assume {:verifier.code 0} true;
  $i402 := $add.i32($i401,$i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $sext.i32.i64($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 9} true;
  assume {:verifier.code 0} true;
  $i404 := $srem.i64($i403,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i405 := $trunc.i64.i32($i404);
  call {:cexpr "b"} boogie_si_record_i32($i405);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 355, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405,$i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 357, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i394,$i394);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $i407;
  assume {:branchcond $i408} true;
  goto $bb244, $bb245;
$bb238:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume ($i395 == 1);
  goto $bb239;
$bb239:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 349, 9} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 350, 5} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb243;
$bb240:
  assume !($i395 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 20} true;
  assume {:verifier.code 0} true;
  $i396 := $sgt.i32($i391,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb241, $bb242;
$bb241:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume ($i396 == 1);
  goto $bb239;
$bb242:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume !($i396 == 1);
  goto $bb243;
$bb243:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 351, 3} true;
  assume {:verifier.code 0} true;
  $i394 := $i397;
  goto $bb237;
$bb244:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 11} true;
  assume {:verifier.code 0} true;
  $i410 := $slt.i32($i406,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i410} true;
  goto $bb247, $bb249;
$bb245:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  assume !($i408 == 1);
  goto $bb246;
$bb246:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $sext.i32.i64($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $srem.i64($i414,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i416 := $trunc.i64.i32($i415);
  call {:cexpr "a"} boogie_si_record_i32($i416);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 364, 5} true;
  assume {:verifier.code 0} true;
  $i417 := $add.i32($i416,$i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i418 := $sext.i32.i64($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $srem.i64($i418,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i420 := $trunc.i64.i32($i419);
  call {:cexpr "b"} boogie_si_record_i32($i420);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 366, 5} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420,$i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 368, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i409,$i409);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $i422;
  assume {:branchcond $i423} true;
  goto $bb253, $bb254;
$bb247:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume ($i410 == 1);
  goto $bb248;
$bb248:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 360, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 361, 5} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb252;
$bb249:
  assume !($i410 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 20} true;
  assume {:verifier.code 0} true;
  $i411 := $sgt.i32($i406,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb250, $bb251;
$bb250:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume ($i411 == 1);
  goto $bb248;
$bb251:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume !($i411 == 1);
  goto $bb252;
$bb252:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 362, 3} true;
  assume {:verifier.code 0} true;
  $i409 := $i412;
  goto $bb246;
$bb253:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 11} true;
  assume {:verifier.code 0} true;
  $i425 := $slt.i32($i421,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i425} true;
  goto $bb256, $bb258;
$bb254:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  assume !($i423 == 1);
  goto $bb255;
$bb255:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i429 := $sext.i32.i64($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 9} true;
  assume {:verifier.code 0} true;
  $i430 := $srem.i64($i429,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i431 := $trunc.i64.i32($i430);
  call {:cexpr "a"} boogie_si_record_i32($i431);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 375, 5} true;
  assume {:verifier.code 0} true;
  $i432 := $add.i32($i431,$i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i32.i64($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 9} true;
  assume {:verifier.code 0} true;
  $i434 := $srem.i64($i433,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i435 := $trunc.i64.i32($i434);
  call {:cexpr "b"} boogie_si_record_i32($i435);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 377, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $add.i32($i435,$i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 379, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i424,$i424);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $i437;
  assume {:branchcond $i438} true;
  goto $bb262, $bb263;
$bb256:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume ($i425 == 1);
  goto $bb257;
$bb257:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 371, 9} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 372, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb261;
$bb258:
  assume !($i425 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 20} true;
  assume {:verifier.code 0} true;
  $i426 := $sgt.i32($i421,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb259, $bb260;
$bb259:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume ($i426 == 1);
  goto $bb257;
$bb260:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume !($i426 == 1);
  goto $bb261;
$bb261:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 373, 3} true;
  assume {:verifier.code 0} true;
  $i424 := $i427;
  goto $bb255;
$bb262:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 11} true;
  assume {:verifier.code 0} true;
  $i440 := $slt.i32($i436,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i440} true;
  goto $bb265, $bb267;
$bb263:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  assume !($i438 == 1);
  goto $bb264;
$bb264:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i32.i64($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 9} true;
  assume {:verifier.code 0} true;
  $i445 := $srem.i64($i444,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i446 := $trunc.i64.i32($i445);
  call {:cexpr "a"} boogie_si_record_i32($i446);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 386, 5} true;
  assume {:verifier.code 0} true;
  $i447 := $add.i32($i446,$i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i448 := $sext.i32.i64($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $srem.i64($i448,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i450 := $trunc.i64.i32($i449);
  call {:cexpr "b"} boogie_si_record_i32($i450);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 388, 5} true;
  assume {:verifier.code 0} true;
  $i451 := $add.i32($i450,$i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 390, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i439,$i439);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $i452;
  assume {:branchcond $i453} true;
  goto $bb271, $bb272;
$bb265:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume ($i440 == 1);
  goto $bb266;
$bb266:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 382, 9} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 383, 5} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb270;
$bb267:
  assume !($i440 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 20} true;
  assume {:verifier.code 0} true;
  $i441 := $sgt.i32($i436,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb268, $bb269;
$bb268:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume ($i441 == 1);
  goto $bb266;
$bb269:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume !($i441 == 1);
  goto $bb270;
$bb270:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 384, 3} true;
  assume {:verifier.code 0} true;
  $i439 := $i442;
  goto $bb264;
$bb271:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 11} true;
  assume {:verifier.code 0} true;
  $i455 := $slt.i32($i451,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i455} true;
  goto $bb274, $bb276;
$bb272:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  assume !($i453 == 1);
  goto $bb273;
$bb273:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i459 := $sext.i32.i64($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 9} true;
  assume {:verifier.code 0} true;
  $i460 := $srem.i64($i459,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i461 := $trunc.i64.i32($i460);
  call {:cexpr "a"} boogie_si_record_i32($i461);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 397, 5} true;
  assume {:verifier.code 0} true;
  $i462 := $add.i32($i461,$i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i463 := $sext.i32.i64($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 9} true;
  assume {:verifier.code 0} true;
  $i464 := $srem.i64($i463,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i465 := $trunc.i64.i32($i464);
  call {:cexpr "b"} boogie_si_record_i32($i465);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 399, 5} true;
  assume {:verifier.code 0} true;
  $i466 := $add.i32($i465,$i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 401, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i454,$i454);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $i467;
  assume {:branchcond $i468} true;
  goto $bb280, $bb281;
$bb274:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume ($i455 == 1);
  goto $bb275;
$bb275:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 393, 9} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 394, 5} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb279;
$bb276:
  assume !($i455 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 20} true;
  assume {:verifier.code 0} true;
  $i456 := $sgt.i32($i451,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb277, $bb278;
$bb277:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume ($i456 == 1);
  goto $bb275;
$bb278:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume !($i456 == 1);
  goto $bb279;
$bb279:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 395, 3} true;
  assume {:verifier.code 0} true;
  $i454 := $i457;
  goto $bb273;
$bb280:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 11} true;
  assume {:verifier.code 0} true;
  $i470 := $slt.i32($i466,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i470} true;
  goto $bb283, $bb285;
$bb281:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  assume !($i468 == 1);
  goto $bb282;
$bb282:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i474 := $sext.i32.i64($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 9} true;
  assume {:verifier.code 0} true;
  $i475 := $srem.i64($i474,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i476 := $trunc.i64.i32($i475);
  call {:cexpr "a"} boogie_si_record_i32($i476);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 408, 5} true;
  assume {:verifier.code 0} true;
  $i477 := $add.i32($i476,$i476);
  call {:cexpr "a"} boogie_si_record_i32($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i478 := $sext.i32.i64($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 9} true;
  assume {:verifier.code 0} true;
  $i479 := $srem.i64($i478,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i480 := $trunc.i64.i32($i479);
  call {:cexpr "b"} boogie_si_record_i32($i480);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 410, 5} true;
  assume {:verifier.code 0} true;
  $i481 := $add.i32($i480,$i480);
  call {:cexpr "b"} boogie_si_record_i32($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 412, 5} true;
  assume {:verifier.code 0} true;
  $i482 := $add.i32($i469,$i469);
  call {:cexpr "c"} boogie_si_record_i32($i482);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 9} true;
  assume {:verifier.code 0} true;
  $i483 := $slt.i32($i477,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  $i484 := $i482;
  assume {:branchcond $i483} true;
  goto $bb289, $bb290;
$bb283:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume ($i470 == 1);
  goto $bb284;
$bb284:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 404, 9} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 405, 5} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb288;
$bb285:
  assume !($i470 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 20} true;
  assume {:verifier.code 0} true;
  $i471 := $sgt.i32($i466,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb286, $bb287;
$bb286:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume ($i471 == 1);
  goto $bb284;
$bb287:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume !($i471 == 1);
  goto $bb288;
$bb288:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 406, 3} true;
  assume {:verifier.code 0} true;
  $i469 := $i472;
  goto $bb282;
$bb289:
  assume ($i483 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 11} true;
  assume {:verifier.code 0} true;
  $i485 := $slt.i32($i481,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i485} true;
  goto $bb292, $bb294;
$bb290:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  assume !($i483 == 1);
  goto $bb291;
$bb291:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i489 := $sext.i32.i64($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 9} true;
  assume {:verifier.code 0} true;
  $i490 := $srem.i64($i489,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i491 := $trunc.i64.i32($i490);
  call {:cexpr "a"} boogie_si_record_i32($i491);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 419, 5} true;
  assume {:verifier.code 0} true;
  $i492 := $add.i32($i491,$i491);
  call {:cexpr "a"} boogie_si_record_i32($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i493 := $sext.i32.i64($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 9} true;
  assume {:verifier.code 0} true;
  $i494 := $srem.i64($i493,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i495 := $trunc.i64.i32($i494);
  call {:cexpr "b"} boogie_si_record_i32($i495);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 421, 5} true;
  assume {:verifier.code 0} true;
  $i496 := $add.i32($i495,$i495);
  call {:cexpr "b"} boogie_si_record_i32($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 423, 5} true;
  assume {:verifier.code 0} true;
  $i497 := $add.i32($i484,$i484);
  call {:cexpr "c"} boogie_si_record_i32($i497);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 9} true;
  assume {:verifier.code 0} true;
  $i498 := $slt.i32($i492,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  $i499 := $i497;
  assume {:branchcond $i498} true;
  goto $bb298, $bb299;
$bb292:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume ($i485 == 1);
  goto $bb293;
$bb293:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 415, 9} true;
  assume {:verifier.code 0} true;
  $i488 := $add.i32($i482,1);
  call {:cexpr "c"} boogie_si_record_i32($i488);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 416, 5} true;
  assume {:verifier.code 0} true;
  $i487 := $i488;
  goto $bb297;
$bb294:
  assume !($i485 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 20} true;
  assume {:verifier.code 0} true;
  $i486 := $sgt.i32($i481,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  $i487 := $i482;
  assume {:branchcond $i486} true;
  goto $bb295, $bb296;
$bb295:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume ($i486 == 1);
  goto $bb293;
$bb296:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume !($i486 == 1);
  goto $bb297;
$bb297:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 417, 3} true;
  assume {:verifier.code 0} true;
  $i484 := $i487;
  goto $bb291;
$bb298:
  assume ($i498 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 11} true;
  assume {:verifier.code 0} true;
  $i500 := $slt.i32($i496,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i500} true;
  goto $bb301, $bb303;
$bb299:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  assume !($i498 == 1);
  goto $bb300;
$bb300:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i504 := $sext.i32.i64($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 9} true;
  assume {:verifier.code 0} true;
  $i505 := $srem.i64($i504,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i506 := $trunc.i64.i32($i505);
  call {:cexpr "a"} boogie_si_record_i32($i506);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 430, 5} true;
  assume {:verifier.code 0} true;
  $i507 := $add.i32($i506,$i506);
  call {:cexpr "a"} boogie_si_record_i32($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i508 := $sext.i32.i64($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 9} true;
  assume {:verifier.code 0} true;
  $i509 := $srem.i64($i508,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i510 := $trunc.i64.i32($i509);
  call {:cexpr "b"} boogie_si_record_i32($i510);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 432, 5} true;
  assume {:verifier.code 0} true;
  $i511 := $add.i32($i510,$i510);
  call {:cexpr "b"} boogie_si_record_i32($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 434, 5} true;
  assume {:verifier.code 0} true;
  $i512 := $add.i32($i499,$i499);
  call {:cexpr "c"} boogie_si_record_i32($i512);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 9} true;
  assume {:verifier.code 0} true;
  $i513 := $slt.i32($i507,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  $i514 := $i512;
  assume {:branchcond $i513} true;
  goto $bb307, $bb308;
$bb301:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume ($i500 == 1);
  goto $bb302;
$bb302:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 426, 9} true;
  assume {:verifier.code 0} true;
  $i503 := $add.i32($i497,1);
  call {:cexpr "c"} boogie_si_record_i32($i503);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 427, 5} true;
  assume {:verifier.code 0} true;
  $i502 := $i503;
  goto $bb306;
$bb303:
  assume !($i500 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 20} true;
  assume {:verifier.code 0} true;
  $i501 := $sgt.i32($i496,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  $i502 := $i497;
  assume {:branchcond $i501} true;
  goto $bb304, $bb305;
$bb304:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume ($i501 == 1);
  goto $bb302;
$bb305:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume !($i501 == 1);
  goto $bb306;
$bb306:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 428, 3} true;
  assume {:verifier.code 0} true;
  $i499 := $i502;
  goto $bb300;
$bb307:
  assume ($i513 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 11} true;
  assume {:verifier.code 0} true;
  $i515 := $slt.i32($i511,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i515} true;
  goto $bb310, $bb312;
$bb308:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  assume !($i513 == 1);
  goto $bb309;
$bb309:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i519 := $sext.i32.i64($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 9} true;
  assume {:verifier.code 0} true;
  $i520 := $srem.i64($i519,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i521 := $trunc.i64.i32($i520);
  call {:cexpr "a"} boogie_si_record_i32($i521);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 441, 5} true;
  assume {:verifier.code 0} true;
  $i522 := $add.i32($i521,$i521);
  call {:cexpr "a"} boogie_si_record_i32($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i523 := $sext.i32.i64($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 9} true;
  assume {:verifier.code 0} true;
  $i524 := $srem.i64($i523,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i525 := $trunc.i64.i32($i524);
  call {:cexpr "b"} boogie_si_record_i32($i525);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 443, 5} true;
  assume {:verifier.code 0} true;
  $i526 := $add.i32($i525,$i525);
  call {:cexpr "b"} boogie_si_record_i32($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 445, 5} true;
  assume {:verifier.code 0} true;
  $i527 := $add.i32($i514,$i514);
  call {:cexpr "c"} boogie_si_record_i32($i527);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 9} true;
  assume {:verifier.code 0} true;
  $i528 := $slt.i32($i522,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  $i529 := $i527;
  assume {:branchcond $i528} true;
  goto $bb316, $bb317;
$bb310:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume ($i515 == 1);
  goto $bb311;
$bb311:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 437, 9} true;
  assume {:verifier.code 0} true;
  $i518 := $add.i32($i512,1);
  call {:cexpr "c"} boogie_si_record_i32($i518);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 438, 5} true;
  assume {:verifier.code 0} true;
  $i517 := $i518;
  goto $bb315;
$bb312:
  assume !($i515 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 20} true;
  assume {:verifier.code 0} true;
  $i516 := $sgt.i32($i511,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  $i517 := $i512;
  assume {:branchcond $i516} true;
  goto $bb313, $bb314;
$bb313:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume ($i516 == 1);
  goto $bb311;
$bb314:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume !($i516 == 1);
  goto $bb315;
$bb315:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i514 := $i517;
  goto $bb309;
$bb316:
  assume ($i528 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 11} true;
  assume {:verifier.code 0} true;
  $i530 := $slt.i32($i526,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i530} true;
  goto $bb319, $bb321;
$bb317:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  assume !($i528 == 1);
  goto $bb318;
$bb318:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i534 := $sext.i32.i64($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 9} true;
  assume {:verifier.code 0} true;
  $i535 := $srem.i64($i534,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i536 := $trunc.i64.i32($i535);
  call {:cexpr "a"} boogie_si_record_i32($i536);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 452, 5} true;
  assume {:verifier.code 0} true;
  $i537 := $add.i32($i536,$i536);
  call {:cexpr "a"} boogie_si_record_i32($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i538 := $sext.i32.i64($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 9} true;
  assume {:verifier.code 0} true;
  $i539 := $srem.i64($i538,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i540 := $trunc.i64.i32($i539);
  call {:cexpr "b"} boogie_si_record_i32($i540);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 454, 5} true;
  assume {:verifier.code 0} true;
  $i541 := $add.i32($i540,$i540);
  call {:cexpr "b"} boogie_si_record_i32($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 456, 5} true;
  assume {:verifier.code 0} true;
  $i542 := $add.i32($i529,$i529);
  call {:cexpr "c"} boogie_si_record_i32($i542);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 9} true;
  assume {:verifier.code 0} true;
  $i543 := $slt.i32($i537,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  $i544 := $i542;
  assume {:branchcond $i543} true;
  goto $bb325, $bb326;
$bb319:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume ($i530 == 1);
  goto $bb320;
$bb320:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 448, 9} true;
  assume {:verifier.code 0} true;
  $i533 := $add.i32($i527,1);
  call {:cexpr "c"} boogie_si_record_i32($i533);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 449, 5} true;
  assume {:verifier.code 0} true;
  $i532 := $i533;
  goto $bb324;
$bb321:
  assume !($i530 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 20} true;
  assume {:verifier.code 0} true;
  $i531 := $sgt.i32($i526,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  $i532 := $i527;
  assume {:branchcond $i531} true;
  goto $bb322, $bb323;
$bb322:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume ($i531 == 1);
  goto $bb320;
$bb323:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume !($i531 == 1);
  goto $bb324;
$bb324:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 450, 3} true;
  assume {:verifier.code 0} true;
  $i529 := $i532;
  goto $bb318;
$bb325:
  assume ($i543 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 11} true;
  assume {:verifier.code 0} true;
  $i545 := $slt.i32($i541,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i545} true;
  goto $bb328, $bb330;
$bb326:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  assume !($i543 == 1);
  goto $bb327;
$bb327:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i549 := $sext.i32.i64($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 9} true;
  assume {:verifier.code 0} true;
  $i550 := $srem.i64($i549,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i551 := $trunc.i64.i32($i550);
  call {:cexpr "a"} boogie_si_record_i32($i551);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 463, 5} true;
  assume {:verifier.code 0} true;
  $i552 := $add.i32($i551,$i551);
  call {:cexpr "a"} boogie_si_record_i32($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i553 := $sext.i32.i64($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 9} true;
  assume {:verifier.code 0} true;
  $i554 := $srem.i64($i553,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i555 := $trunc.i64.i32($i554);
  call {:cexpr "b"} boogie_si_record_i32($i555);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 465, 5} true;
  assume {:verifier.code 0} true;
  $i556 := $add.i32($i555,$i555);
  call {:cexpr "b"} boogie_si_record_i32($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 467, 5} true;
  assume {:verifier.code 0} true;
  $i557 := $add.i32($i544,$i544);
  call {:cexpr "c"} boogie_si_record_i32($i557);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 9} true;
  assume {:verifier.code 0} true;
  $i558 := $slt.i32($i552,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  $i559 := $i557;
  assume {:branchcond $i558} true;
  goto $bb334, $bb335;
$bb328:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume ($i545 == 1);
  goto $bb329;
$bb329:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 459, 9} true;
  assume {:verifier.code 0} true;
  $i548 := $add.i32($i542,1);
  call {:cexpr "c"} boogie_si_record_i32($i548);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 460, 5} true;
  assume {:verifier.code 0} true;
  $i547 := $i548;
  goto $bb333;
$bb330:
  assume !($i545 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 20} true;
  assume {:verifier.code 0} true;
  $i546 := $sgt.i32($i541,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  $i547 := $i542;
  assume {:branchcond $i546} true;
  goto $bb331, $bb332;
$bb331:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume ($i546 == 1);
  goto $bb329;
$bb332:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume !($i546 == 1);
  goto $bb333;
$bb333:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 461, 3} true;
  assume {:verifier.code 0} true;
  $i544 := $i547;
  goto $bb327;
$bb334:
  assume ($i558 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 11} true;
  assume {:verifier.code 0} true;
  $i560 := $slt.i32($i556,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i560} true;
  goto $bb337, $bb339;
$bb335:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  assume !($i558 == 1);
  goto $bb336;
$bb336:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i564 := $sext.i32.i64($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 9} true;
  assume {:verifier.code 0} true;
  $i565 := $srem.i64($i564,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i566 := $trunc.i64.i32($i565);
  call {:cexpr "a"} boogie_si_record_i32($i566);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 474, 5} true;
  assume {:verifier.code 0} true;
  $i567 := $add.i32($i566,$i566);
  call {:cexpr "a"} boogie_si_record_i32($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i568 := $sext.i32.i64($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 9} true;
  assume {:verifier.code 0} true;
  $i569 := $srem.i64($i568,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i570 := $trunc.i64.i32($i569);
  call {:cexpr "b"} boogie_si_record_i32($i570);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 476, 5} true;
  assume {:verifier.code 0} true;
  $i571 := $add.i32($i570,$i570);
  call {:cexpr "b"} boogie_si_record_i32($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 478, 5} true;
  assume {:verifier.code 0} true;
  $i572 := $add.i32($i559,$i559);
  call {:cexpr "c"} boogie_si_record_i32($i572);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 9} true;
  assume {:verifier.code 0} true;
  $i573 := $slt.i32($i567,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $i574 := $i572;
  assume {:branchcond $i573} true;
  goto $bb343, $bb344;
$bb337:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume ($i560 == 1);
  goto $bb338;
$bb338:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 470, 9} true;
  assume {:verifier.code 0} true;
  $i563 := $add.i32($i557,1);
  call {:cexpr "c"} boogie_si_record_i32($i563);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 471, 5} true;
  assume {:verifier.code 0} true;
  $i562 := $i563;
  goto $bb342;
$bb339:
  assume !($i560 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 20} true;
  assume {:verifier.code 0} true;
  $i561 := $sgt.i32($i556,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  $i562 := $i557;
  assume {:branchcond $i561} true;
  goto $bb340, $bb341;
$bb340:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume ($i561 == 1);
  goto $bb338;
$bb341:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume !($i561 == 1);
  goto $bb342;
$bb342:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 472, 3} true;
  assume {:verifier.code 0} true;
  $i559 := $i562;
  goto $bb336;
$bb343:
  assume ($i573 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 11} true;
  assume {:verifier.code 0} true;
  $i575 := $slt.i32($i571,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i575} true;
  goto $bb346, $bb348;
$bb344:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  assume !($i573 == 1);
  goto $bb345;
$bb345:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i579 := $sext.i32.i64($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 9} true;
  assume {:verifier.code 0} true;
  $i580 := $srem.i64($i579,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i581 := $trunc.i64.i32($i580);
  call {:cexpr "a"} boogie_si_record_i32($i581);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 485, 5} true;
  assume {:verifier.code 0} true;
  $i582 := $add.i32($i581,$i581);
  call {:cexpr "a"} boogie_si_record_i32($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i583 := $sext.i32.i64($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 9} true;
  assume {:verifier.code 0} true;
  $i584 := $srem.i64($i583,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i585 := $trunc.i64.i32($i584);
  call {:cexpr "b"} boogie_si_record_i32($i585);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 487, 5} true;
  assume {:verifier.code 0} true;
  $i586 := $add.i32($i585,$i585);
  call {:cexpr "b"} boogie_si_record_i32($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 489, 5} true;
  assume {:verifier.code 0} true;
  $i587 := $add.i32($i574,$i574);
  call {:cexpr "c"} boogie_si_record_i32($i587);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 9} true;
  assume {:verifier.code 0} true;
  $i588 := $slt.i32($i582,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  $i589 := $i587;
  assume {:branchcond $i588} true;
  goto $bb352, $bb353;
$bb346:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume ($i575 == 1);
  goto $bb347;
$bb347:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 481, 9} true;
  assume {:verifier.code 0} true;
  $i578 := $add.i32($i572,1);
  call {:cexpr "c"} boogie_si_record_i32($i578);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 482, 5} true;
  assume {:verifier.code 0} true;
  $i577 := $i578;
  goto $bb351;
$bb348:
  assume !($i575 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 20} true;
  assume {:verifier.code 0} true;
  $i576 := $sgt.i32($i571,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  $i577 := $i572;
  assume {:branchcond $i576} true;
  goto $bb349, $bb350;
$bb349:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume ($i576 == 1);
  goto $bb347;
$bb350:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume !($i576 == 1);
  goto $bb351;
$bb351:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 483, 3} true;
  assume {:verifier.code 0} true;
  $i574 := $i577;
  goto $bb345;
$bb352:
  assume ($i588 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 11} true;
  assume {:verifier.code 0} true;
  $i590 := $slt.i32($i586,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i590} true;
  goto $bb355, $bb357;
$bb353:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  assume !($i588 == 1);
  goto $bb354;
$bb354:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i594 := $sext.i32.i64($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 9} true;
  assume {:verifier.code 0} true;
  $i595 := $srem.i64($i594,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i596 := $trunc.i64.i32($i595);
  call {:cexpr "a"} boogie_si_record_i32($i596);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 496, 5} true;
  assume {:verifier.code 0} true;
  $i597 := $add.i32($i596,$i596);
  call {:cexpr "a"} boogie_si_record_i32($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i598 := $sext.i32.i64($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 9} true;
  assume {:verifier.code 0} true;
  $i599 := $srem.i64($i598,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i600 := $trunc.i64.i32($i599);
  call {:cexpr "b"} boogie_si_record_i32($i600);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 498, 5} true;
  assume {:verifier.code 0} true;
  $i601 := $add.i32($i600,$i600);
  call {:cexpr "b"} boogie_si_record_i32($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 500, 5} true;
  assume {:verifier.code 0} true;
  $i602 := $add.i32($i589,$i589);
  call {:cexpr "c"} boogie_si_record_i32($i602);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 9} true;
  assume {:verifier.code 0} true;
  $i603 := $slt.i32($i597,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  $i604 := $i602;
  assume {:branchcond $i603} true;
  goto $bb361, $bb362;
$bb355:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume ($i590 == 1);
  goto $bb356;
$bb356:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 492, 9} true;
  assume {:verifier.code 0} true;
  $i593 := $add.i32($i587,1);
  call {:cexpr "c"} boogie_si_record_i32($i593);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 493, 5} true;
  assume {:verifier.code 0} true;
  $i592 := $i593;
  goto $bb360;
$bb357:
  assume !($i590 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 20} true;
  assume {:verifier.code 0} true;
  $i591 := $sgt.i32($i586,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  $i592 := $i587;
  assume {:branchcond $i591} true;
  goto $bb358, $bb359;
$bb358:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume ($i591 == 1);
  goto $bb356;
$bb359:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume !($i591 == 1);
  goto $bb360;
$bb360:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 494, 3} true;
  assume {:verifier.code 0} true;
  $i589 := $i592;
  goto $bb354;
$bb361:
  assume ($i603 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 11} true;
  assume {:verifier.code 0} true;
  $i605 := $slt.i32($i601,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i605} true;
  goto $bb364, $bb366;
$bb362:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  assume !($i603 == 1);
  goto $bb363;
$bb363:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i609 := $sext.i32.i64($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 9} true;
  assume {:verifier.code 0} true;
  $i610 := $srem.i64($i609,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i611 := $trunc.i64.i32($i610);
  call {:cexpr "a"} boogie_si_record_i32($i611);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 507, 5} true;
  assume {:verifier.code 0} true;
  $i612 := $add.i32($i611,$i611);
  call {:cexpr "a"} boogie_si_record_i32($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i613 := $sext.i32.i64($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 9} true;
  assume {:verifier.code 0} true;
  $i614 := $srem.i64($i613,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i615 := $trunc.i64.i32($i614);
  call {:cexpr "b"} boogie_si_record_i32($i615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 509, 5} true;
  assume {:verifier.code 0} true;
  $i616 := $add.i32($i615,$i615);
  call {:cexpr "b"} boogie_si_record_i32($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 511, 5} true;
  assume {:verifier.code 0} true;
  $i617 := $add.i32($i604,$i604);
  call {:cexpr "c"} boogie_si_record_i32($i617);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 9} true;
  assume {:verifier.code 0} true;
  $i618 := $slt.i32($i612,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  $i619 := $i617;
  assume {:branchcond $i618} true;
  goto $bb370, $bb371;
$bb364:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume ($i605 == 1);
  goto $bb365;
$bb365:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 503, 9} true;
  assume {:verifier.code 0} true;
  $i608 := $add.i32($i602,1);
  call {:cexpr "c"} boogie_si_record_i32($i608);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 504, 5} true;
  assume {:verifier.code 0} true;
  $i607 := $i608;
  goto $bb369;
$bb366:
  assume !($i605 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 20} true;
  assume {:verifier.code 0} true;
  $i606 := $sgt.i32($i601,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  $i607 := $i602;
  assume {:branchcond $i606} true;
  goto $bb367, $bb368;
$bb367:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume ($i606 == 1);
  goto $bb365;
$bb368:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume !($i606 == 1);
  goto $bb369;
$bb369:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 505, 3} true;
  assume {:verifier.code 0} true;
  $i604 := $i607;
  goto $bb363;
$bb370:
  assume ($i618 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 11} true;
  assume {:verifier.code 0} true;
  $i620 := $slt.i32($i616,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i620} true;
  goto $bb373, $bb375;
$bb371:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  assume !($i618 == 1);
  goto $bb372;
$bb372:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i624 := $sext.i32.i64($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 9} true;
  assume {:verifier.code 0} true;
  $i625 := $srem.i64($i624,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i626 := $trunc.i64.i32($i625);
  call {:cexpr "a"} boogie_si_record_i32($i626);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 518, 5} true;
  assume {:verifier.code 0} true;
  $i627 := $add.i32($i626,$i626);
  call {:cexpr "a"} boogie_si_record_i32($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i628 := $sext.i32.i64($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 9} true;
  assume {:verifier.code 0} true;
  $i629 := $srem.i64($i628,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i630 := $trunc.i64.i32($i629);
  call {:cexpr "b"} boogie_si_record_i32($i630);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 520, 5} true;
  assume {:verifier.code 0} true;
  $i631 := $add.i32($i630,$i630);
  call {:cexpr "b"} boogie_si_record_i32($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 522, 5} true;
  assume {:verifier.code 0} true;
  $i632 := $add.i32($i619,$i619);
  call {:cexpr "c"} boogie_si_record_i32($i632);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 9} true;
  assume {:verifier.code 0} true;
  $i633 := $slt.i32($i627,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  $i634 := $i632;
  assume {:branchcond $i633} true;
  goto $bb379, $bb380;
$bb373:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume ($i620 == 1);
  goto $bb374;
$bb374:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 514, 9} true;
  assume {:verifier.code 0} true;
  $i623 := $add.i32($i617,1);
  call {:cexpr "c"} boogie_si_record_i32($i623);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 515, 5} true;
  assume {:verifier.code 0} true;
  $i622 := $i623;
  goto $bb378;
$bb375:
  assume !($i620 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 20} true;
  assume {:verifier.code 0} true;
  $i621 := $sgt.i32($i616,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  $i622 := $i617;
  assume {:branchcond $i621} true;
  goto $bb376, $bb377;
$bb376:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume ($i621 == 1);
  goto $bb374;
$bb377:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume !($i621 == 1);
  goto $bb378;
$bb378:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 516, 3} true;
  assume {:verifier.code 0} true;
  $i619 := $i622;
  goto $bb372;
$bb379:
  assume ($i633 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 11} true;
  assume {:verifier.code 0} true;
  $i635 := $slt.i32($i631,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i635} true;
  goto $bb382, $bb384;
$bb380:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  assume !($i633 == 1);
  goto $bb381;
$bb381:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i639 := $sext.i32.i64($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 9} true;
  assume {:verifier.code 0} true;
  $i640 := $srem.i64($i639,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i641 := $trunc.i64.i32($i640);
  call {:cexpr "a"} boogie_si_record_i32($i641);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 529, 5} true;
  assume {:verifier.code 0} true;
  $i642 := $add.i32($i641,$i641);
  call {:cexpr "a"} boogie_si_record_i32($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i643 := $sext.i32.i64($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 9} true;
  assume {:verifier.code 0} true;
  $i644 := $srem.i64($i643,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i645 := $trunc.i64.i32($i644);
  call {:cexpr "b"} boogie_si_record_i32($i645);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 531, 5} true;
  assume {:verifier.code 0} true;
  $i646 := $add.i32($i645,$i645);
  call {:cexpr "b"} boogie_si_record_i32($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 533, 5} true;
  assume {:verifier.code 0} true;
  $i647 := $add.i32($i634,$i634);
  call {:cexpr "c"} boogie_si_record_i32($i647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 9} true;
  assume {:verifier.code 0} true;
  $i648 := $slt.i32($i642,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  $i649 := $i647;
  assume {:branchcond $i648} true;
  goto $bb388, $bb389;
$bb382:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume ($i635 == 1);
  goto $bb383;
$bb383:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 525, 9} true;
  assume {:verifier.code 0} true;
  $i638 := $add.i32($i632,1);
  call {:cexpr "c"} boogie_si_record_i32($i638);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 526, 5} true;
  assume {:verifier.code 0} true;
  $i637 := $i638;
  goto $bb387;
$bb384:
  assume !($i635 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 20} true;
  assume {:verifier.code 0} true;
  $i636 := $sgt.i32($i631,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  $i637 := $i632;
  assume {:branchcond $i636} true;
  goto $bb385, $bb386;
$bb385:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume ($i636 == 1);
  goto $bb383;
$bb386:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume !($i636 == 1);
  goto $bb387;
$bb387:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 527, 3} true;
  assume {:verifier.code 0} true;
  $i634 := $i637;
  goto $bb381;
$bb388:
  assume ($i648 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 11} true;
  assume {:verifier.code 0} true;
  $i650 := $slt.i32($i646,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i650} true;
  goto $bb391, $bb393;
$bb389:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  assume !($i648 == 1);
  goto $bb390;
$bb390:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i654 := $sext.i32.i64($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 9} true;
  assume {:verifier.code 0} true;
  $i655 := $srem.i64($i654,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i656 := $trunc.i64.i32($i655);
  call {:cexpr "a"} boogie_si_record_i32($i656);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 540, 5} true;
  assume {:verifier.code 0} true;
  $i657 := $add.i32($i656,$i656);
  call {:cexpr "a"} boogie_si_record_i32($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i658 := $sext.i32.i64($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 9} true;
  assume {:verifier.code 0} true;
  $i659 := $srem.i64($i658,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i660 := $trunc.i64.i32($i659);
  call {:cexpr "b"} boogie_si_record_i32($i660);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 542, 5} true;
  assume {:verifier.code 0} true;
  $i661 := $add.i32($i660,$i660);
  call {:cexpr "b"} boogie_si_record_i32($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 5} true;
  assume {:verifier.code 0} true;
  $i662 := $add.i32($i649,$i649);
  call {:cexpr "c"} boogie_si_record_i32($i662);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 9} true;
  assume {:verifier.code 0} true;
  $i663 := $slt.i32($i657,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  $i664 := $i662;
  assume {:branchcond $i663} true;
  goto $bb397, $bb398;
$bb391:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume ($i650 == 1);
  goto $bb392;
$bb392:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 536, 9} true;
  assume {:verifier.code 0} true;
  $i653 := $add.i32($i647,1);
  call {:cexpr "c"} boogie_si_record_i32($i653);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 537, 5} true;
  assume {:verifier.code 0} true;
  $i652 := $i653;
  goto $bb396;
$bb393:
  assume !($i650 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 20} true;
  assume {:verifier.code 0} true;
  $i651 := $sgt.i32($i646,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  $i652 := $i647;
  assume {:branchcond $i651} true;
  goto $bb394, $bb395;
$bb394:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume ($i651 == 1);
  goto $bb392;
$bb395:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume !($i651 == 1);
  goto $bb396;
$bb396:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 538, 3} true;
  assume {:verifier.code 0} true;
  $i649 := $i652;
  goto $bb390;
$bb397:
  assume ($i663 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 11} true;
  assume {:verifier.code 0} true;
  $i665 := $slt.i32($i661,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i665} true;
  goto $bb400, $bb402;
$bb398:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  assume !($i663 == 1);
  goto $bb399;
$bb399:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i669 := $sext.i32.i64($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 9} true;
  assume {:verifier.code 0} true;
  $i670 := $srem.i64($i669,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i671 := $trunc.i64.i32($i670);
  call {:cexpr "a"} boogie_si_record_i32($i671);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 551, 5} true;
  assume {:verifier.code 0} true;
  $i672 := $add.i32($i671,$i671);
  call {:cexpr "a"} boogie_si_record_i32($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i673 := $sext.i32.i64($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 9} true;
  assume {:verifier.code 0} true;
  $i674 := $srem.i64($i673,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i675 := $trunc.i64.i32($i674);
  call {:cexpr "b"} boogie_si_record_i32($i675);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 553, 5} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i32($i675,$i675);
  call {:cexpr "b"} boogie_si_record_i32($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 555, 5} true;
  assume {:verifier.code 0} true;
  $i677 := $add.i32($i664,$i664);
  call {:cexpr "c"} boogie_si_record_i32($i677);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 9} true;
  assume {:verifier.code 0} true;
  $i678 := $slt.i32($i672,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  $i679 := $i677;
  assume {:branchcond $i678} true;
  goto $bb406, $bb407;
$bb400:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume ($i665 == 1);
  goto $bb401;
$bb401:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 547, 9} true;
  assume {:verifier.code 0} true;
  $i668 := $add.i32($i662,1);
  call {:cexpr "c"} boogie_si_record_i32($i668);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 5} true;
  assume {:verifier.code 0} true;
  $i667 := $i668;
  goto $bb405;
$bb402:
  assume !($i665 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 20} true;
  assume {:verifier.code 0} true;
  $i666 := $sgt.i32($i661,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  $i667 := $i662;
  assume {:branchcond $i666} true;
  goto $bb403, $bb404;
$bb403:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume ($i666 == 1);
  goto $bb401;
$bb404:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume !($i666 == 1);
  goto $bb405;
$bb405:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 549, 3} true;
  assume {:verifier.code 0} true;
  $i664 := $i667;
  goto $bb399;
$bb406:
  assume ($i678 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 11} true;
  assume {:verifier.code 0} true;
  $i680 := $slt.i32($i676,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i680} true;
  goto $bb409, $bb411;
$bb407:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  assume !($i678 == 1);
  goto $bb408;
$bb408:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i684 := $sext.i32.i64($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 9} true;
  assume {:verifier.code 0} true;
  $i685 := $srem.i64($i684,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i686 := $trunc.i64.i32($i685);
  call {:cexpr "a"} boogie_si_record_i32($i686);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 562, 5} true;
  assume {:verifier.code 0} true;
  $i687 := $add.i32($i686,$i686);
  call {:cexpr "a"} boogie_si_record_i32($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i688 := $sext.i32.i64($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 9} true;
  assume {:verifier.code 0} true;
  $i689 := $srem.i64($i688,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i690 := $trunc.i64.i32($i689);
  call {:cexpr "b"} boogie_si_record_i32($i690);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 564, 5} true;
  assume {:verifier.code 0} true;
  $i691 := $add.i32($i690,$i690);
  call {:cexpr "b"} boogie_si_record_i32($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 566, 5} true;
  assume {:verifier.code 0} true;
  $i692 := $add.i32($i679,$i679);
  call {:cexpr "c"} boogie_si_record_i32($i692);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 9} true;
  assume {:verifier.code 0} true;
  $i693 := $slt.i32($i687,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  $i694 := $i692;
  assume {:branchcond $i693} true;
  goto $bb415, $bb416;
$bb409:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume ($i680 == 1);
  goto $bb410;
$bb410:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 558, 9} true;
  assume {:verifier.code 0} true;
  $i683 := $add.i32($i677,1);
  call {:cexpr "c"} boogie_si_record_i32($i683);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 559, 5} true;
  assume {:verifier.code 0} true;
  $i682 := $i683;
  goto $bb414;
$bb411:
  assume !($i680 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 20} true;
  assume {:verifier.code 0} true;
  $i681 := $sgt.i32($i676,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  $i682 := $i677;
  assume {:branchcond $i681} true;
  goto $bb412, $bb413;
$bb412:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume ($i681 == 1);
  goto $bb410;
$bb413:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume !($i681 == 1);
  goto $bb414;
$bb414:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 560, 3} true;
  assume {:verifier.code 0} true;
  $i679 := $i682;
  goto $bb408;
$bb415:
  assume ($i693 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 11} true;
  assume {:verifier.code 0} true;
  $i695 := $slt.i32($i691,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i695} true;
  goto $bb418, $bb420;
$bb416:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  assume !($i693 == 1);
  goto $bb417;
$bb417:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i699 := $sext.i32.i64($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 9} true;
  assume {:verifier.code 0} true;
  $i700 := $srem.i64($i699,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i701 := $trunc.i64.i32($i700);
  call {:cexpr "a"} boogie_si_record_i32($i701);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 573, 5} true;
  assume {:verifier.code 0} true;
  $i702 := $add.i32($i701,$i701);
  call {:cexpr "a"} boogie_si_record_i32($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i703 := $sext.i32.i64($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 9} true;
  assume {:verifier.code 0} true;
  $i704 := $srem.i64($i703,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i705 := $trunc.i64.i32($i704);
  call {:cexpr "b"} boogie_si_record_i32($i705);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 575, 5} true;
  assume {:verifier.code 0} true;
  $i706 := $add.i32($i705,$i705);
  call {:cexpr "b"} boogie_si_record_i32($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 577, 5} true;
  assume {:verifier.code 0} true;
  $i707 := $add.i32($i694,$i694);
  call {:cexpr "c"} boogie_si_record_i32($i707);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 9} true;
  assume {:verifier.code 0} true;
  $i708 := $slt.i32($i702,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  $i709 := $i707;
  assume {:branchcond $i708} true;
  goto $bb424, $bb425;
$bb418:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume ($i695 == 1);
  goto $bb419;
$bb419:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 569, 9} true;
  assume {:verifier.code 0} true;
  $i698 := $add.i32($i692,1);
  call {:cexpr "c"} boogie_si_record_i32($i698);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 570, 5} true;
  assume {:verifier.code 0} true;
  $i697 := $i698;
  goto $bb423;
$bb420:
  assume !($i695 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 20} true;
  assume {:verifier.code 0} true;
  $i696 := $sgt.i32($i691,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  $i697 := $i692;
  assume {:branchcond $i696} true;
  goto $bb421, $bb422;
$bb421:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume ($i696 == 1);
  goto $bb419;
$bb422:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume !($i696 == 1);
  goto $bb423;
$bb423:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 571, 3} true;
  assume {:verifier.code 0} true;
  $i694 := $i697;
  goto $bb417;
$bb424:
  assume ($i708 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 11} true;
  assume {:verifier.code 0} true;
  $i710 := $slt.i32($i706,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i710} true;
  goto $bb427, $bb429;
$bb425:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  assume !($i708 == 1);
  goto $bb426;
$bb426:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i714 := $sext.i32.i64($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 9} true;
  assume {:verifier.code 0} true;
  $i715 := $srem.i64($i714,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i716 := $trunc.i64.i32($i715);
  call {:cexpr "a"} boogie_si_record_i32($i716);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 584, 5} true;
  assume {:verifier.code 0} true;
  $i717 := $add.i32($i716,$i716);
  call {:cexpr "a"} boogie_si_record_i32($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i718 := $sext.i32.i64($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 9} true;
  assume {:verifier.code 0} true;
  $i719 := $srem.i64($i718,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i720 := $trunc.i64.i32($i719);
  call {:cexpr "b"} boogie_si_record_i32($i720);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 586, 5} true;
  assume {:verifier.code 0} true;
  $i721 := $add.i32($i720,$i720);
  call {:cexpr "b"} boogie_si_record_i32($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 588, 5} true;
  assume {:verifier.code 0} true;
  $i722 := $add.i32($i709,$i709);
  call {:cexpr "c"} boogie_si_record_i32($i722);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 9} true;
  assume {:verifier.code 0} true;
  $i723 := $slt.i32($i717,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  $i724 := $i722;
  assume {:branchcond $i723} true;
  goto $bb433, $bb434;
$bb427:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume ($i710 == 1);
  goto $bb428;
$bb428:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 580, 9} true;
  assume {:verifier.code 0} true;
  $i713 := $add.i32($i707,1);
  call {:cexpr "c"} boogie_si_record_i32($i713);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 581, 5} true;
  assume {:verifier.code 0} true;
  $i712 := $i713;
  goto $bb432;
$bb429:
  assume !($i710 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 20} true;
  assume {:verifier.code 0} true;
  $i711 := $sgt.i32($i706,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  $i712 := $i707;
  assume {:branchcond $i711} true;
  goto $bb430, $bb431;
$bb430:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume ($i711 == 1);
  goto $bb428;
$bb431:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume !($i711 == 1);
  goto $bb432;
$bb432:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 582, 3} true;
  assume {:verifier.code 0} true;
  $i709 := $i712;
  goto $bb426;
$bb433:
  assume ($i723 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 11} true;
  assume {:verifier.code 0} true;
  $i725 := $slt.i32($i721,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i725} true;
  goto $bb436, $bb438;
$bb434:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  assume !($i723 == 1);
  goto $bb435;
$bb435:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i729 := $sext.i32.i64($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 9} true;
  assume {:verifier.code 0} true;
  $i730 := $srem.i64($i729,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i731 := $trunc.i64.i32($i730);
  call {:cexpr "a"} boogie_si_record_i32($i731);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 595, 5} true;
  assume {:verifier.code 0} true;
  $i732 := $add.i32($i731,$i731);
  call {:cexpr "a"} boogie_si_record_i32($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i733 := $sext.i32.i64($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 9} true;
  assume {:verifier.code 0} true;
  $i734 := $srem.i64($i733,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i735 := $trunc.i64.i32($i734);
  call {:cexpr "b"} boogie_si_record_i32($i735);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 597, 5} true;
  assume {:verifier.code 0} true;
  $i736 := $add.i32($i735,$i735);
  call {:cexpr "b"} boogie_si_record_i32($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 599, 5} true;
  assume {:verifier.code 0} true;
  $i737 := $add.i32($i724,$i724);
  call {:cexpr "c"} boogie_si_record_i32($i737);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 9} true;
  assume {:verifier.code 0} true;
  $i738 := $slt.i32($i732,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $i739 := $i737;
  assume {:branchcond $i738} true;
  goto $bb442, $bb443;
$bb436:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume ($i725 == 1);
  goto $bb437;
$bb437:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 591, 9} true;
  assume {:verifier.code 0} true;
  $i728 := $add.i32($i722,1);
  call {:cexpr "c"} boogie_si_record_i32($i728);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 592, 5} true;
  assume {:verifier.code 0} true;
  $i727 := $i728;
  goto $bb441;
$bb438:
  assume !($i725 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 20} true;
  assume {:verifier.code 0} true;
  $i726 := $sgt.i32($i721,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  $i727 := $i722;
  assume {:branchcond $i726} true;
  goto $bb439, $bb440;
$bb439:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume ($i726 == 1);
  goto $bb437;
$bb440:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume !($i726 == 1);
  goto $bb441;
$bb441:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 593, 3} true;
  assume {:verifier.code 0} true;
  $i724 := $i727;
  goto $bb435;
$bb442:
  assume ($i738 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 11} true;
  assume {:verifier.code 0} true;
  $i740 := $slt.i32($i736,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i740} true;
  goto $bb445, $bb447;
$bb443:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  assume !($i738 == 1);
  goto $bb444;
$bb444:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i744 := $sext.i32.i64($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 9} true;
  assume {:verifier.code 0} true;
  $i745 := $srem.i64($i744,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i746 := $trunc.i64.i32($i745);
  call {:cexpr "a"} boogie_si_record_i32($i746);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 606, 5} true;
  assume {:verifier.code 0} true;
  $i747 := $add.i32($i746,$i746);
  call {:cexpr "a"} boogie_si_record_i32($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i748 := $sext.i32.i64($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 9} true;
  assume {:verifier.code 0} true;
  $i749 := $srem.i64($i748,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i750 := $trunc.i64.i32($i749);
  call {:cexpr "b"} boogie_si_record_i32($i750);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 608, 5} true;
  assume {:verifier.code 0} true;
  $i751 := $add.i32($i750,$i750);
  call {:cexpr "b"} boogie_si_record_i32($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 610, 5} true;
  assume {:verifier.code 0} true;
  $i752 := $add.i32($i739,$i739);
  call {:cexpr "c"} boogie_si_record_i32($i752);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 9} true;
  assume {:verifier.code 0} true;
  $i753 := $slt.i32($i747,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  $i754 := $i752;
  assume {:branchcond $i753} true;
  goto $bb451, $bb452;
$bb445:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume ($i740 == 1);
  goto $bb446;
$bb446:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 602, 9} true;
  assume {:verifier.code 0} true;
  $i743 := $add.i32($i737,1);
  call {:cexpr "c"} boogie_si_record_i32($i743);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 603, 5} true;
  assume {:verifier.code 0} true;
  $i742 := $i743;
  goto $bb450;
$bb447:
  assume !($i740 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 20} true;
  assume {:verifier.code 0} true;
  $i741 := $sgt.i32($i736,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  $i742 := $i737;
  assume {:branchcond $i741} true;
  goto $bb448, $bb449;
$bb448:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume ($i741 == 1);
  goto $bb446;
$bb449:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume !($i741 == 1);
  goto $bb450;
$bb450:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i739 := $i742;
  goto $bb444;
$bb451:
  assume ($i753 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 11} true;
  assume {:verifier.code 0} true;
  $i755 := $slt.i32($i751,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i755} true;
  goto $bb454, $bb456;
$bb452:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  assume !($i753 == 1);
  goto $bb453;
$bb453:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i759 := $sext.i32.i64($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 9} true;
  assume {:verifier.code 0} true;
  $i760 := $srem.i64($i759,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i761 := $trunc.i64.i32($i760);
  call {:cexpr "a"} boogie_si_record_i32($i761);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 617, 5} true;
  assume {:verifier.code 0} true;
  $i762 := $add.i32($i761,$i761);
  call {:cexpr "a"} boogie_si_record_i32($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i763 := $sext.i32.i64($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 9} true;
  assume {:verifier.code 0} true;
  $i764 := $srem.i64($i763,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i765 := $trunc.i64.i32($i764);
  call {:cexpr "b"} boogie_si_record_i32($i765);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 619, 5} true;
  assume {:verifier.code 0} true;
  $i766 := $add.i32($i765,$i765);
  call {:cexpr "b"} boogie_si_record_i32($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 621, 5} true;
  assume {:verifier.code 0} true;
  $i767 := $add.i32($i754,$i754);
  call {:cexpr "c"} boogie_si_record_i32($i767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 9} true;
  assume {:verifier.code 0} true;
  $i768 := $slt.i32($i762,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  $i769 := $i767;
  assume {:branchcond $i768} true;
  goto $bb460, $bb461;
$bb454:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume ($i755 == 1);
  goto $bb455;
$bb455:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 613, 9} true;
  assume {:verifier.code 0} true;
  $i758 := $add.i32($i752,1);
  call {:cexpr "c"} boogie_si_record_i32($i758);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 614, 5} true;
  assume {:verifier.code 0} true;
  $i757 := $i758;
  goto $bb459;
$bb456:
  assume !($i755 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 20} true;
  assume {:verifier.code 0} true;
  $i756 := $sgt.i32($i751,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  $i757 := $i752;
  assume {:branchcond $i756} true;
  goto $bb457, $bb458;
$bb457:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume ($i756 == 1);
  goto $bb455;
$bb458:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume !($i756 == 1);
  goto $bb459;
$bb459:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 615, 3} true;
  assume {:verifier.code 0} true;
  $i754 := $i757;
  goto $bb453;
$bb460:
  assume ($i768 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 11} true;
  assume {:verifier.code 0} true;
  $i770 := $slt.i32($i766,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i770} true;
  goto $bb463, $bb465;
$bb461:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  assume !($i768 == 1);
  goto $bb462;
$bb462:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i774 := $sext.i32.i64($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 9} true;
  assume {:verifier.code 0} true;
  $i775 := $srem.i64($i774,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i776 := $trunc.i64.i32($i775);
  call {:cexpr "a"} boogie_si_record_i32($i776);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 628, 5} true;
  assume {:verifier.code 0} true;
  $i777 := $add.i32($i776,$i776);
  call {:cexpr "a"} boogie_si_record_i32($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i778 := $sext.i32.i64($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 9} true;
  assume {:verifier.code 0} true;
  $i779 := $srem.i64($i778,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i780 := $trunc.i64.i32($i779);
  call {:cexpr "b"} boogie_si_record_i32($i780);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 630, 5} true;
  assume {:verifier.code 0} true;
  $i781 := $add.i32($i780,$i780);
  call {:cexpr "b"} boogie_si_record_i32($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 632, 5} true;
  assume {:verifier.code 0} true;
  $i782 := $add.i32($i769,$i769);
  call {:cexpr "c"} boogie_si_record_i32($i782);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 9} true;
  assume {:verifier.code 0} true;
  $i783 := $slt.i32($i777,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  $i784 := $i782;
  assume {:branchcond $i783} true;
  goto $bb469, $bb470;
$bb463:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume ($i770 == 1);
  goto $bb464;
$bb464:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 624, 9} true;
  assume {:verifier.code 0} true;
  $i773 := $add.i32($i767,1);
  call {:cexpr "c"} boogie_si_record_i32($i773);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 625, 5} true;
  assume {:verifier.code 0} true;
  $i772 := $i773;
  goto $bb468;
$bb465:
  assume !($i770 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 20} true;
  assume {:verifier.code 0} true;
  $i771 := $sgt.i32($i766,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  $i772 := $i767;
  assume {:branchcond $i771} true;
  goto $bb466, $bb467;
$bb466:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume ($i771 == 1);
  goto $bb464;
$bb467:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume !($i771 == 1);
  goto $bb468;
$bb468:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 626, 3} true;
  assume {:verifier.code 0} true;
  $i769 := $i772;
  goto $bb462;
$bb469:
  assume ($i783 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 11} true;
  assume {:verifier.code 0} true;
  $i785 := $slt.i32($i781,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i785} true;
  goto $bb472, $bb474;
$bb470:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  assume !($i783 == 1);
  goto $bb471;
$bb471:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i789 := $sext.i32.i64($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 9} true;
  assume {:verifier.code 0} true;
  $i790 := $srem.i64($i789,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i791 := $trunc.i64.i32($i790);
  call {:cexpr "a"} boogie_si_record_i32($i791);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 639, 5} true;
  assume {:verifier.code 0} true;
  $i792 := $add.i32($i791,$i791);
  call {:cexpr "a"} boogie_si_record_i32($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i793 := $sext.i32.i64($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 9} true;
  assume {:verifier.code 0} true;
  $i794 := $srem.i64($i793,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i795 := $trunc.i64.i32($i794);
  call {:cexpr "b"} boogie_si_record_i32($i795);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 641, 5} true;
  assume {:verifier.code 0} true;
  $i796 := $add.i32($i795,$i795);
  call {:cexpr "b"} boogie_si_record_i32($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 643, 5} true;
  assume {:verifier.code 0} true;
  $i797 := $add.i32($i784,$i784);
  call {:cexpr "c"} boogie_si_record_i32($i797);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 9} true;
  assume {:verifier.code 0} true;
  $i798 := $slt.i32($i792,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  $i799 := $i797;
  assume {:branchcond $i798} true;
  goto $bb478, $bb479;
$bb472:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume ($i785 == 1);
  goto $bb473;
$bb473:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 635, 9} true;
  assume {:verifier.code 0} true;
  $i788 := $add.i32($i782,1);
  call {:cexpr "c"} boogie_si_record_i32($i788);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 636, 5} true;
  assume {:verifier.code 0} true;
  $i787 := $i788;
  goto $bb477;
$bb474:
  assume !($i785 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 20} true;
  assume {:verifier.code 0} true;
  $i786 := $sgt.i32($i781,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  $i787 := $i782;
  assume {:branchcond $i786} true;
  goto $bb475, $bb476;
$bb475:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume ($i786 == 1);
  goto $bb473;
$bb476:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume !($i786 == 1);
  goto $bb477;
$bb477:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 637, 3} true;
  assume {:verifier.code 0} true;
  $i784 := $i787;
  goto $bb471;
$bb478:
  assume ($i798 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 11} true;
  assume {:verifier.code 0} true;
  $i800 := $slt.i32($i796,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i800} true;
  goto $bb481, $bb483;
$bb479:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  assume !($i798 == 1);
  goto $bb480;
$bb480:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i804 := $sext.i32.i64($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 9} true;
  assume {:verifier.code 0} true;
  $i805 := $srem.i64($i804,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i806 := $trunc.i64.i32($i805);
  call {:cexpr "a"} boogie_si_record_i32($i806);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 650, 5} true;
  assume {:verifier.code 0} true;
  $i807 := $add.i32($i806,$i806);
  call {:cexpr "a"} boogie_si_record_i32($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i808 := $sext.i32.i64($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 9} true;
  assume {:verifier.code 0} true;
  $i809 := $srem.i64($i808,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i810 := $trunc.i64.i32($i809);
  call {:cexpr "b"} boogie_si_record_i32($i810);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 652, 5} true;
  assume {:verifier.code 0} true;
  $i811 := $add.i32($i810,$i810);
  call {:cexpr "b"} boogie_si_record_i32($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 654, 5} true;
  assume {:verifier.code 0} true;
  $i812 := $add.i32($i799,$i799);
  call {:cexpr "c"} boogie_si_record_i32($i812);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 9} true;
  assume {:verifier.code 0} true;
  $i813 := $slt.i32($i807,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  $i814 := $i812;
  assume {:branchcond $i813} true;
  goto $bb487, $bb488;
$bb481:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume ($i800 == 1);
  goto $bb482;
$bb482:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 646, 9} true;
  assume {:verifier.code 0} true;
  $i803 := $add.i32($i797,1);
  call {:cexpr "c"} boogie_si_record_i32($i803);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 647, 5} true;
  assume {:verifier.code 0} true;
  $i802 := $i803;
  goto $bb486;
$bb483:
  assume !($i800 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 20} true;
  assume {:verifier.code 0} true;
  $i801 := $sgt.i32($i796,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  $i802 := $i797;
  assume {:branchcond $i801} true;
  goto $bb484, $bb485;
$bb484:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume ($i801 == 1);
  goto $bb482;
$bb485:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume !($i801 == 1);
  goto $bb486;
$bb486:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 648, 3} true;
  assume {:verifier.code 0} true;
  $i799 := $i802;
  goto $bb480;
$bb487:
  assume ($i813 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 11} true;
  assume {:verifier.code 0} true;
  $i815 := $slt.i32($i811,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i815} true;
  goto $bb490, $bb492;
$bb488:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  assume !($i813 == 1);
  goto $bb489;
$bb489:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i819 := $sext.i32.i64($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 9} true;
  assume {:verifier.code 0} true;
  $i820 := $srem.i64($i819,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i821 := $trunc.i64.i32($i820);
  call {:cexpr "a"} boogie_si_record_i32($i821);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 661, 5} true;
  assume {:verifier.code 0} true;
  $i822 := $add.i32($i821,$i821);
  call {:cexpr "a"} boogie_si_record_i32($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i823 := $sext.i32.i64($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 9} true;
  assume {:verifier.code 0} true;
  $i824 := $srem.i64($i823,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i825 := $trunc.i64.i32($i824);
  call {:cexpr "b"} boogie_si_record_i32($i825);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 663, 5} true;
  assume {:verifier.code 0} true;
  $i826 := $add.i32($i825,$i825);
  call {:cexpr "b"} boogie_si_record_i32($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 665, 5} true;
  assume {:verifier.code 0} true;
  $i827 := $add.i32($i814,$i814);
  call {:cexpr "c"} boogie_si_record_i32($i827);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 9} true;
  assume {:verifier.code 0} true;
  $i828 := $slt.i32($i822,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  $i829 := $i827;
  assume {:branchcond $i828} true;
  goto $bb496, $bb497;
$bb490:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume ($i815 == 1);
  goto $bb491;
$bb491:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 657, 9} true;
  assume {:verifier.code 0} true;
  $i818 := $add.i32($i812,1);
  call {:cexpr "c"} boogie_si_record_i32($i818);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 658, 5} true;
  assume {:verifier.code 0} true;
  $i817 := $i818;
  goto $bb495;
$bb492:
  assume !($i815 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 20} true;
  assume {:verifier.code 0} true;
  $i816 := $sgt.i32($i811,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  $i817 := $i812;
  assume {:branchcond $i816} true;
  goto $bb493, $bb494;
$bb493:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume ($i816 == 1);
  goto $bb491;
$bb494:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume !($i816 == 1);
  goto $bb495;
$bb495:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 659, 3} true;
  assume {:verifier.code 0} true;
  $i814 := $i817;
  goto $bb489;
$bb496:
  assume ($i828 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 11} true;
  assume {:verifier.code 0} true;
  $i830 := $slt.i32($i826,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i830} true;
  goto $bb499, $bb501;
$bb497:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  assume !($i828 == 1);
  goto $bb498;
$bb498:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i834 := $sext.i32.i64($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 9} true;
  assume {:verifier.code 0} true;
  $i835 := $srem.i64($i834,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i836 := $trunc.i64.i32($i835);
  call {:cexpr "a"} boogie_si_record_i32($i836);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 672, 5} true;
  assume {:verifier.code 0} true;
  $i837 := $add.i32($i836,$i836);
  call {:cexpr "a"} boogie_si_record_i32($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i838 := $sext.i32.i64($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 9} true;
  assume {:verifier.code 0} true;
  $i839 := $srem.i64($i838,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i840 := $trunc.i64.i32($i839);
  call {:cexpr "b"} boogie_si_record_i32($i840);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 674, 5} true;
  assume {:verifier.code 0} true;
  $i841 := $add.i32($i840,$i840);
  call {:cexpr "b"} boogie_si_record_i32($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 676, 5} true;
  assume {:verifier.code 0} true;
  $i842 := $add.i32($i829,$i829);
  call {:cexpr "c"} boogie_si_record_i32($i842);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 9} true;
  assume {:verifier.code 0} true;
  $i843 := $slt.i32($i837,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  $i844 := $i842;
  assume {:branchcond $i843} true;
  goto $bb505, $bb506;
$bb499:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume ($i830 == 1);
  goto $bb500;
$bb500:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 668, 9} true;
  assume {:verifier.code 0} true;
  $i833 := $add.i32($i827,1);
  call {:cexpr "c"} boogie_si_record_i32($i833);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 669, 5} true;
  assume {:verifier.code 0} true;
  $i832 := $i833;
  goto $bb504;
$bb501:
  assume !($i830 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 20} true;
  assume {:verifier.code 0} true;
  $i831 := $sgt.i32($i826,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  $i832 := $i827;
  assume {:branchcond $i831} true;
  goto $bb502, $bb503;
$bb502:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume ($i831 == 1);
  goto $bb500;
$bb503:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume !($i831 == 1);
  goto $bb504;
$bb504:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $i829 := $i832;
  goto $bb498;
$bb505:
  assume ($i843 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 11} true;
  assume {:verifier.code 0} true;
  $i845 := $slt.i32($i841,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i845} true;
  goto $bb508, $bb510;
$bb506:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  assume !($i843 == 1);
  goto $bb507;
$bb507:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i849 := $sext.i32.i64($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 9} true;
  assume {:verifier.code 0} true;
  $i850 := $srem.i64($i849,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i851 := $trunc.i64.i32($i850);
  call {:cexpr "a"} boogie_si_record_i32($i851);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 683, 5} true;
  assume {:verifier.code 0} true;
  $i852 := $add.i32($i851,$i851);
  call {:cexpr "a"} boogie_si_record_i32($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i853 := $sext.i32.i64($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 9} true;
  assume {:verifier.code 0} true;
  $i854 := $srem.i64($i853,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i855 := $trunc.i64.i32($i854);
  call {:cexpr "b"} boogie_si_record_i32($i855);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 685, 5} true;
  assume {:verifier.code 0} true;
  $i856 := $add.i32($i855,$i855);
  call {:cexpr "b"} boogie_si_record_i32($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 687, 5} true;
  assume {:verifier.code 0} true;
  $i857 := $add.i32($i844,$i844);
  call {:cexpr "c"} boogie_si_record_i32($i857);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 9} true;
  assume {:verifier.code 0} true;
  $i858 := $slt.i32($i852,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  $i859 := $i857;
  assume {:branchcond $i858} true;
  goto $bb514, $bb515;
$bb508:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume ($i845 == 1);
  goto $bb509;
$bb509:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 679, 9} true;
  assume {:verifier.code 0} true;
  $i848 := $add.i32($i842,1);
  call {:cexpr "c"} boogie_si_record_i32($i848);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 680, 5} true;
  assume {:verifier.code 0} true;
  $i847 := $i848;
  goto $bb513;
$bb510:
  assume !($i845 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 20} true;
  assume {:verifier.code 0} true;
  $i846 := $sgt.i32($i841,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  $i847 := $i842;
  assume {:branchcond $i846} true;
  goto $bb511, $bb512;
$bb511:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume ($i846 == 1);
  goto $bb509;
$bb512:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume !($i846 == 1);
  goto $bb513;
$bb513:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 681, 3} true;
  assume {:verifier.code 0} true;
  $i844 := $i847;
  goto $bb507;
$bb514:
  assume ($i858 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 11} true;
  assume {:verifier.code 0} true;
  $i860 := $slt.i32($i856,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i860} true;
  goto $bb517, $bb519;
$bb515:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  assume !($i858 == 1);
  goto $bb516;
$bb516:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i864 := $sext.i32.i64($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 9} true;
  assume {:verifier.code 0} true;
  $i865 := $srem.i64($i864,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i866 := $trunc.i64.i32($i865);
  call {:cexpr "a"} boogie_si_record_i32($i866);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 694, 5} true;
  assume {:verifier.code 0} true;
  $i867 := $add.i32($i866,$i866);
  call {:cexpr "a"} boogie_si_record_i32($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i868 := $sext.i32.i64($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 9} true;
  assume {:verifier.code 0} true;
  $i869 := $srem.i64($i868,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i870 := $trunc.i64.i32($i869);
  call {:cexpr "b"} boogie_si_record_i32($i870);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 696, 5} true;
  assume {:verifier.code 0} true;
  $i871 := $add.i32($i870,$i870);
  call {:cexpr "b"} boogie_si_record_i32($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 698, 5} true;
  assume {:verifier.code 0} true;
  $i872 := $add.i32($i859,$i859);
  call {:cexpr "c"} boogie_si_record_i32($i872);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 9} true;
  assume {:verifier.code 0} true;
  $i873 := $slt.i32($i867,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  $i874 := $i872;
  assume {:branchcond $i873} true;
  goto $bb523, $bb524;
$bb517:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume ($i860 == 1);
  goto $bb518;
$bb518:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 690, 9} true;
  assume {:verifier.code 0} true;
  $i863 := $add.i32($i857,1);
  call {:cexpr "c"} boogie_si_record_i32($i863);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 691, 5} true;
  assume {:verifier.code 0} true;
  $i862 := $i863;
  goto $bb522;
$bb519:
  assume !($i860 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 20} true;
  assume {:verifier.code 0} true;
  $i861 := $sgt.i32($i856,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  $i862 := $i857;
  assume {:branchcond $i861} true;
  goto $bb520, $bb521;
$bb520:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume ($i861 == 1);
  goto $bb518;
$bb521:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume !($i861 == 1);
  goto $bb522;
$bb522:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 692, 3} true;
  assume {:verifier.code 0} true;
  $i859 := $i862;
  goto $bb516;
$bb523:
  assume ($i873 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 11} true;
  assume {:verifier.code 0} true;
  $i875 := $slt.i32($i871,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i875} true;
  goto $bb526, $bb528;
$bb524:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  assume !($i873 == 1);
  goto $bb525;
$bb525:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i879 := $sext.i32.i64($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 9} true;
  assume {:verifier.code 0} true;
  $i880 := $srem.i64($i879,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i881 := $trunc.i64.i32($i880);
  call {:cexpr "a"} boogie_si_record_i32($i881);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 705, 5} true;
  assume {:verifier.code 0} true;
  $i882 := $add.i32($i881,$i881);
  call {:cexpr "a"} boogie_si_record_i32($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i883 := $sext.i32.i64($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 9} true;
  assume {:verifier.code 0} true;
  $i884 := $srem.i64($i883,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i885 := $trunc.i64.i32($i884);
  call {:cexpr "b"} boogie_si_record_i32($i885);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 707, 5} true;
  assume {:verifier.code 0} true;
  $i886 := $add.i32($i885,$i885);
  call {:cexpr "b"} boogie_si_record_i32($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 709, 5} true;
  assume {:verifier.code 0} true;
  $i887 := $add.i32($i874,$i874);
  call {:cexpr "c"} boogie_si_record_i32($i887);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 9} true;
  assume {:verifier.code 0} true;
  $i888 := $slt.i32($i882,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  $i889 := $i887;
  assume {:branchcond $i888} true;
  goto $bb532, $bb533;
$bb526:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume ($i875 == 1);
  goto $bb527;
$bb527:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 701, 9} true;
  assume {:verifier.code 0} true;
  $i878 := $add.i32($i872,1);
  call {:cexpr "c"} boogie_si_record_i32($i878);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 702, 5} true;
  assume {:verifier.code 0} true;
  $i877 := $i878;
  goto $bb531;
$bb528:
  assume !($i875 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 20} true;
  assume {:verifier.code 0} true;
  $i876 := $sgt.i32($i871,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  $i877 := $i872;
  assume {:branchcond $i876} true;
  goto $bb529, $bb530;
$bb529:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume ($i876 == 1);
  goto $bb527;
$bb530:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume !($i876 == 1);
  goto $bb531;
$bb531:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 703, 3} true;
  assume {:verifier.code 0} true;
  $i874 := $i877;
  goto $bb525;
$bb532:
  assume ($i888 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 11} true;
  assume {:verifier.code 0} true;
  $i890 := $slt.i32($i886,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i890} true;
  goto $bb535, $bb537;
$bb533:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  assume !($i888 == 1);
  goto $bb534;
$bb534:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i894 := $sext.i32.i64($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 9} true;
  assume {:verifier.code 0} true;
  $i895 := $srem.i64($i894,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i896 := $trunc.i64.i32($i895);
  call {:cexpr "a"} boogie_si_record_i32($i896);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 716, 5} true;
  assume {:verifier.code 0} true;
  $i897 := $add.i32($i896,$i896);
  call {:cexpr "a"} boogie_si_record_i32($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i898 := $sext.i32.i64($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 9} true;
  assume {:verifier.code 0} true;
  $i899 := $srem.i64($i898,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i900 := $trunc.i64.i32($i899);
  call {:cexpr "b"} boogie_si_record_i32($i900);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 718, 5} true;
  assume {:verifier.code 0} true;
  $i901 := $add.i32($i900,$i900);
  call {:cexpr "b"} boogie_si_record_i32($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 720, 5} true;
  assume {:verifier.code 0} true;
  $i902 := $add.i32($i889,$i889);
  call {:cexpr "c"} boogie_si_record_i32($i902);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 9} true;
  assume {:verifier.code 0} true;
  $i903 := $slt.i32($i897,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  $i904 := $i902;
  assume {:branchcond $i903} true;
  goto $bb541, $bb542;
$bb535:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume ($i890 == 1);
  goto $bb536;
$bb536:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 712, 9} true;
  assume {:verifier.code 0} true;
  $i893 := $add.i32($i887,1);
  call {:cexpr "c"} boogie_si_record_i32($i893);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 713, 5} true;
  assume {:verifier.code 0} true;
  $i892 := $i893;
  goto $bb540;
$bb537:
  assume !($i890 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 20} true;
  assume {:verifier.code 0} true;
  $i891 := $sgt.i32($i886,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  $i892 := $i887;
  assume {:branchcond $i891} true;
  goto $bb538, $bb539;
$bb538:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume ($i891 == 1);
  goto $bb536;
$bb539:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume !($i891 == 1);
  goto $bb540;
$bb540:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 714, 3} true;
  assume {:verifier.code 0} true;
  $i889 := $i892;
  goto $bb534;
$bb541:
  assume ($i903 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 11} true;
  assume {:verifier.code 0} true;
  $i905 := $slt.i32($i901,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i905} true;
  goto $bb544, $bb546;
$bb542:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  assume !($i903 == 1);
  goto $bb543;
$bb543:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i909 := $sext.i32.i64($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 9} true;
  assume {:verifier.code 0} true;
  $i910 := $srem.i64($i909,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i911 := $trunc.i64.i32($i910);
  call {:cexpr "a"} boogie_si_record_i32($i911);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 727, 5} true;
  assume {:verifier.code 0} true;
  $i912 := $add.i32($i911,$i911);
  call {:cexpr "a"} boogie_si_record_i32($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i913 := $sext.i32.i64($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 9} true;
  assume {:verifier.code 0} true;
  $i914 := $srem.i64($i913,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i915 := $trunc.i64.i32($i914);
  call {:cexpr "b"} boogie_si_record_i32($i915);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 729, 5} true;
  assume {:verifier.code 0} true;
  $i916 := $add.i32($i915,$i915);
  call {:cexpr "b"} boogie_si_record_i32($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 731, 5} true;
  assume {:verifier.code 0} true;
  $i917 := $add.i32($i904,$i904);
  call {:cexpr "c"} boogie_si_record_i32($i917);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 9} true;
  assume {:verifier.code 0} true;
  $i918 := $slt.i32($i912,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  $i919 := $i917;
  assume {:branchcond $i918} true;
  goto $bb550, $bb551;
$bb544:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume ($i905 == 1);
  goto $bb545;
$bb545:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 723, 9} true;
  assume {:verifier.code 0} true;
  $i908 := $add.i32($i902,1);
  call {:cexpr "c"} boogie_si_record_i32($i908);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 724, 5} true;
  assume {:verifier.code 0} true;
  $i907 := $i908;
  goto $bb549;
$bb546:
  assume !($i905 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 20} true;
  assume {:verifier.code 0} true;
  $i906 := $sgt.i32($i901,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  $i907 := $i902;
  assume {:branchcond $i906} true;
  goto $bb547, $bb548;
$bb547:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume ($i906 == 1);
  goto $bb545;
$bb548:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume !($i906 == 1);
  goto $bb549;
$bb549:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 725, 3} true;
  assume {:verifier.code 0} true;
  $i904 := $i907;
  goto $bb543;
$bb550:
  assume ($i918 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 11} true;
  assume {:verifier.code 0} true;
  $i920 := $slt.i32($i916,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i920} true;
  goto $bb553, $bb555;
$bb551:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  assume !($i918 == 1);
  goto $bb552;
$bb552:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i924 := $sext.i32.i64($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 9} true;
  assume {:verifier.code 0} true;
  $i925 := $srem.i64($i924,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i926 := $trunc.i64.i32($i925);
  call {:cexpr "a"} boogie_si_record_i32($i926);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 738, 5} true;
  assume {:verifier.code 0} true;
  $i927 := $add.i32($i926,$i926);
  call {:cexpr "a"} boogie_si_record_i32($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i928 := $sext.i32.i64($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 9} true;
  assume {:verifier.code 0} true;
  $i929 := $srem.i64($i928,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i930 := $trunc.i64.i32($i929);
  call {:cexpr "b"} boogie_si_record_i32($i930);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 740, 5} true;
  assume {:verifier.code 0} true;
  $i931 := $add.i32($i930,$i930);
  call {:cexpr "b"} boogie_si_record_i32($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 742, 5} true;
  assume {:verifier.code 0} true;
  $i932 := $add.i32($i919,$i919);
  call {:cexpr "c"} boogie_si_record_i32($i932);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 9} true;
  assume {:verifier.code 0} true;
  $i933 := $slt.i32($i927,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  $i934 := $i932;
  assume {:branchcond $i933} true;
  goto $bb559, $bb560;
$bb553:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume ($i920 == 1);
  goto $bb554;
$bb554:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 734, 9} true;
  assume {:verifier.code 0} true;
  $i923 := $add.i32($i917,1);
  call {:cexpr "c"} boogie_si_record_i32($i923);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 735, 5} true;
  assume {:verifier.code 0} true;
  $i922 := $i923;
  goto $bb558;
$bb555:
  assume !($i920 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 20} true;
  assume {:verifier.code 0} true;
  $i921 := $sgt.i32($i916,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  $i922 := $i917;
  assume {:branchcond $i921} true;
  goto $bb556, $bb557;
$bb556:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume ($i921 == 1);
  goto $bb554;
$bb557:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume !($i921 == 1);
  goto $bb558;
$bb558:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 736, 3} true;
  assume {:verifier.code 0} true;
  $i919 := $i922;
  goto $bb552;
$bb559:
  assume ($i933 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 11} true;
  assume {:verifier.code 0} true;
  $i935 := $slt.i32($i931,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i935} true;
  goto $bb562, $bb564;
$bb560:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  assume !($i933 == 1);
  goto $bb561;
$bb561:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i939 := $sext.i32.i64($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 9} true;
  assume {:verifier.code 0} true;
  $i940 := $srem.i64($i939,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i941 := $trunc.i64.i32($i940);
  call {:cexpr "a"} boogie_si_record_i32($i941);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 749, 5} true;
  assume {:verifier.code 0} true;
  $i942 := $add.i32($i941,$i941);
  call {:cexpr "a"} boogie_si_record_i32($i942);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i943 := $sext.i32.i64($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 9} true;
  assume {:verifier.code 0} true;
  $i944 := $srem.i64($i943,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i945 := $trunc.i64.i32($i944);
  call {:cexpr "b"} boogie_si_record_i32($i945);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 751, 5} true;
  assume {:verifier.code 0} true;
  $i946 := $add.i32($i945,$i945);
  call {:cexpr "b"} boogie_si_record_i32($i946);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 753, 5} true;
  assume {:verifier.code 0} true;
  $i947 := $add.i32($i934,$i934);
  call {:cexpr "c"} boogie_si_record_i32($i947);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 9} true;
  assume {:verifier.code 0} true;
  $i948 := $slt.i32($i942,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  $i949 := $i947;
  assume {:branchcond $i948} true;
  goto $bb568, $bb569;
$bb562:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume ($i935 == 1);
  goto $bb563;
$bb563:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 745, 9} true;
  assume {:verifier.code 0} true;
  $i938 := $add.i32($i932,1);
  call {:cexpr "c"} boogie_si_record_i32($i938);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 746, 5} true;
  assume {:verifier.code 0} true;
  $i937 := $i938;
  goto $bb567;
$bb564:
  assume !($i935 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 20} true;
  assume {:verifier.code 0} true;
  $i936 := $sgt.i32($i931,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  $i937 := $i932;
  assume {:branchcond $i936} true;
  goto $bb565, $bb566;
$bb565:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume ($i936 == 1);
  goto $bb563;
$bb566:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume !($i936 == 1);
  goto $bb567;
$bb567:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 747, 3} true;
  assume {:verifier.code 0} true;
  $i934 := $i937;
  goto $bb561;
$bb568:
  assume ($i948 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 11} true;
  assume {:verifier.code 0} true;
  $i950 := $slt.i32($i946,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i950} true;
  goto $bb571, $bb573;
$bb569:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  assume !($i948 == 1);
  goto $bb570;
$bb570:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 764, 3} true;
  assume {:verifier.code 0} true;
  $r := $i949;
  $exn := false;
  return;
$bb571:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume ($i950 == 1);
  goto $bb572;
$bb572:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 756, 9} true;
  assume {:verifier.code 0} true;
  $i953 := $add.i32($i947,1);
  call {:cexpr "c"} boogie_si_record_i32($i953);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 757, 5} true;
  assume {:verifier.code 0} true;
  $i952 := $i953;
  goto $bb576;
$bb573:
  assume !($i950 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 20} true;
  assume {:verifier.code 0} true;
  $i951 := $sgt.i32($i946,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  $i952 := $i947;
  assume {:branchcond $i951} true;
  goto $bb574, $bb575;
$bb574:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume ($i951 == 1);
  goto $bb572;
$bb575:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume !($i951 == 1);
  goto $bb576;
$bb576:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 758, 3} true;
  assume {:verifier.code 0} true;
  $i949 := $i952;
  goto $bb570;
}
const __SMACK_and64: ref;
axiom (__SMACK_and64 == $sub.ref(0,34056));
procedure {:inline 45} __SMACK_and64($i0: i64, $i1: i64) returns ($r: i64)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_and64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_and64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 68} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 51} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_and32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_and32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 45} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 38} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_and16: ref;
axiom (__SMACK_and16 == $sub.ref(0,35088));
procedure {:inline 45} __SMACK_and16($i0: i16, $i1: i16) returns ($r: i16)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $i13: i16;
  var $i8: i16;
  var $i17: i32;
  var $i18: i32;
  var $i19: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i16;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i16;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i42: i16;
  var $i37: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i16;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i16;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i16;
  var $i71: i16;
  var $i66: i16;
  var $i75: i32;
  var $i76: i32;
  var $i77: i16;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i16;
  var $i82: i32;
  var $i83: i32;
  var $i84: i16;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i16;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i16;
  var $i100: i16;
  var $i95: i16;
  var $i104: i32;
  var $i105: i32;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i16;
  var $i111: i32;
  var $i112: i32;
  var $i113: i16;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i16;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i16;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i16;
  var $i129: i16;
  var $i124: i16;
  var $i133: i32;
  var $i134: i32;
  var $i135: i16;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i16;
  var $i140: i32;
  var $i141: i32;
  var $i142: i16;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i16;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i16;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i16;
  var $i158: i16;
  var $i153: i16;
  var $i162: i32;
  var $i163: i32;
  var $i164: i16;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i16;
  var $i169: i32;
  var $i170: i32;
  var $i171: i16;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i16;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i16;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i16;
  var $i187: i16;
  var $i182: i16;
  var $i191: i32;
  var $i192: i32;
  var $i193: i16;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i32;
  var $i199: i32;
  var $i200: i16;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i16;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i16;
  var $i216: i16;
  var $i211: i16;
  var $i220: i32;
  var $i221: i32;
  var $i222: i16;
  var $i223: i32;
  var $i224: i32;
  var $i225: i32;
  var $i226: i16;
  var $i227: i32;
  var $i228: i32;
  var $i229: i16;
  var $i230: i32;
  var $i231: i32;
  var $i232: i32;
  var $i233: i16;
  var $i234: i32;
  var $i235: i32;
  var $i236: i32;
  var $i237: i16;
  var $i238: i32;
  var $i239: i1;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i1;
  var $i246: i32;
  var $i247: i32;
  var $i248: i16;
  var $i245: i16;
  var $i240: i16;
  var $i249: i32;
  var $i250: i32;
  var $i251: i16;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $i255: i16;
  var $i256: i32;
  var $i257: i32;
  var $i258: i16;
  var $i259: i32;
  var $i260: i32;
  var $i261: i32;
  var $i262: i16;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $i266: i16;
  var $i267: i32;
  var $i268: i1;
  var $i270: i32;
  var $i271: i1;
  var $i272: i32;
  var $i273: i1;
  var $i275: i32;
  var $i276: i32;
  var $i277: i16;
  var $i274: i16;
  var $i269: i16;
  var $i278: i32;
  var $i279: i32;
  var $i280: i16;
  var $i281: i32;
  var $i282: i32;
  var $i283: i32;
  var $i284: i16;
  var $i285: i32;
  var $i286: i32;
  var $i287: i16;
  var $i288: i32;
  var $i289: i32;
  var $i290: i32;
  var $i291: i16;
  var $i292: i32;
  var $i293: i32;
  var $i294: i32;
  var $i295: i16;
  var $i296: i32;
  var $i297: i1;
  var $i299: i32;
  var $i300: i1;
  var $i301: i32;
  var $i302: i1;
  var $i304: i32;
  var $i305: i32;
  var $i306: i16;
  var $i303: i16;
  var $i298: i16;
  var $i307: i32;
  var $i308: i32;
  var $i309: i16;
  var $i310: i32;
  var $i311: i32;
  var $i312: i32;
  var $i313: i16;
  var $i314: i32;
  var $i315: i32;
  var $i316: i16;
  var $i317: i32;
  var $i318: i32;
  var $i319: i32;
  var $i320: i16;
  var $i321: i32;
  var $i322: i32;
  var $i323: i32;
  var $i324: i16;
  var $i325: i32;
  var $i326: i1;
  var $i328: i32;
  var $i329: i1;
  var $i330: i32;
  var $i331: i1;
  var $i333: i32;
  var $i334: i32;
  var $i335: i16;
  var $i332: i16;
  var $i327: i16;
  var $i336: i32;
  var $i337: i32;
  var $i338: i16;
  var $i339: i32;
  var $i340: i32;
  var $i341: i32;
  var $i342: i16;
  var $i343: i32;
  var $i344: i32;
  var $i345: i16;
  var $i346: i32;
  var $i347: i32;
  var $i348: i32;
  var $i349: i16;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i16;
  var $i354: i32;
  var $i355: i1;
  var $i357: i32;
  var $i358: i1;
  var $i359: i32;
  var $i360: i1;
  var $i362: i32;
  var $i363: i32;
  var $i364: i16;
  var $i361: i16;
  var $i356: i16;
  var $i365: i32;
  var $i366: i32;
  var $i367: i16;
  var $i368: i32;
  var $i369: i32;
  var $i370: i32;
  var $i371: i16;
  var $i372: i32;
  var $i373: i32;
  var $i374: i16;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i16;
  var $i379: i32;
  var $i380: i32;
  var $i381: i32;
  var $i382: i16;
  var $i383: i32;
  var $i384: i1;
  var $i386: i32;
  var $i387: i1;
  var $i388: i32;
  var $i389: i1;
  var $i391: i32;
  var $i392: i32;
  var $i393: i16;
  var $i390: i16;
  var $i385: i16;
  var $i394: i32;
  var $i395: i32;
  var $i396: i16;
  var $i397: i32;
  var $i398: i32;
  var $i399: i32;
  var $i400: i16;
  var $i401: i32;
  var $i402: i32;
  var $i403: i16;
  var $i404: i32;
  var $i405: i32;
  var $i406: i32;
  var $i407: i16;
  var $i408: i32;
  var $i409: i32;
  var $i410: i32;
  var $i411: i16;
  var $i412: i32;
  var $i413: i1;
  var $i415: i32;
  var $i416: i1;
  var $i417: i32;
  var $i418: i1;
  var $i420: i32;
  var $i421: i32;
  var $i422: i16;
  var $i419: i16;
  var $i414: i16;
  var $i423: i32;
  var $i424: i32;
  var $i425: i16;
  var $i426: i32;
  var $i427: i32;
  var $i428: i32;
  var $i429: i16;
  var $i430: i32;
  var $i431: i32;
  var $i432: i16;
  var $i433: i32;
  var $i434: i32;
  var $i435: i32;
  var $i436: i16;
  var $i437: i32;
  var $i438: i32;
  var $i439: i32;
  var $i440: i16;
  var $i441: i32;
  var $i442: i1;
  var $i444: i32;
  var $i445: i1;
  var $i446: i32;
  var $i447: i1;
  var $i449: i32;
  var $i450: i32;
  var $i451: i16;
  var $i448: i16;
  var $i443: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_and16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3,$i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  call {:cexpr "c"} boogie_si_record_i16($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  assume !($i7 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i16($i18);
  call {:cexpr "a"} boogie_si_record_i16($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21,$i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  call {:cexpr "a"} boogie_si_record_i16($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  call {:cexpr "b"} boogie_si_record_i16($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28,$i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  call {:cexpr "b"} boogie_si_record_i16($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32,$i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i16($i33);
  call {:cexpr "c"} boogie_si_record_i16($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i16.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  call {:cexpr "c"} boogie_si_record_i16($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 776, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume !($i12 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 777, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i16($i47);
  call {:cexpr "a"} boogie_si_record_i16($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50,$i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  call {:cexpr "a"} boogie_si_record_i16($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  call {:cexpr "b"} boogie_si_record_i16($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57,$i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i16($i58);
  call {:cexpr "b"} boogie_si_record_i16($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61,$i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i16($i62);
  call {:cexpr "c"} boogie_si_record_i16($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i16.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i16($i44);
  call {:cexpr "c"} boogie_si_record_i16($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 787, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !($i39 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume !($i41 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 788, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  assume !($i65 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i16($i76);
  call {:cexpr "a"} boogie_si_record_i16($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  call {:cexpr "a"} boogie_si_record_i16($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i16($i83);
  call {:cexpr "b"} boogie_si_record_i16($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  call {:cexpr "b"} boogie_si_record_i16($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i16($i91);
  call {:cexpr "c"} boogie_si_record_i16($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i16.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i16($i73);
  call {:cexpr "c"} boogie_si_record_i16($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 798, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !($i68 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume !($i70 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 799, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  assume !($i94 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i16($i105);
  call {:cexpr "a"} boogie_si_record_i16($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i16($i109);
  call {:cexpr "a"} boogie_si_record_i16($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i16($i112);
  call {:cexpr "b"} boogie_si_record_i16($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115,$i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i16($i116);
  call {:cexpr "b"} boogie_si_record_i16($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i16($i120);
  call {:cexpr "c"} boogie_si_record_i16($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i16.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i16($i102);
  call {:cexpr "c"} boogie_si_record_i16($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 809, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !($i97 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume !($i99 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 810, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i16($i134);
  call {:cexpr "a"} boogie_si_record_i16($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137,$i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i16($i138);
  call {:cexpr "a"} boogie_si_record_i16($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i16($i141);
  call {:cexpr "b"} boogie_si_record_i16($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144,$i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i16($i145);
  call {:cexpr "b"} boogie_si_record_i16($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148,$i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i16($i149);
  call {:cexpr "c"} boogie_si_record_i16($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i16.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i16($i131);
  call {:cexpr "c"} boogie_si_record_i16($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 820, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume !($i128 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 821, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i16($i163);
  call {:cexpr "a"} boogie_si_record_i16($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166,$i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i16($i167);
  call {:cexpr "a"} boogie_si_record_i16($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i16($i170);
  call {:cexpr "b"} boogie_si_record_i16($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173,$i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i16($i174);
  call {:cexpr "b"} boogie_si_record_i16($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177,$i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i16($i178);
  call {:cexpr "c"} boogie_si_record_i16($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i16.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i16($i160);
  call {:cexpr "c"} boogie_si_record_i16($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 831, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume !($i157 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 832, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  assume !($i181 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i16($i192);
  call {:cexpr "a"} boogie_si_record_i16($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i16($i196);
  call {:cexpr "a"} boogie_si_record_i16($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i16($i199);
  call {:cexpr "b"} boogie_si_record_i16($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i16($i203);
  call {:cexpr "b"} boogie_si_record_i16($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i16($i207);
  call {:cexpr "c"} boogie_si_record_i16($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i16.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i16($i189);
  call {:cexpr "c"} boogie_si_record_i16($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 842, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !($i184 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 843, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  assume !($i210 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i32($i220,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i32.i16($i221);
  call {:cexpr "a"} boogie_si_record_i16($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 8} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i32($i224,$i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i32.i16($i225);
  call {:cexpr "a"} boogie_si_record_i16($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i227 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $srem.i32($i227,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $trunc.i32.i16($i228);
  call {:cexpr "b"} boogie_si_record_i16($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 8} true;
  assume {:verifier.code 0} true;
  $i230 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $add.i32($i231,$i230);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i233 := $trunc.i32.i16($i232);
  call {:cexpr "b"} boogie_si_record_i16($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 8} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i32($i235,$i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i32.i16($i236);
  call {:cexpr "c"} boogie_si_record_i16($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $slt.i32($i238,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $i237;
  assume {:branchcond $i239} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i16.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i16($i218);
  call {:cexpr "c"} boogie_si_record_i16($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 853, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume !($i215 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 854, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
$bb73:
  assume ($i239 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 11} true;
  assume {:verifier.code 0} true;
  $i242 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  assume !($i239 == 1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i32($i249,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i32.i16($i250);
  call {:cexpr "a"} boogie_si_record_i16($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 8} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i32($i253,$i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i32.i16($i254);
  call {:cexpr "a"} boogie_si_record_i16($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 9} true;
  assume {:verifier.code 0} true;
  $i257 := $srem.i32($i256,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i258 := $trunc.i32.i16($i257);
  call {:cexpr "b"} boogie_si_record_i16($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 8} true;
  assume {:verifier.code 0} true;
  $i259 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i260 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i32($i260,$i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $trunc.i32.i16($i261);
  call {:cexpr "b"} boogie_si_record_i16($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 8} true;
  assume {:verifier.code 0} true;
  $i263 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i265 := $add.i32($i264,$i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i32.i16($i265);
  call {:cexpr "c"} boogie_si_record_i16($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $i266;
  assume {:branchcond $i268} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume ($i242 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i246 := $sext.i16.i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i246,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $trunc.i32.i16($i247);
  call {:cexpr "c"} boogie_si_record_i16($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 864, 5} true;
  assume {:verifier.code 0} true;
  $i245 := $i248;
  goto $bb81;
$bb78:
  assume !($i242 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 20} true;
  assume {:verifier.code 0} true;
  $i244 := $sgt.i32($i243,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i245 := $i237;
  assume {:branchcond $i244} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume ($i244 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume !($i244 == 1);
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 865, 3} true;
  assume {:verifier.code 0} true;
  $i240 := $i245;
  goto $bb75;
$bb82:
  assume ($i268 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 11} true;
  assume {:verifier.code 0} true;
  $i271 := $slt.i32($i270,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i271} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  assume !($i268 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 9} true;
  assume {:verifier.code 0} true;
  $i279 := $srem.i32($i278,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $trunc.i32.i16($i279);
  call {:cexpr "a"} boogie_si_record_i16($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 8} true;
  assume {:verifier.code 0} true;
  $i281 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i282,$i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i32.i16($i283);
  call {:cexpr "a"} boogie_si_record_i16($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 9} true;
  assume {:verifier.code 0} true;
  $i286 := $srem.i32($i285,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i287 := $trunc.i32.i16($i286);
  call {:cexpr "b"} boogie_si_record_i16($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 8} true;
  assume {:verifier.code 0} true;
  $i288 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i290 := $add.i32($i289,$i288);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i291 := $trunc.i32.i16($i290);
  call {:cexpr "b"} boogie_si_record_i16($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 8} true;
  assume {:verifier.code 0} true;
  $i292 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i293 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i293,$i292);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i295 := $trunc.i32.i16($i294);
  call {:cexpr "c"} boogie_si_record_i16($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 9} true;
  assume {:verifier.code 0} true;
  $i297 := $slt.i32($i296,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $i295;
  assume {:branchcond $i297} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume ($i271 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i16.i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i276 := $add.i32($i275,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $trunc.i32.i16($i276);
  call {:cexpr "c"} boogie_si_record_i16($i277);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 875, 5} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb90;
$bb87:
  assume !($i271 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 18} true;
  assume {:verifier.code 0} true;
  $i272 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 20} true;
  assume {:verifier.code 0} true;
  $i273 := $sgt.i32($i272,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i274 := $i266;
  assume {:branchcond $i273} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume ($i273 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume !($i273 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 876, 3} true;
  assume {:verifier.code 0} true;
  $i269 := $i274;
  goto $bb84;
$bb91:
  assume ($i297 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 11} true;
  assume {:verifier.code 0} true;
  $i300 := $slt.i32($i299,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  assume !($i297 == 1);
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i307 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $srem.i32($i307,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $trunc.i32.i16($i308);
  call {:cexpr "a"} boogie_si_record_i16($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 8} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i311 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311,$i310);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $trunc.i32.i16($i312);
  call {:cexpr "a"} boogie_si_record_i16($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i32($i314,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i16($i315);
  call {:cexpr "b"} boogie_si_record_i16($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 8} true;
  assume {:verifier.code 0} true;
  $i317 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i318 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i318,$i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i320 := $trunc.i32.i16($i319);
  call {:cexpr "b"} boogie_si_record_i16($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 8} true;
  assume {:verifier.code 0} true;
  $i321 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i322,$i321);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $trunc.i32.i16($i323);
  call {:cexpr "c"} boogie_si_record_i16($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $slt.i32($i325,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $i324;
  assume {:branchcond $i326} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume ($i300 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i304 := $sext.i16.i32($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i32($i304,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i306 := $trunc.i32.i16($i305);
  call {:cexpr "c"} boogie_si_record_i16($i306);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 886, 5} true;
  assume {:verifier.code 0} true;
  $i303 := $i306;
  goto $bb99;
$bb96:
  assume !($i300 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 18} true;
  assume {:verifier.code 0} true;
  $i301 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 20} true;
  assume {:verifier.code 0} true;
  $i302 := $sgt.i32($i301,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $i295;
  assume {:branchcond $i302} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume ($i302 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume !($i302 == 1);
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 887, 3} true;
  assume {:verifier.code 0} true;
  $i298 := $i303;
  goto $bb93;
$bb100:
  assume ($i326 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 11} true;
  assume {:verifier.code 0} true;
  $i329 := $slt.i32($i328,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  assume !($i326 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i336 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $srem.i32($i336,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $trunc.i32.i16($i337);
  call {:cexpr "a"} boogie_si_record_i16($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 8} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i32($i340,$i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i16($i341);
  call {:cexpr "a"} boogie_si_record_i16($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i32($i343,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i32.i16($i344);
  call {:cexpr "b"} boogie_si_record_i16($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 8} true;
  assume {:verifier.code 0} true;
  $i346 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i348 := $add.i32($i347,$i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i349 := $trunc.i32.i16($i348);
  call {:cexpr "b"} boogie_si_record_i16($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 8} true;
  assume {:verifier.code 0} true;
  $i350 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i351 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $add.i32($i351,$i350);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i353 := $trunc.i32.i16($i352);
  call {:cexpr "c"} boogie_si_record_i16($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $slt.i32($i354,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $i353;
  assume {:branchcond $i355} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume ($i329 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $sext.i16.i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i333,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i335 := $trunc.i32.i16($i334);
  call {:cexpr "c"} boogie_si_record_i16($i335);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 897, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $i335;
  goto $bb108;
$bb105:
  assume !($i329 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 18} true;
  assume {:verifier.code 0} true;
  $i330 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 20} true;
  assume {:verifier.code 0} true;
  $i331 := $sgt.i32($i330,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i332 := $i324;
  assume {:branchcond $i331} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume ($i331 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume !($i331 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 898, 3} true;
  assume {:verifier.code 0} true;
  $i327 := $i332;
  goto $bb102;
$bb109:
  assume ($i355 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i357 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 11} true;
  assume {:verifier.code 0} true;
  $i358 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i358} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  assume !($i355 == 1);
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i365 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 9} true;
  assume {:verifier.code 0} true;
  $i366 := $srem.i32($i365,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i367 := $trunc.i32.i16($i366);
  call {:cexpr "a"} boogie_si_record_i16($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 8} true;
  assume {:verifier.code 0} true;
  $i368 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i370 := $add.i32($i369,$i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i32.i16($i370);
  call {:cexpr "a"} boogie_si_record_i16($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 9} true;
  assume {:verifier.code 0} true;
  $i373 := $srem.i32($i372,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $trunc.i32.i16($i373);
  call {:cexpr "b"} boogie_si_record_i16($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 8} true;
  assume {:verifier.code 0} true;
  $i375 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i376,$i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i378 := $trunc.i32.i16($i377);
  call {:cexpr "b"} boogie_si_record_i16($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 8} true;
  assume {:verifier.code 0} true;
  $i379 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i380 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i381 := $add.i32($i380,$i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $trunc.i32.i16($i381);
  call {:cexpr "c"} boogie_si_record_i16($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 9} true;
  assume {:verifier.code 0} true;
  $i384 := $slt.i32($i383,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $i382;
  assume {:branchcond $i384} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume ($i358 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i362 := $sext.i16.i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $add.i32($i362,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i364 := $trunc.i32.i16($i363);
  call {:cexpr "c"} boogie_si_record_i16($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 908, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $i364;
  goto $bb117;
$bb114:
  assume !($i358 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 18} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 20} true;
  assume {:verifier.code 0} true;
  $i360 := $sgt.i32($i359,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i361 := $i353;
  assume {:branchcond $i360} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume ($i360 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume !($i360 == 1);
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 909, 3} true;
  assume {:verifier.code 0} true;
  $i356 := $i361;
  goto $bb111;
$bb118:
  assume ($i384 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 11} true;
  assume {:verifier.code 0} true;
  $i387 := $slt.i32($i386,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i387} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  assume !($i384 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 9} true;
  assume {:verifier.code 0} true;
  $i395 := $srem.i32($i394,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i396 := $trunc.i32.i16($i395);
  call {:cexpr "a"} boogie_si_record_i16($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 8} true;
  assume {:verifier.code 0} true;
  $i397 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i398 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i398,$i397);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i400 := $trunc.i32.i16($i399);
  call {:cexpr "a"} boogie_si_record_i16($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 9} true;
  assume {:verifier.code 0} true;
  $i402 := $srem.i32($i401,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $trunc.i32.i16($i402);
  call {:cexpr "b"} boogie_si_record_i16($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 8} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i405 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405,$i404);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $trunc.i32.i16($i406);
  call {:cexpr "b"} boogie_si_record_i16($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 8} true;
  assume {:verifier.code 0} true;
  $i408 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i409 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i32($i409,$i408);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i411 := $trunc.i32.i16($i410);
  call {:cexpr "c"} boogie_si_record_i16($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i412 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $slt.i32($i412,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $i411;
  assume {:branchcond $i413} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume ($i387 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i391 := $sext.i16.i32($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i391,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $trunc.i32.i16($i392);
  call {:cexpr "c"} boogie_si_record_i16($i393);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 919, 5} true;
  assume {:verifier.code 0} true;
  $i390 := $i393;
  goto $bb126;
$bb123:
  assume !($i387 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 18} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 20} true;
  assume {:verifier.code 0} true;
  $i389 := $sgt.i32($i388,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $i382;
  assume {:branchcond $i389} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume ($i389 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume !($i389 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 920, 3} true;
  assume {:verifier.code 0} true;
  $i385 := $i390;
  goto $bb120;
$bb127:
  assume ($i413 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 11} true;
  assume {:verifier.code 0} true;
  $i416 := $slt.i32($i415,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i416} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  assume !($i413 == 1);
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i423 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 9} true;
  assume {:verifier.code 0} true;
  $i424 := $srem.i32($i423,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i425 := $trunc.i32.i16($i424);
  call {:cexpr "a"} boogie_si_record_i16($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 8} true;
  assume {:verifier.code 0} true;
  $i426 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i427,$i426);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $trunc.i32.i16($i428);
  call {:cexpr "a"} boogie_si_record_i16($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i32($i430,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i32.i16($i431);
  call {:cexpr "b"} boogie_si_record_i16($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 8} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i435 := $add.i32($i434,$i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i32.i16($i435);
  call {:cexpr "b"} boogie_si_record_i16($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 8} true;
  assume {:verifier.code 0} true;
  $i437 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i438 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i438,$i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i440 := $trunc.i32.i16($i439);
  call {:cexpr "c"} boogie_si_record_i16($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i441 := $sext.i16.i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $slt.i32($i441,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $i440;
  assume {:branchcond $i442} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume ($i416 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $sext.i16.i32($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i32.i16($i421);
  call {:cexpr "c"} boogie_si_record_i16($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 930, 5} true;
  assume {:verifier.code 0} true;
  $i419 := $i422;
  goto $bb135;
$bb132:
  assume !($i416 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 18} true;
  assume {:verifier.code 0} true;
  $i417 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 20} true;
  assume {:verifier.code 0} true;
  $i418 := $sgt.i32($i417,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $i411;
  assume {:branchcond $i418} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume ($i418 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume !($i418 == 1);
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 931, 3} true;
  assume {:verifier.code 0} true;
  $i414 := $i419;
  goto $bb129;
$bb136:
  assume ($i442 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 11} true;
  assume {:verifier.code 0} true;
  $i445 := $slt.i32($i444,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i445} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  assume !($i442 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 948, 3} true;
  assume {:verifier.code 0} true;
  $r := $i443;
  $exn := false;
  return;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume ($i445 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i16.i32($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $add.i32($i449,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i32.i16($i450);
  call {:cexpr "c"} boogie_si_record_i16($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 941, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $i451;
  goto $bb144;
$bb141:
  assume !($i445 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 18} true;
  assume {:verifier.code 0} true;
  $i446 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 20} true;
  assume {:verifier.code 0} true;
  $i447 := $sgt.i32($i446,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i448 := $i440;
  assume {:branchcond $i447} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume ($i447 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume !($i447 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 942, 3} true;
  assume {:verifier.code 0} true;
  $i443 := $i448;
  goto $bb138;
}
const __SMACK_and8: ref;
axiom (__SMACK_and8 == $sub.ref(0,36120));
procedure {:inline 45} __SMACK_and8($i0: i8, $i1: i8) returns ($r: i8)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i13: i8;
  var $i8: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $i42: i8;
  var $i37: i8;
  var $i46: i32;
  var $i47: i32;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i8;
  var $i71: i8;
  var $i66: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i8;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i8;
  var $i100: i8;
  var $i95: i8;
  var $i104: i32;
  var $i105: i32;
  var $i106: i8;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i8;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i8;
  var $i129: i8;
  var $i124: i8;
  var $i133: i32;
  var $i134: i32;
  var $i135: i8;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $i140: i32;
  var $i141: i32;
  var $i142: i8;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i8;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i8;
  var $i158: i8;
  var $i153: i8;
  var $i162: i32;
  var $i163: i32;
  var $i164: i8;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i8;
  var $i169: i32;
  var $i170: i32;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i8;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i8;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i8;
  var $i187: i8;
  var $i182: i8;
  var $i191: i32;
  var $i192: i32;
  var $i193: i8;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i8;
  var $i198: i32;
  var $i199: i32;
  var $i200: i8;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i8;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i8;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i8;
  var $i216: i8;
  var $i211: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_and8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3,$i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  call {:cexpr "c"} boogie_si_record_i8($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  assume !($i7 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  call {:cexpr "a"} boogie_si_record_i8($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21,$i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  call {:cexpr "a"} boogie_si_record_i8($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  call {:cexpr "b"} boogie_si_record_i8($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28,$i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  call {:cexpr "b"} boogie_si_record_i8($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32,$i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i8($i33);
  call {:cexpr "c"} boogie_si_record_i8($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  call {:cexpr "c"} boogie_si_record_i8($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 958, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume !($i12 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 959, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  call {:cexpr "a"} boogie_si_record_i8($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50,$i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  call {:cexpr "a"} boogie_si_record_i8($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  call {:cexpr "b"} boogie_si_record_i8($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57,$i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  call {:cexpr "b"} boogie_si_record_i8($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61,$i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  call {:cexpr "c"} boogie_si_record_i8($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i8.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  call {:cexpr "c"} boogie_si_record_i8($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 969, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !($i39 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume !($i41 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 970, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  assume !($i65 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  call {:cexpr "a"} boogie_si_record_i8($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i8($i80);
  call {:cexpr "a"} boogie_si_record_i8($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i8($i83);
  call {:cexpr "b"} boogie_si_record_i8($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  call {:cexpr "b"} boogie_si_record_i8($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  call {:cexpr "c"} boogie_si_record_i8($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i8.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  call {:cexpr "c"} boogie_si_record_i8($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 980, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !($i68 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume !($i70 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 981, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  assume !($i94 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i8($i105);
  call {:cexpr "a"} boogie_si_record_i8($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i8($i109);
  call {:cexpr "a"} boogie_si_record_i8($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  call {:cexpr "b"} boogie_si_record_i8($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115,$i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i8($i116);
  call {:cexpr "b"} boogie_si_record_i8($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  call {:cexpr "c"} boogie_si_record_i8($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i8.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i8($i102);
  call {:cexpr "c"} boogie_si_record_i8($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 991, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !($i97 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume !($i99 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 992, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i8($i134);
  call {:cexpr "a"} boogie_si_record_i8($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137,$i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  call {:cexpr "a"} boogie_si_record_i8($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i8($i141);
  call {:cexpr "b"} boogie_si_record_i8($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144,$i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i8($i145);
  call {:cexpr "b"} boogie_si_record_i8($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148,$i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i8($i149);
  call {:cexpr "c"} boogie_si_record_i8($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i8.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i8($i131);
  call {:cexpr "c"} boogie_si_record_i8($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1002, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume !($i128 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1003, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i8($i163);
  call {:cexpr "a"} boogie_si_record_i8($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166,$i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i8($i167);
  call {:cexpr "a"} boogie_si_record_i8($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i8($i170);
  call {:cexpr "b"} boogie_si_record_i8($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173,$i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i8($i174);
  call {:cexpr "b"} boogie_si_record_i8($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177,$i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i8($i178);
  call {:cexpr "c"} boogie_si_record_i8($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i8.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i8($i160);
  call {:cexpr "c"} boogie_si_record_i8($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1013, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume !($i157 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1014, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  assume !($i181 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i8($i192);
  call {:cexpr "a"} boogie_si_record_i8($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i8($i196);
  call {:cexpr "a"} boogie_si_record_i8($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i8($i199);
  call {:cexpr "b"} boogie_si_record_i8($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i8($i203);
  call {:cexpr "b"} boogie_si_record_i8($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i8($i207);
  call {:cexpr "c"} boogie_si_record_i8($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i8.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i8.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i8($i189);
  call {:cexpr "c"} boogie_si_record_i8($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1024, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !($i184 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1025, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  assume !($i210 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1042, 3} true;
  assume {:verifier.code 0} true;
  $r := $i211;
  $exn := false;
  return;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i8.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i8($i218);
  call {:cexpr "c"} boogie_si_record_i8($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1035, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume !($i215 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1036, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
}
const __SMACK_or32: ref;
axiom (__SMACK_or32 == $sub.ref(0,37152));
procedure {:inline 45} __SMACK_or32($i0: i32, $i1: i32) returns ($r: i32)
modifies $exn;
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i5: i32;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i20: i32;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i35: i32;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $i42: i32;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i50: i32;
  var $i54: i32;
  var $i55: i64;
  var $i56: i64;
  var $i57: i32;
  var $i58: i32;
  var $i59: i64;
  var $i60: i64;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i65: i32;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $i72: i32;
  var $i73: i32;
  var $i74: i64;
  var $i75: i64;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i79: i32;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i80: i32;
  var $i84: i32;
  var $i85: i64;
  var $i86: i64;
  var $i87: i32;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i95: i32;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i109: i32;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i110: i32;
  var $i114: i32;
  var $i115: i64;
  var $i116: i64;
  var $i117: i32;
  var $i118: i32;
  var $i119: i64;
  var $i120: i64;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i124: i32;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i125: i32;
  var $i129: i32;
  var $i130: i64;
  var $i131: i64;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i139: i32;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i140: i32;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $i147: i32;
  var $i148: i32;
  var $i149: i64;
  var $i150: i64;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i155: i32;
  var $i159: i32;
  var $i160: i64;
  var $i161: i64;
  var $i162: i32;
  var $i163: i32;
  var $i164: i64;
  var $i165: i64;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i32;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i170: i32;
  var $i174: i32;
  var $i175: i64;
  var $i176: i64;
  var $i177: i32;
  var $i178: i32;
  var $i179: i64;
  var $i180: i64;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i185: i32;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $i192: i32;
  var $i193: i32;
  var $i194: i64;
  var $i195: i64;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i199: i32;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i200: i32;
  var $i204: i32;
  var $i205: i64;
  var $i206: i64;
  var $i207: i32;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i215: i32;
  var $i219: i32;
  var $i220: i64;
  var $i221: i64;
  var $i222: i32;
  var $i223: i32;
  var $i224: i64;
  var $i225: i64;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i229: i32;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i230: i32;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $i237: i32;
  var $i238: i32;
  var $i239: i64;
  var $i240: i64;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i245: i32;
  var $i249: i32;
  var $i250: i64;
  var $i251: i64;
  var $i252: i32;
  var $i253: i32;
  var $i254: i64;
  var $i255: i64;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i260: i32;
  var $i264: i32;
  var $i265: i64;
  var $i266: i64;
  var $i267: i32;
  var $i268: i32;
  var $i269: i64;
  var $i270: i64;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i274: i32;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i275: i32;
  var $i279: i32;
  var $i280: i64;
  var $i281: i64;
  var $i282: i32;
  var $i283: i32;
  var $i284: i64;
  var $i285: i64;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i289: i32;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i290: i32;
  var $i294: i32;
  var $i295: i64;
  var $i296: i64;
  var $i297: i32;
  var $i298: i32;
  var $i299: i64;
  var $i300: i64;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i304: i32;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i305: i32;
  var $i309: i32;
  var $i310: i64;
  var $i311: i64;
  var $i312: i32;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i319: i32;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i320: i32;
  var $i324: i32;
  var $i325: i64;
  var $i326: i64;
  var $i327: i32;
  var $i328: i32;
  var $i329: i64;
  var $i330: i64;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i334: i32;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i335: i32;
  var $i339: i32;
  var $i340: i64;
  var $i341: i64;
  var $i342: i32;
  var $i343: i32;
  var $i344: i64;
  var $i345: i64;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i349: i32;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i350: i32;
  var $i354: i32;
  var $i355: i64;
  var $i356: i64;
  var $i357: i32;
  var $i358: i32;
  var $i359: i64;
  var $i360: i64;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i364: i32;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i365: i32;
  var $i369: i32;
  var $i370: i64;
  var $i371: i64;
  var $i372: i32;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i379: i32;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i380: i32;
  var $i384: i32;
  var $i385: i64;
  var $i386: i64;
  var $i387: i32;
  var $i388: i32;
  var $i389: i64;
  var $i390: i64;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i394: i32;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i395: i32;
  var $i399: i32;
  var $i400: i64;
  var $i401: i64;
  var $i402: i32;
  var $i403: i32;
  var $i404: i64;
  var $i405: i64;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i409: i32;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i410: i32;
  var $i414: i32;
  var $i415: i64;
  var $i416: i64;
  var $i417: i32;
  var $i418: i32;
  var $i419: i64;
  var $i420: i64;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i424: i32;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i425: i32;
  var $i429: i32;
  var $i430: i64;
  var $i431: i64;
  var $i432: i32;
  var $i433: i32;
  var $i434: i64;
  var $i435: i64;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i439: i32;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i440: i32;
  var $i444: i32;
  var $i445: i64;
  var $i446: i64;
  var $i447: i32;
  var $i448: i32;
  var $i449: i64;
  var $i450: i64;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i454: i32;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i455: i32;
  var $i459: i32;
  var $i460: i64;
  var $i461: i64;
  var $i462: i32;
  var $i463: i32;
  var $i464: i64;
  var $i465: i64;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i469: i32;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i470: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_or32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_or32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0,0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1050, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i1,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1054, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i0,$i0);
  call {:cexpr "a"} boogie_si_record_i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $srem.i64($i10,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1056, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i1,$i1);
  call {:cexpr "b"} boogie_si_record_i32($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $srem.i64($i14,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1059, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i5,$i5);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1052, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1053, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb6;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  assume !($i6 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i5 := $i7;
  goto $bb3;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1061, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb9;
$bb8:
  assume !($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i16,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1065, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i12,$i12);
  call {:cexpr "a"} boogie_si_record_i32($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $srem.i64($i25,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1067, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i16,$i16);
  call {:cexpr "b"} boogie_si_record_i32($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $srem.i64($i29,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i64.i32($i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1070, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i20,$i20);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb13, $bb14;
$bb10:
  assume ($i21 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1063, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1064, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb12;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  assume !($i21 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i20 := $i22;
  goto $bb9;
$bb13:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1072, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $i34;
  goto $bb15;
$bb14:
  assume !($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 16} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i31,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1076, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i27,$i27);
  call {:cexpr "a"} boogie_si_record_i32($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $srem.i64($i40,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i64.i32($i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1078, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i31,$i31);
  call {:cexpr "b"} boogie_si_record_i32($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $srem.i64($i44,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i64.i32($i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1081, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i35,$i35);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1074, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1075, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb18;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i35 := $i37;
  goto $bb15;
$bb19:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1083, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i49;
  goto $bb21;
$bb20:
  assume !($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i46,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1087, 5} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i42,$i42);
  call {:cexpr "a"} boogie_si_record_i32($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $srem.i64($i55,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i64.i32($i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1089, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i46,$i46);
  call {:cexpr "b"} boogie_si_record_i32($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $srem.i64($i59,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i64.i32($i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1092, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i50,$i50);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb25, $bb26;
$bb22:
  assume ($i51 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1085, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1086, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb24;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb24;
$bb24:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i50 := $i52;
  goto $bb21;
$bb25:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1094, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i64);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $i64;
  goto $bb27;
$bb26:
  assume !($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 16} true;
  assume {:verifier.code 0} true;
  $i66 := $slt.i32($i61,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb28, $bb29;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1098, 5} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i57,$i57);
  call {:cexpr "a"} boogie_si_record_i32($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $srem.i64($i70,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i64.i32($i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1100, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i61,$i61);
  call {:cexpr "b"} boogie_si_record_i32($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $srem.i64($i74,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i32($i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1103, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i65,$i65);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb31, $bb32;
$bb28:
  assume ($i66 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1096, 7} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1097, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb30;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  assume !($i66 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i65 := $i67;
  goto $bb27;
$bb31:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1105, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i79);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $i79;
  goto $bb33;
$bb32:
  assume !($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 16} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i76,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1109, 5} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i72,$i72);
  call {:cexpr "a"} boogie_si_record_i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $srem.i64($i85,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1111, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i76,$i76);
  call {:cexpr "b"} boogie_si_record_i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 9} true;
  assume {:verifier.code 0} true;
  $i90 := $srem.i64($i89,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i64.i32($i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1114, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i80,$i80);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb37, $bb38;
$bb34:
  assume ($i81 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1107, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1108, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb36;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  assume !($i81 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i80 := $i82;
  goto $bb33;
$bb37:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1116, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i94);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i94;
  goto $bb39;
$bb38:
  assume !($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 16} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i91,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1120, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i32($i87,$i87);
  call {:cexpr "a"} boogie_si_record_i32($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $srem.i64($i100,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i32($i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1122, 5} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i91,$i91);
  call {:cexpr "b"} boogie_si_record_i32($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i64($i104,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i64.i32($i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1125, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i95,$i95);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb43, $bb44;
$bb40:
  assume ($i96 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1118, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1119, 3} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb42;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  assume !($i96 == 1);
  goto $bb42;
$bb42:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i95 := $i97;
  goto $bb39;
$bb43:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1127, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i109);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 3} true;
  assume {:verifier.code 0} true;
  $i110 := $i109;
  goto $bb45;
$bb44:
  assume !($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 16} true;
  assume {:verifier.code 0} true;
  $i111 := $slt.i32($i106,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb46, $bb47;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1131, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i32($i102,$i102);
  call {:cexpr "a"} boogie_si_record_i32($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 9} true;
  assume {:verifier.code 0} true;
  $i116 := $srem.i64($i115,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i64.i32($i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1133, 5} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i32($i106,$i106);
  call {:cexpr "b"} boogie_si_record_i32($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 9} true;
  assume {:verifier.code 0} true;
  $i120 := $srem.i64($i119,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i64.i32($i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1136, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i110,$i110);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb49, $bb50;
$bb46:
  assume ($i111 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1129, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1130, 3} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb48;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  assume !($i111 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i110 := $i112;
  goto $bb45;
$bb49:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1138, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $i124;
  goto $bb51;
$bb50:
  assume !($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 16} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i121,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb52, $bb53;
$bb51:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1142, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i117,$i117);
  call {:cexpr "a"} boogie_si_record_i32($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i32.i64($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $srem.i64($i130,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i64.i32($i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1144, 5} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i121,$i121);
  call {:cexpr "b"} boogie_si_record_i32($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i134 := $sext.i32.i64($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $srem.i64($i134,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i64.i32($i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1147, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i125,$i125);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb55, $bb56;
$bb52:
  assume ($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1140, 7} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1141, 3} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb54;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  assume !($i126 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i125 := $i127;
  goto $bb51;
$bb55:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1149, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 3} true;
  assume {:verifier.code 0} true;
  $i140 := $i139;
  goto $bb57;
$bb56:
  assume !($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 16} true;
  assume {:verifier.code 0} true;
  $i141 := $slt.i32($i136,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1153, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i132,$i132);
  call {:cexpr "a"} boogie_si_record_i32($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i145 := $sext.i32.i64($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 9} true;
  assume {:verifier.code 0} true;
  $i146 := $srem.i64($i145,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i64.i32($i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1155, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i136,$i136);
  call {:cexpr "b"} boogie_si_record_i32($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $srem.i64($i149,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i64.i32($i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1158, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i140,$i140);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb61, $bb62;
$bb58:
  assume ($i141 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1151, 7} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1152, 3} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb60;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  assume !($i141 == 1);
  goto $bb60;
$bb60:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i140 := $i142;
  goto $bb57;
$bb61:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1160, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i154);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 3} true;
  assume {:verifier.code 0} true;
  $i155 := $i154;
  goto $bb63;
$bb62:
  assume !($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 16} true;
  assume {:verifier.code 0} true;
  $i156 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb64, $bb65;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1164, 5} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i32($i147,$i147);
  call {:cexpr "a"} boogie_si_record_i32($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i160 := $sext.i32.i64($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $srem.i64($i160,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i64.i32($i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1166, 5} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i32($i151,$i151);
  call {:cexpr "b"} boogie_si_record_i32($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $sext.i32.i64($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 9} true;
  assume {:verifier.code 0} true;
  $i165 := $srem.i64($i164,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i64.i32($i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1169, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i155,$i155);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb67, $bb68;
$bb64:
  assume ($i156 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1162, 7} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1163, 3} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb66;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  assume !($i156 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i155 := $i157;
  goto $bb63;
$bb67:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1171, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i169);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 3} true;
  assume {:verifier.code 0} true;
  $i170 := $i169;
  goto $bb69;
$bb68:
  assume !($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $slt.i32($i166,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb70, $bb71;
$bb69:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1175, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i162,$i162);
  call {:cexpr "a"} boogie_si_record_i32($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $sext.i32.i64($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 9} true;
  assume {:verifier.code 0} true;
  $i176 := $srem.i64($i175,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i177 := $trunc.i64.i32($i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1177, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i166,$i166);
  call {:cexpr "b"} boogie_si_record_i32($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $sext.i32.i64($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 9} true;
  assume {:verifier.code 0} true;
  $i180 := $srem.i64($i179,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i64.i32($i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1180, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i170,$i170);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb73, $bb74;
$bb70:
  assume ($i171 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1173, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1174, 3} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb72;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  assume !($i171 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i170 := $i172;
  goto $bb69;
$bb73:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1182, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i184);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $i184;
  goto $bb75;
$bb74:
  assume !($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 16} true;
  assume {:verifier.code 0} true;
  $i186 := $slt.i32($i181,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb76, $bb77;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1186, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i177,$i177);
  call {:cexpr "a"} boogie_si_record_i32($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i190 := $sext.i32.i64($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 9} true;
  assume {:verifier.code 0} true;
  $i191 := $srem.i64($i190,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i192 := $trunc.i64.i32($i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1188, 5} true;
  assume {:verifier.code 0} true;
  $i193 := $add.i32($i181,$i181);
  call {:cexpr "b"} boogie_si_record_i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i32.i64($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 9} true;
  assume {:verifier.code 0} true;
  $i195 := $srem.i64($i194,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i196 := $trunc.i64.i32($i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1191, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i185,$i185);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb79, $bb80;
$bb76:
  assume ($i186 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1184, 7} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1185, 3} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb78;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb78;
$bb78:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i185 := $i187;
  goto $bb75;
$bb79:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1193, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i199);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 3} true;
  assume {:verifier.code 0} true;
  $i200 := $i199;
  goto $bb81;
$bb80:
  assume !($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 16} true;
  assume {:verifier.code 0} true;
  $i201 := $slt.i32($i196,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb82, $bb83;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1197, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $add.i32($i192,$i192);
  call {:cexpr "a"} boogie_si_record_i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i32.i64($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $srem.i64($i205,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.i64.i32($i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1199, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i32($i196,$i196);
  call {:cexpr "b"} boogie_si_record_i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i32.i64($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $srem.i64($i209,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $trunc.i64.i32($i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1202, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i200,$i200);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb85, $bb86;
$bb82:
  assume ($i201 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1195, 7} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1196, 3} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb84;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  assume !($i201 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i200 := $i202;
  goto $bb81;
$bb85:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1204, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i214);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 3} true;
  assume {:verifier.code 0} true;
  $i215 := $i214;
  goto $bb87;
$bb86:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 16} true;
  assume {:verifier.code 0} true;
  $i216 := $slt.i32($i211,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb88, $bb89;
$bb87:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1208, 5} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i32($i207,$i207);
  call {:cexpr "a"} boogie_si_record_i32($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i32.i64($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i64($i220,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i64.i32($i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1210, 5} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i32($i211,$i211);
  call {:cexpr "b"} boogie_si_record_i32($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i32.i64($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 9} true;
  assume {:verifier.code 0} true;
  $i225 := $srem.i64($i224,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i64.i32($i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1213, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i215,$i215);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb91, $bb92;
$bb88:
  assume ($i216 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1206, 7} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1207, 3} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb90;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  assume !($i216 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i215 := $i217;
  goto $bb87;
$bb91:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1215, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 3} true;
  assume {:verifier.code 0} true;
  $i230 := $i229;
  goto $bb93;
$bb92:
  assume !($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 16} true;
  assume {:verifier.code 0} true;
  $i231 := $slt.i32($i226,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb94, $bb95;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1219, 5} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i32($i222,$i222);
  call {:cexpr "a"} boogie_si_record_i32($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 9} true;
  assume {:verifier.code 0} true;
  $i236 := $srem.i64($i235,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i64.i32($i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1221, 5} true;
  assume {:verifier.code 0} true;
  $i238 := $add.i32($i226,$i226);
  call {:cexpr "b"} boogie_si_record_i32($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i239 := $sext.i32.i64($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $srem.i64($i239,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i241 := $trunc.i64.i32($i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1224, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i230,$i230);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb97, $bb98;
$bb94:
  assume ($i231 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1217, 7} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1218, 3} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb96;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  assume !($i231 == 1);
  goto $bb96;
$bb96:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i230 := $i232;
  goto $bb93;
$bb97:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1226, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i244);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 3} true;
  assume {:verifier.code 0} true;
  $i245 := $i244;
  goto $bb99;
$bb98:
  assume !($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 16} true;
  assume {:verifier.code 0} true;
  $i246 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb100, $bb101;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1230, 5} true;
  assume {:verifier.code 0} true;
  $i249 := $add.i32($i237,$i237);
  call {:cexpr "a"} boogie_si_record_i32($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i250 := $sext.i32.i64($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 9} true;
  assume {:verifier.code 0} true;
  $i251 := $srem.i64($i250,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i252 := $trunc.i64.i32($i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1232, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i32($i241,$i241);
  call {:cexpr "b"} boogie_si_record_i32($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i254 := $sext.i32.i64($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 9} true;
  assume {:verifier.code 0} true;
  $i255 := $srem.i64($i254,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $trunc.i64.i32($i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1235, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i245,$i245);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb103, $bb104;
$bb100:
  assume ($i246 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1228, 7} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1229, 3} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb102;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  assume !($i246 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i245 := $i247;
  goto $bb99;
$bb103:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1237, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 3} true;
  assume {:verifier.code 0} true;
  $i260 := $i259;
  goto $bb105;
$bb104:
  assume !($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 16} true;
  assume {:verifier.code 0} true;
  $i261 := $slt.i32($i256,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb106, $bb107;
$bb105:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1241, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $add.i32($i252,$i252);
  call {:cexpr "a"} boogie_si_record_i32($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i265 := $sext.i32.i64($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 9} true;
  assume {:verifier.code 0} true;
  $i266 := $srem.i64($i265,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $trunc.i64.i32($i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1243, 5} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i256,$i256);
  call {:cexpr "b"} boogie_si_record_i32($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $sext.i32.i64($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $srem.i64($i269,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i271 := $trunc.i64.i32($i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1246, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i260,$i260);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb109, $bb110;
$bb106:
  assume ($i261 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1239, 7} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1240, 3} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb108;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  assume !($i261 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i260 := $i262;
  goto $bb105;
$bb109:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1248, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i274);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 3} true;
  assume {:verifier.code 0} true;
  $i275 := $i274;
  goto $bb111;
$bb110:
  assume !($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 16} true;
  assume {:verifier.code 0} true;
  $i276 := $slt.i32($i271,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb112, $bb113;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1252, 5} true;
  assume {:verifier.code 0} true;
  $i279 := $add.i32($i267,$i267);
  call {:cexpr "a"} boogie_si_record_i32($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $sext.i32.i64($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 9} true;
  assume {:verifier.code 0} true;
  $i281 := $srem.i64($i280,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i282 := $trunc.i64.i32($i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1254, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i271,$i271);
  call {:cexpr "b"} boogie_si_record_i32($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i284 := $sext.i32.i64($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 9} true;
  assume {:verifier.code 0} true;
  $i285 := $srem.i64($i284,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i286 := $trunc.i64.i32($i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1257, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i275,$i275);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb115, $bb116;
$bb112:
  assume ($i276 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1250, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1251, 3} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb114;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  assume !($i276 == 1);
  goto $bb114;
$bb114:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i275 := $i277;
  goto $bb111;
$bb115:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1259, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i289);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 3} true;
  assume {:verifier.code 0} true;
  $i290 := $i289;
  goto $bb117;
$bb116:
  assume !($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 16} true;
  assume {:verifier.code 0} true;
  $i291 := $slt.i32($i286,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb118, $bb119;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1263, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i282,$i282);
  call {:cexpr "a"} boogie_si_record_i32($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i295 := $sext.i32.i64($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 9} true;
  assume {:verifier.code 0} true;
  $i296 := $srem.i64($i295,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i297 := $trunc.i64.i32($i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1265, 5} true;
  assume {:verifier.code 0} true;
  $i298 := $add.i32($i286,$i286);
  call {:cexpr "b"} boogie_si_record_i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i32.i64($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 9} true;
  assume {:verifier.code 0} true;
  $i300 := $srem.i64($i299,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i301 := $trunc.i64.i32($i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1268, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i290,$i290);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i303} true;
  goto $bb121, $bb122;
$bb118:
  assume ($i291 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1261, 7} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1262, 3} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb120;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  assume !($i291 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i290 := $i292;
  goto $bb117;
$bb121:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1270, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i304);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 3} true;
  assume {:verifier.code 0} true;
  $i305 := $i304;
  goto $bb123;
$bb122:
  assume !($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 16} true;
  assume {:verifier.code 0} true;
  $i306 := $slt.i32($i301,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb124, $bb125;
$bb123:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1274, 5} true;
  assume {:verifier.code 0} true;
  $i309 := $add.i32($i297,$i297);
  call {:cexpr "a"} boogie_si_record_i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i32.i64($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 9} true;
  assume {:verifier.code 0} true;
  $i311 := $srem.i64($i310,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i312 := $trunc.i64.i32($i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1276, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $add.i32($i301,$i301);
  call {:cexpr "b"} boogie_si_record_i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i32.i64($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i64($i314,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i64.i32($i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1279, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i305,$i305);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i318} true;
  goto $bb127, $bb128;
$bb124:
  assume ($i306 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1272, 7} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1273, 3} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb126;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  assume !($i306 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i305 := $i307;
  goto $bb123;
$bb127:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1281, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i319);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 3} true;
  assume {:verifier.code 0} true;
  $i320 := $i319;
  goto $bb129;
$bb128:
  assume !($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 16} true;
  assume {:verifier.code 0} true;
  $i321 := $slt.i32($i316,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb130, $bb131;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1285, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i32($i312,$i312);
  call {:cexpr "a"} boogie_si_record_i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i32.i64($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $srem.i64($i325,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $trunc.i64.i32($i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1287, 5} true;
  assume {:verifier.code 0} true;
  $i328 := $add.i32($i316,$i316);
  call {:cexpr "b"} boogie_si_record_i32($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i329 := $sext.i32.i64($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 9} true;
  assume {:verifier.code 0} true;
  $i330 := $srem.i64($i329,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i331 := $trunc.i64.i32($i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1290, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i320,$i320);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i333} true;
  goto $bb133, $bb134;
$bb130:
  assume ($i321 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1283, 7} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1284, 3} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb132;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  assume !($i321 == 1);
  goto $bb132;
$bb132:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i320 := $i322;
  goto $bb129;
$bb133:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1292, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i334);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 3} true;
  assume {:verifier.code 0} true;
  $i335 := $i334;
  goto $bb135;
$bb134:
  assume !($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 16} true;
  assume {:verifier.code 0} true;
  $i336 := $slt.i32($i331,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb136, $bb137;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1296, 5} true;
  assume {:verifier.code 0} true;
  $i339 := $add.i32($i327,$i327);
  call {:cexpr "a"} boogie_si_record_i32($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i32.i64($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 9} true;
  assume {:verifier.code 0} true;
  $i341 := $srem.i64($i340,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i64.i32($i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1298, 5} true;
  assume {:verifier.code 0} true;
  $i343 := $add.i32($i331,$i331);
  call {:cexpr "b"} boogie_si_record_i32($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i344 := $sext.i32.i64($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 9} true;
  assume {:verifier.code 0} true;
  $i345 := $srem.i64($i344,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i346 := $trunc.i64.i32($i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1301, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i335,$i335);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb139, $bb140;
$bb136:
  assume ($i336 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1294, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1295, 3} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb138;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  assume !($i336 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i335 := $i337;
  goto $bb135;
$bb139:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1303, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 3} true;
  assume {:verifier.code 0} true;
  $i350 := $i349;
  goto $bb141;
$bb140:
  assume !($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 16} true;
  assume {:verifier.code 0} true;
  $i351 := $slt.i32($i346,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb142, $bb143;
$bb141:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1307, 5} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i32($i342,$i342);
  call {:cexpr "a"} boogie_si_record_i32($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i355 := $sext.i32.i64($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 9} true;
  assume {:verifier.code 0} true;
  $i356 := $srem.i64($i355,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i357 := $trunc.i64.i32($i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1309, 5} true;
  assume {:verifier.code 0} true;
  $i358 := $add.i32($i346,$i346);
  call {:cexpr "b"} boogie_si_record_i32($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i32.i64($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 9} true;
  assume {:verifier.code 0} true;
  $i360 := $srem.i64($i359,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i361 := $trunc.i64.i32($i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1312, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i350,$i350);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb145, $bb146;
$bb142:
  assume ($i351 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1305, 7} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1306, 3} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb144;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  assume !($i351 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i350 := $i352;
  goto $bb141;
$bb145:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1314, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 3} true;
  assume {:verifier.code 0} true;
  $i365 := $i364;
  goto $bb147;
$bb146:
  assume !($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 16} true;
  assume {:verifier.code 0} true;
  $i366 := $slt.i32($i361,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb148, $bb149;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1318, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $add.i32($i357,$i357);
  call {:cexpr "a"} boogie_si_record_i32($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i370 := $sext.i32.i64($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 9} true;
  assume {:verifier.code 0} true;
  $i371 := $srem.i64($i370,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $trunc.i64.i32($i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1320, 5} true;
  assume {:verifier.code 0} true;
  $i373 := $add.i32($i361,$i361);
  call {:cexpr "b"} boogie_si_record_i32($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $sext.i32.i64($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 9} true;
  assume {:verifier.code 0} true;
  $i375 := $srem.i64($i374,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i376 := $trunc.i64.i32($i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1323, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i365,$i365);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i378} true;
  goto $bb151, $bb152;
$bb148:
  assume ($i366 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1316, 7} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1317, 3} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb150;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  assume !($i366 == 1);
  goto $bb150;
$bb150:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i365 := $i367;
  goto $bb147;
$bb151:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1325, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 3} true;
  assume {:verifier.code 0} true;
  $i380 := $i379;
  goto $bb153;
$bb152:
  assume !($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 16} true;
  assume {:verifier.code 0} true;
  $i381 := $slt.i32($i376,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb154, $bb155;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1329, 5} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i32($i372,$i372);
  call {:cexpr "a"} boogie_si_record_i32($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $sext.i32.i64($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $srem.i64($i385,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i387 := $trunc.i64.i32($i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1331, 5} true;
  assume {:verifier.code 0} true;
  $i388 := $add.i32($i376,$i376);
  call {:cexpr "b"} boogie_si_record_i32($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i389 := $sext.i32.i64($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $srem.i64($i389,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i64.i32($i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1334, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i380,$i380);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i393} true;
  goto $bb157, $bb158;
$bb154:
  assume ($i381 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1327, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1328, 3} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb156;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  assume !($i381 == 1);
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i380 := $i382;
  goto $bb153;
$bb157:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1336, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i394);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 3} true;
  assume {:verifier.code 0} true;
  $i395 := $i394;
  goto $bb159;
$bb158:
  assume !($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 16} true;
  assume {:verifier.code 0} true;
  $i396 := $slt.i32($i391,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb160, $bb161;
$bb159:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1340, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i387,$i387);
  call {:cexpr "a"} boogie_si_record_i32($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i400 := $sext.i32.i64($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 9} true;
  assume {:verifier.code 0} true;
  $i401 := $srem.i64($i400,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i402 := $trunc.i64.i32($i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1342, 5} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i32($i391,$i391);
  call {:cexpr "b"} boogie_si_record_i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i32.i64($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 9} true;
  assume {:verifier.code 0} true;
  $i405 := $srem.i64($i404,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i406 := $trunc.i64.i32($i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1345, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i395,$i395);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i408} true;
  goto $bb163, $bb164;
$bb160:
  assume ($i396 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1338, 7} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1339, 3} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb162;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  assume !($i396 == 1);
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i395 := $i397;
  goto $bb159;
$bb163:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1347, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i409);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 3} true;
  assume {:verifier.code 0} true;
  $i410 := $i409;
  goto $bb165;
$bb164:
  assume !($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 16} true;
  assume {:verifier.code 0} true;
  $i411 := $slt.i32($i406,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb166, $bb167;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1351, 5} true;
  assume {:verifier.code 0} true;
  $i414 := $add.i32($i402,$i402);
  call {:cexpr "a"} boogie_si_record_i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i32.i64($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 9} true;
  assume {:verifier.code 0} true;
  $i416 := $srem.i64($i415,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i417 := $trunc.i64.i32($i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1353, 5} true;
  assume {:verifier.code 0} true;
  $i418 := $add.i32($i406,$i406);
  call {:cexpr "b"} boogie_si_record_i32($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $srem.i64($i419,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i421 := $trunc.i64.i32($i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1356, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i410,$i410);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i423} true;
  goto $bb169, $bb170;
$bb166:
  assume ($i411 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1349, 7} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1350, 3} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb168;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  assume !($i411 == 1);
  goto $bb168;
$bb168:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i410 := $i412;
  goto $bb165;
$bb169:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1358, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i424);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 3} true;
  assume {:verifier.code 0} true;
  $i425 := $i424;
  goto $bb171;
$bb170:
  assume !($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 16} true;
  assume {:verifier.code 0} true;
  $i426 := $slt.i32($i421,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb172, $bb173;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1362, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $add.i32($i417,$i417);
  call {:cexpr "a"} boogie_si_record_i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i32.i64($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i64($i430,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i64.i32($i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1364, 5} true;
  assume {:verifier.code 0} true;
  $i433 := $add.i32($i421,$i421);
  call {:cexpr "b"} boogie_si_record_i32($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i32.i64($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 9} true;
  assume {:verifier.code 0} true;
  $i435 := $srem.i64($i434,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i64.i32($i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1367, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i425,$i425);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i438} true;
  goto $bb175, $bb176;
$bb172:
  assume ($i426 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1360, 7} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1361, 3} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb174;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  assume !($i426 == 1);
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i425 := $i427;
  goto $bb171;
$bb175:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1369, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i439);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 3} true;
  assume {:verifier.code 0} true;
  $i440 := $i439;
  goto $bb177;
$bb176:
  assume !($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 16} true;
  assume {:verifier.code 0} true;
  $i441 := $slt.i32($i436,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb178, $bb179;
$bb177:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1373, 5} true;
  assume {:verifier.code 0} true;
  $i444 := $add.i32($i432,$i432);
  call {:cexpr "a"} boogie_si_record_i32($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i445 := $sext.i32.i64($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 9} true;
  assume {:verifier.code 0} true;
  $i446 := $srem.i64($i445,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i447 := $trunc.i64.i32($i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1375, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $add.i32($i436,$i436);
  call {:cexpr "b"} boogie_si_record_i32($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i32.i64($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $srem.i64($i449,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i64.i32($i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1378, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i440,$i440);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i453} true;
  goto $bb181, $bb182;
$bb178:
  assume ($i441 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1371, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1372, 3} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb180;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  assume !($i441 == 1);
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i440 := $i442;
  goto $bb177;
$bb181:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1380, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i454);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 3} true;
  assume {:verifier.code 0} true;
  $i455 := $i454;
  goto $bb183;
$bb182:
  assume !($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 16} true;
  assume {:verifier.code 0} true;
  $i456 := $slt.i32($i451,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb184, $bb185;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1384, 5} true;
  assume {:verifier.code 0} true;
  $i459 := $add.i32($i447,$i447);
  call {:cexpr "a"} boogie_si_record_i32($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i460 := $sext.i32.i64($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 9} true;
  assume {:verifier.code 0} true;
  $i461 := $srem.i64($i460,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i462 := $trunc.i64.i32($i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1386, 5} true;
  assume {:verifier.code 0} true;
  $i463 := $add.i32($i451,$i451);
  call {:cexpr "b"} boogie_si_record_i32($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i464 := $sext.i32.i64($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 9} true;
  assume {:verifier.code 0} true;
  $i465 := $srem.i64($i464,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i466 := $trunc.i64.i32($i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1389, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i455,$i455);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i468} true;
  goto $bb187, $bb188;
$bb184:
  assume ($i456 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1382, 7} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1383, 3} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb186;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  assume !($i456 == 1);
  goto $bb186;
$bb186:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i455 := $i457;
  goto $bb183;
$bb187:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1391, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i469);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 3} true;
  assume {:verifier.code 0} true;
  $i470 := $i469;
  goto $bb189;
$bb188:
  assume !($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 16} true;
  assume {:verifier.code 0} true;
  $i471 := $slt.i32($i466,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb190, $bb191;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1400, 3} true;
  assume {:verifier.code 0} true;
  $r := $i470;
  $exn := false;
  return;
$bb190:
  assume ($i471 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1393, 7} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1394, 3} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb192;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  assume !($i471 == 1);
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i470 := $i472;
  goto $bb189;
}
const __SMACK_or64: ref;
axiom (__SMACK_or64 == $sub.ref(0,38184));
procedure {:inline 45} __SMACK_or64($i0: i64, $i1: i64) returns ($r: i64)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_or64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 66} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 50} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 44} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 37} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or16: ref;
axiom (__SMACK_or16 == $sub.ref(0,39216));
procedure {:inline 45} __SMACK_or16($i0: i16, $i1: i16) returns ($r: i16)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_or16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 70} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 54} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 40} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or8: ref;
axiom (__SMACK_or8 == $sub.ref(0,40248));
procedure {:inline 45} __SMACK_or8($i0: i8, $i1: i8) returns ($r: i8)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_or8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 65} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 49} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 36} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0,41280));
procedure {:inline 45} __SMACK_check_overflow($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1409, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} ($i0 == $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1410, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_loop_exit: ref;
axiom (__SMACK_loop_exit == $sub.ref(0,42312));
procedure {:inline 45} __SMACK_loop_exit()
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 32} true;
  assume {:verifier.code 1} true;
  assert {:loopexit} false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0,43344));
type $mop;
procedure {:inline 45} boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exn.dup: bool;
var $exnv: int;
var $exnv.dup: int;
procedure {:inline 45} corral_atomic_begin();
procedure {:inline 45} corral_atomic_end();
procedure {:inline 45} $alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}
procedure {:inline 45} $malloc(n: ref, n.dup: i1) returns (p: ref, p.dup: i1)
modifies $CurrAddr;
{
  call corral_atomic_begin();
  $shadow_ok := ($shadow_ok && (n.dup == 0));
  call p := $$alloc(n);
  p.dup := 0;
  call corral_atomic_end();
}
var $CurrAddr: ref;
var $CurrAddr.dup: ref;
var $shadow_ok: bool;
procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n,$0.ref);
  if ($sgt.ref.bool(n,$0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr,n),p);
    assume ($sgt.ref.bool($CurrAddr,$0.ref) && $slt.ref.bool($CurrAddr,$MALLOC_TOP));
  }
}
procedure {:inline 45} $free(p: ref);
const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0,44376));
procedure {:inline 45} __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0,45408));
procedure {:inline 45} __SMACK_init_func_memory_model()
modifies $CurrAddr, $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1885, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1885, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1890, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0,46440));
procedure {:inline 45} __SMACK_static_init()
modifies $exn;
{
$bb0:
  $exn := false;
  $exn.dup := false;
  return;
}
procedure {:inline 45} $memcpy.i8(M.dst: [ref] i8, M.dst.dup: [ref] i1, M.src: [ref] i8, M.src.dup: [ref] i1, dst: ref, dst.dup: i1, src: ref, src.dup: i1, len: ref, len.dup: i1, isvolatile: bool, isvolatile.dup: bool) returns (M.ret: [ref] i8, M.ret.dup: [ref] i1)
{
  assume (forall x: ref :: (($sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len))) ==> (M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)])));
  assume (forall x: ref :: (($sle.ref.bool(dst.dup,x) && $slt.ref.bool(x,$add.ref(dst.dup,len.dup))) ==> (M.ret.dup[x] == M.src.dup[$add.ref($sub.ref(src.dup,dst.dup),x)])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst) ==> (M.ret[x] == M.dst[x])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst.dup) ==> (M.ret.dup[x] == M.dst.dup[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst,len),x) ==> (M.ret[x] == M.dst[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst.dup,len.dup),x) ==> (M.ret.dup[x] == M.dst.dup[x])));
}
procedure {:inline 45} $memset.i8(M: [ref] i8, M.dup: [ref] i1, dst: ref, dst.dup: i1, val: i8, val.dup: i1, len: ref, len.dup: i1, isvolatile: bool, isvolatile.dup: bool) returns (M.ret: [ref] i8, M.ret.dup: [ref] i1)
{
  assume (forall x: ref :: (($sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len))) ==> (M.ret[x] == val)));
  assume (forall x: ref :: (($sle.ref.bool(dst.dup,x) && $slt.ref.bool(x,$add.ref(dst.dup,len.dup))) ==> (M.ret.dup[x] == val.dup)));
  assume (forall x: ref :: ($slt.ref.bool(x,dst) ==> (M.ret[x] == M[x])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst.dup) ==> (M.ret.dup[x] == M.dup[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst,len),x) ==> (M.ret[x] == M[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst.dup,len.dup),x) ==> (M.ret.dup[x] == M.dup[x])));
}
procedure {:inline 45} boogie_si_record_i16(x: i16);
procedure {:inline 45} boogie_si_record_i32(x: i32);
procedure {:inline 45} boogie_si_record_i64(x: i64);
procedure {:inline 45} boogie_si_record_i8(x: i8);
procedure {:inline 45} boogie_si_record_ref(x: ref);
procedure {:inline 45} $initialize()
modifies $CurrAddr, $exn;
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
const {:count 1} cons.dup: i1;
axiom (cons.dup == 0);