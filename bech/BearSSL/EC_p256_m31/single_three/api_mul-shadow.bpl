type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i33 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
var $M.0: [ref] i64;
var $M.0.shadow: [ref] i64;
var $M.1: [ref] i64;
var $M.1.shadow: [ref] i64;
var $M.2: [ref] i64;
var $M.2.shadow: [ref] i64;
var $M.3: [ref] i8;
var $M.3.shadow: [ref] i8;
var $M.4: [ref] i8;
var $M.4.shadow: [ref] i8;
var $M.5: [ref] i8;
var $M.5.shadow: [ref] i8;
var $M.6: [ref] i32;
var $M.6.shadow: [ref] i32;
var $M.7: [ref] i32;
var $M.7.shadow: [ref] i32;
var $M.8: [ref] i64;
var $M.8.shadow: [ref] i64;
var $M.9: [ref] i32;
var $M.9.shadow: [ref] i32;
var $M.10: [ref] i64;
var $M.10.shadow: [ref] i64;
var $M.11: [ref] i64;
var $M.11.shadow: [ref] i64;
var $M.12: [ref] i64;
var $M.12.shadow: [ref] i64;
var $M.13: [ref] i8;
var $M.13.shadow: [ref] i8;
var $M.14: [ref] i32;
var $M.14.shadow: [ref] i32;
var $M.15: [ref] ref;
var $M.15.shadow: [ref] ref;
var $M.16: ref;
var $M.16.shadow: ref;
var $M.17: i32;
var $M.17.shadow: i32;
var $M.18: ref;
var $M.18.shadow: ref;
var $M.19: ref;
var $M.19.shadow: ref;
var $M.20: ref;
var $M.20.shadow: ref;
var $M.21: ref;
var $M.21.shadow: ref;
var $M.22: ref;
var $M.22.shadow: ref;
axiom ($GLOBALS_BOTTOM == $sub.ref(0,64209));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM,$sub.ref(0,32768)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p,$EXTERNS_BOTTOM) }
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i33(i1: i33, i2: i33) returns (i33) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i33(i1: i33, i2: i33) returns (i33) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i33(i1: i33, i2: i33) returns (i33) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $idiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $idiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $idiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $idiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $idiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $idiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $idiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $idiv.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "div"} $idiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $idiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $idiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $idiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $idiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $idiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $idiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $idiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $idiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $idiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $sdiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1,i2) }
function {:inline} $sdiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1,i2) }
function {:inline} $sdiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1,i2) }
function {:inline} $sdiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1,i2) }
function {:inline} $sdiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1,i2) }
function {:inline} $sdiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1,i2) }
function {:inline} $sdiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1,i2) }
function {:inline} $sdiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1,i2) }
function {:inline} $sdiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1,i2) }
function {:inline} $sdiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1,i2) }
function {:inline} $sdiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1,i2) }
function {:inline} $sdiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1,i2) }
function {:inline} $sdiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1,i2) }
function {:inline} $sdiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1,i2) }
function {:inline} $sdiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1,i2) }
function {:inline} $sdiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1,i2) }
function {:inline} $sdiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1,i2) }
function {:inline} $sdiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1,i2) }
function {:inline} $udiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1,i2) }
function {:inline} $udiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1,i2) }
function {:inline} $udiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1,i2) }
function {:inline} $udiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1,i2) }
function {:inline} $udiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1,i2) }
function {:inline} $udiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1,i2) }
function {:inline} $udiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1,i2) }
function {:inline} $udiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1,i2) }
function {:inline} $udiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1,i2) }
function {:inline} $udiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1,i2) }
function {:inline} $udiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1,i2) }
function {:inline} $udiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1,i2) }
function {:inline} $udiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1,i2) }
function {:inline} $udiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1,i2) }
function {:inline} $udiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1,i2) }
function {:inline} $udiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1,i2) }
function {:inline} $udiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1,i2) }
function {:inline} $udiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1,i2) }
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1,i2),0) && $slt.i1.bool(i1,0)) then $sub.i1($smod.i1(i1,i2),$smax.i1(i2,$sub.i1(0,i2))) else $smod.i1(i1,i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1,i2),0) && $slt.i5.bool(i1,0)) then $sub.i5($smod.i5(i1,i2),$smax.i5(i2,$sub.i5(0,i2))) else $smod.i5(i1,i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1,i2),0) && $slt.i6.bool(i1,0)) then $sub.i6($smod.i6(i1,i2),$smax.i6(i2,$sub.i6(0,i2))) else $smod.i6(i1,i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1,i2),0) && $slt.i8.bool(i1,0)) then $sub.i8($smod.i8(i1,i2),$smax.i8(i2,$sub.i8(0,i2))) else $smod.i8(i1,i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1,i2),0) && $slt.i16.bool(i1,0)) then $sub.i16($smod.i16(i1,i2),$smax.i16(i2,$sub.i16(0,i2))) else $smod.i16(i1,i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1,i2),0) && $slt.i24.bool(i1,0)) then $sub.i24($smod.i24(i1,i2),$smax.i24(i2,$sub.i24(0,i2))) else $smod.i24(i1,i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1,i2),0) && $slt.i32.bool(i1,0)) then $sub.i32($smod.i32(i1,i2),$smax.i32(i2,$sub.i32(0,i2))) else $smod.i32(i1,i2)) }
function {:inline} $srem.i33(i1: i33, i2: i33) returns (i33) { (if ($ne.i33.bool($smod.i33(i1,i2),0) && $slt.i33.bool(i1,0)) then $sub.i33($smod.i33(i1,i2),$smax.i33(i2,$sub.i33(0,i2))) else $smod.i33(i1,i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1,i2),0) && $slt.i40.bool(i1,0)) then $sub.i40($smod.i40(i1,i2),$smax.i40(i2,$sub.i40(0,i2))) else $smod.i40(i1,i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1,i2),0) && $slt.i48.bool(i1,0)) then $sub.i48($smod.i48(i1,i2),$smax.i48(i2,$sub.i48(0,i2))) else $smod.i48(i1,i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1,i2),0) && $slt.i56.bool(i1,0)) then $sub.i56($smod.i56(i1,i2),$smax.i56(i2,$sub.i56(0,i2))) else $smod.i56(i1,i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1,i2),0) && $slt.i64.bool(i1,0)) then $sub.i64($smod.i64(i1,i2),$smax.i64(i2,$sub.i64(0,i2))) else $smod.i64(i1,i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1,i2),0) && $slt.i80.bool(i1,0)) then $sub.i80($smod.i80(i1,i2),$smax.i80(i2,$sub.i80(0,i2))) else $smod.i80(i1,i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1,i2),0) && $slt.i88.bool(i1,0)) then $sub.i88($smod.i88(i1,i2),$smax.i88(i2,$sub.i88(0,i2))) else $smod.i88(i1,i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1,i2),0) && $slt.i96.bool(i1,0)) then $sub.i96($smod.i96(i1,i2),$smax.i96(i2,$sub.i96(0,i2))) else $smod.i96(i1,i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1,i2),0) && $slt.i128.bool(i1,0)) then $sub.i128($smod.i128(i1,i2),$smax.i128(i2,$sub.i128(0,i2))) else $smod.i128(i1,i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1,i2),0) && $slt.i160.bool(i1,0)) then $sub.i160($smod.i160(i1,i2),$smax.i160(i2,$sub.i160(0,i2))) else $smod.i160(i1,i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1,i2),0) && $slt.i256.bool(i1,0)) then $sub.i256($smod.i256(i1,i2),$smax.i256(i2,$sub.i256(0,i2))) else $smod.i256(i1,i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1,i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1,i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1,i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1,i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1,i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1,i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1,i2) }
function {:inline} $urem.i33(i1: i33, i2: i33) returns (i33) { $smod.i33(i1,i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1,i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1,i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1,i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1,i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1,i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1,i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1,i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1,i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1,i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1,i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i33(i1: i33, i2: i33) returns (i33);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i33(i1: i33, i2: i33) returns (i33);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i33(i1: i33, i2: i33) returns (i33);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i33(i1: i33, i2: i33) returns (i33);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i33(i1: i33, i2: i33) returns (i33);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i33(i1: i33, i2: i33) returns (i33);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i33(i1: i33, i2: i33) returns (i33);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i33(i: i33) returns (i33);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if $slt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if $slt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if $slt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if $slt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if $slt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if $slt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i33(i1: i33, i2: i33) returns (i33) { (if $slt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if $slt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if $slt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if $slt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if $slt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if $slt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if $slt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if $slt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if $slt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if $slt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if $slt.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if $sgt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if $sgt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if $sgt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if $sgt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if $sgt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if $sgt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i33(i1: i33, i2: i33) returns (i33) { (if $sgt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if $sgt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if $sgt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if $sgt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if $sgt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if $sgt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if $sgt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if $sgt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if $sgt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if $sgt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if $sgt.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if $ult.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if $ult.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if $ult.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if $ult.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if $ult.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if $ult.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i33(i1: i33, i2: i33) returns (i33) { (if $ult.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if $ult.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if $ult.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if $ult.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if $ult.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if $ult.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if $ult.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if $ult.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if $ult.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if $ult.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if $ult.i256.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if $ugt.i5.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if $ugt.i6.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if $ugt.i8.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if $ugt.i16.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if $ugt.i24.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if $ugt.i32.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i33(i1: i33, i2: i33) returns (i33) { (if $ugt.i33.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if $ugt.i40.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if $ugt.i48.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if $ugt.i56.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if $ugt.i64.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if $ugt.i80.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if $ugt.i88.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if $ugt.i96.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if $ugt.i128.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if $ugt.i160.bool(i1,i2) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if $ugt.i256.bool(i1,i2) then i1 else i2) }
axiom ($and.i1(0,0) == 0);
axiom ($or.i1(0,0) == 0);
axiom ($xor.i1(0,0) == 0);
axiom ($and.i1(0,1) == 0);
axiom ($or.i1(0,1) == 1);
axiom ($xor.i1(0,1) == 1);
axiom ($and.i1(1,0) == 0);
axiom ($or.i1(1,0) == 1);
axiom ($xor.i1(1,0) == 1);
axiom ($and.i1(1,1) == 1);
axiom ($or.i1(1,1) == 1);
axiom ($xor.i1(1,1) == 0);
axiom ($and.i32(32,16) == 0);
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i33(i1: i33, i2: i33) returns (i1) { (if $ule.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $ult.i33(i1: i33, i2: i33) returns (i1) { (if $ult.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i33(i1: i33, i2: i33) returns (i1) { (if $uge.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i33(i1: i33, i2: i33) returns (i1) { (if $ugt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i33(i1: i33, i2: i33) returns (i1) { (if $sle.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $slt.i33(i1: i33, i2: i33) returns (i1) { (if $slt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i33(i1: i33, i2: i33) returns (i1) { (if $sge.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i33(i1: i33, i2: i33) returns (i1) { (if $sgt.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 == i2) }
function {:inline} $eq.i33(i1: i33, i2: i33) returns (i1) { (if $eq.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 != i2) }
function {:inline} $ne.i33(i1: i33, i2: i33) returns (i1) { (if $ne.i33.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1,i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1,i2) then 1 else 0) }
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i33(M: [ref] i33, p: ref) returns (i33) { M[p] }
function {:inline} $store.i33(M: [ref] i33, p: ref, i: i33) returns ([ref] i33) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i33.i1(i: i33) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i33.i5(i: i33) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i33.i6(i: i33) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i33.i8(i: i33) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i33.i16(i: i33) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i33.i24(i: i33) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i33.i32(i: i33) returns (i32) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i40.i33(i: i40) returns (i33) { i }
function {:inline} $trunc.i48.i33(i: i48) returns (i33) { i }
function {:inline} $trunc.i56.i33(i: i56) returns (i33) { i }
function {:inline} $trunc.i64.i33(i: i64) returns (i33) { i }
function {:inline} $trunc.i80.i33(i: i80) returns (i33) { i }
function {:inline} $trunc.i88.i33(i: i88) returns (i33) { i }
function {:inline} $trunc.i96.i33(i: i96) returns (i33) { i }
function {:inline} $trunc.i128.i33(i: i128) returns (i33) { i }
function {:inline} $trunc.i160.i33(i: i160) returns (i33) { i }
function {:inline} $trunc.i256.i33(i: i256) returns (i33) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $sext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $sext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $sext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $sext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $sext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $sext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $sext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $sext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $sext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $zext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $zext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $zext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $zext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $zext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $zext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $zext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $zext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $zext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i33(p: ref, i: int) returns (i33);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1,p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1,p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1,p2) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 == p2) }
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 != p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.ref.bool(p1,p2) then 1 else 0) }
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }
function $fp(ipart: int, fpart: int, epart: int) returns (float);
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
function $fneg.float(f: float) returns (float);
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i33(f: float) returns (i33);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i33(f: float) returns (i33);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i33.float(i: i33) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i33.float(i: i33) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const {:allocSize 56} br_ec_p256_m31: ref;
axiom (br_ec_p256_m31 == $sub.ref(0,1080));
const {:allocSize 36} {:count 9} F256: ref;
axiom (F256 == $sub.ref(0,2140));
const {:allocSize 1080} {:count 15} Gwin: ref;
axiom (Gwin == $sub.ref(0,4244));
const {:allocSize 36} {:count 9} P256_B: ref;
axiom (P256_B == $sub.ref(0,5304));
const {:allocSize 32} {:count 32} P256_N: ref;
axiom (P256_N == $sub.ref(0,6360));
const {:allocSize 65} {:count 65} P256_G: ref;
axiom (P256_G == $sub.ref(0,7449));
const api_generator: ref;
axiom (api_generator == $sub.ref(0,8481));
procedure {:inline 1} api_generator($i0: i32, $i0.shadow: i32, $p1: ref, $p1.shadow: ref) returns ($r: ref, $r.shadow: ref)
modifies $M.0, $exn;
{
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1359, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "api_generator:arg:curve"} boogie_si_record_i32($i0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1359, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1 == $p1.shadow));
  $M.0 := $store.i64($M.0,$p1,65);
  $M.0.shadow := $store.i64($M.0.shadow,$p1.shadow,65);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1360, 2} true;
  assume {:verifier.code 0} true;
  $r := P256_G;
  $r.shadow := P256_G;
  $exn := false;
  $exn.shadow := false;
  return;
}
const api_order: ref;
axiom (api_order == $sub.ref(0,9513));
procedure {:inline 1} api_order($i0: i32, $i0.shadow: i32, $p1: ref, $p1.shadow: ref) returns ($r: ref, $r.shadow: ref)
modifies $M.1, $exn;
{
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1367, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "api_order:arg:curve"} boogie_si_record_i32($i0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1367, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1 == $p1.shadow));
  $M.1 := $store.i64($M.1,$p1,32);
  $M.1.shadow := $store.i64($M.1.shadow,$p1.shadow,32);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1368, 2} true;
  assume {:verifier.code 0} true;
  $r := P256_N;
  $r.shadow := P256_N;
  $exn := false;
  $exn.shadow := false;
  return;
}
const api_xoff: ref;
axiom (api_xoff == $sub.ref(0,10545));
procedure {:inline 1} api_xoff($i0: i32, $i0.shadow: i32, $p1: ref, $p1.shadow: ref) returns ($r: i64, $r.shadow: i64)
modifies $M.2, $exn;
{
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1375, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "api_xoff:arg:curve"} boogie_si_record_i32($i0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1375, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p1 == $p1.shadow));
  $M.2 := $store.i64($M.2,$p1,32);
  $M.2.shadow := $store.i64($M.2.shadow,$p1.shadow,32);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1376, 2} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $r.shadow := 1;
  $exn := false;
  $exn.shadow := false;
  return;
}
const api_mul: ref;
axiom (api_mul == $sub.ref(0,11577));
procedure {:inline 1} api_mul($p0: ref, $p0.shadow: ref, $i1: i64, $i1.shadow: i64, $p2: ref, $p2.shadow: ref, $i3: i64, $i3.shadow: i64, $i4: i32, $i4.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
modifies $M.3;
modifies $M.4;
modifies $M.8, $M.10;
modifies $CurrAddr;
modifies $M.11, $M.9, $M.12, $M.7;
{
  var $p5: ref;
  var $p5.shadow: ref;
  var $i6: i1;
  var $i6.shadow: i1;
  var $i8: i32;
  var $i8.shadow: i32;
  var $i7: i32;
  var $i7.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1387, 11} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p5.shadow := $p5;
  call {:cexpr "api_mul:arg:Glen"} boogie_si_record_i64($i1);
  call {:cexpr "api_mul:arg:xlen"} boogie_si_record_i64($i3);
  call {:cexpr "api_mul:arg:curve"} boogie_si_record_i32($i4);
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1387, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i1,65);
  $i6.shadow := $ne.i64($i1.shadow,65);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1387, 6} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $shadow_ok := ($shadow_ok && ($i6 == $i6.shadow));
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1388, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  $i7.shadow := 0;
  goto $bb3;
$bb2:
  assume !($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1390, 6} true;
  assume {:verifier.code 0} true;
  call $i8, $i8.shadow := p256_decode($p5, $p5.shadow, $p0, $p0.shadow, $i1, $i1.shadow);
  call {:cexpr "r"} boogie_si_record_i32($i8);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1391, 2} true;
  assume {:verifier.code 0} true;
  call p256_mul($p5, $p5.shadow, $p2, $p2.shadow, $i3, $i3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1392, 2} true;
  assume {:verifier.code 0} true;
  call p256_to_affine($p5, $p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1393, 2} true;
  assume {:verifier.code 0} true;
  call p256_encode($p0, $p0.shadow, $p5, $p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1394, 2} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  $i7.shadow := $i8.shadow;
  goto $bb3;
$bb3:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1395, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $r.shadow := $i7.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
}
const api_mulgen: ref;
axiom (api_mulgen == $sub.ref(0,12609));
procedure {:inline 1} api_mulgen($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64, $i3: i32, $i3.shadow: i32) returns ($r: i64, $r.shadow: i64)
modifies $exn;
modifies $M.3;
modifies $M.4;
modifies $M.8, $M.10;
modifies $M.13;
modifies $CurrAddr;
modifies $M.11, $M.9, $M.12, $M.7;
{
  var $p4: ref;
  var $p4.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1404, 2} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  call {:cexpr "api_mulgen:arg:xlen"} boogie_si_record_i64($i2);
  call {:cexpr "api_mulgen:arg:curve"} boogie_si_record_i32($i3);
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1404, 2} true;
  assume {:verifier.code 0} true;
  call p256_mulgen($p4, $p4.shadow, $p1, $p1.shadow, $i2, $i2.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1405, 2} true;
  assume {:verifier.code 0} true;
  call p256_to_affine($p4, $p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1406, 2} true;
  assume {:verifier.code 0} true;
  call p256_encode($p0, $p0.shadow, $p4, $p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1407, 2} true;
  assume {:verifier.code 0} true;
  $r := 65;
  $r.shadow := 65;
  $exn := false;
  $exn.shadow := false;
  return;
}
const api_muladd: ref;
axiom (api_muladd == $sub.ref(0,13641));
procedure {:inline 1} api_muladd($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64, $p3: ref, $p3.shadow: ref, $i4: i64, $i4.shadow: i64, $p5: ref, $p5.shadow: ref, $i6: i64, $i6.shadow: i64, $i7: i32, $i7.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
modifies $M.3;
modifies $M.4;
modifies $M.8, $M.10;
modifies $M.13;
modifies $CurrAddr;
modifies $M.11, $M.9, $M.12, $M.7;
{
  var $p8: ref;
  var $p8.shadow: ref;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i1;
  var $i10.shadow: i1;
  var $i12: i32;
  var $i12.shadow: i32;
  var $i13: i1;
  var $i13.shadow: i1;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i32;
  var $i16.shadow: i32;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i17: i32;
  var $i17.shadow: i32;
  var $p18: ref;
  var $p18.shadow: ref;
  var $p19: ref;
  var $p19.shadow: ref;
  var $i20: i32;
  var $i20.shadow: i32;
  var $i21: i32;
  var $i21.shadow: i32;
  var $i22: i32;
  var $i22.shadow: i32;
  var $i23: i1;
  var $i23.shadow: i1;
  var $p24: ref;
  var $p24.shadow: ref;
  var $i25: i64;
  var $i25.shadow: i64;
  var $p26: ref;
  var $p26.shadow: ref;
  var $i27: i32;
  var $i27.shadow: i32;
  var $i28: i32;
  var $i28.shadow: i32;
  var $i29: i32;
  var $i29.shadow: i32;
  var $i30: i32;
  var $i30.shadow: i32;
  var $i31: i32;
  var $i31.shadow: i32;
  var $i32: i32;
  var $i32.shadow: i32;
  var $p33: ref;
  var $p33.shadow: ref;
  var $p34: ref;
  var $p34.shadow: ref;
  var $i35: i32;
  var $i35.shadow: i32;
  var $i36: i32;
  var $i36.shadow: i32;
  var $i37: i32;
  var $i37.shadow: i32;
  var $i11: i32;
  var $i11.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1420, 10} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p8.shadow := $p8;
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p9.shadow := $p9;
  call {:cexpr "api_muladd:arg:len"} boogie_si_record_i64($i2);
  call {:cexpr "api_muladd:arg:xlen"} boogie_si_record_i64($i4);
  call {:cexpr "api_muladd:arg:ylen"} boogie_si_record_i64($i6);
  call {:cexpr "api_muladd:arg:curve"} boogie_si_record_i32($i7);
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1420, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i2,65);
  $i10.shadow := $ne.i64($i2.shadow,65);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1420, 6} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  $shadow_ok := ($shadow_ok && ($i10 == $i10.shadow));
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1421, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  $i11.shadow := 0;
  goto $bb3;
$bb2:
  assume !($i10 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1423, 6} true;
  assume {:verifier.code 0} true;
  call $i12, $i12.shadow := p256_decode($p8, $p8.shadow, $p0, $p0.shadow, $i2, $i2.shadow);
  call {:cexpr "r"} boogie_si_record_i32($i12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1424, 2} true;
  assume {:verifier.code 0} true;
  call p256_mul($p8, $p8.shadow, $p3, $p3.shadow, $i4, $i4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1425, 8} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.ref($p1,$0.ref);
  $i13.shadow := $eq.ref($p1.shadow,$0.ref);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1425, 6} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  $shadow_ok := ($shadow_ok && ($i13 == $i13.shadow));
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1458, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $r.shadow := $i11.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1426, 3} true;
  assume {:verifier.code 0} true;
  call p256_mulgen($p9, $p9.shadow, $p5, $p5.shadow, $i6, $i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1427, 2} true;
  assume {:verifier.code 0} true;
  $i14 := $i12;
  $i14.shadow := $i12.shadow;
  goto $bb6;
$bb5:
  assume !($i13 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1428, 8} true;
  assume {:verifier.code 0} true;
  call $i15, $i15.shadow := p256_decode($p9, $p9.shadow, $p1, $p1.shadow, $i2, $i2.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1428, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i12,$i15);
  $i16.shadow := $and.i32($i12.shadow,$i15.shadow);
  call {:cexpr "r"} boogie_si_record_i32($i16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1429, 3} true;
  assume {:verifier.code 0} true;
  call p256_mul($p9, $p9.shadow, $p5, $p5.shadow, $i6, $i6.shadow);
  assume {:verifier.code 0} true;
  $i14 := $i16;
  $i14.shadow := $i16.shadow;
  goto $bb6;
$bb6:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1435, 6} true;
  assume {:verifier.code 0} true;
  call $i17, $i17.shadow := p256_add($p8, $p8.shadow, $p9, $p9.shadow);
  call {:cexpr "t"} boogie_si_record_i32($i17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1436, 22} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p8,$mul.ref(0,108)),$mul.ref(72,1));
  $p18.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p19 := $add.ref($add.ref($add.ref($p8,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p19.shadow := $add.ref($add.ref($add.ref($p8.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1436, 2} true;
  assume {:verifier.code 0} true;
  call $i20, $i20.shadow := reduce_final_f256($p19, $p19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1438, 7} true;
  assume {:verifier.code 0} true;
  $i21 := 0;
  $i21.shadow := 0;
  $i22 := 0;
  $i22.shadow := 0;
  goto $bb7;
$bb7:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p8 == $p8.shadow);
  assert {:shadow_invariant} ($i22 == $i22.shadow);
  assert {:likely_shadow_invariant} ($p9 == $p9.shadow);
  assert {:unlikely_shadow_invariant ($i17 == $i17.shadow)} true;
  assert {:unlikely_shadow_invariant ($i21 == $i21.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1438, 16} true;
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i22,9);
  $i23.shadow := $slt.i32($i22.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1438, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  $shadow_ok := ($shadow_ok && ($i23 == $i23.shadow));
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1439, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p8,$mul.ref(0,108)),$mul.ref(72,1));
  $p24.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1439, 8} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i22);
  $i25.shadow := $sext.i32.i64($i22.shadow);
  $p26 := $add.ref($add.ref($add.ref($p8,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref($i25,4));
  $p26.shadow := $add.ref($add.ref($add.ref($p8.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref($i25.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1439, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p26 == $p26.shadow));
  $i27 := $load.i32($M.3,$p26);
  $i27.shadow := $load.i32($M.3.shadow,$p26.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1439, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $or.i32($i21,$i27);
  $i28.shadow := $or.i32($i21.shadow,$i27.shadow);
  call {:cexpr "z"} boogie_si_record_i32($i28);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1440, 2} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !($i23 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1441, 6} true;
  assume {:verifier.code 0} true;
  call $i30, $i30.shadow := EQ($i21, $i21.shadow, 0, 0);
  call {:cexpr "z"} boogie_si_record_i32($i30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1442, 2} true;
  assume {:verifier.code 0} true;
  call p256_double($p9, $p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1453, 12} true;
  assume {:verifier.code 0} true;
  $i31 := $xor.i32($i17,$sub.i32(0,1));
  $i31.shadow := $xor.i32($i17.shadow,$sub.i32(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1453, 10} true;
  assume {:verifier.code 0} true;
  $i32 := $and.i32($i30,$i31);
  $i32.shadow := $and.i32($i30.shadow,$i31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1453, 16} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p8);
  $p33.shadow := $bitcast.ref.ref($p8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1453, 20} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p9);
  $p34.shadow := $bitcast.ref.ref($p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1453, 2} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i32, $i32.shadow, $p33, $p33.shadow, $p34, $p34.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1454, 2} true;
  assume {:verifier.code 0} true;
  call p256_to_affine($p8, $p8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1455, 2} true;
  assume {:verifier.code 0} true;
  call p256_encode($p0, $p0.shadow, $p8, $p8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1456, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i30,$i17);
  $i35.shadow := $and.i32($i30.shadow,$i17.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1456, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $xor.i32($i35,$sub.i32(0,1));
  $i36.shadow := $xor.i32($i35.shadow,$sub.i32(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1456, 4} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i32($i14,$i36);
  $i37.shadow := $and.i32($i14.shadow,$i36.shadow);
  call {:cexpr "r"} boogie_si_record_i32($i37);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1457, 2} true;
  assume {:verifier.code 0} true;
  $i11 := $i37;
  $i11.shadow := $i37.shadow;
  goto $bb3;
$bb10:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1438, 23} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i22,1);
  $i29.shadow := $add.i32($i22.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i29);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1438, 2} true;
  assume {:verifier.code 0} true;
  $i21 := $i28;
  $i21.shadow := $i28.shadow;
  $i22 := $i29;
  $i22.shadow := $i29.shadow;
  goto $bb7;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0,14673));
procedure {:inline 1} llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0,15705));
procedure {:inline 1} llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const p256_decode: ref;
axiom (p256_decode == $sub.ref(0,16737));
procedure {:inline 1} p256_decode($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64) returns ($r: i32, $r.shadow: i32)
modifies $M.3, $exn;
modifies $M.8;
modifies $M.10;
modifies $M.11, $M.9;
modifies $M.12, $M.7;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $i7: i1;
  var $i7.shadow: i1;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i8;
  var $i10.shadow: i8;
  var $i11: i32;
  var $i11.shadow: i32;
  var $i12: i32;
  var $i12.shadow: i32;
  var $p13: ref;
  var $p13.shadow: ref;
  var $p14: ref;
  var $p14.shadow: ref;
  var $i15: i32;
  var $i15.shadow: i32;
  var $p16: ref;
  var $p16.shadow: ref;
  var $p17: ref;
  var $p17.shadow: ref;
  var $p18: ref;
  var $p18.shadow: ref;
  var $i19: i32;
  var $i19.shadow: i32;
  var $p20: ref;
  var $p20.shadow: ref;
  var $p21: ref;
  var $p21.shadow: ref;
  var $i22: i32;
  var $i22.shadow: i32;
  var $i23: i32;
  var $i23.shadow: i32;
  var $p24: ref;
  var $p24.shadow: ref;
  var $i25: i32;
  var $i25.shadow: i32;
  var $i26: i32;
  var $i26.shadow: i32;
  var $p27: ref;
  var $p27.shadow: ref;
  var $p28: ref;
  var $p28.shadow: ref;
  var $p29: ref;
  var $p29.shadow: ref;
  var $p30: ref;
  var $p30.shadow: ref;
  var $p31: ref;
  var $p31.shadow: ref;
  var $p32: ref;
  var $p32.shadow: ref;
  var $p33: ref;
  var $p33.shadow: ref;
  var $p34: ref;
  var $p34.shadow: ref;
  var $p35: ref;
  var $p35.shadow: ref;
  var $p36: ref;
  var $p36.shadow: ref;
  var $p37: ref;
  var $p37.shadow: ref;
  var $p38: ref;
  var $p38.shadow: ref;
  var $p39: ref;
  var $p39.shadow: ref;
  var $p40: ref;
  var $p40.shadow: ref;
  var $p41: ref;
  var $p41.shadow: ref;
  var $p42: ref;
  var $p42.shadow: ref;
  var $p43: ref;
  var $p43.shadow: ref;
  var $p44: ref;
  var $p44.shadow: ref;
  var $p45: ref;
  var $p45.shadow: ref;
  var $p46: ref;
  var $p46.shadow: ref;
  var $p47: ref;
  var $p47.shadow: ref;
  var $p48: ref;
  var $p48.shadow: ref;
  var $i49: i32;
  var $i49.shadow: i32;
  var $i50: i32;
  var $i50.shadow: i32;
  var $i51: i32;
  var $i51.shadow: i32;
  var $i52: i1;
  var $i52.shadow: i1;
  var $i53: i64;
  var $i53.shadow: i64;
  var $p54: ref;
  var $p54.shadow: ref;
  var $i55: i32;
  var $i55.shadow: i32;
  var $i56: i32;
  var $i56.shadow: i32;
  var $i57: i32;
  var $i57.shadow: i32;
  var $p58: ref;
  var $p58.shadow: ref;
  var $p59: ref;
  var $p59.shadow: ref;
  var $p60: ref;
  var $p60.shadow: ref;
  var $p61: ref;
  var $p61.shadow: ref;
  var $p62: ref;
  var $p62.shadow: ref;
  var $p63: ref;
  var $p63.shadow: ref;
  var $p64: ref;
  var $p64.shadow: ref;
  var $p65: ref;
  var $p65.shadow: ref;
  var $p66: ref;
  var $p66.shadow: ref;
  var $p67: ref;
  var $p67.shadow: ref;
  var $p68: ref;
  var $p68.shadow: ref;
  var $p69: ref;
  var $p69.shadow: ref;
  var $p70: ref;
  var $p70.shadow: ref;
  var $p71: ref;
  var $p71.shadow: ref;
  var $p72: ref;
  var $p72.shadow: ref;
  var $i73: i32;
  var $i73.shadow: i32;
  var $i8: i32;
  var $i8.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1047, 10} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p5.shadow := $p5;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p6.shadow := $p6;
  call {:cexpr "p256_decode:arg:len"} boogie_si_record_i64($i2);
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1047, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i2,65);
  $i7.shadow := $ne.i64($i2.shadow,65);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1047, 6} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  $shadow_ok := ($shadow_ok && ($i7 == $i7.shadow));
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1048, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  $i8.shadow := 0;
  goto $bb3;
$bb2:
  assume !($i7 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1058, 12} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1,$mul.ref(0,1));
  $p9.shadow := $add.ref($p1.shadow,$mul.ref(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1058, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p9 == $p9.shadow));
  $i10 := $load.i8($M.4,$p9);
  $i10.shadow := $load.i8($M.4.shadow,$p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1058, 12} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  $i11.shadow := $zext.i8.i32($i10.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1058, 8} true;
  assume {:verifier.code 0} true;
  call $i12, $i12.shadow := NEQ($i11, $i11.shadow, 4, 4);
  call {:cexpr "bad"} boogie_si_record_i32($i12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1064, 22} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p13.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1064, 30} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1,$mul.ref(1,1));
  $p14.shadow := $add.ref($p1.shadow,$mul.ref(1,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1064, 10} true;
  assume {:verifier.code 0} true;
  call $i15, $i15.shadow := be8_to_le30($p13, $p13.shadow, $p14, $p14.shadow, 32, 32);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1064, 2} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(8,4));
  $p16.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1064, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p16 == $p16.shadow));
  $M.3 := $store.i32($M.3,$p16,$i15);
  $M.3.shadow := $store.i32($M.3.shadow,$p16.shadow,$i15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1065, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p17.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1065, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1,$mul.ref(33,1));
  $p18.shadow := $add.ref($p1.shadow,$mul.ref(33,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1065, 10} true;
  assume {:verifier.code 0} true;
  call $i19, $i19.shadow := be8_to_le30($p17, $p17.shadow, $p18, $p18.shadow, 32, 32);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1065, 2} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(8,4));
  $p20.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1065, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p20 == $p20.shadow));
  $M.3 := $store.i32($M.3,$p20,$i19);
  $M.3.shadow := $store.i32($M.3.shadow,$p20.shadow,$i19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1066, 27} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p21.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1066, 9} true;
  assume {:verifier.code 0} true;
  call $i22, $i22.shadow := reduce_final_f256($p21, $p21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1066, 6} true;
  assume {:verifier.code 0} true;
  $i23 := $or.i32($i12,$i22);
  $i23.shadow := $or.i32($i12.shadow,$i22.shadow);
  call {:cexpr "bad"} boogie_si_record_i32($i23);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1067, 27} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p24.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1067, 9} true;
  assume {:verifier.code 0} true;
  call $i25, $i25.shadow := reduce_final_f256($p24, $p24.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1067, 6} true;
  assume {:verifier.code 0} true;
  $i26 := $or.i32($i23,$i25);
  $i26.shadow := $or.i32($i23.shadow,$i25.shadow);
  call {:cexpr "bad"} boogie_si_record_i32($i26);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1072, 14} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p27.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1072, 18} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p28.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1072, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p27, $p27.shadow, $p28, $p28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1073, 11} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p29.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1073, 15} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p30.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1073, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p31.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1073, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p29, $p29.shadow, $p30, $p30.shadow, $p31, $p31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1074, 14} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p32.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1074, 18} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p33.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1074, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p32, $p32.shadow, $p33, $p33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1075, 11} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p34.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1075, 15} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p35.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1075, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p36.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1075, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p34, $p34.shadow, $p35, $p35.shadow, $p36, $p36.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1076, 11} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p37.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1076, 15} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p38.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1076, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p39.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1076, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p37, $p37.shadow, $p38, $p38.shadow, $p39, $p39.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1077, 11} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p40.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1077, 15} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p41.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1077, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p42.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1077, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p40, $p40.shadow, $p41, $p41.shadow, $p42, $p42.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1078, 11} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p43.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1078, 15} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p44.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1078, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p43, $p43.shadow, $p44, $p44.shadow, P256_B, P256_B);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1079, 11} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p45.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1079, 15} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p46.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1079, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p47.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1079, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p45, $p45.shadow, $p46, $p46.shadow, $p47, $p47.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1080, 20} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p48.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1080, 2} true;
  assume {:verifier.code 0} true;
  call $i49, $i49.shadow := reduce_final_f256($p48, $p48.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1081, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $i26;
  $i50.shadow := $i26.shadow;
  $i51 := 0;
  $i51.shadow := 0;
  goto $bb4;
$bb3:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1093, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $r.shadow := $i8.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($i51 == $i51.shadow);
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:unlikely_shadow_invariant ($i50 == $i50.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1081, 16} true;
  assume {:verifier.code 0} true;
  $i52 := $slt.i32($i51,9);
  $i52.shadow := $slt.i32($i51.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1081, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  $shadow_ok := ($shadow_ok && ($i52 == $i52.shadow));
  goto $bb5, $bb6;
$bb5:
  assume ($i52 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1082, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i32.i64($i51);
  $i53.shadow := $sext.i32.i64($i51.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1082, 10} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref($i53,4));
  $p54.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref($i53.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1082, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p54 == $p54.shadow));
  $i55 := $load.i32($M.3,$p54);
  $i55.shadow := $load.i32($M.3.shadow,$p54.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1082, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $or.i32($i50,$i55);
  $i56.shadow := $or.i32($i50.shadow,$i55.shadow);
  call {:cexpr "bad"} boogie_si_record_i32($i56);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1083, 2} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i52 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1088, 12} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p58.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p59 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p59.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1088, 2} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  $p60.shadow := $bitcast.ref.ref($p59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1088, 2} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p61.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1088, 2} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  $p62.shadow := $bitcast.ref.ref($p61.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1088, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p60 == $p60.shadow));
  $shadow_ok := ($shadow_ok && ($p62 == $p62.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p60, $p60.shadow, $p62, $p62.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1089, 12} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p63.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p64 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p64.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1089, 2} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  $p65.shadow := $bitcast.ref.ref($p64.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1089, 2} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p66.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1089, 2} true;
  assume {:verifier.code 0} true;
  $p67 := $bitcast.ref.ref($p66);
  $p67.shadow := $bitcast.ref.ref($p66.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1089, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p65 == $p65.shadow));
  $shadow_ok := ($shadow_ok && ($p67 == $p67.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p65, $p65.shadow, $p67, $p67.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1090, 12} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p68.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p69 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p69.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1090, 2} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  $p70.shadow := $bitcast.ref.ref($p69.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1090, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p70 == $p70.shadow));
  call $M.3, $M.3.shadow := $memset.i8($M.3, $M.3.shadow, $p70, $p70.shadow, 0, 0, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1091, 5} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p71.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p72 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p72.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1091, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p72 == $p72.shadow));
  $M.3 := $store.i32($M.3,$p72,1);
  $M.3.shadow := $store.i32($M.3.shadow,$p72.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1092, 9} true;
  assume {:verifier.code 0} true;
  call $i73, $i73.shadow := EQ($i50, $i50.shadow, 0, 0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1092, 2} true;
  assume {:verifier.code 0} true;
  $i8 := $i73;
  $i8.shadow := $i73.shadow;
  goto $bb3;
$bb7:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1081, 23} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i51,1);
  $i57.shadow := $add.i32($i51.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i57);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1081, 2} true;
  assume {:verifier.code 0} true;
  $i50 := $i56;
  $i50.shadow := $i56.shadow;
  $i51 := $i57;
  $i51.shadow := $i57.shadow;
  goto $bb4;
}
const p256_mul: ref;
axiom (p256_mul == $sub.ref(0,17769));
procedure {:inline 1} p256_mul($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64)
modifies $M.3, $exn;
modifies $M.8, $M.10;
modifies $CurrAddr;
modifies $M.11, $M.9, $M.12, $M.7;
{
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $p8: ref;
  var $p8.shadow: ref;
  var $p9: ref;
  var $p9.shadow: ref;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $i12: i32;
  var $i12.shadow: i32;
  var $p13: ref;
  var $p13.shadow: ref;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i64;
  var $i15.shadow: i64;
  var $p16: ref;
  var $p16.shadow: ref;
  var $i17: i64;
  var $i17.shadow: i64;
  var $i18: i1;
  var $i18.shadow: i1;
  var $i19: i32;
  var $i19.shadow: i32;
  var $i20: i32;
  var $i20.shadow: i32;
  var $i21: i1;
  var $i21.shadow: i1;
  var $p22: ref;
  var $p22.shadow: ref;
  var $p23: ref;
  var $p23.shadow: ref;
  var $p24: ref;
  var $p24.shadow: ref;
  var $p25: ref;
  var $p25.shadow: ref;
  var $i26: i8;
  var $i26.shadow: i8;
  var $i27: i32;
  var $i27.shadow: i32;
  var $i28: i32;
  var $i28.shadow: i32;
  var $i29: i32;
  var $i29.shadow: i32;
  var $i30: i32;
  var $i30.shadow: i32;
  var $i31: i32;
  var $i31.shadow: i32;
  var $p32: ref;
  var $p32.shadow: ref;
  var $p33: ref;
  var $p33.shadow: ref;
  var $i34: i32;
  var $i34.shadow: i32;
  var $p35: ref;
  var $p35.shadow: ref;
  var $p36: ref;
  var $p36.shadow: ref;
  var $i37: i32;
  var $i37.shadow: i32;
  var $i38: i32;
  var $i38.shadow: i32;
  var $p39: ref;
  var $p39.shadow: ref;
  var $p40: ref;
  var $p40.shadow: ref;
  var $i41: i32;
  var $i41.shadow: i32;
  var $i42: i32;
  var $i42.shadow: i32;
  var $p43: ref;
  var $p43.shadow: ref;
  var $p44: ref;
  var $p44.shadow: ref;
  var $i45: i32;
  var $i45.shadow: i32;
  var $i46: i32;
  var $i46.shadow: i32;
  var $i47: i32;
  var $i47.shadow: i32;
  var $p48: ref;
  var $p48.shadow: ref;
  var $p49: ref;
  var $p49.shadow: ref;
  var $p50: ref;
  var $p50.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1131, 7} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p5.shadow := $p5;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p6.shadow := $p6;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p7.shadow := $p7;
  call {:cexpr "p256_mul:arg:xlen"} boogie_si_record_i64($i2);
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1131, 7} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  $p8.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1131, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p0);
  $p9.shadow := $bitcast.ref.ref($p0.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1131, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p8 == $p8.shadow));
  $shadow_ok := ($shadow_ok && ($p9 == $p9.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p8, $p8.shadow, $p9, $p9.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1132, 2} true;
  assume {:verifier.code 0} true;
  call p256_double($p3, $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1133, 7} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p4);
  $p10.shadow := $bitcast.ref.ref($p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1133, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p0);
  $p11.shadow := $bitcast.ref.ref($p0.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1133, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10 == $p10.shadow));
  $shadow_ok := ($shadow_ok && ($p11 == $p11.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p10, $p10.shadow, $p11, $p11.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1134, 2} true;
  assume {:verifier.code 0} true;
  call $i12, $i12.shadow := p256_add($p4, $p4.shadow, $p3, $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1139, 2} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p5);
  $p13.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1139, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p13 == $p13.shadow));
  call $M.3, $M.3.shadow := $memset.i8($M.3, $M.3.shadow, $p13, $p13.shadow, 0, 0, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1141, 2} true;
  assume {:verifier.code 0} true;
  $i14 := 1;
  $i14.shadow := 1;
  $i15 := $i2;
  $i15.shadow := $i2.shadow;
  $p16 := $p1;
  $p16.shadow := $p1.shadow;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p16 == $p16.shadow);
  assert {:shadow_invariant} ($p7 == $p7.shadow);
  assert {:shadow_invariant} ($p6 == $p6.shadow);
  assert {:shadow_invariant} ($i15 == $i15.shadow);
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:unlikely_shadow_invariant ($i14 == $i14.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1140, 5} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1141, 14} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i15,$sub.i64(0,1));
  $i17.shadow := $add.i64($i15.shadow,$sub.i64(0,1));
  call {:cexpr "xlen"} boogie_si_record_i64($i17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1141, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $ugt.i64($i15,0);
  $i18.shadow := $ugt.i64($i15.shadow,0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1141, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  $shadow_ok := ($shadow_ok && ($i18 == $i18.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i18 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1144, 8} true;
  assume {:verifier.code 0} true;
  $i19 := $i14;
  $i19.shadow := $i14.shadow;
  $i20 := 6;
  $i20.shadow := 6;
  goto $bb4;
$bb3:
  assume !($i18 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1163, 7} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p0);
  $p49.shadow := $bitcast.ref.ref($p0.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1163, 7} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p5);
  $p50.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1163, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49 == $p49.shadow));
  $shadow_ok := ($shadow_ok && ($p50 == $p50.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p49, $p49.shadow, $p50, $p50.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1164, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p16 == $p16.shadow);
  assert {:shadow_invariant} ($p7 == $p7.shadow);
  assert {:shadow_invariant} ($p6 == $p6.shadow);
  assert {:shadow_invariant} ($i20 == $i20.shadow);
  assert {:shadow_invariant} ($i17 == $i17.shadow);
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:unlikely_shadow_invariant ($i19 == $i19.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1144, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $sge.i32($i20,0);
  $i21.shadow := $sge.i32($i20.shadow,0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1144, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  $shadow_ok := ($shadow_ok && ($i21 == $i21.shadow));
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1148, 4} true;
  assume {:verifier.code 0} true;
  call p256_double($p5, $p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1149, 4} true;
  assume {:verifier.code 0} true;
  call p256_double($p5, $p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1150, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p6);
  $p22.shadow := $bitcast.ref.ref($p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1150, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p0);
  $p23.shadow := $bitcast.ref.ref($p0.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1150, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22 == $p22.shadow));
  $shadow_ok := ($shadow_ok && ($p23 == $p23.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p22, $p22.shadow, $p23, $p23.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1151, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p7);
  $p24.shadow := $bitcast.ref.ref($p7.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1151, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p5);
  $p25.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1151, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p24 == $p24.shadow));
  $shadow_ok := ($shadow_ok && ($p25 == $p25.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p24, $p24.shadow, $p25, $p25.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1152, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p16 == $p16.shadow));
  $i26 := $load.i8($M.5,$p16);
  $i26.shadow := $load.i8($M.5.shadow,$p16.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1152, 12} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i26);
  $i27.shadow := $zext.i8.i32($i26.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1152, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $ashr.i32($i27,$i20);
  $i28.shadow := $ashr.i32($i27.shadow,$i20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1152, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i28,3);
  $i29.shadow := $and.i32($i28.shadow,3);
  call {:cexpr "bits"} boogie_si_record_i32($i29);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1153, 10} true;
  assume {:verifier.code 0} true;
  call $i30, $i30.shadow := NEQ($i29, $i29.shadow, 0, 0);
  call {:cexpr "bnz"} boogie_si_record_i32($i30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1154, 10} true;
  assume {:verifier.code 0} true;
  call $i31, $i31.shadow := EQ($i29, $i29.shadow, 2, 2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1154, 23} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p6);
  $p32.shadow := $bitcast.ref.ref($p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1154, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p3);
  $p33.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1154, 4} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i31, $i31.shadow, $p32, $p32.shadow, $p33, $p33.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1155, 10} true;
  assume {:verifier.code 0} true;
  call $i34, $i34.shadow := EQ($i29, $i29.shadow, 3, 3);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1155, 23} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p6);
  $p35.shadow := $bitcast.ref.ref($p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1155, 27} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p4);
  $p36.shadow := $bitcast.ref.ref($p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1155, 4} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i34, $i34.shadow, $p35, $p35.shadow, $p36, $p36.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1156, 4} true;
  assume {:verifier.code 0} true;
  call $i37, $i37.shadow := p256_add($p7, $p7.shadow, $p6, $p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1157, 14} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i32($i30,$i19);
  $i38.shadow := $and.i32($i30.shadow,$i19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1157, 20} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p5);
  $p39.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1157, 24} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p6);
  $p40.shadow := $bitcast.ref.ref($p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1157, 4} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i38, $i38.shadow, $p39, $p39.shadow, $p40, $p40.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1158, 16} true;
  assume {:verifier.code 0} true;
  $i41 := $xor.i32($i19,$sub.i32(0,1));
  $i41.shadow := $xor.i32($i19.shadow,$sub.i32(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1158, 14} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i32($i30,$i41);
  $i42.shadow := $and.i32($i30.shadow,$i41.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1158, 21} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p5);
  $p43.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1158, 25} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p7);
  $p44.shadow := $bitcast.ref.ref($p7.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1158, 4} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i42, $i42.shadow, $p43, $p43.shadow, $p44, $p44.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1159, 10} true;
  assume {:verifier.code 0} true;
  $i45 := $xor.i32($i30,$sub.i32(0,1));
  $i45.shadow := $xor.i32($i30.shadow,$sub.i32(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1159, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i19,$i45);
  $i46.shadow := $and.i32($i19.shadow,$i45.shadow);
  call {:cexpr "qz"} boogie_si_record_i32($i46);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1160, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i21 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1161, 5} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p16,$mul.ref(1,1));
  $p48.shadow := $add.ref($p16.shadow,$mul.ref(1,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1141, 2} true;
  assume {:verifier.code 0} true;
  $i14 := $i19;
  $i14.shadow := $i19.shadow;
  $i15 := $i17;
  $i15.shadow := $i17.shadow;
  $p16 := $p48;
  $p16.shadow := $p48.shadow;
  goto $bb1;
$bb7:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1144, 25} true;
  assume {:verifier.code 0} true;
  $i47 := $sub.i32($i20,2);
  $i47.shadow := $sub.i32($i20.shadow,2);
  call {:cexpr "k"} boogie_si_record_i32($i47);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1144, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i46;
  $i19.shadow := $i46.shadow;
  $i20 := $i47;
  $i20.shadow := $i47.shadow;
  goto $bb4;
}
const p256_mulgen: ref;
axiom (p256_mulgen == $sub.ref(0,18801));
procedure {:inline 1} p256_mulgen($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64)
modifies $M.3, $exn;
modifies $M.13;
modifies $M.8, $M.10;
modifies $CurrAddr;
modifies $M.11, $M.9, $M.12, $M.7;
{
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $i7: i32;
  var $i7.shadow: i32;
  var $i8: i64;
  var $i8.shadow: i64;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i64;
  var $i10.shadow: i64;
  var $i11: i1;
  var $i11.shadow: i1;
  var $p12: ref;
  var $p12.shadow: ref;
  var $i13: i8;
  var $i13.shadow: i8;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i32;
  var $i16.shadow: i32;
  var $i17: i32;
  var $i17.shadow: i32;
  var $i18: i1;
  var $i18.shadow: i1;
  var $i19: i32;
  var $i19.shadow: i32;
  var $i20: i32;
  var $i20.shadow: i32;
  var $i21: i32;
  var $i21.shadow: i32;
  var $p22: ref;
  var $p22.shadow: ref;
  var $p23: ref;
  var $p23.shadow: ref;
  var $i24: i32;
  var $i24.shadow: i32;
  var $i25: i32;
  var $i25.shadow: i32;
  var $p26: ref;
  var $p26.shadow: ref;
  var $p27: ref;
  var $p27.shadow: ref;
  var $i28: i32;
  var $i28.shadow: i32;
  var $i29: i32;
  var $i29.shadow: i32;
  var $p30: ref;
  var $p30.shadow: ref;
  var $p31: ref;
  var $p31.shadow: ref;
  var $i32: i32;
  var $i32.shadow: i32;
  var $i33: i32;
  var $i33.shadow: i32;
  var $i34: i32;
  var $i34.shadow: i32;
  var $i35: i32;
  var $i35.shadow: i32;
  var $p36: ref;
  var $p36.shadow: ref;
  var $p37: ref;
  var $p37.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1308, 2} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(108,$zext.i32.i64(1)));
  $p5.shadow := $p5;
  call {:cexpr "p256_mulgen:arg:xlen"} boogie_si_record_i64($i2);
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1308, 2} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p3);
  $p6.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1308, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6 == $p6.shadow));
  call $M.3, $M.3.shadow := $memset.i8($M.3, $M.3.shadow, $p6, $p6.shadow, 0, 0, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1310, 2} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  $i7.shadow := 1;
  $i8 := $i2;
  $i8.shadow := $i2.shadow;
  $p9 := $p1;
  $p9.shadow := $p1.shadow;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($p9 == $p9.shadow);
  assert {:shadow_invariant} ($i8 == $i8.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:likely_shadow_invariant} ($p4 == $p4.shadow);
  assert {:unlikely_shadow_invariant ($i7 == $i7.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1309, 5} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1310, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i8,$sub.i64(0,1));
  $i10.shadow := $add.i64($i8.shadow,$sub.i64(0,1));
  call {:cexpr "xlen"} boogie_si_record_i64($i10);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1310, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $ugt.i64($i8,0);
  $i11.shadow := $ugt.i64($i8.shadow,0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1310, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  $shadow_ok := ($shadow_ok && ($i11 == $i11.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i11 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1314, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p9,$mul.ref(1,1));
  $p12.shadow := $add.ref($p9.shadow,$mul.ref(1,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1314, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p9 == $p9.shadow));
  $i13 := $load.i8($M.5,$p9);
  $i13.shadow := $load.i8($M.5.shadow,$p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1314, 8} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  $i14.shadow := $zext.i8.i32($i13.shadow);
  call {:cexpr "bx"} boogie_si_record_i32($i14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1315, 8} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  $i15.shadow := 0;
  $i16 := $i7;
  $i16.shadow := $i7.shadow;
  $i17 := $i14;
  $i17.shadow := $i14.shadow;
  goto $bb4;
$bb3:
  assume !($i11 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p0);
  $p36.shadow := $bitcast.ref.ref($p0.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p3);
  $p37.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36 == $p36.shadow));
  $shadow_ok := ($shadow_ok && ($p37 == $p37.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p36, $p36.shadow, $p37, $p37.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1336, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($i15 == $i15.shadow);
  assert {:shadow_invariant} ($p12 == $p12.shadow);
  assert {:shadow_invariant} ($i10 == $i10.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:likely_shadow_invariant} ($p4 == $p4.shadow);
  assert {:unlikely_shadow_invariant ($i16 == $i16.shadow)} true;
  assert {:unlikely_shadow_invariant ($i17 == $i17.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1315, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i15,2);
  $i18.shadow := $slt.i32($i15.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1315, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  $shadow_ok := ($shadow_ok && ($i18 == $i18.shadow));
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1320, 4} true;
  assume {:verifier.code 0} true;
  call p256_double($p3, $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1321, 4} true;
  assume {:verifier.code 0} true;
  call p256_double($p3, $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1322, 4} true;
  assume {:verifier.code 0} true;
  call p256_double($p3, $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1323, 4} true;
  assume {:verifier.code 0} true;
  call p256_double($p3, $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1324, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $lshr.i32($i17,4);
  $i19.shadow := $lshr.i32($i17.shadow,4);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1324, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i19,15);
  $i20.shadow := $and.i32($i19.shadow,15);
  call {:cexpr "bits"} boogie_si_record_i32($i20);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1325, 10} true;
  assume {:verifier.code 0} true;
  call $i21, $i21.shadow := NEQ($i20, $i20.shadow, 0, 0);
  call {:cexpr "bnz"} boogie_si_record_i32($i21);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1326, 4} true;
  assume {:verifier.code 0} true;
  call lookup_Gwin($p4, $p4.shadow, $i20, $i20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1327, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p5);
  $p22.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1327, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p3);
  $p23.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1327, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22 == $p22.shadow));
  $shadow_ok := ($shadow_ok && ($p23 == $p23.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p22, $p22.shadow, $p23, $p23.shadow, 108, 108, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1328, 4} true;
  assume {:verifier.code 0} true;
  call $i24, $i24.shadow := p256_add_mixed($p5, $p5.shadow, $p4, $p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1329, 14} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i21,$i16);
  $i25.shadow := $and.i32($i21.shadow,$i16.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1329, 20} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p3);
  $p26.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1329, 24} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p4);
  $p27.shadow := $bitcast.ref.ref($p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1329, 4} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i25, $i25.shadow, $p26, $p26.shadow, $p27, $p27.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1330, 16} true;
  assume {:verifier.code 0} true;
  $i28 := $xor.i32($i16,$sub.i32(0,1));
  $i28.shadow := $xor.i32($i16.shadow,$sub.i32(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1330, 14} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i21,$i28);
  $i29.shadow := $and.i32($i21.shadow,$i28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1330, 21} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p3);
  $p30.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1330, 25} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p5);
  $p31.shadow := $bitcast.ref.ref($p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1330, 4} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i29, $i29.shadow, $p30, $p30.shadow, $p31, $p31.shadow, 108, 108);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1331, 10} true;
  assume {:verifier.code 0} true;
  $i32 := $xor.i32($i21,$sub.i32(0,1));
  $i32.shadow := $xor.i32($i21.shadow,$sub.i32(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1331, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i16,$i32);
  $i33.shadow := $and.i32($i16.shadow,$i32.shadow);
  call {:cexpr "qz"} boogie_si_record_i32($i33);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $shl.i32($i17,4);
  $i34.shadow := $shl.i32($i17.shadow,4);
  call {:cexpr "bx"} boogie_si_record_i32($i34);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1333, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i18 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1310, 2} true;
  assume {:verifier.code 0} true;
  $i7 := $i16;
  $i7.shadow := $i16.shadow;
  $i8 := $i10;
  $i8.shadow := $i10.shadow;
  $p9 := $p12;
  $p9.shadow := $p12.shadow;
  goto $bb1;
$bb7:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1315, 24} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i15,1);
  $i35.shadow := $add.i32($i15.shadow,1);
  call {:cexpr "k"} boogie_si_record_i32($i35);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1315, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i35;
  $i15.shadow := $i35.shadow;
  $i16 := $i33;
  $i16.shadow := $i33.shadow;
  $i17 := $i34;
  $i17.shadow := $i34.shadow;
  goto $bb4;
}
const p256_add: ref;
axiom (p256_add == $sub.ref(0,19833));
procedure {:inline 1} p256_add($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref) returns ($r: i32, $r.shadow: i32)
modifies $exn;
modifies $M.3;
modifies $M.8;
modifies $M.10;
modifies $M.11, $M.9;
modifies $M.12, $M.7;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $p8: ref;
  var $p8.shadow: ref;
  var $p9: ref;
  var $p9.shadow: ref;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $p12: ref;
  var $p12.shadow: ref;
  var $p13: ref;
  var $p13.shadow: ref;
  var $p14: ref;
  var $p14.shadow: ref;
  var $p15: ref;
  var $p15.shadow: ref;
  var $p16: ref;
  var $p16.shadow: ref;
  var $p17: ref;
  var $p17.shadow: ref;
  var $p18: ref;
  var $p18.shadow: ref;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $p21: ref;
  var $p21.shadow: ref;
  var $p22: ref;
  var $p22.shadow: ref;
  var $p23: ref;
  var $p23.shadow: ref;
  var $p24: ref;
  var $p24.shadow: ref;
  var $p25: ref;
  var $p25.shadow: ref;
  var $p26: ref;
  var $p26.shadow: ref;
  var $p27: ref;
  var $p27.shadow: ref;
  var $p28: ref;
  var $p28.shadow: ref;
  var $p29: ref;
  var $p29.shadow: ref;
  var $p30: ref;
  var $p30.shadow: ref;
  var $p31: ref;
  var $p31.shadow: ref;
  var $p32: ref;
  var $p32.shadow: ref;
  var $p33: ref;
  var $p33.shadow: ref;
  var $p34: ref;
  var $p34.shadow: ref;
  var $p35: ref;
  var $p35.shadow: ref;
  var $p36: ref;
  var $p36.shadow: ref;
  var $p37: ref;
  var $p37.shadow: ref;
  var $p38: ref;
  var $p38.shadow: ref;
  var $p39: ref;
  var $p39.shadow: ref;
  var $p40: ref;
  var $p40.shadow: ref;
  var $p41: ref;
  var $p41.shadow: ref;
  var $p42: ref;
  var $p42.shadow: ref;
  var $p43: ref;
  var $p43.shadow: ref;
  var $p44: ref;
  var $p44.shadow: ref;
  var $p45: ref;
  var $p45.shadow: ref;
  var $i46: i32;
  var $i46.shadow: i32;
  var $i47: i32;
  var $i47.shadow: i32;
  var $i48: i32;
  var $i48.shadow: i32;
  var $i49: i1;
  var $i49.shadow: i1;
  var $i50: i64;
  var $i50.shadow: i64;
  var $p51: ref;
  var $p51.shadow: ref;
  var $i52: i32;
  var $i52.shadow: i32;
  var $i53: i32;
  var $i53.shadow: i32;
  var $i54: i32;
  var $i54.shadow: i32;
  var $i55: i32;
  var $i55.shadow: i32;
  var $i56: i32;
  var $i56.shadow: i32;
  var $i57: i32;
  var $i57.shadow: i32;
  var $p58: ref;
  var $p58.shadow: ref;
  var $p59: ref;
  var $p59.shadow: ref;
  var $p60: ref;
  var $p60.shadow: ref;
  var $p61: ref;
  var $p61.shadow: ref;
  var $p62: ref;
  var $p62.shadow: ref;
  var $p63: ref;
  var $p63.shadow: ref;
  var $p64: ref;
  var $p64.shadow: ref;
  var $p65: ref;
  var $p65.shadow: ref;
  var $p66: ref;
  var $p66.shadow: ref;
  var $p67: ref;
  var $p67.shadow: ref;
  var $p68: ref;
  var $p68.shadow: ref;
  var $p69: ref;
  var $p69.shadow: ref;
  var $p70: ref;
  var $p70.shadow: ref;
  var $p71: ref;
  var $p71.shadow: ref;
  var $p72: ref;
  var $p72.shadow: ref;
  var $p73: ref;
  var $p73.shadow: ref;
  var $p74: ref;
  var $p74.shadow: ref;
  var $p75: ref;
  var $p75.shadow: ref;
  var $p76: ref;
  var $p76.shadow: ref;
  var $p77: ref;
  var $p77.shadow: ref;
  var $p78: ref;
  var $p78.shadow: ref;
  var $p79: ref;
  var $p79.shadow: ref;
  var $p80: ref;
  var $p80.shadow: ref;
  var $p81: ref;
  var $p81.shadow: ref;
  var $p82: ref;
  var $p82.shadow: ref;
  var $p83: ref;
  var $p83.shadow: ref;
  var $p84: ref;
  var $p84.shadow: ref;
  var $p85: ref;
  var $p85.shadow: ref;
  var $p86: ref;
  var $p86.shadow: ref;
  var $p87: ref;
  var $p87.shadow: ref;
  var $p88: ref;
  var $p88.shadow: ref;
  var $p89: ref;
  var $p89.shadow: ref;
  var $p90: ref;
  var $p90.shadow: ref;
  var $p91: ref;
  var $p91.shadow: ref;
  var $p92: ref;
  var $p92.shadow: ref;
  var $p93: ref;
  var $p93.shadow: ref;
  var $p94: ref;
  var $p94.shadow: ref;
  var $p95: ref;
  var $p95.shadow: ref;
  var $p96: ref;
  var $p96.shadow: ref;
  var $p97: ref;
  var $p97.shadow: ref;
  var $p98: ref;
  var $p98.shadow: ref;
  var $p99: ref;
  var $p99.shadow: ref;
  var $p100: ref;
  var $p100.shadow: ref;
  var $p101: ref;
  var $p101.shadow: ref;
  var $p102: ref;
  var $p102.shadow: ref;
  var $p103: ref;
  var $p103.shadow: ref;
  var $p104: ref;
  var $p104.shadow: ref;
  var $p105: ref;
  var $p105.shadow: ref;
  var $p106: ref;
  var $p106.shadow: ref;
  var $p107: ref;
  var $p107.shadow: ref;
  var $p108: ref;
  var $p108.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 868, 14} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p5.shadow := $p5;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p6.shadow := $p6;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p7.shadow := $p7;
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p8.shadow := $p8;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 868, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p9.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 868, 22} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(72,1));
  $p10.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p11 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p11.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 868, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p9, $p9.shadow, $p11, $p11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 869, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p12.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 869, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p13.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p14 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p14.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 869, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p15.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 869, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p12, $p12.shadow, $p14, $p14.shadow, $p15, $p15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 870, 11} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p16.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 870, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(72,1));
  $p17.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p18 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p18.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 870, 22} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p19.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 870, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p16, $p16.shadow, $p18, $p18.shadow, $p19, $p19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 871, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p20.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 871, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p21.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p22 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p22.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 871, 22} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p23.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 871, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p20, $p20.shadow, $p22, $p22.shadow, $p23, $p23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 876, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p24.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 876, 22} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p25.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p26 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p26.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 876, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p24, $p24.shadow, $p26, $p26.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 877, 11} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p27.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 877, 19} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(0,1));
  $p28.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p29 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p29.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 877, 22} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p30.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 877, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p27, $p27.shadow, $p29, $p29.shadow, $p30, $p30.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 878, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p31.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 878, 19} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p32.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p33 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p33.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 878, 22} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p34.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 878, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p31, $p31.shadow, $p33, $p33.shadow, $p34, $p34.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 879, 11} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p35.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 879, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(36,1));
  $p36.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p37 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p37.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 879, 22} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p38.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 879, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p35, $p35.shadow, $p37, $p37.shadow, $p38, $p38.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 886, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p39.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 886, 15} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p40.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 886, 19} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p41.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 886, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p39, $p39.shadow, $p40, $p40.shadow, $p41, $p41.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 887, 11} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p42.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 887, 15} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p43.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 887, 19} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p44.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 887, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p42, $p42.shadow, $p43, $p43.shadow, $p44, $p44.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 888, 20} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p45.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 888, 2} true;
  assume {:verifier.code 0} true;
  call $i46, $i46.shadow := reduce_final_f256($p45, $p45.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i47 := 0;
  $i47.shadow := 0;
  $i48 := 0;
  $i48.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($i48 == $i48.shadow);
  assert {:likely_shadow_invariant} ($p7 == $p7.shadow);
  assert {:likely_shadow_invariant} ($p8 == $p8.shadow);
  assert {:likely_shadow_invariant} ($p6 == $p6.shadow);
  assert {:likely_shadow_invariant} ($p3 == $p3.shadow);
  assert {:likely_shadow_invariant} ($p2 == $p2.shadow);
  assert {:likely_shadow_invariant} ($p4 == $p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 890, 16} true;
  assume {:verifier.code 0} true;
  $i49 := $slt.i32($i48,9);
  $i49.shadow := $slt.i32($i48.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 890, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  $shadow_ok := ($shadow_ok && ($i49 == $i49.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i49 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 891, 10} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i48);
  $i50.shadow := $sext.i32.i64($i48.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 891, 10} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref($i50,4));
  $p51.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref($i50.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 891, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p51 == $p51.shadow));
  $i52 := $load.i32($M.3,$p51);
  $i52.shadow := $load.i32($M.3.shadow,$p51.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 891, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $or.i32($i47,$i52);
  $i53.shadow := $or.i32($i47.shadow,$i52.shadow);
  call {:cexpr "ret"} boogie_si_record_i32($i53);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 892, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i49 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 893, 15} true;
  assume {:verifier.code 0} true;
  $i55 := $sub.i32(0,$i47);
  $i55.shadow := $sub.i32(0,$i47.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 893, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $or.i32($i47,$i55);
  $i56.shadow := $or.i32($i47.shadow,$i55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 893, 21} true;
  assume {:verifier.code 0} true;
  $i57 := $lshr.i32($i56,31);
  $i57.shadow := $lshr.i32($i56.shadow,31);
  call {:cexpr "ret"} boogie_si_record_i32($i57);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 898, 14} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p8,$mul.ref(0,36)),$mul.ref(0,4));
  $p58.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 898, 18} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p59.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 898, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p58, $p58.shadow, $p59, $p59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 899, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p60.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 899, 15} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p61.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 899, 19} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p8,$mul.ref(0,36)),$mul.ref(0,4));
  $p62.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 899, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p60, $p60.shadow, $p61, $p61.shadow, $p62, $p62.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 900, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p63.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 900, 15} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p8,$mul.ref(0,36)),$mul.ref(0,4));
  $p64.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 900, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p65.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 900, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p63, $p63.shadow, $p64, $p64.shadow, $p65, $p65.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 905, 18} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p66.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p67 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p67.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 905, 21} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p68.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 905, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p67, $p67.shadow, $p68, $p68.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 906, 15} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p69.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p70 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p70.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 906, 22} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p71.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p72 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p72.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 906, 25} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p73.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 906, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p70, $p70.shadow, $p72, $p72.shadow, $p73, $p73.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 907, 15} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p74.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p75 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p75.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 907, 22} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p76.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p77 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p77.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 907, 25} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p78.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 907, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p75, $p75.shadow, $p77, $p77.shadow, $p78, $p78.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 908, 15} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p79.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p80 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p80.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 908, 22} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p81.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p82 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p82.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 908, 25} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p83.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 908, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p80, $p80.shadow, $p82, $p82.shadow, $p83, $p83.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 913, 11} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p84.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 913, 15} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p85.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 913, 23} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p86.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p87 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p87.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 913, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p84, $p84.shadow, $p85, $p85.shadow, $p87, $p87.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 914, 15} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p88.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p89 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p89.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 914, 18} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p90.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 914, 22} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p91.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 914, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p89, $p89.shadow, $p90, $p90.shadow, $p91, $p91.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 915, 11} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p92.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 915, 15} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p93.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 915, 19} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p94.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 915, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p92, $p92.shadow, $p93, $p93.shadow, $p94, $p94.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 916, 15} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p95.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p96 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p96.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 916, 22} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p97.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p98 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p98.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 916, 25} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p99.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 916, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p96, $p96.shadow, $p98, $p98.shadow, $p99, $p99.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 921, 11} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p100.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 921, 19} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p101.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p102 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p102.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 921, 26} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(72,1));
  $p103.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p104 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p104.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 921, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p100, $p100.shadow, $p102, $p102.shadow, $p104, $p104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 922, 15} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p105.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p106 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p106.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 922, 18} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p107.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 922, 22} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p108.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 922, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p106, $p106.shadow, $p107, $p107.shadow, $p108, $p108.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 924, 2} true;
  assume {:verifier.code 0} true;
  $r := $i57;
  $r.shadow := $i57.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 890, 23} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i48,1);
  $i54.shadow := $add.i32($i48.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i54);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 890, 2} true;
  assume {:verifier.code 0} true;
  $i47 := $i53;
  $i47.shadow := $i53.shadow;
  $i48 := $i54;
  $i48.shadow := $i54.shadow;
  goto $bb1;
}
const reduce_final_f256: ref;
axiom (reduce_final_f256 == $sub.ref(0,20865));
procedure {:inline 1} reduce_final_f256($p0: ref, $p0.shadow: ref) returns ($r: i32, $r.shadow: i32)
modifies $M.3, $exn;
modifies $CurrAddr;
{
  var $p1: ref;
  var $p1.shadow: ref;
  var $i2: i32;
  var $i2.shadow: i32;
  var $i3: i32;
  var $i3.shadow: i32;
  var $i4: i1;
  var $i4.shadow: i1;
  var $i5: i64;
  var $i5.shadow: i64;
  var $p6: ref;
  var $p6.shadow: ref;
  var $i7: i32;
  var $i7.shadow: i32;
  var $i8: i64;
  var $i8.shadow: i64;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i32;
  var $i10.shadow: i32;
  var $i11: i32;
  var $i11.shadow: i32;
  var $i12: i32;
  var $i12.shadow: i32;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i64;
  var $i15.shadow: i64;
  var $p16: ref;
  var $p16.shadow: ref;
  var $i17: i32;
  var $i17.shadow: i32;
  var $i18: i32;
  var $i18.shadow: i32;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $p21: ref;
  var $p21.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 626, 7} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p1.shadow := $p1;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 626, 7} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  $i2.shadow := 0;
  $i3 := 0;
  $i3.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p1 == $p1.shadow);
  assert {:shadow_invariant} ($i3 == $i3.shadow);
  assert {:unlikely_shadow_invariant ($i2 == $i2.shadow)} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 626, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3,9);
  $i4.shadow := $slt.i32($i3.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 626, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  $shadow_ok := ($shadow_ok && ($i4 == $i4.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i4 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i3);
  $i5.shadow := $sext.i32.i64($i3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0,$mul.ref($i5,4));
  $p6.shadow := $add.ref($p0.shadow,$mul.ref($i5.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6 == $p6.shadow));
  $i7 := $load.i32($M.3,$p6);
  $i7.shadow := $load.i32($M.3.shadow,$p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i3);
  $i8.shadow := $sext.i32.i64($i3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref($i8,4));
  $p9.shadow := $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref($i8.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p9 == $p9.shadow));
  $i10 := $load.i32($M.6,$p9);
  $i10.shadow := $load.i32($M.6.shadow,$p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 12} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32($i7,$i10);
  $i11.shadow := $sub.i32($i7.shadow,$i10.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 629, 22} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32($i11,$i2);
  $i12.shadow := $sub.i32($i11.shadow,$i2.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 630, 10} true;
  assume {:verifier.code 0} true;
  $i13 := $lshr.i32($i12,31);
  $i13.shadow := $lshr.i32($i12.shadow,31);
  call {:cexpr "cc"} boogie_si_record_i32($i13);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 631, 12} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i32($i12,1073741823);
  $i14.shadow := $and.i32($i12.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 631, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i3);
  $i15.shadow := $sext.i32.i64($i3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 631, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref($i15,4));
  $p16.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref($i15.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 631, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p16 == $p16.shadow));
  $M.3 := $store.i32($M.3,$p16,$i14);
  $M.3.shadow := $store.i32($M.3.shadow,$p16.shadow,$i14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 632, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i4 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 633, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $xor.i32($i2,1);
  $i18.shadow := $xor.i32($i2.shadow,1);
  call {:cexpr "cc"} boogie_si_record_i32($i18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 634, 12} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p0);
  $p19.shadow := $bitcast.ref.ref($p0.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 634, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p20.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 634, 15} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  $p21.shadow := $bitcast.ref.ref($p20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 634, 2} true;
  assume {:verifier.code 0} true;
  call br_ccopy($i18, $i18.shadow, $p19, $p19.shadow, $p21, $p21.shadow, 36, 36);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 635, 2} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $r.shadow := $i18.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 626, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i3,1);
  $i17.shadow := $add.i32($i3.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 626, 2} true;
  assume {:verifier.code 0} true;
  $i2 := $i13;
  $i2.shadow := $i13.shadow;
  $i3 := $i17;
  $i3.shadow := $i17.shadow;
  goto $bb1;
}
const EQ: ref;
axiom (EQ == $sub.ref(0,21897));
procedure {:inline 1} EQ($i0: i32, $i0.shadow: i32, $i1: i32, $i1.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
{
  var $i2: i32;
  var $i2.shadow: i32;
  var $i3: i32;
  var $i3.shadow: i32;
  var $i4: i32;
  var $i4.shadow: i32;
  var $i5: i32;
  var $i5.shadow: i32;
  var $i6: i32;
  var $i6.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/inner.h", 783, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "EQ:arg:x"} boogie_si_record_i32($i0);
  call {:cexpr "EQ:arg:y"} boogie_si_record_i32($i1);
  assume {:sourceloc "../BearSSL/src/inner.h", 783, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $xor.i32($i0,$i1);
  $i2.shadow := $xor.i32($i0.shadow,$i1.shadow);
  call {:cexpr "q"} boogie_si_record_i32($i2);
  assume {:sourceloc "../BearSSL/src/inner.h", 784, 18} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0,$i2);
  $i3.shadow := $sub.i32(0,$i2.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 784, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i2,$i3);
  $i4.shadow := $or.i32($i2.shadow,$i3.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 784, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $lshr.i32($i4,31);
  $i5.shadow := $lshr.i32($i4.shadow,31);
  assume {:sourceloc "../BearSSL/src/inner.h", 784, 9} true;
  assume {:verifier.code 0} true;
  call $i6, $i6.shadow := NOT($i5, $i5.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 784, 2} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $r.shadow := $i6.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
}
const p256_double: ref;
axiom (p256_double == $sub.ref(0,22929));
procedure {:inline 1} p256_double($p0: ref, $p0.shadow: ref)
modifies $exn;
modifies $M.8, $M.3;
modifies $M.10;
modifies $M.11, $M.9;
modifies $M.12, $M.7;
modifies $CurrAddr;
{
  var $p1: ref;
  var $p1.shadow: ref;
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $p8: ref;
  var $p8.shadow: ref;
  var $p9: ref;
  var $p9.shadow: ref;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $p12: ref;
  var $p12.shadow: ref;
  var $p13: ref;
  var $p13.shadow: ref;
  var $p14: ref;
  var $p14.shadow: ref;
  var $p15: ref;
  var $p15.shadow: ref;
  var $p16: ref;
  var $p16.shadow: ref;
  var $p17: ref;
  var $p17.shadow: ref;
  var $p18: ref;
  var $p18.shadow: ref;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $p21: ref;
  var $p21.shadow: ref;
  var $p22: ref;
  var $p22.shadow: ref;
  var $p23: ref;
  var $p23.shadow: ref;
  var $p24: ref;
  var $p24.shadow: ref;
  var $p25: ref;
  var $p25.shadow: ref;
  var $p26: ref;
  var $p26.shadow: ref;
  var $p27: ref;
  var $p27.shadow: ref;
  var $p28: ref;
  var $p28.shadow: ref;
  var $p29: ref;
  var $p29.shadow: ref;
  var $p30: ref;
  var $p30.shadow: ref;
  var $p31: ref;
  var $p31.shadow: ref;
  var $p32: ref;
  var $p32.shadow: ref;
  var $p33: ref;
  var $p33.shadow: ref;
  var $p34: ref;
  var $p34.shadow: ref;
  var $p35: ref;
  var $p35.shadow: ref;
  var $p36: ref;
  var $p36.shadow: ref;
  var $p37: ref;
  var $p37.shadow: ref;
  var $p38: ref;
  var $p38.shadow: ref;
  var $p39: ref;
  var $p39.shadow: ref;
  var $p40: ref;
  var $p40.shadow: ref;
  var $p41: ref;
  var $p41.shadow: ref;
  var $p42: ref;
  var $p42.shadow: ref;
  var $p43: ref;
  var $p43.shadow: ref;
  var $p44: ref;
  var $p44.shadow: ref;
  var $p45: ref;
  var $p45.shadow: ref;
  var $p46: ref;
  var $p46.shadow: ref;
  var $p47: ref;
  var $p47.shadow: ref;
  var $p48: ref;
  var $p48.shadow: ref;
  var $p49: ref;
  var $p49.shadow: ref;
  var $p50: ref;
  var $p50.shadow: ref;
  var $p51: ref;
  var $p51.shadow: ref;
  var $p52: ref;
  var $p52.shadow: ref;
  var $p53: ref;
  var $p53.shadow: ref;
  var $p54: ref;
  var $p54.shadow: ref;
  var $p55: ref;
  var $p55.shadow: ref;
  var $p56: ref;
  var $p56.shadow: ref;
  var $p57: ref;
  var $p57.shadow: ref;
  var $p58: ref;
  var $p58.shadow: ref;
  var $p59: ref;
  var $p59.shadow: ref;
  var $p60: ref;
  var $p60.shadow: ref;
  var $p61: ref;
  var $p61.shadow: ref;
  var $p62: ref;
  var $p62.shadow: ref;
  var $p63: ref;
  var $p63.shadow: ref;
  var $p64: ref;
  var $p64.shadow: ref;
  var $p65: ref;
  var $p65.shadow: ref;
  var $p66: ref;
  var $p66.shadow: ref;
  var $p67: ref;
  var $p67.shadow: ref;
  var $p68: ref;
  var $p68.shadow: ref;
  var $p69: ref;
  var $p69.shadow: ref;
  var $p70: ref;
  var $p70.shadow: ref;
  var $p71: ref;
  var $p71.shadow: ref;
  var $p72: ref;
  var $p72.shadow: ref;
  var $p73: ref;
  var $p73.shadow: ref;
  var $p74: ref;
  var $p74.shadow: ref;
  var $p75: ref;
  var $p75.shadow: ref;
  var $p76: ref;
  var $p76.shadow: ref;
  var $p77: ref;
  var $p77.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 767, 14} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p1.shadow := $p1;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 767, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p5.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 767, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p6.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p7 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p7.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 767, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p5, $p5.shadow, $p7, $p7.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 772, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p8.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 772, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p9.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p10 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p10.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 772, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p11.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 772, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p8, $p8.shadow, $p10, $p10.shadow, $p11, $p11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 773, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p12.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 773, 18} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p13.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p14 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p14.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 773, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p15.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 773, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p12, $p12.shadow, $p14, $p14.shadow, $p15, $p15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 778, 11} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p16.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 778, 15} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p17.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 778, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p18.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 778, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p16, $p16.shadow, $p17, $p17.shadow, $p18, $p18.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 779, 11} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p19.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 779, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p20.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 779, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p21.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 779, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p19, $p19.shadow, $p20, $p20.shadow, $p21, $p21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 780, 11} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p22.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 780, 15} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p23.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 780, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p24.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 780, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p22, $p22.shadow, $p23, $p23.shadow, $p24, $p24.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 785, 14} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p25.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 785, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p26.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p27 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p27.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 785, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p25, $p25.shadow, $p27, $p27.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 786, 11} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p28.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 786, 15} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p29.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 786, 19} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p30.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 786, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p28, $p28.shadow, $p29, $p29.shadow, $p30, $p30.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 787, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p31.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 787, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p32.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p33 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p33.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 787, 21} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p34.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 787, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p31, $p31.shadow, $p33, $p33.shadow, $p34, $p34.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 788, 11} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p35.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 788, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p36.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 788, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p37.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 788, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p35, $p35.shadow, $p36, $p36.shadow, $p37, $p37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 793, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p38.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p39 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p39.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 793, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p40.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 793, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p39, $p39.shadow, $p40, $p40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 794, 14} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p41.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p42 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p42.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 794, 20} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p43.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p44 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p44.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 794, 23} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p45.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 794, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p42, $p42.shadow, $p44, $p44.shadow, $p45, $p45.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 795, 14} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p46.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p47 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p47.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 795, 20} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p48.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p49 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p49.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 795, 23} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p50.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 795, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p47, $p47.shadow, $p49, $p49.shadow, $p50, $p50.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 800, 11} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p51.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 800, 18} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p52.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p53 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p53.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 800, 24} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p54.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p55 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p55.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 800, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p51, $p51.shadow, $p53, $p53.shadow, $p55, $p55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 801, 14} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p56.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p57 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p57.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 801, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p58.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 801, 21} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p59.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 801, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p57, $p57.shadow, $p58, $p58.shadow, $p59, $p59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 807, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p60.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 807, 15} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p61.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 807, 22} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p62.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p63 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p63.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 807, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p60, $p60.shadow, $p61, $p61.shadow, $p63, $p63.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 808, 14} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p64.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p65 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p65.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 808, 17} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p66.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 808, 21} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p67.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 808, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p65, $p65.shadow, $p66, $p66.shadow, $p67, $p67.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 809, 14} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p68.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 809, 18} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p69.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 809, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p68, $p68.shadow, $p69, $p69.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 810, 11} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p70.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 810, 15} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p71.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 810, 19} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p72.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 810, 2} true;
  assume {:verifier.code 0} true;
  call add_f256($p70, $p70.shadow, $p71, $p71.shadow, $p72, $p72.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 811, 14} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p73.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p74 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p74.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 811, 20} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p75.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p76 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p76.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 811, 23} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p77.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 811, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p74, $p74.shadow, $p76, $p76.shadow, $p77, $p77.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 812, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
}
const br_ccopy: ref;
axiom (br_ccopy == $sub.ref(0,23961));
procedure {:inline 1} br_ccopy($i0: i32, $i0.shadow: i32, $p1: ref, $p1.shadow: ref, $p2: ref, $p2.shadow: ref, $i3: i64, $i3.shadow: i64)
modifies $M.3, $exn;
{
  var $i4: i64;
  var $i4.shadow: i64;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $i7: i64;
  var $i7.shadow: i64;
  var $i8: i1;
  var $i8.shadow: i1;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i8;
  var $i10.shadow: i8;
  var $i11: i32;
  var $i11.shadow: i32;
  var $i12: i8;
  var $i12.shadow: i8;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i8;
  var $i15.shadow: i8;
  var $p16: ref;
  var $p16.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 36, 2} true;
  assume {:verifier.code 0} true;
  call {:cexpr "br_ccopy:arg:ctl"} boogie_si_record_i32($i0);
  call {:cexpr "br_ccopy:arg:len"} boogie_si_record_i64($i3);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 36, 2} true;
  assume {:verifier.code 0} true;
  $i4 := $i3;
  $i4.shadow := $i3.shadow;
  $p5 := $p1;
  $p5.shadow := $p1.shadow;
  $p6 := $p2;
  $p6.shadow := $p2.shadow;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($p6 == $p6.shadow);
  assert {:shadow_invariant} ($i4 == $i4.shadow);
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 36, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i4,$sub.i64(0,1));
  $i7.shadow := $add.i64($i4.shadow,$sub.i64(0,1));
  call {:cexpr "len"} boogie_si_record_i64($i7);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 36, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $ugt.i64($i4,0);
  $i8.shadow := $ugt.i64($i4.shadow,0);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 36, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  $shadow_ok := ($shadow_ok && ($i8 == $i8.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i8 == 1);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 39, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p6,$mul.ref(1,1));
  $p9.shadow := $add.ref($p6.shadow,$mul.ref(1,1));
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 39, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6 == $p6.shadow));
  $i10 := $load.i8($M.3,$p6);
  $i10.shadow := $load.i8($M.3.shadow,$p6.shadow);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 39, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  $i11.shadow := $zext.i8.i32($i10.shadow);
  call {:cexpr "x"} boogie_si_record_i32($i11);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 40, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p5 == $p5.shadow));
  $i12 := $load.i8($M.3,$p5);
  $i12.shadow := $load.i8($M.3.shadow,$p5.shadow);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 40, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  $i13.shadow := $zext.i8.i32($i12.shadow);
  call {:cexpr "y"} boogie_si_record_i32($i13);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 41, 8} true;
  assume {:verifier.code 0} true;
  call $i14, $i14.shadow := MUX($i0, $i0.shadow, $i11, $i11.shadow, $i13, $i13.shadow);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 41, 8} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  $i15.shadow := $trunc.i32.i8($i14.shadow);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 41, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p5 == $p5.shadow));
  $M.3 := $store.i8($M.3,$p5,$i15);
  $M.3.shadow := $store.i8($M.3.shadow,$p5.shadow,$i15.shadow);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 42, 5} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p5,$mul.ref(1,1));
  $p16.shadow := $add.ref($p5.shadow,$mul.ref(1,1));
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 36, 2} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  $i4.shadow := $i7.shadow;
  $p5 := $p16;
  $p5.shadow := $p16.shadow;
  $p6 := $p9;
  $p6.shadow := $p9.shadow;
  goto $bb1;
$bb3:
  assume !($i8 == 1);
  assume {:sourceloc "../BearSSL/src/codec/ccopy.c", 44, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
}
const p256_to_affine: ref;
axiom (p256_to_affine == $sub.ref(0,24993));
procedure {:inline 1} p256_to_affine($p0: ref, $p0.shadow: ref)
modifies $M.3, $exn;
modifies $M.8;
modifies $M.10;
modifies $M.11, $M.9;
modifies $M.12, $M.7;
modifies $CurrAddr;
{
  var $p1: ref;
  var $p1.shadow: ref;
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $i8: i32;
  var $i8.shadow: i32;
  var $i9: i1;
  var $i9.shadow: i1;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $p12: ref;
  var $p12.shadow: ref;
  var $p13: ref;
  var $p13.shadow: ref;
  var $p14: ref;
  var $p14.shadow: ref;
  var $p15: ref;
  var $p15.shadow: ref;
  var $i16: i32;
  var $i16.shadow: i32;
  var $p17: ref;
  var $p17.shadow: ref;
  var $p18: ref;
  var $p18.shadow: ref;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $p21: ref;
  var $p21.shadow: ref;
  var $i22: i32;
  var $i22.shadow: i32;
  var $i23: i1;
  var $i23.shadow: i1;
  var $p24: ref;
  var $p24.shadow: ref;
  var $p25: ref;
  var $p25.shadow: ref;
  var $i26: i1;
  var $i26.shadow: i1;
  var $i27: i1;
  var $i27.shadow: i1;
  var $i28: i1;
  var $i28.shadow: i1;
  var $i29: i1;
  var $i29.shadow: i1;
  var $i30: i1;
  var $i30.shadow: i1;
  var $i31: i1;
  var $i31.shadow: i1;
  var $i32: i1;
  var $i32.shadow: i1;
  var $i33: i1;
  var $i33.shadow: i1;
  var $i34: i1;
  var $i34.shadow: i1;
  var $i35: i1;
  var $i35.shadow: i1;
  var $i36: i1;
  var $i36.shadow: i1;
  var $p37: ref;
  var $p37.shadow: ref;
  var $p38: ref;
  var $p38.shadow: ref;
  var $p39: ref;
  var $p39.shadow: ref;
  var $p40: ref;
  var $p40.shadow: ref;
  var $p41: ref;
  var $p41.shadow: ref;
  var $p42: ref;
  var $p42.shadow: ref;
  var $p43: ref;
  var $p43.shadow: ref;
  var $i44: i32;
  var $i44.shadow: i32;
  var $p45: ref;
  var $p45.shadow: ref;
  var $p46: ref;
  var $p46.shadow: ref;
  var $p47: ref;
  var $p47.shadow: ref;
  var $p48: ref;
  var $p48.shadow: ref;
  var $p49: ref;
  var $p49.shadow: ref;
  var $p50: ref;
  var $p50.shadow: ref;
  var $p51: ref;
  var $p51.shadow: ref;
  var $p52: ref;
  var $p52.shadow: ref;
  var $p53: ref;
  var $p53.shadow: ref;
  var $p54: ref;
  var $p54.shadow: ref;
  var $p55: ref;
  var $p55.shadow: ref;
  var $p56: ref;
  var $p56.shadow: ref;
  var $p57: ref;
  var $p57.shadow: ref;
  var $p58: ref;
  var $p58.shadow: ref;
  var $p59: ref;
  var $p59.shadow: ref;
  var $p60: ref;
  var $p60.shadow: ref;
  var $p61: ref;
  var $p61.shadow: ref;
  var $p62: ref;
  var $p62.shadow: ref;
  var $i63: i32;
  var $i63.shadow: i32;
  var $p64: ref;
  var $p64.shadow: ref;
  var $p65: ref;
  var $p65.shadow: ref;
  var $i66: i32;
  var $i66.shadow: i32;
  var $p67: ref;
  var $p67.shadow: ref;
  var $p68: ref;
  var $p68.shadow: ref;
  var $p69: ref;
  var $p69.shadow: ref;
  var $p70: ref;
  var $p70.shadow: ref;
  var $p71: ref;
  var $p71.shadow: ref;
  var $p72: ref;
  var $p72.shadow: ref;
  var $p73: ref;
  var $p73.shadow: ref;
  var $i74: i32;
  var $i74.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 693, 2} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p1.shadow := $p1;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 693, 2} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p3.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 693, 2} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  $p4.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 693, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p5.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p6 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p6.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 693, 2} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  $p7.shadow := $bitcast.ref.ref($p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 693, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p4 == $p4.shadow));
  $shadow_ok := ($shadow_ok && ($p7 == $p7.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p4, $p4.shadow, $p7, $p7.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 694, 7} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  $i8.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assert {:shadow_invariant} ($i8 == $i8.shadow);
  assert {:shadow_invariant} ($p1 == $p1.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 694, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8,30);
  $i9.shadow := $slt.i32($i8.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 694, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  $shadow_ok := ($shadow_ok && ($i9 == $i9.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i9 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 695, 15} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p10.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 695, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p11.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 695, 3} true;
  assume {:verifier.code 0} true;
  call square_f256($p10, $p10.shadow, $p11, $p11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 696, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p12.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 696, 16} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p13.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 696, 23} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p14.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p15 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p15.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 696, 3} true;
  assume {:verifier.code 0} true;
  call mul_f256($p12, $p12.shadow, $p13, $p13.shadow, $p15, $p15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 697, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i9 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 704, 2} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p17.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 704, 2} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  $p18.shadow := $bitcast.ref.ref($p17.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 704, 16} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p19.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p20 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p20.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 704, 2} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  $p21.shadow := $bitcast.ref.ref($p20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 704, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p18 == $p18.shadow));
  $shadow_ok := ($shadow_ok && ($p21 == $p21.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p18, $p18.shadow, $p21, $p21.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 705, 7} true;
  assume {:verifier.code 0} true;
  $i22 := 1;
  $i22.shadow := 1;
  goto $bb5;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 694, 24} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i8,1);
  $i16.shadow := $add.i32($i8.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 694, 2} true;
  assume {:verifier.code 0} true;
  $i8 := $i16;
  $i8.shadow := $i16.shadow;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i22 == $i22.shadow);
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assert {:shadow_invariant} ($p1 == $p1.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 705, 16} true;
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i22,256);
  $i23.shadow := $slt.i32($i22.shadow,256);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 705, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  $shadow_ok := ($shadow_ok && ($i23 == $i23.shadow));
  goto $bb6, $bb7;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 706, 15} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p24.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 706, 19} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p25.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 706, 3} true;
  assume {:verifier.code 0} true;
  call square_f256($p24, $p24.shadow, $p25, $p25.shadow);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i23 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 725, 11} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p45.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 725, 15} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p46.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 725, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p47.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 725, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p45, $p45.shadow, $p46, $p46.shadow, $p47, $p47.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 726, 14} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p48.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p49 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p49.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 726, 17} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p50.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 726, 24} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p51.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p52 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p52.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 726, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p49, $p49.shadow, $p50, $p50.shadow, $p52, $p52.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 727, 11} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p53.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 727, 15} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p54.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 727, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p55.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 727, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p53, $p53.shadow, $p54, $p54.shadow, $p55, $p55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 728, 14} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p56.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p57 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p57.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 728, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p58.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 728, 24} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p59.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p60 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p60.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 728, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p57, $p57.shadow, $p58, $p58.shadow, $p60, $p60.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 729, 23} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p61.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p62 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p62.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 729, 2} true;
  assume {:verifier.code 0} true;
  call $i63, $i63.shadow := reduce_final_f256($p62, $p62.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 730, 23} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p64.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p65 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p65.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 730, 2} true;
  assume {:verifier.code 0} true;
  call $i66, $i66.shadow := reduce_final_f256($p65, $p65.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 736, 14} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p67.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p68 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p68.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 736, 20} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p69.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p70 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p70.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 736, 23} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p71.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 736, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p68, $p68.shadow, $p70, $p70.shadow, $p71, $p71.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 737, 23} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p72.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p73 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p73.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 737, 2} true;
  assume {:verifier.code 0} true;
  call $i74, $i74.shadow := reduce_final_f256($p73, $p73.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 738, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb8:
  assume {:verifier.code 0} true;
  $i26 := $slt.i32($i22,221);
  $i26.shadow := $slt.i32($i22.shadow,221);
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  $shadow_ok := ($shadow_ok && ($i26 == $i26.shadow));
  goto $bb9, $bb10;
$bb9:
  assume ($i26 == 1);
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i22,63);
  $i32.shadow := $slt.i32($i22.shadow,63);
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  $shadow_ok := ($shadow_ok && ($i32 == $i32.shadow));
  goto $bb24, $bb25;
$bb10:
  assume !($i26 == 1);
  assume {:verifier.code 0} true;
  $i27 := $slt.i32($i22,253);
  $i27.shadow := $slt.i32($i22.shadow,253);
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  $shadow_ok := ($shadow_ok && ($i27 == $i27.shadow));
  goto $bb11, $bb12;
$bb11:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  $i30 := $slt.i32($i22,252);
  $i30.shadow := $slt.i32($i22.shadow,252);
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  $shadow_ok := ($shadow_ok && ($i30 == $i30.shadow));
  goto $bb19, $bb20;
$bb12:
  assume !($i27 == 1);
  assume {:verifier.code 0} true;
  $i28 := $slt.i32($i22,255);
  $i28.shadow := $slt.i32($i22.shadow,255);
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  $shadow_ok := ($shadow_ok && ($i28 == $i28.shadow));
  goto $bb13, $bb14;
$bb13:
  assume ($i28 == 1);
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i22,253);
  $i29.shadow := $eq.i32($i22.shadow,253);
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  $shadow_ok := ($shadow_ok && ($i29 == $i29.shadow));
  goto $bb16, $bb17;
$bb14:
  assume {:verifier.code 0} true;
  assume !($i28 == 1);
  goto $bb15;
$bb15:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 717, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p40.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 717, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p41.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 717, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p42.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p43 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p43.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 717, 4} true;
  assume {:verifier.code 0} true;
  call mul_f256($p40, $p40.shadow, $p41, $p41.shadow, $p43, $p43.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 718, 4} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb16:
  assume {:verifier.code 0} true;
  assume ($i29 == 1);
  goto $bb15;
$bb17:
  assume {:verifier.code 0} true;
  assume !($i29 == 1);
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb19:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i22,221);
  $i31.shadow := $eq.i32($i22.shadow,221);
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  $shadow_ok := ($shadow_ok && ($i31 == $i31.shadow));
  goto $bb22, $bb23;
$bb20:
  assume {:verifier.code 0} true;
  assume !($i30 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 712, 13} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p37.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 712, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p38.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 712, 21} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p1,$mul.ref(0,36)),$mul.ref(0,4));
  $p39.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 712, 4} true;
  assume {:verifier.code 0} true;
  call mul_f256($p37, $p37.shadow, $p38, $p38.shadow, $p39, $p39.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 713, 4} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb22:
  assume {:verifier.code 0} true;
  assume ($i31 == 1);
  goto $bb21;
$bb23:
  assume {:verifier.code 0} true;
  assume !($i31 == 1);
  goto $bb18;
$bb24:
  assume ($i32 == 1);
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i22,31);
  $i36.shadow := $eq.i32($i22.shadow,31);
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  $shadow_ok := ($shadow_ok && ($i36 == $i36.shadow));
  goto $bb32, $bb33;
$bb25:
  assume !($i32 == 1);
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i22,190);
  $i33.shadow := $slt.i32($i22.shadow,190);
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  $shadow_ok := ($shadow_ok && ($i33 == $i33.shadow));
  goto $bb26, $bb27;
$bb26:
  assume ($i33 == 1);
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i22,63);
  $i35.shadow := $eq.i32($i22.shadow,63);
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  $shadow_ok := ($shadow_ok && ($i35 == $i35.shadow));
  goto $bb30, $bb31;
$bb27:
  assume !($i33 == 1);
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i22,190);
  $i34.shadow := $eq.i32($i22.shadow,190);
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  $shadow_ok := ($shadow_ok && ($i34 == $i34.shadow));
  goto $bb28, $bb29;
$bb28:
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb21;
$bb29:
  assume {:verifier.code 0} true;
  assume !($i34 == 1);
  goto $bb18;
$bb30:
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb15;
$bb31:
  assume {:verifier.code 0} true;
  assume !($i35 == 1);
  goto $bb18;
$bb32:
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb21;
$bb33:
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb18;
$bb34:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 720, 2} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 705, 25} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i22,1);
  $i44.shadow := $add.i32($i22.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i44);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 705, 2} true;
  assume {:verifier.code 0} true;
  $i22 := $i44;
  $i22.shadow := $i44.shadow;
  goto $bb5;
}
const p256_encode: ref;
axiom (p256_encode == $sub.ref(0,26025));
procedure {:inline 1} p256_encode($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref)
modifies $M.4, $exn;
{
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $p8: ref;
  var $p8.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1105, 2} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1105, 2} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0,$mul.ref(0,1));
  $p2.shadow := $add.ref($p0.shadow,$mul.ref(0,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1105, 9} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p2 == $p2.shadow));
  $M.4 := $store.i8($M.4,$p2,4);
  $M.4.shadow := $store.i8($M.4.shadow,$p2.shadow,4);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1106, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0,$mul.ref(1,1));
  $p3.shadow := $add.ref($p0.shadow,$mul.ref(1,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1106, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(0,1));
  $p4.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p5 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p5.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1106, 2} true;
  assume {:verifier.code 0} true;
  call le30_to_be8($p3, $p3.shadow, 32, 32, $p5, $p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1107, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0,$mul.ref(33,1));
  $p6.shadow := $add.ref($p0.shadow,$mul.ref(33,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1107, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(36,1));
  $p7.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p8 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p8.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1107, 2} true;
  assume {:verifier.code 0} true;
  call le30_to_be8($p6, $p6.shadow, 32, 32, $p8, $p8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1108, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
}
const le30_to_be8: ref;
axiom (le30_to_be8 == $sub.ref(0,27057));
procedure {:inline 1} le30_to_be8($p0: ref, $p0.shadow: ref, $i1: i64, $i1.shadow: i64, $p2: ref, $p2.shadow: ref)
modifies $exn, $M.4;
{
  var $i3: i32;
  var $i3.shadow: i32;
  var $p4: ref;
  var $p4.shadow: ref;
  var $i5: i64;
  var $i5.shadow: i64;
  var $i6: i32;
  var $i6.shadow: i32;
  var $i7: i64;
  var $i7.shadow: i64;
  var $i8: i1;
  var $i8.shadow: i1;
  var $i9: i1;
  var $i9.shadow: i1;
  var $p10: ref;
  var $p10.shadow: ref;
  var $i11: i32;
  var $i11.shadow: i32;
  var $i12: i32;
  var $i12.shadow: i32;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i8;
  var $i14.shadow: i8;
  var $p15: ref;
  var $p15.shadow: ref;
  var $i16: i32;
  var $i16.shadow: i32;
  var $i17: i32;
  var $i17.shadow: i32;
  var $i18: i32;
  var $i18.shadow: i32;
  var $i22: i8;
  var $i22.shadow: i8;
  var $p23: ref;
  var $p23.shadow: ref;
  var $i24: i32;
  var $i24.shadow: i32;
  var $i25: i32;
  var $i25.shadow: i32;
  var $i19: i32;
  var $i19.shadow: i32;
  var $p20: ref;
  var $p20.shadow: ref;
  var $i21: i32;
  var $i21.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 89, 2} true;
  assume {:verifier.code 0} true;
  call {:cexpr "le30_to_be8:arg:len"} boogie_si_record_i64($i1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 89, 2} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  $i3.shadow := 0;
  $p4 := $p2;
  $p4.shadow := $p2.shadow;
  $i5 := $i1;
  $i5.shadow := $i1.shadow;
  $i6 := 0;
  $i6.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assert {:shadow_invariant} ($i6 == $i6.shadow);
  assert {:shadow_invariant} ($i5 == $i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 89, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i5,$sub.i64(0,1));
  $i7.shadow := $add.i64($i5.shadow,$sub.i64(0,1));
  call {:cexpr "len"} boogie_si_record_i64($i7);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 89, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $ugt.i64($i5,0);
  $i8.shadow := $ugt.i64($i5.shadow,0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 89, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  $shadow_ok := ($shadow_ok && ($i8 == $i8.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i8 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 90, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i6,8);
  $i9.shadow := $slt.i32($i6.shadow,8);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 90, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  $shadow_ok := ($shadow_ok && ($i9 == $i9.shadow));
  goto $bb4, $bb5;
$bb3:
  assume !($i8 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 103, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 93, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4,$mul.ref(1,4));
  $p10.shadow := $add.ref($p4.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 93, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p4 == $p4.shadow));
  $i11 := $load.i32($M.3,$p4);
  $i11.shadow := $load.i32($M.3.shadow,$p4.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i11);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 94, 40} true;
  assume {:verifier.code 0} true;
  $i12 := $shl.i32($i11,$i6);
  $i12.shadow := $shl.i32($i11.shadow,$i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 94, 35} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i3,$i12);
  $i13.shadow := $or.i32($i3.shadow,$i12.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 94, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  $i14.shadow := $trunc.i32.i8($i13.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 94, 4} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0,$mul.ref($i7,1));
  $p15.shadow := $add.ref($p0.shadow,$mul.ref($i7.shadow,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 94, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15 == $p15.shadow));
  $M.4 := $store.i8($M.4,$p15,$i14);
  $M.4.shadow := $store.i8($M.4.shadow,$p15.shadow,$i14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 95, 18} true;
  assume {:verifier.code 0} true;
  $i16 := $sub.i32(8,$i6);
  $i16.shadow := $sub.i32(8,$i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 95, 12} true;
  assume {:verifier.code 0} true;
  $i17 := $lshr.i32($i11,$i16);
  $i17.shadow := $lshr.i32($i11.shadow,$i16.shadow);
  call {:cexpr "acc"} boogie_si_record_i32($i17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 96, 12} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i32($i6,22);
  $i18.shadow := $add.i32($i6.shadow,22);
  call {:cexpr "acc_len"} boogie_si_record_i32($i18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 97, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i17;
  $i19.shadow := $i17.shadow;
  $p20 := $p10;
  $p20.shadow := $p10.shadow;
  $i21 := $i18;
  $i21.shadow := $i18.shadow;
  goto $bb6;
$bb5:
  assume !($i9 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 98, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i3);
  $i22.shadow := $trunc.i32.i8($i3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 98, 4} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0,$mul.ref($i7,1));
  $p23.shadow := $add.ref($p0.shadow,$mul.ref($i7.shadow,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 98, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23 == $p23.shadow));
  $M.4 := $store.i8($M.4,$p23,$i22);
  $M.4.shadow := $store.i8($M.4.shadow,$p23.shadow,$i22.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 99, 8} true;
  assume {:verifier.code 0} true;
  $i24 := $lshr.i32($i3,8);
  $i24.shadow := $lshr.i32($i3.shadow,8);
  call {:cexpr "acc"} boogie_si_record_i32($i24);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 100, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32($i6,8);
  $i25.shadow := $sub.i32($i6.shadow,8);
  call {:cexpr "acc_len"} boogie_si_record_i32($i25);
  assume {:verifier.code 0} true;
  $i19 := $i24;
  $i19.shadow := $i24.shadow;
  $p20 := $p4;
  $p20.shadow := $p4.shadow;
  $i21 := $i25;
  $i21.shadow := $i25.shadow;
  goto $bb6;
$bb6:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 89, 2} true;
  assume {:verifier.code 0} true;
  $i3 := $i19;
  $i3.shadow := $i19.shadow;
  $p4 := $p20;
  $p4.shadow := $p20.shadow;
  $i5 := $i7;
  $i5.shadow := $i7.shadow;
  $i6 := $i21;
  $i6.shadow := $i21.shadow;
  goto $bb1;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0,28089));
procedure {:inline 1} llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64, $i3: i1, $i3.shadow: i1);
const square_f256: ref;
axiom (square_f256 == $sub.ref(0,29121));
procedure {:inline 1} square_f256($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref)
modifies $M.8, $M.3, $exn;
modifies $M.12, $M.7;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $i5: i32;
  var $i5.shadow: i32;
  var $i6: i1;
  var $i6.shadow: i1;
  var $i7: i64;
  var $i7.shadow: i64;
  var $p8: ref;
  var $p8.shadow: ref;
  var $i9: i32;
  var $i9.shadow: i32;
  var $i10: i64;
  var $i10.shadow: i64;
  var $i11: i64;
  var $i11.shadow: i64;
  var $p12: ref;
  var $p12.shadow: ref;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i1;
  var $i15.shadow: i1;
  var $i16: i64;
  var $i16.shadow: i64;
  var $p17: ref;
  var $p17.shadow: ref;
  var $i18: i64;
  var $i18.shadow: i64;
  var $i19: i64;
  var $i19.shadow: i64;
  var $i20: i32;
  var $i20.shadow: i32;
  var $i21: i64;
  var $i21.shadow: i64;
  var $p22: ref;
  var $p22.shadow: ref;
  var $i23: i64;
  var $i23.shadow: i64;
  var $i24: i64;
  var $i24.shadow: i64;
  var $i25: i64;
  var $i25.shadow: i64;
  var $i26: i64;
  var $i26.shadow: i64;
  var $i27: i32;
  var $i27.shadow: i32;
  var $i28: i64;
  var $i28.shadow: i64;
  var $p29: ref;
  var $p29.shadow: ref;
  var $i30: i64;
  var $i30.shadow: i64;
  var $i31: i64;
  var $i31.shadow: i64;
  var $i32: i64;
  var $i32.shadow: i64;
  var $i33: i32;
  var $i33.shadow: i32;
  var $i34: i64;
  var $i34.shadow: i64;
  var $p35: ref;
  var $p35.shadow: ref;
  var $i36: i64;
  var $i36.shadow: i64;
  var $i37: i64;
  var $i37.shadow: i64;
  var $i38: i64;
  var $i38.shadow: i64;
  var $i39: i64;
  var $i39.shadow: i64;
  var $i40: i32;
  var $i40.shadow: i32;
  var $i41: i64;
  var $i41.shadow: i64;
  var $p42: ref;
  var $p42.shadow: ref;
  var $i43: i64;
  var $i43.shadow: i64;
  var $i44: i64;
  var $i44.shadow: i64;
  var $i45: i64;
  var $i45.shadow: i64;
  var $i46: i32;
  var $i46.shadow: i32;
  var $i47: i64;
  var $i47.shadow: i64;
  var $p48: ref;
  var $p48.shadow: ref;
  var $i49: i64;
  var $i49.shadow: i64;
  var $i50: i64;
  var $i50.shadow: i64;
  var $i51: i64;
  var $i51.shadow: i64;
  var $i52: i64;
  var $i52.shadow: i64;
  var $i53: i32;
  var $i53.shadow: i32;
  var $i54: i64;
  var $i54.shadow: i64;
  var $p55: ref;
  var $p55.shadow: ref;
  var $i56: i64;
  var $i56.shadow: i64;
  var $i57: i64;
  var $i57.shadow: i64;
  var $i58: i64;
  var $i58.shadow: i64;
  var $i59: i32;
  var $i59.shadow: i32;
  var $i60: i64;
  var $i60.shadow: i64;
  var $p61: ref;
  var $p61.shadow: ref;
  var $i62: i64;
  var $i62.shadow: i64;
  var $i63: i64;
  var $i63.shadow: i64;
  var $i64: i64;
  var $i64.shadow: i64;
  var $i65: i64;
  var $i65.shadow: i64;
  var $i66: i32;
  var $i66.shadow: i32;
  var $i67: i64;
  var $i67.shadow: i64;
  var $p68: ref;
  var $p68.shadow: ref;
  var $i69: i64;
  var $i69.shadow: i64;
  var $i70: i64;
  var $i70.shadow: i64;
  var $i71: i32;
  var $i71.shadow: i32;
  var $i72: i64;
  var $i72.shadow: i64;
  var $i73: i64;
  var $i73.shadow: i64;
  var $i74: i32;
  var $i74.shadow: i32;
  var $i75: i1;
  var $i75.shadow: i1;
  var $i76: i64;
  var $i76.shadow: i64;
  var $p77: ref;
  var $p77.shadow: ref;
  var $i78: i64;
  var $i78.shadow: i64;
  var $i79: i64;
  var $i79.shadow: i64;
  var $i80: i32;
  var $i80.shadow: i32;
  var $i81: i32;
  var $i81.shadow: i32;
  var $i82: i64;
  var $i82.shadow: i64;
  var $p83: ref;
  var $p83.shadow: ref;
  var $i84: i64;
  var $i84.shadow: i64;
  var $i85: i32;
  var $i85.shadow: i32;
  var $i86: i64;
  var $i86.shadow: i64;
  var $p87: ref;
  var $p87.shadow: ref;
  var $i88: i32;
  var $i88.shadow: i32;
  var $i89: i32;
  var $i89.shadow: i32;
  var $i90: i32;
  var $i90.shadow: i32;
  var $i91: i32;
  var $i91.shadow: i32;
  var $p92: ref;
  var $p92.shadow: ref;
  var $i93: i32;
  var $i93.shadow: i32;
  var $i94: i32;
  var $i94.shadow: i32;
  var $i95: i32;
  var $i95.shadow: i32;
  var $i96: i32;
  var $i96.shadow: i32;
  var $p97: ref;
  var $p97.shadow: ref;
  var $i98: i32;
  var $i98.shadow: i32;
  var $i99: i32;
  var $i99.shadow: i32;
  var $i100: i32;
  var $i100.shadow: i32;
  var $p101: ref;
  var $p101.shadow: ref;
  var $i102: i32;
  var $i102.shadow: i32;
  var $i103: i32;
  var $i103.shadow: i32;
  var $i104: i32;
  var $i104.shadow: i32;
  var $i105: i32;
  var $i105.shadow: i32;
  var $p106: ref;
  var $p106.shadow: ref;
  var $i107: i32;
  var $i107.shadow: i32;
  var $i108: i32;
  var $i108.shadow: i32;
  var $i109: i32;
  var $i109.shadow: i32;
  var $p110: ref;
  var $p110.shadow: ref;
  var $i111: i32;
  var $i111.shadow: i32;
  var $i112: i32;
  var $i112.shadow: i32;
  var $i113: i32;
  var $i113.shadow: i32;
  var $p114: ref;
  var $p114.shadow: ref;
  var $i115: i32;
  var $i115.shadow: i32;
  var $i116: i32;
  var $i116.shadow: i32;
  var $i117: i32;
  var $i117.shadow: i32;
  var $p118: ref;
  var $p118.shadow: ref;
  var $i119: i32;
  var $i119.shadow: i32;
  var $i120: i32;
  var $i120.shadow: i32;
  var $i121: i32;
  var $i121.shadow: i32;
  var $p122: ref;
  var $p122.shadow: ref;
  var $i123: i32;
  var $i123.shadow: i32;
  var $i124: i32;
  var $i124.shadow: i32;
  var $i125: i32;
  var $i125.shadow: i32;
  var $p126: ref;
  var $p126.shadow: ref;
  var $i127: i32;
  var $i127.shadow: i32;
  var $i128: i32;
  var $i128.shadow: i32;
  var $i129: i32;
  var $i129.shadow: i32;
  var $p130: ref;
  var $p130.shadow: ref;
  var $i131: i32;
  var $i131.shadow: i32;
  var $i132: i32;
  var $i132.shadow: i32;
  var $i133: i32;
  var $i133.shadow: i32;
  var $i134: i32;
  var $i134.shadow: i32;
  var $i135: i1;
  var $i135.shadow: i1;
  var $i136: i64;
  var $i136.shadow: i64;
  var $p137: ref;
  var $p137.shadow: ref;
  var $i138: i32;
  var $i138.shadow: i32;
  var $i139: i32;
  var $i139.shadow: i32;
  var $i140: i32;
  var $i140.shadow: i32;
  var $i141: i64;
  var $i141.shadow: i64;
  var $p142: ref;
  var $p142.shadow: ref;
  var $i143: i32;
  var $i143.shadow: i32;
  var $i144: i32;
  var $i144.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 512, 10} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(72,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(144,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 512, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2,$mul.ref(0,72)),$mul.ref(0,4));
  $p4.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,72)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 512, 2} true;
  assume {:verifier.code 0} true;
  call square9($p4, $p4.shadow, $p1, $p1.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 533, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  $i5.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assert {:shadow_invariant} ($i5 == $i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 533, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5,18);
  $i6.shadow := $slt.i32($i5.shadow,18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 533, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $shadow_ok := ($shadow_ok && ($i6 == $i6.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i5);
  $i7.shadow := $sext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2,$mul.ref(0,72)),$mul.ref($i7,4));
  $p8.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,72)),$mul.ref($i7.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p8 == $p8.shadow));
  $i9 := $load.i32($M.7,$p8);
  $i9.shadow := $load.i32($M.7.shadow,$p8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i32.i64($i9);
  $i10.shadow := $zext.i32.i64($i9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i5);
  $i11.shadow := $sext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i11,8));
  $p12.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i11.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 534, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12 == $p12.shadow));
  $M.8 := $store.i64($M.8,$p12,$i10);
  $M.8.shadow := $store.i64($M.8.shadow,$p12.shadow,$i10.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 535, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 537, 7} true;
  assume {:verifier.code 0} true;
  $i14 := 17;
  $i14.shadow := 17;
  goto $bb5;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 533, 24} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i5,1);
  $i13.shadow := $add.i32($i5.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 533, 2} true;
  assume {:verifier.code 0} true;
  $i5 := $i13;
  $i5.shadow := $i13.shadow;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i14 == $i14.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 537, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $sge.i32($i14,9);
  $i15.shadow := $sge.i32($i14.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 537, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  $shadow_ok := ($shadow_ok && ($i15 == $i15.shadow));
  goto $bb6, $bb7;
$bb6:
  assume ($i15 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 540, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i14);
  $i16.shadow := $sext.i32.i64($i14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 540, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i16,8));
  $p17.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i16.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 540, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p17 == $p17.shadow));
  $i18 := $load.i64($M.8,$p17);
  $i18.shadow := $load.i64($M.8.shadow,$p17.shadow);
  call {:cexpr "y"} boogie_si_record_i64($i18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ashr.i64($i18,2);
  $i19.shadow := $ashr.i64($i18.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i32($i14,1);
  $i20.shadow := $sub.i32($i14.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i20);
  $i21.shadow := $sext.i32.i64($i20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i21,8));
  $p22.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i21.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22 == $p22.shadow));
  $i23 := $load.i64($M.8,$p22);
  $i23.shadow := $load.i64($M.8.shadow,$p22.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 12} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23,$i19);
  $i24.shadow := $add.i64($i23.shadow,$i19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 541, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22 == $p22.shadow));
  $M.8 := $store.i64($M.8,$p22,$i24);
  $M.8.shadow := $store.i64($M.8.shadow,$p22.shadow,$i24.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 18} true;
  assume {:verifier.code 0} true;
  $i25 := $shl.i64($i18,28);
  $i25.shadow := $shl.i64($i18.shadow,28);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 25} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i64($i25,1073741823);
  $i26.shadow := $and.i64($i25.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $sub.i32($i14,2);
  $i27.shadow := $sub.i32($i14.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i27);
  $i28.shadow := $sext.i32.i64($i27.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 3} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i28,8));
  $p29.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i28.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29 == $p29.shadow));
  $i30 := $load.i64($M.8,$p29);
  $i30.shadow := $load.i64($M.8.shadow,$p29.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 12} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30,$i26);
  $i31.shadow := $add.i64($i30.shadow,$i26.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 542, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29 == $p29.shadow));
  $M.8 := $store.i64($M.8,$p29,$i31);
  $M.8.shadow := $store.i64($M.8.shadow,$p29.shadow,$i31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $ashr.i64($i18,4);
  $i32.shadow := $ashr.i64($i18.shadow,4);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32($i14,2);
  $i33.shadow := $sub.i32($i14.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i33);
  $i34.shadow := $sext.i32.i64($i33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 3} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i34,8));
  $p35.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i34.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p35 == $p35.shadow));
  $i36 := $load.i64($M.8,$p35);
  $i36.shadow := $load.i64($M.8.shadow,$p35.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 12} true;
  assume {:verifier.code 0} true;
  $i37 := $sub.i64($i36,$i32);
  $i37.shadow := $sub.i64($i36.shadow,$i32.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 543, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p35 == $p35.shadow));
  $M.8 := $store.i64($M.8,$p35,$i37);
  $M.8.shadow := $store.i64($M.8.shadow,$p35.shadow,$i37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $shl.i64($i18,26);
  $i38.shadow := $shl.i64($i18.shadow,26);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i64($i38,1073741823);
  $i39.shadow := $and.i64($i38.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sub.i32($i14,3);
  $i40.shadow := $sub.i32($i14.shadow,3);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 3} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  $i41.shadow := $sext.i32.i64($i40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 3} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i41,8));
  $p42.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i41.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p42 == $p42.shadow));
  $i43 := $load.i64($M.8,$p42);
  $i43.shadow := $load.i64($M.8.shadow,$p42.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 12} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i64($i43,$i39);
  $i44.shadow := $sub.i64($i43.shadow,$i39.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 544, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p42 == $p42.shadow));
  $M.8 := $store.i64($M.8,$p42,$i44);
  $M.8.shadow := $store.i64($M.8.shadow,$p42.shadow,$i44.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 15} true;
  assume {:verifier.code 0} true;
  $i45 := $ashr.i64($i18,10);
  $i45.shadow := $ashr.i64($i18.shadow,10);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sub.i32($i14,5);
  $i46.shadow := $sub.i32($i14.shadow,5);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 3} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i46);
  $i47.shadow := $sext.i32.i64($i46.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 3} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i47,8));
  $p48.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i47.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p48 == $p48.shadow));
  $i49 := $load.i64($M.8,$p48);
  $i49.shadow := $load.i64($M.8.shadow,$p48.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 12} true;
  assume {:verifier.code 0} true;
  $i50 := $sub.i64($i49,$i45);
  $i50.shadow := $sub.i64($i49.shadow,$i45.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 545, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p48 == $p48.shadow));
  $M.8 := $store.i64($M.8,$p48,$i50);
  $M.8.shadow := $store.i64($M.8.shadow,$p48.shadow,$i50.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 18} true;
  assume {:verifier.code 0} true;
  $i51 := $shl.i64($i18,20);
  $i51.shadow := $shl.i64($i18.shadow,20);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 25} true;
  assume {:verifier.code 0} true;
  $i52 := $and.i64($i51,1073741823);
  $i52.shadow := $and.i64($i51.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32($i14,6);
  $i53.shadow := $sub.i32($i14.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 3} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  $i54.shadow := $sext.i32.i64($i53.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 3} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i54,8));
  $p55.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i54.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p55 == $p55.shadow));
  $i56 := $load.i64($M.8,$p55);
  $i56.shadow := $load.i64($M.8.shadow,$p55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 12} true;
  assume {:verifier.code 0} true;
  $i57 := $sub.i64($i56,$i52);
  $i57.shadow := $sub.i64($i56.shadow,$i52.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 546, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p55 == $p55.shadow));
  $M.8 := $store.i64($M.8,$p55,$i57);
  $M.8.shadow := $store.i64($M.8.shadow,$p55.shadow,$i57.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $ashr.i64($i18,16);
  $i58.shadow := $ashr.i64($i18.shadow,16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sub.i32($i14,8);
  $i59.shadow := $sub.i32($i14.shadow,8);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 3} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i59);
  $i60.shadow := $sext.i32.i64($i59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 3} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i60,8));
  $p61.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i60.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p61 == $p61.shadow));
  $i62 := $load.i64($M.8,$p61);
  $i62.shadow := $load.i64($M.8.shadow,$p61.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 12} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62,$i58);
  $i63.shadow := $add.i64($i62.shadow,$i58.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 547, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p61 == $p61.shadow));
  $M.8 := $store.i64($M.8,$p61,$i63);
  $M.8.shadow := $store.i64($M.8.shadow,$p61.shadow,$i63.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 18} true;
  assume {:verifier.code 0} true;
  $i64 := $shl.i64($i18,14);
  $i64.shadow := $shl.i64($i18.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 25} true;
  assume {:verifier.code 0} true;
  $i65 := $and.i64($i64,1073741823);
  $i65.shadow := $and.i64($i64.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $sub.i32($i14,9);
  $i66.shadow := $sub.i32($i14.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i32.i64($i66);
  $i67.shadow := $sext.i32.i64($i66.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 3} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i67,8));
  $p68.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i67.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p68 == $p68.shadow));
  $i69 := $load.i64($M.8,$p68);
  $i69.shadow := $load.i64($M.8.shadow,$p68.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 12} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69,$i65);
  $i70.shadow := $add.i64($i69.shadow,$i65.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 548, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p68 == $p68.shadow));
  $M.8 := $store.i64($M.8,$p68,$i70);
  $M.8.shadow := $store.i64($M.8.shadow,$p68.shadow,$i70.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 549, 2} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i15 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $u0;
  $i72.shadow := $u0;
  $i73 := 0;
  $i73.shadow := 0;
  $i74 := 0;
  $i74.shadow := 0;
  goto $bb9;
$bb8:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 537, 25} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i32($i14,$sub.i32(0,1));
  $i71.shadow := $add.i32($i14.shadow,$sub.i32(0,1));
  call {:cexpr "i"} boogie_si_record_i32($i71);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 537, 2} true;
  assume {:verifier.code 0} true;
  $i14 := $i71;
  $i14.shadow := $i71.shadow;
  goto $bb5;
$bb9:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i74 == $i74.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 561, 16} true;
  assume {:verifier.code 0} true;
  $i75 := $slt.i32($i74,9);
  $i75.shadow := $slt.i32($i74.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 561, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  $shadow_ok := ($shadow_ok && ($i75 == $i75.shadow));
  goto $bb10, $bb11;
$bb10:
  assume ($i75 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 562, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i32.i64($i74);
  $i76.shadow := $sext.i32.i64($i74.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 562, 7} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p3,$mul.ref(0,144)),$mul.ref($i76,8));
  $p77.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,144)),$mul.ref($i76.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 562, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p77 == $p77.shadow));
  $i78 := $load.i64($M.8,$p77);
  $i78.shadow := $load.i64($M.8.shadow,$p77.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 562, 12} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64($i78,$i73);
  $i79.shadow := $add.i64($i78.shadow,$i73.shadow);
  call {:cexpr "x"} boogie_si_record_i64($i79);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 563, 10} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i64.i32($i79);
  $i80.shadow := $trunc.i64.i32($i79.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 563, 22} true;
  assume {:verifier.code 0} true;
  $i81 := $and.i32($i80,1073741823);
  $i81.shadow := $and.i32($i80.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 563, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i74);
  $i82.shadow := $sext.i32.i64($i74.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 563, 3} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0,$mul.ref($i82,4));
  $p83.shadow := $add.ref($p0.shadow,$mul.ref($i82.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 563, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p83 == $p83.shadow));
  $M.3 := $store.i32($M.3,$p83,$i81);
  $M.3.shadow := $store.i32($M.3.shadow,$p83.shadow,$i81.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 564, 8} true;
  assume {:verifier.code 0} true;
  $i84 := $ashr.i64($i79,30);
  $i84.shadow := $ashr.i64($i79.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i64($i84);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 565, 2} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !($i75 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 576, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $ashr.i64($i72,16);
  $i86.shadow := $ashr.i64($i72.shadow,16);
  call {:cexpr "cc"} boogie_si_record_i64($i86);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 577, 2} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0,$mul.ref(8,4));
  $p87.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 577, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p87 == $p87.shadow));
  $i88 := $load.i32($M.3,$p87);
  $i88.shadow := $load.i32($M.3.shadow,$p87.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 577, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $and.i32($i88,65535);
  $i89.shadow := $and.i32($i88.shadow,65535);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 577, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p87 == $p87.shadow));
  $M.3 := $store.i32($M.3,$p87,$i89);
  $M.3.shadow := $store.i32($M.3.shadow,$p87.shadow,$i89.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 590, 6} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i64.i32($i86);
  $i90.shadow := $trunc.i64.i32($i86.shadow);
  call {:cexpr "z"} boogie_si_record_i32($i90);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 591, 12} true;
  assume {:verifier.code 0} true;
  $i91 := $shl.i32($i90,6);
  $i91.shadow := $shl.i32($i90.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 591, 2} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0,$mul.ref(3,4));
  $p92.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 591, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p92 == $p92.shadow));
  $i93 := $load.i32($M.3,$p92);
  $i93.shadow := $load.i32($M.3.shadow,$p92.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 591, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i32($i93,$i91);
  $i94.shadow := $sub.i32($i93.shadow,$i91.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 591, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p92 == $p92.shadow));
  $M.3 := $store.i32($M.3,$p92,$i94);
  $M.3.shadow := $store.i32($M.3.shadow,$p92.shadow,$i94.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 592, 13} true;
  assume {:verifier.code 0} true;
  $i95 := $shl.i32($i90,12);
  $i95.shadow := $shl.i32($i90.shadow,12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 592, 20} true;
  assume {:verifier.code 0} true;
  $i96 := $and.i32($i95,1073741823);
  $i96.shadow := $and.i32($i95.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 592, 2} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0,$mul.ref(6,4));
  $p97.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 592, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p97 == $p97.shadow));
  $i98 := $load.i32($M.3,$p97);
  $i98.shadow := $load.i32($M.3.shadow,$p97.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 592, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $sub.i32($i98,$i96);
  $i99.shadow := $sub.i32($i98.shadow,$i96.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 592, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p97 == $p97.shadow));
  $M.3 := $store.i32($M.3,$p97,$i99);
  $M.3.shadow := $store.i32($M.3.shadow,$p97.shadow,$i99.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 593, 10} true;
  assume {:verifier.code 0} true;
  $i100 := $ashr.i32($i90,18);
  $i100.shadow := $ashr.i32($i90.shadow,18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 593, 2} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p0,$mul.ref(7,4));
  $p101.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 593, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p101 == $p101.shadow));
  $i102 := $load.i32($M.3,$p101);
  $i102.shadow := $load.i32($M.3.shadow,$p101.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 593, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $sub.i32($i102,$i100);
  $i103.shadow := $sub.i32($i102.shadow,$i100.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 593, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p101 == $p101.shadow));
  $M.3 := $store.i32($M.3,$p101,$i103);
  $M.3.shadow := $store.i32($M.3.shadow,$p101.shadow,$i103.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 594, 13} true;
  assume {:verifier.code 0} true;
  $i104 := $shl.i32($i90,14);
  $i104.shadow := $shl.i32($i90.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 594, 20} true;
  assume {:verifier.code 0} true;
  $i105 := $and.i32($i104,1073741823);
  $i105.shadow := $and.i32($i104.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 594, 2} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0,$mul.ref(7,4));
  $p106.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p106 == $p106.shadow));
  $i107 := $load.i32($M.3,$p106);
  $i107.shadow := $load.i32($M.3.shadow,$p106.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i32($i107,$i105);
  $i108.shadow := $add.i32($i107.shadow,$i105.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p106 == $p106.shadow));
  $M.3 := $store.i32($M.3,$p106,$i108);
  $M.3.shadow := $store.i32($M.3.shadow,$p106.shadow,$i108.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 595, 10} true;
  assume {:verifier.code 0} true;
  $i109 := $ashr.i32($i90,16);
  $i109.shadow := $ashr.i32($i90.shadow,16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 595, 2} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0,$mul.ref(8,4));
  $p110.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 595, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p110 == $p110.shadow));
  $i111 := $load.i32($M.3,$p110);
  $i111.shadow := $load.i32($M.3.shadow,$p110.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 595, 7} true;
  assume {:verifier.code 0} true;
  $i112 := $add.i32($i111,$i109);
  $i112.shadow := $add.i32($i111.shadow,$i109.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 595, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p110 == $p110.shadow));
  $M.3 := $store.i32($M.3,$p110,$i112);
  $M.3.shadow := $store.i32($M.3.shadow,$p110.shadow,$i112.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 596, 8} true;
  assume {:verifier.code 0} true;
  $i113 := $lshr.i32($i90,31);
  $i113.shadow := $lshr.i32($i90.shadow,31);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 597, 2} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0,$mul.ref(0,4));
  $p114.shadow := $add.ref($p0.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 597, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p114 == $p114.shadow));
  $i115 := $load.i32($M.3,$p114);
  $i115.shadow := $load.i32($M.3.shadow,$p114.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 597, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $sub.i32($i115,$i113);
  $i116.shadow := $sub.i32($i115.shadow,$i113.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 597, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p114 == $p114.shadow));
  $M.3 := $store.i32($M.3,$p114,$i116);
  $M.3.shadow := $store.i32($M.3.shadow,$p114.shadow,$i116.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 598, 12} true;
  assume {:verifier.code 0} true;
  $i117 := $shl.i32($i113,6);
  $i117.shadow := $shl.i32($i113.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 598, 2} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0,$mul.ref(3,4));
  $p118.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 598, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p118 == $p118.shadow));
  $i119 := $load.i32($M.3,$p118);
  $i119.shadow := $load.i32($M.3.shadow,$p118.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 598, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i117);
  $i120.shadow := $add.i32($i119.shadow,$i117.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 598, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p118 == $p118.shadow));
  $M.3 := $store.i32($M.3,$p118,$i120);
  $M.3.shadow := $store.i32($M.3.shadow,$p118.shadow,$i120.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 599, 12} true;
  assume {:verifier.code 0} true;
  $i121 := $shl.i32($i113,12);
  $i121.shadow := $shl.i32($i113.shadow,12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 599, 2} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p0,$mul.ref(6,4));
  $p122.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 599, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p122 == $p122.shadow));
  $i123 := $load.i32($M.3,$p122);
  $i123.shadow := $load.i32($M.3.shadow,$p122.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 599, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i32($i123,$i121);
  $i124.shadow := $add.i32($i123.shadow,$i121.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 599, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p122 == $p122.shadow));
  $M.3 := $store.i32($M.3,$p122,$i124);
  $M.3.shadow := $store.i32($M.3.shadow,$p122.shadow,$i124.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 600, 12} true;
  assume {:verifier.code 0} true;
  $i125 := $shl.i32($i113,14);
  $i125.shadow := $shl.i32($i113.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 600, 2} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p0,$mul.ref(7,4));
  $p126.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p126 == $p126.shadow));
  $i127 := $load.i32($M.3,$p126);
  $i127.shadow := $load.i32($M.3.shadow,$p126.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $i128 := $sub.i32($i127,$i125);
  $i128.shadow := $sub.i32($i127.shadow,$i125.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p126 == $p126.shadow));
  $M.3 := $store.i32($M.3,$p126,$i128);
  $M.3.shadow := $store.i32($M.3.shadow,$p126.shadow,$i128.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 601, 12} true;
  assume {:verifier.code 0} true;
  $i129 := $shl.i32($i113,16);
  $i129.shadow := $shl.i32($i113.shadow,16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 601, 2} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0,$mul.ref(8,4));
  $p130.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 601, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p130 == $p130.shadow));
  $i131 := $load.i32($M.3,$p130);
  $i131.shadow := $load.i32($M.3.shadow,$p130.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 601, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i131,$i129);
  $i132.shadow := $add.i32($i131.shadow,$i129.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 601, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p130 == $p130.shadow));
  $M.3 := $store.i32($M.3,$p130,$i132);
  $M.3.shadow := $store.i32($M.3.shadow,$p130.shadow,$i132.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 602, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $i90;
  $i133.shadow := $i90.shadow;
  $i134 := 0;
  $i134.shadow := 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 561, 23} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i32($i74,1);
  $i85.shadow := $add.i32($i74.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i85);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 561, 2} true;
  assume {:verifier.code 0} true;
  $i72 := $i79;
  $i72.shadow := $i79.shadow;
  $i73 := $i84;
  $i73.shadow := $i84.shadow;
  $i74 := $i85;
  $i74.shadow := $i85.shadow;
  goto $bb9;
$bb13:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i134 == $i134.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 602, 16} true;
  assume {:verifier.code 0} true;
  $i135 := $slt.i32($i134,9);
  $i135.shadow := $slt.i32($i134.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 602, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  $shadow_ok := ($shadow_ok && ($i135 == $i135.shadow));
  goto $bb14, $bb15;
$bb14:
  assume ($i135 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i32.i64($i134);
  $i136.shadow := $sext.i32.i64($i134.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p0,$mul.ref($i136,4));
  $p137.shadow := $add.ref($p0.shadow,$mul.ref($i136.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p137 == $p137.shadow));
  $i138 := $load.i32($M.3,$p137);
  $i138.shadow := $load.i32($M.3.shadow,$p137.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 605, 12} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i32($i138,$i133);
  $i139.shadow := $add.i32($i138.shadow,$i133.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i139);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 606, 12} true;
  assume {:verifier.code 0} true;
  $i140 := $and.i32($i139,1073741823);
  $i140.shadow := $and.i32($i139.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $i141 := $sext.i32.i64($i134);
  $i141.shadow := $sext.i32.i64($i134.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 606, 3} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0,$mul.ref($i141,4));
  $p142.shadow := $add.ref($p0.shadow,$mul.ref($i141.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 606, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p142 == $p142.shadow));
  $M.3 := $store.i32($M.3,$p142,$i140);
  $M.3.shadow := $store.i32($M.3.shadow,$p142.shadow,$i140.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i143 := $ashr.i32($i139,30);
  $i143.shadow := $ashr.i32($i139.shadow,30);
  call {:cexpr "z"} boogie_si_record_i32($i143);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 608, 2} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !($i135 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 609, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb16:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 602, 23} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i134,1);
  $i144.shadow := $add.i32($i134.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i144);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 602, 2} true;
  assume {:verifier.code 0} true;
  $i133 := $i143;
  $i133.shadow := $i143.shadow;
  $i134 := $i144;
  $i134.shadow := $i144.shadow;
  goto $bb13;
}
const mul_f256: ref;
axiom (mul_f256 == $sub.ref(0,30153));
procedure {:inline 1} mul_f256($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $p2: ref, $p2.shadow: ref)
modifies $M.10, $M.3, $exn;
modifies $M.11, $M.9;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $i6: i32;
  var $i6.shadow: i32;
  var $i7: i1;
  var $i7.shadow: i1;
  var $i8: i64;
  var $i8.shadow: i64;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i32;
  var $i10.shadow: i32;
  var $i11: i64;
  var $i11.shadow: i64;
  var $i12: i64;
  var $i12.shadow: i64;
  var $p13: ref;
  var $p13.shadow: ref;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i1;
  var $i16.shadow: i1;
  var $i17: i64;
  var $i17.shadow: i64;
  var $p18: ref;
  var $p18.shadow: ref;
  var $i19: i64;
  var $i19.shadow: i64;
  var $i20: i64;
  var $i20.shadow: i64;
  var $i21: i32;
  var $i21.shadow: i32;
  var $i22: i64;
  var $i22.shadow: i64;
  var $p23: ref;
  var $p23.shadow: ref;
  var $i24: i64;
  var $i24.shadow: i64;
  var $i25: i64;
  var $i25.shadow: i64;
  var $i26: i64;
  var $i26.shadow: i64;
  var $i27: i64;
  var $i27.shadow: i64;
  var $i28: i32;
  var $i28.shadow: i32;
  var $i29: i64;
  var $i29.shadow: i64;
  var $p30: ref;
  var $p30.shadow: ref;
  var $i31: i64;
  var $i31.shadow: i64;
  var $i32: i64;
  var $i32.shadow: i64;
  var $i33: i64;
  var $i33.shadow: i64;
  var $i34: i32;
  var $i34.shadow: i32;
  var $i35: i64;
  var $i35.shadow: i64;
  var $p36: ref;
  var $p36.shadow: ref;
  var $i37: i64;
  var $i37.shadow: i64;
  var $i38: i64;
  var $i38.shadow: i64;
  var $i39: i64;
  var $i39.shadow: i64;
  var $i40: i64;
  var $i40.shadow: i64;
  var $i41: i32;
  var $i41.shadow: i32;
  var $i42: i64;
  var $i42.shadow: i64;
  var $p43: ref;
  var $p43.shadow: ref;
  var $i44: i64;
  var $i44.shadow: i64;
  var $i45: i64;
  var $i45.shadow: i64;
  var $i46: i64;
  var $i46.shadow: i64;
  var $i47: i32;
  var $i47.shadow: i32;
  var $i48: i64;
  var $i48.shadow: i64;
  var $p49: ref;
  var $p49.shadow: ref;
  var $i50: i64;
  var $i50.shadow: i64;
  var $i51: i64;
  var $i51.shadow: i64;
  var $i52: i64;
  var $i52.shadow: i64;
  var $i53: i64;
  var $i53.shadow: i64;
  var $i54: i32;
  var $i54.shadow: i32;
  var $i55: i64;
  var $i55.shadow: i64;
  var $p56: ref;
  var $p56.shadow: ref;
  var $i57: i64;
  var $i57.shadow: i64;
  var $i58: i64;
  var $i58.shadow: i64;
  var $i59: i64;
  var $i59.shadow: i64;
  var $i60: i32;
  var $i60.shadow: i32;
  var $i61: i64;
  var $i61.shadow: i64;
  var $p62: ref;
  var $p62.shadow: ref;
  var $i63: i64;
  var $i63.shadow: i64;
  var $i64: i64;
  var $i64.shadow: i64;
  var $i65: i64;
  var $i65.shadow: i64;
  var $i66: i64;
  var $i66.shadow: i64;
  var $i67: i32;
  var $i67.shadow: i32;
  var $i68: i64;
  var $i68.shadow: i64;
  var $p69: ref;
  var $p69.shadow: ref;
  var $i70: i64;
  var $i70.shadow: i64;
  var $i71: i64;
  var $i71.shadow: i64;
  var $i72: i32;
  var $i72.shadow: i32;
  var $i73: i64;
  var $i73.shadow: i64;
  var $i74: i64;
  var $i74.shadow: i64;
  var $i75: i32;
  var $i75.shadow: i32;
  var $i76: i1;
  var $i76.shadow: i1;
  var $i77: i64;
  var $i77.shadow: i64;
  var $p78: ref;
  var $p78.shadow: ref;
  var $i79: i64;
  var $i79.shadow: i64;
  var $i80: i64;
  var $i80.shadow: i64;
  var $i81: i32;
  var $i81.shadow: i32;
  var $i82: i32;
  var $i82.shadow: i32;
  var $i83: i64;
  var $i83.shadow: i64;
  var $p84: ref;
  var $p84.shadow: ref;
  var $i85: i64;
  var $i85.shadow: i64;
  var $i86: i32;
  var $i86.shadow: i32;
  var $i87: i64;
  var $i87.shadow: i64;
  var $p88: ref;
  var $p88.shadow: ref;
  var $i89: i32;
  var $i89.shadow: i32;
  var $i90: i32;
  var $i90.shadow: i32;
  var $i91: i32;
  var $i91.shadow: i32;
  var $i92: i32;
  var $i92.shadow: i32;
  var $p93: ref;
  var $p93.shadow: ref;
  var $i94: i32;
  var $i94.shadow: i32;
  var $i95: i32;
  var $i95.shadow: i32;
  var $i96: i32;
  var $i96.shadow: i32;
  var $i97: i32;
  var $i97.shadow: i32;
  var $p98: ref;
  var $p98.shadow: ref;
  var $i99: i32;
  var $i99.shadow: i32;
  var $i100: i32;
  var $i100.shadow: i32;
  var $i101: i32;
  var $i101.shadow: i32;
  var $p102: ref;
  var $p102.shadow: ref;
  var $i103: i32;
  var $i103.shadow: i32;
  var $i104: i32;
  var $i104.shadow: i32;
  var $i105: i32;
  var $i105.shadow: i32;
  var $i106: i32;
  var $i106.shadow: i32;
  var $p107: ref;
  var $p107.shadow: ref;
  var $i108: i32;
  var $i108.shadow: i32;
  var $i109: i32;
  var $i109.shadow: i32;
  var $i110: i32;
  var $i110.shadow: i32;
  var $p111: ref;
  var $p111.shadow: ref;
  var $i112: i32;
  var $i112.shadow: i32;
  var $i113: i32;
  var $i113.shadow: i32;
  var $i114: i32;
  var $i114.shadow: i32;
  var $p115: ref;
  var $p115.shadow: ref;
  var $i116: i32;
  var $i116.shadow: i32;
  var $i117: i32;
  var $i117.shadow: i32;
  var $i118: i32;
  var $i118.shadow: i32;
  var $p119: ref;
  var $p119.shadow: ref;
  var $i120: i32;
  var $i120.shadow: i32;
  var $i121: i32;
  var $i121.shadow: i32;
  var $i122: i32;
  var $i122.shadow: i32;
  var $p123: ref;
  var $p123.shadow: ref;
  var $i124: i32;
  var $i124.shadow: i32;
  var $i125: i32;
  var $i125.shadow: i32;
  var $i126: i32;
  var $i126.shadow: i32;
  var $p127: ref;
  var $p127.shadow: ref;
  var $i128: i32;
  var $i128.shadow: i32;
  var $i129: i32;
  var $i129.shadow: i32;
  var $i130: i32;
  var $i130.shadow: i32;
  var $p131: ref;
  var $p131.shadow: ref;
  var $i132: i32;
  var $i132.shadow: i32;
  var $i133: i32;
  var $i133.shadow: i32;
  var $i134: i32;
  var $i134.shadow: i32;
  var $i135: i32;
  var $i135.shadow: i32;
  var $i136: i1;
  var $i136.shadow: i1;
  var $i137: i64;
  var $i137.shadow: i64;
  var $p138: ref;
  var $p138.shadow: ref;
  var $i139: i32;
  var $i139.shadow: i32;
  var $i140: i32;
  var $i140.shadow: i32;
  var $i141: i32;
  var $i141.shadow: i32;
  var $i142: i64;
  var $i142.shadow: i64;
  var $p143: ref;
  var $p143.shadow: ref;
  var $i144: i32;
  var $i144.shadow: i32;
  var $i145: i32;
  var $i145.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 400, 7} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(72,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(144,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 400, 7} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p3,$mul.ref(0,72)),$mul.ref(0,4));
  $p5.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,72)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 400, 2} true;
  assume {:verifier.code 0} true;
  call mul9($p5, $p5.shadow, $p1, $p1.shadow, $p2, $p2.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 421, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  $i6.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assert {:shadow_invariant} ($i6 == $i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 421, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,18);
  $i7.shadow := $slt.i32($i6.shadow,18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 421, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  $shadow_ok := ($shadow_ok && ($i7 == $i7.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i7 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i6);
  $i8.shadow := $sext.i32.i64($i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p3,$mul.ref(0,72)),$mul.ref($i8,4));
  $p9.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,72)),$mul.ref($i8.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p9 == $p9.shadow));
  $i10 := $load.i32($M.9,$p9);
  $i10.shadow := $load.i32($M.9.shadow,$p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i32.i64($i10);
  $i11.shadow := $zext.i32.i64($i10.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i6);
  $i12.shadow := $sext.i32.i64($i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i12,8));
  $p13.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i12.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 422, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p13 == $p13.shadow));
  $M.10 := $store.i64($M.10,$p13,$i11);
  $M.10.shadow := $store.i64($M.10.shadow,$p13.shadow,$i11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 423, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i7 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 425, 7} true;
  assume {:verifier.code 0} true;
  $i15 := 17;
  $i15.shadow := 17;
  goto $bb5;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 421, 24} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i6,1);
  $i14.shadow := $add.i32($i6.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 421, 2} true;
  assume {:verifier.code 0} true;
  $i6 := $i14;
  $i6.shadow := $i14.shadow;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i15 == $i15.shadow);
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 425, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $sge.i32($i15,9);
  $i16.shadow := $sge.i32($i15.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 425, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  $shadow_ok := ($shadow_ok && ($i16 == $i16.shadow));
  goto $bb6, $bb7;
$bb6:
  assume ($i16 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 428, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i15);
  $i17.shadow := $sext.i32.i64($i15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 428, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i17,8));
  $p18.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i17.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 428, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p18 == $p18.shadow));
  $i19 := $load.i64($M.10,$p18);
  $i19.shadow := $load.i64($M.10.shadow,$p18.shadow);
  call {:cexpr "y"} boogie_si_record_i64($i19);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ashr.i64($i19,2);
  $i20.shadow := $ashr.i64($i19.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32($i15,1);
  $i21.shadow := $sub.i32($i15.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  $i22.shadow := $sext.i32.i64($i21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i22,8));
  $p23.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i22.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23 == $p23.shadow));
  $i24 := $load.i64($M.10,$p23);
  $i24.shadow := $load.i64($M.10.shadow,$p23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24,$i20);
  $i25.shadow := $add.i64($i24.shadow,$i20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 429, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23 == $p23.shadow));
  $M.10 := $store.i64($M.10,$p23,$i25);
  $M.10.shadow := $store.i64($M.10.shadow,$p23.shadow,$i25.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 18} true;
  assume {:verifier.code 0} true;
  $i26 := $shl.i64($i19,28);
  $i26.shadow := $shl.i64($i19.shadow,28);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i64($i26,1073741823);
  $i27.shadow := $and.i64($i26.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32($i15,2);
  $i28.shadow := $sub.i32($i15.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  $i29.shadow := $sext.i32.i64($i28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 3} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i29,8));
  $p30.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i29.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p30 == $p30.shadow));
  $i31 := $load.i64($M.10,$p30);
  $i31.shadow := $load.i64($M.10.shadow,$p30.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 12} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31,$i27);
  $i32.shadow := $add.i64($i31.shadow,$i27.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 430, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p30 == $p30.shadow));
  $M.10 := $store.i64($M.10,$p30,$i32);
  $M.10.shadow := $store.i64($M.10.shadow,$p30.shadow,$i32.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $ashr.i64($i19,4);
  $i33.shadow := $ashr.i64($i19.shadow,4);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32($i15,2);
  $i34.shadow := $sub.i32($i15.shadow,2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i34);
  $i35.shadow := $sext.i32.i64($i34.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 3} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i35,8));
  $p36.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i35.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36 == $p36.shadow));
  $i37 := $load.i64($M.10,$p36);
  $i37.shadow := $load.i64($M.10.shadow,$p36.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 12} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i64($i37,$i33);
  $i38.shadow := $sub.i64($i37.shadow,$i33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 431, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36 == $p36.shadow));
  $M.10 := $store.i64($M.10,$p36,$i38);
  $M.10.shadow := $store.i64($M.10.shadow,$p36.shadow,$i38.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 18} true;
  assume {:verifier.code 0} true;
  $i39 := $shl.i64($i19,26);
  $i39.shadow := $shl.i64($i19.shadow,26);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 25} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i64($i39,1073741823);
  $i40.shadow := $and.i64($i39.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $sub.i32($i15,3);
  $i41.shadow := $sub.i32($i15.shadow,3);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i41);
  $i42.shadow := $sext.i32.i64($i41.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 3} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i42,8));
  $p43.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i42.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p43 == $p43.shadow));
  $i44 := $load.i64($M.10,$p43);
  $i44.shadow := $load.i64($M.10.shadow,$p43.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 12} true;
  assume {:verifier.code 0} true;
  $i45 := $sub.i64($i44,$i40);
  $i45.shadow := $sub.i64($i44.shadow,$i40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 432, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p43 == $p43.shadow));
  $M.10 := $store.i64($M.10,$p43,$i45);
  $M.10.shadow := $store.i64($M.10.shadow,$p43.shadow,$i45.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 15} true;
  assume {:verifier.code 0} true;
  $i46 := $ashr.i64($i19,10);
  $i46.shadow := $ashr.i64($i19.shadow,10);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $sub.i32($i15,5);
  $i47.shadow := $sub.i32($i15.shadow,5);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i32.i64($i47);
  $i48.shadow := $sext.i32.i64($i47.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 3} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i48,8));
  $p49.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i48.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49 == $p49.shadow));
  $i50 := $load.i64($M.10,$p49);
  $i50.shadow := $load.i64($M.10.shadow,$p49.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 12} true;
  assume {:verifier.code 0} true;
  $i51 := $sub.i64($i50,$i46);
  $i51.shadow := $sub.i64($i50.shadow,$i46.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 433, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p49 == $p49.shadow));
  $M.10 := $store.i64($M.10,$p49,$i51);
  $M.10.shadow := $store.i64($M.10.shadow,$p49.shadow,$i51.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 18} true;
  assume {:verifier.code 0} true;
  $i52 := $shl.i64($i19,20);
  $i52.shadow := $shl.i64($i19.shadow,20);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 25} true;
  assume {:verifier.code 0} true;
  $i53 := $and.i64($i52,1073741823);
  $i53.shadow := $and.i64($i52.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $sub.i32($i15,6);
  $i54.shadow := $sub.i32($i15.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  $i55.shadow := $sext.i32.i64($i54.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 3} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i55,8));
  $p56.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i55.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p56 == $p56.shadow));
  $i57 := $load.i64($M.10,$p56);
  $i57.shadow := $load.i64($M.10.shadow,$p56.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 12} true;
  assume {:verifier.code 0} true;
  $i58 := $sub.i64($i57,$i53);
  $i58.shadow := $sub.i64($i57.shadow,$i53.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 434, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p56 == $p56.shadow));
  $M.10 := $store.i64($M.10,$p56,$i58);
  $M.10.shadow := $store.i64($M.10.shadow,$p56.shadow,$i58.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 15} true;
  assume {:verifier.code 0} true;
  $i59 := $ashr.i64($i19,16);
  $i59.shadow := $ashr.i64($i19.shadow,16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $sub.i32($i15,8);
  $i60.shadow := $sub.i32($i15.shadow,8);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i32.i64($i60);
  $i61.shadow := $sext.i32.i64($i60.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 3} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i61,8));
  $p62.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i61.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p62 == $p62.shadow));
  $i63 := $load.i64($M.10,$p62);
  $i63.shadow := $load.i64($M.10.shadow,$p62.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 12} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63,$i59);
  $i64.shadow := $add.i64($i63.shadow,$i59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 435, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p62 == $p62.shadow));
  $M.10 := $store.i64($M.10,$p62,$i64);
  $M.10.shadow := $store.i64($M.10.shadow,$p62.shadow,$i64.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 18} true;
  assume {:verifier.code 0} true;
  $i65 := $shl.i64($i19,14);
  $i65.shadow := $shl.i64($i19.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 25} true;
  assume {:verifier.code 0} true;
  $i66 := $and.i64($i65,1073741823);
  $i66.shadow := $and.i64($i65.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 7} true;
  assume {:verifier.code 0} true;
  $i67 := $sub.i32($i15,9);
  $i67.shadow := $sub.i32($i15.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i67);
  $i68.shadow := $sext.i32.i64($i67.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 3} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i68,8));
  $p69.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i68.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p69 == $p69.shadow));
  $i70 := $load.i64($M.10,$p69);
  $i70.shadow := $load.i64($M.10.shadow,$p69.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 12} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i64($i70,$i66);
  $i71.shadow := $add.i64($i70.shadow,$i66.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 436, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p69 == $p69.shadow));
  $M.10 := $store.i64($M.10,$p69,$i71);
  $M.10.shadow := $store.i64($M.10.shadow,$p69.shadow,$i71.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 437, 2} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i16 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 449, 7} true;
  assume {:verifier.code 0} true;
  $i73 := 0;
  $i73.shadow := 0;
  $i74 := $u0;
  $i74.shadow := $u0;
  $i75 := 0;
  $i75.shadow := 0;
  goto $bb9;
$bb8:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 425, 25} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i15,$sub.i32(0,1));
  $i72.shadow := $add.i32($i15.shadow,$sub.i32(0,1));
  call {:cexpr "i"} boogie_si_record_i32($i72);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 425, 2} true;
  assume {:verifier.code 0} true;
  $i15 := $i72;
  $i15.shadow := $i72.shadow;
  goto $bb5;
$bb9:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i75 == $i75.shadow);
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 449, 16} true;
  assume {:verifier.code 0} true;
  $i76 := $slt.i32($i75,9);
  $i76.shadow := $slt.i32($i75.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 449, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  $shadow_ok := ($shadow_ok && ($i76 == $i76.shadow));
  goto $bb10, $bb11;
$bb10:
  assume ($i76 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 450, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i32.i64($i75);
  $i77.shadow := $sext.i32.i64($i75.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 450, 7} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p4,$mul.ref(0,144)),$mul.ref($i77,8));
  $p78.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,144)),$mul.ref($i77.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 450, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p78 == $p78.shadow));
  $i79 := $load.i64($M.10,$p78);
  $i79.shadow := $load.i64($M.10.shadow,$p78.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 450, 12} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79,$i73);
  $i80.shadow := $add.i64($i79.shadow,$i73.shadow);
  call {:cexpr "x"} boogie_si_record_i64($i80);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 451, 10} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i64.i32($i80);
  $i81.shadow := $trunc.i64.i32($i80.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 451, 22} true;
  assume {:verifier.code 0} true;
  $i82 := $and.i32($i81,1073741823);
  $i82.shadow := $and.i32($i81.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 451, 3} true;
  assume {:verifier.code 0} true;
  $i83 := $sext.i32.i64($i75);
  $i83.shadow := $sext.i32.i64($i75.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 451, 3} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0,$mul.ref($i83,4));
  $p84.shadow := $add.ref($p0.shadow,$mul.ref($i83.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 451, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p84 == $p84.shadow));
  $M.3 := $store.i32($M.3,$p84,$i82);
  $M.3.shadow := $store.i32($M.3.shadow,$p84.shadow,$i82.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 452, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $ashr.i64($i80,30);
  $i85.shadow := $ashr.i64($i80.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i64($i85);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 453, 2} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !($i76 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $ashr.i64($i74,16);
  $i87.shadow := $ashr.i64($i74.shadow,16);
  call {:cexpr "cc"} boogie_si_record_i64($i87);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 465, 2} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0,$mul.ref(8,4));
  $p88.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 465, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p88 == $p88.shadow));
  $i89 := $load.i32($M.3,$p88);
  $i89.shadow := $load.i32($M.3.shadow,$p88.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 465, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i32($i89,65535);
  $i90.shadow := $and.i32($i89.shadow,65535);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 465, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p88 == $p88.shadow));
  $M.3 := $store.i32($M.3,$p88,$i90);
  $M.3.shadow := $store.i32($M.3.shadow,$p88.shadow,$i90.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 478, 6} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i64.i32($i87);
  $i91.shadow := $trunc.i64.i32($i87.shadow);
  call {:cexpr "z"} boogie_si_record_i32($i91);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 479, 12} true;
  assume {:verifier.code 0} true;
  $i92 := $shl.i32($i91,6);
  $i92.shadow := $shl.i32($i91.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 479, 2} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p0,$mul.ref(3,4));
  $p93.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p93 == $p93.shadow));
  $i94 := $load.i32($M.3,$p93);
  $i94.shadow := $load.i32($M.3.shadow,$p93.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $sub.i32($i94,$i92);
  $i95.shadow := $sub.i32($i94.shadow,$i92.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p93 == $p93.shadow));
  $M.3 := $store.i32($M.3,$p93,$i95);
  $M.3.shadow := $store.i32($M.3.shadow,$p93.shadow,$i95.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 480, 13} true;
  assume {:verifier.code 0} true;
  $i96 := $shl.i32($i91,12);
  $i96.shadow := $shl.i32($i91.shadow,12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 480, 20} true;
  assume {:verifier.code 0} true;
  $i97 := $and.i32($i96,1073741823);
  $i97.shadow := $and.i32($i96.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 480, 2} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p0,$mul.ref(6,4));
  $p98.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 480, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p98 == $p98.shadow));
  $i99 := $load.i32($M.3,$p98);
  $i99.shadow := $load.i32($M.3.shadow,$p98.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 480, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $sub.i32($i99,$i97);
  $i100.shadow := $sub.i32($i99.shadow,$i97.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 480, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p98 == $p98.shadow));
  $M.3 := $store.i32($M.3,$p98,$i100);
  $M.3.shadow := $store.i32($M.3.shadow,$p98.shadow,$i100.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 481, 10} true;
  assume {:verifier.code 0} true;
  $i101 := $ashr.i32($i91,18);
  $i101.shadow := $ashr.i32($i91.shadow,18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 481, 2} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0,$mul.ref(7,4));
  $p102.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 481, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p102 == $p102.shadow));
  $i103 := $load.i32($M.3,$p102);
  $i103.shadow := $load.i32($M.3.shadow,$p102.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 481, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sub.i32($i103,$i101);
  $i104.shadow := $sub.i32($i103.shadow,$i101.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 481, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p102 == $p102.shadow));
  $M.3 := $store.i32($M.3,$p102,$i104);
  $M.3.shadow := $store.i32($M.3.shadow,$p102.shadow,$i104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 482, 13} true;
  assume {:verifier.code 0} true;
  $i105 := $shl.i32($i91,14);
  $i105.shadow := $shl.i32($i91.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 482, 20} true;
  assume {:verifier.code 0} true;
  $i106 := $and.i32($i105,1073741823);
  $i106.shadow := $and.i32($i105.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 482, 2} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0,$mul.ref(7,4));
  $p107.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 482, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p107 == $p107.shadow));
  $i108 := $load.i32($M.3,$p107);
  $i108.shadow := $load.i32($M.3.shadow,$p107.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 482, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i106);
  $i109.shadow := $add.i32($i108.shadow,$i106.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 482, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p107 == $p107.shadow));
  $M.3 := $store.i32($M.3,$p107,$i109);
  $M.3.shadow := $store.i32($M.3.shadow,$p107.shadow,$i109.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 483, 10} true;
  assume {:verifier.code 0} true;
  $i110 := $ashr.i32($i91,16);
  $i110.shadow := $ashr.i32($i91.shadow,16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 483, 2} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p0,$mul.ref(8,4));
  $p111.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 483, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p111 == $p111.shadow));
  $i112 := $load.i32($M.3,$p111);
  $i112.shadow := $load.i32($M.3.shadow,$p111.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 483, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i112,$i110);
  $i113.shadow := $add.i32($i112.shadow,$i110.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 483, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p111 == $p111.shadow));
  $M.3 := $store.i32($M.3,$p111,$i113);
  $M.3.shadow := $store.i32($M.3.shadow,$p111.shadow,$i113.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 484, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $lshr.i32($i91,31);
  $i114.shadow := $lshr.i32($i91.shadow,31);
  call {:cexpr "c"} boogie_si_record_i32($i114);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 485, 2} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0,$mul.ref(0,4));
  $p115.shadow := $add.ref($p0.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 485, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p115 == $p115.shadow));
  $i116 := $load.i32($M.3,$p115);
  $i116.shadow := $load.i32($M.3.shadow,$p115.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 485, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $sub.i32($i116,$i114);
  $i117.shadow := $sub.i32($i116.shadow,$i114.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 485, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p115 == $p115.shadow));
  $M.3 := $store.i32($M.3,$p115,$i117);
  $M.3.shadow := $store.i32($M.3.shadow,$p115.shadow,$i117.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 486, 12} true;
  assume {:verifier.code 0} true;
  $i118 := $shl.i32($i114,6);
  $i118.shadow := $shl.i32($i114.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 486, 2} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p0,$mul.ref(3,4));
  $p119.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p119 == $p119.shadow));
  $i120 := $load.i32($M.3,$p119);
  $i120.shadow := $load.i32($M.3.shadow,$p119.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i120,$i118);
  $i121.shadow := $add.i32($i120.shadow,$i118.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p119 == $p119.shadow));
  $M.3 := $store.i32($M.3,$p119,$i121);
  $M.3.shadow := $store.i32($M.3.shadow,$p119.shadow,$i121.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 487, 12} true;
  assume {:verifier.code 0} true;
  $i122 := $shl.i32($i114,12);
  $i122.shadow := $shl.i32($i114.shadow,12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 487, 2} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0,$mul.ref(6,4));
  $p123.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 487, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p123 == $p123.shadow));
  $i124 := $load.i32($M.3,$p123);
  $i124.shadow := $load.i32($M.3.shadow,$p123.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 487, 7} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i124,$i122);
  $i125.shadow := $add.i32($i124.shadow,$i122.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 487, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p123 == $p123.shadow));
  $M.3 := $store.i32($M.3,$p123,$i125);
  $M.3.shadow := $store.i32($M.3.shadow,$p123.shadow,$i125.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 488, 12} true;
  assume {:verifier.code 0} true;
  $i126 := $shl.i32($i114,14);
  $i126.shadow := $shl.i32($i114.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 488, 2} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p0,$mul.ref(7,4));
  $p127.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 488, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p127 == $p127.shadow));
  $i128 := $load.i32($M.3,$p127);
  $i128.shadow := $load.i32($M.3.shadow,$p127.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 488, 7} true;
  assume {:verifier.code 0} true;
  $i129 := $sub.i32($i128,$i126);
  $i129.shadow := $sub.i32($i128.shadow,$i126.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 488, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p127 == $p127.shadow));
  $M.3 := $store.i32($M.3,$p127,$i129);
  $M.3.shadow := $store.i32($M.3.shadow,$p127.shadow,$i129.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 489, 12} true;
  assume {:verifier.code 0} true;
  $i130 := $shl.i32($i114,16);
  $i130.shadow := $shl.i32($i114.shadow,16);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 489, 2} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p0,$mul.ref(8,4));
  $p131.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 489, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p131 == $p131.shadow));
  $i132 := $load.i32($M.3,$p131);
  $i132.shadow := $load.i32($M.3.shadow,$p131.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 489, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i132,$i130);
  $i133.shadow := $add.i32($i132.shadow,$i130.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 489, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p131 == $p131.shadow));
  $M.3 := $store.i32($M.3,$p131,$i133);
  $M.3.shadow := $store.i32($M.3.shadow,$p131.shadow,$i133.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 490, 7} true;
  assume {:verifier.code 0} true;
  $i134 := $i91;
  $i134.shadow := $i91.shadow;
  $i135 := 0;
  $i135.shadow := 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 449, 23} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i75,1);
  $i86.shadow := $add.i32($i75.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i86);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 449, 2} true;
  assume {:verifier.code 0} true;
  $i73 := $i85;
  $i73.shadow := $i85.shadow;
  $i74 := $i80;
  $i74.shadow := $i80.shadow;
  $i75 := $i86;
  $i75.shadow := $i86.shadow;
  goto $bb9;
$bb13:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i135 == $i135.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 490, 16} true;
  assume {:verifier.code 0} true;
  $i136 := $slt.i32($i135,9);
  $i136.shadow := $slt.i32($i135.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 490, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  $shadow_ok := ($shadow_ok && ($i136 == $i136.shadow));
  goto $bb14, $bb15;
$bb14:
  assume ($i136 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 493, 7} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i32.i64($i135);
  $i137.shadow := $sext.i32.i64($i135.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 493, 7} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0,$mul.ref($i137,4));
  $p138.shadow := $add.ref($p0.shadow,$mul.ref($i137.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 493, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p138 == $p138.shadow));
  $i139 := $load.i32($M.3,$p138);
  $i139.shadow := $load.i32($M.3.shadow,$p138.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 493, 12} true;
  assume {:verifier.code 0} true;
  $i140 := $add.i32($i139,$i134);
  $i140.shadow := $add.i32($i139.shadow,$i134.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i140);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 494, 12} true;
  assume {:verifier.code 0} true;
  $i141 := $and.i32($i140,1073741823);
  $i141.shadow := $and.i32($i140.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 494, 3} true;
  assume {:verifier.code 0} true;
  $i142 := $sext.i32.i64($i135);
  $i142.shadow := $sext.i32.i64($i135.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 494, 3} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p0,$mul.ref($i142,4));
  $p143.shadow := $add.ref($p0.shadow,$mul.ref($i142.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 494, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p143 == $p143.shadow));
  $M.3 := $store.i32($M.3,$p143,$i141);
  $M.3.shadow := $store.i32($M.3.shadow,$p143.shadow,$i141.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i144 := $ashr.i32($i140,30);
  $i144.shadow := $ashr.i32($i140.shadow,30);
  call {:cexpr "z"} boogie_si_record_i32($i144);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 496, 2} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !($i136 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 497, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb16:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 490, 23} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i135,1);
  $i145.shadow := $add.i32($i135.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i145);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 490, 2} true;
  assume {:verifier.code 0} true;
  $i134 := $i144;
  $i134.shadow := $i144.shadow;
  $i135 := $i145;
  $i135.shadow := $i145.shadow;
  goto $bb13;
}
const mul9: ref;
axiom (mul9 == $sub.ref(0,31185));
procedure {:inline 1} mul9($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $p2: ref, $p2.shadow: ref)
modifies $M.11, $M.9, $exn;
modifies $CurrAddr;
{
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $i5: i32;
  var $i5.shadow: i32;
  var $i6: i64;
  var $i6.shadow: i64;
  var $p7: ref;
  var $p7.shadow: ref;
  var $i8: i32;
  var $i8.shadow: i32;
  var $i9: i64;
  var $i9.shadow: i64;
  var $i10: i64;
  var $i10.shadow: i64;
  var $p11: ref;
  var $p11.shadow: ref;
  var $p12: ref;
  var $p12.shadow: ref;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i64;
  var $i14.shadow: i64;
  var $p15: ref;
  var $p15.shadow: ref;
  var $i16: i32;
  var $i16.shadow: i32;
  var $i17: i64;
  var $i17.shadow: i64;
  var $i18: i64;
  var $i18.shadow: i64;
  var $p19: ref;
  var $p19.shadow: ref;
  var $i20: i32;
  var $i20.shadow: i32;
  var $i21: i64;
  var $i21.shadow: i64;
  var $p22: ref;
  var $p22.shadow: ref;
  var $i23: i32;
  var $i23.shadow: i32;
  var $i24: i64;
  var $i24.shadow: i64;
  var $i25: i64;
  var $i25.shadow: i64;
  var $i26: i64;
  var $i26.shadow: i64;
  var $p27: ref;
  var $p27.shadow: ref;
  var $p28: ref;
  var $p28.shadow: ref;
  var $i29: i32;
  var $i29.shadow: i32;
  var $i30: i64;
  var $i30.shadow: i64;
  var $p31: ref;
  var $p31.shadow: ref;
  var $i32: i32;
  var $i32.shadow: i32;
  var $i33: i64;
  var $i33.shadow: i64;
  var $i34: i64;
  var $i34.shadow: i64;
  var $p35: ref;
  var $p35.shadow: ref;
  var $i36: i32;
  var $i36.shadow: i32;
  var $i37: i64;
  var $i37.shadow: i64;
  var $p38: ref;
  var $p38.shadow: ref;
  var $i39: i32;
  var $i39.shadow: i32;
  var $i40: i64;
  var $i40.shadow: i64;
  var $i41: i64;
  var $i41.shadow: i64;
  var $i42: i64;
  var $i42.shadow: i64;
  var $p43: ref;
  var $p43.shadow: ref;
  var $i44: i32;
  var $i44.shadow: i32;
  var $i45: i64;
  var $i45.shadow: i64;
  var $p46: ref;
  var $p46.shadow: ref;
  var $i47: i32;
  var $i47.shadow: i32;
  var $i48: i64;
  var $i48.shadow: i64;
  var $i49: i64;
  var $i49.shadow: i64;
  var $i50: i64;
  var $i50.shadow: i64;
  var $p51: ref;
  var $p51.shadow: ref;
  var $p52: ref;
  var $p52.shadow: ref;
  var $i53: i32;
  var $i53.shadow: i32;
  var $i54: i64;
  var $i54.shadow: i64;
  var $p55: ref;
  var $p55.shadow: ref;
  var $i56: i32;
  var $i56.shadow: i32;
  var $i57: i64;
  var $i57.shadow: i64;
  var $i58: i64;
  var $i58.shadow: i64;
  var $p59: ref;
  var $p59.shadow: ref;
  var $i60: i32;
  var $i60.shadow: i32;
  var $i61: i64;
  var $i61.shadow: i64;
  var $p62: ref;
  var $p62.shadow: ref;
  var $i63: i32;
  var $i63.shadow: i32;
  var $i64: i64;
  var $i64.shadow: i64;
  var $i65: i64;
  var $i65.shadow: i64;
  var $i66: i64;
  var $i66.shadow: i64;
  var $p67: ref;
  var $p67.shadow: ref;
  var $i68: i32;
  var $i68.shadow: i32;
  var $i69: i64;
  var $i69.shadow: i64;
  var $p70: ref;
  var $p70.shadow: ref;
  var $i71: i32;
  var $i71.shadow: i32;
  var $i72: i64;
  var $i72.shadow: i64;
  var $i73: i64;
  var $i73.shadow: i64;
  var $i74: i64;
  var $i74.shadow: i64;
  var $p75: ref;
  var $p75.shadow: ref;
  var $i76: i32;
  var $i76.shadow: i32;
  var $i77: i64;
  var $i77.shadow: i64;
  var $p78: ref;
  var $p78.shadow: ref;
  var $i79: i32;
  var $i79.shadow: i32;
  var $i80: i64;
  var $i80.shadow: i64;
  var $i81: i64;
  var $i81.shadow: i64;
  var $i82: i64;
  var $i82.shadow: i64;
  var $p83: ref;
  var $p83.shadow: ref;
  var $p84: ref;
  var $p84.shadow: ref;
  var $i85: i32;
  var $i85.shadow: i32;
  var $i86: i64;
  var $i86.shadow: i64;
  var $p87: ref;
  var $p87.shadow: ref;
  var $i88: i32;
  var $i88.shadow: i32;
  var $i89: i64;
  var $i89.shadow: i64;
  var $i90: i64;
  var $i90.shadow: i64;
  var $p91: ref;
  var $p91.shadow: ref;
  var $i92: i32;
  var $i92.shadow: i32;
  var $i93: i64;
  var $i93.shadow: i64;
  var $p94: ref;
  var $p94.shadow: ref;
  var $i95: i32;
  var $i95.shadow: i32;
  var $i96: i64;
  var $i96.shadow: i64;
  var $i97: i64;
  var $i97.shadow: i64;
  var $i98: i64;
  var $i98.shadow: i64;
  var $p99: ref;
  var $p99.shadow: ref;
  var $i100: i32;
  var $i100.shadow: i32;
  var $i101: i64;
  var $i101.shadow: i64;
  var $p102: ref;
  var $p102.shadow: ref;
  var $i103: i32;
  var $i103.shadow: i32;
  var $i104: i64;
  var $i104.shadow: i64;
  var $i105: i64;
  var $i105.shadow: i64;
  var $i106: i64;
  var $i106.shadow: i64;
  var $p107: ref;
  var $p107.shadow: ref;
  var $i108: i32;
  var $i108.shadow: i32;
  var $i109: i64;
  var $i109.shadow: i64;
  var $p110: ref;
  var $p110.shadow: ref;
  var $i111: i32;
  var $i111.shadow: i32;
  var $i112: i64;
  var $i112.shadow: i64;
  var $i113: i64;
  var $i113.shadow: i64;
  var $i114: i64;
  var $i114.shadow: i64;
  var $p115: ref;
  var $p115.shadow: ref;
  var $i116: i32;
  var $i116.shadow: i32;
  var $i117: i64;
  var $i117.shadow: i64;
  var $p118: ref;
  var $p118.shadow: ref;
  var $i119: i32;
  var $i119.shadow: i32;
  var $i120: i64;
  var $i120.shadow: i64;
  var $i121: i64;
  var $i121.shadow: i64;
  var $i122: i64;
  var $i122.shadow: i64;
  var $p123: ref;
  var $p123.shadow: ref;
  var $p124: ref;
  var $p124.shadow: ref;
  var $i125: i32;
  var $i125.shadow: i32;
  var $i126: i64;
  var $i126.shadow: i64;
  var $p127: ref;
  var $p127.shadow: ref;
  var $i128: i32;
  var $i128.shadow: i32;
  var $i129: i64;
  var $i129.shadow: i64;
  var $i130: i64;
  var $i130.shadow: i64;
  var $p131: ref;
  var $p131.shadow: ref;
  var $i132: i32;
  var $i132.shadow: i32;
  var $i133: i64;
  var $i133.shadow: i64;
  var $p134: ref;
  var $p134.shadow: ref;
  var $i135: i32;
  var $i135.shadow: i32;
  var $i136: i64;
  var $i136.shadow: i64;
  var $i137: i64;
  var $i137.shadow: i64;
  var $i138: i64;
  var $i138.shadow: i64;
  var $p139: ref;
  var $p139.shadow: ref;
  var $i140: i32;
  var $i140.shadow: i32;
  var $i141: i64;
  var $i141.shadow: i64;
  var $p142: ref;
  var $p142.shadow: ref;
  var $i143: i32;
  var $i143.shadow: i32;
  var $i144: i64;
  var $i144.shadow: i64;
  var $i145: i64;
  var $i145.shadow: i64;
  var $i146: i64;
  var $i146.shadow: i64;
  var $p147: ref;
  var $p147.shadow: ref;
  var $i148: i32;
  var $i148.shadow: i32;
  var $i149: i64;
  var $i149.shadow: i64;
  var $p150: ref;
  var $p150.shadow: ref;
  var $i151: i32;
  var $i151.shadow: i32;
  var $i152: i64;
  var $i152.shadow: i64;
  var $i153: i64;
  var $i153.shadow: i64;
  var $i154: i64;
  var $i154.shadow: i64;
  var $p155: ref;
  var $p155.shadow: ref;
  var $i156: i32;
  var $i156.shadow: i32;
  var $i157: i64;
  var $i157.shadow: i64;
  var $p158: ref;
  var $p158.shadow: ref;
  var $i159: i32;
  var $i159.shadow: i32;
  var $i160: i64;
  var $i160.shadow: i64;
  var $i161: i64;
  var $i161.shadow: i64;
  var $i162: i64;
  var $i162.shadow: i64;
  var $p163: ref;
  var $p163.shadow: ref;
  var $i164: i32;
  var $i164.shadow: i32;
  var $i165: i64;
  var $i165.shadow: i64;
  var $p166: ref;
  var $p166.shadow: ref;
  var $i167: i32;
  var $i167.shadow: i32;
  var $i168: i64;
  var $i168.shadow: i64;
  var $i169: i64;
  var $i169.shadow: i64;
  var $i170: i64;
  var $i170.shadow: i64;
  var $p171: ref;
  var $p171.shadow: ref;
  var $p172: ref;
  var $p172.shadow: ref;
  var $i173: i32;
  var $i173.shadow: i32;
  var $i174: i64;
  var $i174.shadow: i64;
  var $p175: ref;
  var $p175.shadow: ref;
  var $i176: i32;
  var $i176.shadow: i32;
  var $i177: i64;
  var $i177.shadow: i64;
  var $i178: i64;
  var $i178.shadow: i64;
  var $p179: ref;
  var $p179.shadow: ref;
  var $i180: i32;
  var $i180.shadow: i32;
  var $i181: i64;
  var $i181.shadow: i64;
  var $p182: ref;
  var $p182.shadow: ref;
  var $i183: i32;
  var $i183.shadow: i32;
  var $i184: i64;
  var $i184.shadow: i64;
  var $i185: i64;
  var $i185.shadow: i64;
  var $i186: i64;
  var $i186.shadow: i64;
  var $p187: ref;
  var $p187.shadow: ref;
  var $i188: i32;
  var $i188.shadow: i32;
  var $i189: i64;
  var $i189.shadow: i64;
  var $p190: ref;
  var $p190.shadow: ref;
  var $i191: i32;
  var $i191.shadow: i32;
  var $i192: i64;
  var $i192.shadow: i64;
  var $i193: i64;
  var $i193.shadow: i64;
  var $i194: i64;
  var $i194.shadow: i64;
  var $p195: ref;
  var $p195.shadow: ref;
  var $i196: i32;
  var $i196.shadow: i32;
  var $i197: i64;
  var $i197.shadow: i64;
  var $p198: ref;
  var $p198.shadow: ref;
  var $i199: i32;
  var $i199.shadow: i32;
  var $i200: i64;
  var $i200.shadow: i64;
  var $i201: i64;
  var $i201.shadow: i64;
  var $i202: i64;
  var $i202.shadow: i64;
  var $p203: ref;
  var $p203.shadow: ref;
  var $i204: i32;
  var $i204.shadow: i32;
  var $i205: i64;
  var $i205.shadow: i64;
  var $p206: ref;
  var $p206.shadow: ref;
  var $i207: i32;
  var $i207.shadow: i32;
  var $i208: i64;
  var $i208.shadow: i64;
  var $i209: i64;
  var $i209.shadow: i64;
  var $i210: i64;
  var $i210.shadow: i64;
  var $p211: ref;
  var $p211.shadow: ref;
  var $i212: i32;
  var $i212.shadow: i32;
  var $i213: i64;
  var $i213.shadow: i64;
  var $p214: ref;
  var $p214.shadow: ref;
  var $i215: i32;
  var $i215.shadow: i32;
  var $i216: i64;
  var $i216.shadow: i64;
  var $i217: i64;
  var $i217.shadow: i64;
  var $i218: i64;
  var $i218.shadow: i64;
  var $p219: ref;
  var $p219.shadow: ref;
  var $i220: i32;
  var $i220.shadow: i32;
  var $i221: i64;
  var $i221.shadow: i64;
  var $p222: ref;
  var $p222.shadow: ref;
  var $i223: i32;
  var $i223.shadow: i32;
  var $i224: i64;
  var $i224.shadow: i64;
  var $i225: i64;
  var $i225.shadow: i64;
  var $i226: i64;
  var $i226.shadow: i64;
  var $p227: ref;
  var $p227.shadow: ref;
  var $p228: ref;
  var $p228.shadow: ref;
  var $i229: i32;
  var $i229.shadow: i32;
  var $i230: i64;
  var $i230.shadow: i64;
  var $p231: ref;
  var $p231.shadow: ref;
  var $i232: i32;
  var $i232.shadow: i32;
  var $i233: i64;
  var $i233.shadow: i64;
  var $i234: i64;
  var $i234.shadow: i64;
  var $p235: ref;
  var $p235.shadow: ref;
  var $i236: i32;
  var $i236.shadow: i32;
  var $i237: i64;
  var $i237.shadow: i64;
  var $p238: ref;
  var $p238.shadow: ref;
  var $i239: i32;
  var $i239.shadow: i32;
  var $i240: i64;
  var $i240.shadow: i64;
  var $i241: i64;
  var $i241.shadow: i64;
  var $i242: i64;
  var $i242.shadow: i64;
  var $p243: ref;
  var $p243.shadow: ref;
  var $i244: i32;
  var $i244.shadow: i32;
  var $i245: i64;
  var $i245.shadow: i64;
  var $p246: ref;
  var $p246.shadow: ref;
  var $i247: i32;
  var $i247.shadow: i32;
  var $i248: i64;
  var $i248.shadow: i64;
  var $i249: i64;
  var $i249.shadow: i64;
  var $i250: i64;
  var $i250.shadow: i64;
  var $p251: ref;
  var $p251.shadow: ref;
  var $i252: i32;
  var $i252.shadow: i32;
  var $i253: i64;
  var $i253.shadow: i64;
  var $p254: ref;
  var $p254.shadow: ref;
  var $i255: i32;
  var $i255.shadow: i32;
  var $i256: i64;
  var $i256.shadow: i64;
  var $i257: i64;
  var $i257.shadow: i64;
  var $i258: i64;
  var $i258.shadow: i64;
  var $p259: ref;
  var $p259.shadow: ref;
  var $i260: i32;
  var $i260.shadow: i32;
  var $i261: i64;
  var $i261.shadow: i64;
  var $p262: ref;
  var $p262.shadow: ref;
  var $i263: i32;
  var $i263.shadow: i32;
  var $i264: i64;
  var $i264.shadow: i64;
  var $i265: i64;
  var $i265.shadow: i64;
  var $i266: i64;
  var $i266.shadow: i64;
  var $p267: ref;
  var $p267.shadow: ref;
  var $i268: i32;
  var $i268.shadow: i32;
  var $i269: i64;
  var $i269.shadow: i64;
  var $p270: ref;
  var $p270.shadow: ref;
  var $i271: i32;
  var $i271.shadow: i32;
  var $i272: i64;
  var $i272.shadow: i64;
  var $i273: i64;
  var $i273.shadow: i64;
  var $i274: i64;
  var $i274.shadow: i64;
  var $p275: ref;
  var $p275.shadow: ref;
  var $i276: i32;
  var $i276.shadow: i32;
  var $i277: i64;
  var $i277.shadow: i64;
  var $p278: ref;
  var $p278.shadow: ref;
  var $i279: i32;
  var $i279.shadow: i32;
  var $i280: i64;
  var $i280.shadow: i64;
  var $i281: i64;
  var $i281.shadow: i64;
  var $i282: i64;
  var $i282.shadow: i64;
  var $p283: ref;
  var $p283.shadow: ref;
  var $i284: i32;
  var $i284.shadow: i32;
  var $i285: i64;
  var $i285.shadow: i64;
  var $p286: ref;
  var $p286.shadow: ref;
  var $i287: i32;
  var $i287.shadow: i32;
  var $i288: i64;
  var $i288.shadow: i64;
  var $i289: i64;
  var $i289.shadow: i64;
  var $i290: i64;
  var $i290.shadow: i64;
  var $p291: ref;
  var $p291.shadow: ref;
  var $p292: ref;
  var $p292.shadow: ref;
  var $i293: i32;
  var $i293.shadow: i32;
  var $i294: i64;
  var $i294.shadow: i64;
  var $p295: ref;
  var $p295.shadow: ref;
  var $i296: i32;
  var $i296.shadow: i32;
  var $i297: i64;
  var $i297.shadow: i64;
  var $i298: i64;
  var $i298.shadow: i64;
  var $p299: ref;
  var $p299.shadow: ref;
  var $i300: i32;
  var $i300.shadow: i32;
  var $i301: i64;
  var $i301.shadow: i64;
  var $p302: ref;
  var $p302.shadow: ref;
  var $i303: i32;
  var $i303.shadow: i32;
  var $i304: i64;
  var $i304.shadow: i64;
  var $i305: i64;
  var $i305.shadow: i64;
  var $i306: i64;
  var $i306.shadow: i64;
  var $p307: ref;
  var $p307.shadow: ref;
  var $i308: i32;
  var $i308.shadow: i32;
  var $i309: i64;
  var $i309.shadow: i64;
  var $p310: ref;
  var $p310.shadow: ref;
  var $i311: i32;
  var $i311.shadow: i32;
  var $i312: i64;
  var $i312.shadow: i64;
  var $i313: i64;
  var $i313.shadow: i64;
  var $i314: i64;
  var $i314.shadow: i64;
  var $p315: ref;
  var $p315.shadow: ref;
  var $i316: i32;
  var $i316.shadow: i32;
  var $i317: i64;
  var $i317.shadow: i64;
  var $p318: ref;
  var $p318.shadow: ref;
  var $i319: i32;
  var $i319.shadow: i32;
  var $i320: i64;
  var $i320.shadow: i64;
  var $i321: i64;
  var $i321.shadow: i64;
  var $i322: i64;
  var $i322.shadow: i64;
  var $p323: ref;
  var $p323.shadow: ref;
  var $i324: i32;
  var $i324.shadow: i32;
  var $i325: i64;
  var $i325.shadow: i64;
  var $p326: ref;
  var $p326.shadow: ref;
  var $i327: i32;
  var $i327.shadow: i32;
  var $i328: i64;
  var $i328.shadow: i64;
  var $i329: i64;
  var $i329.shadow: i64;
  var $i330: i64;
  var $i330.shadow: i64;
  var $p331: ref;
  var $p331.shadow: ref;
  var $i332: i32;
  var $i332.shadow: i32;
  var $i333: i64;
  var $i333.shadow: i64;
  var $p334: ref;
  var $p334.shadow: ref;
  var $i335: i32;
  var $i335.shadow: i32;
  var $i336: i64;
  var $i336.shadow: i64;
  var $i337: i64;
  var $i337.shadow: i64;
  var $i338: i64;
  var $i338.shadow: i64;
  var $p339: ref;
  var $p339.shadow: ref;
  var $i340: i32;
  var $i340.shadow: i32;
  var $i341: i64;
  var $i341.shadow: i64;
  var $p342: ref;
  var $p342.shadow: ref;
  var $i343: i32;
  var $i343.shadow: i32;
  var $i344: i64;
  var $i344.shadow: i64;
  var $i345: i64;
  var $i345.shadow: i64;
  var $i346: i64;
  var $i346.shadow: i64;
  var $p347: ref;
  var $p347.shadow: ref;
  var $i348: i32;
  var $i348.shadow: i32;
  var $i349: i64;
  var $i349.shadow: i64;
  var $p350: ref;
  var $p350.shadow: ref;
  var $i351: i32;
  var $i351.shadow: i32;
  var $i352: i64;
  var $i352.shadow: i64;
  var $i353: i64;
  var $i353.shadow: i64;
  var $i354: i64;
  var $i354.shadow: i64;
  var $p355: ref;
  var $p355.shadow: ref;
  var $i356: i32;
  var $i356.shadow: i32;
  var $i357: i64;
  var $i357.shadow: i64;
  var $p358: ref;
  var $p358.shadow: ref;
  var $i359: i32;
  var $i359.shadow: i32;
  var $i360: i64;
  var $i360.shadow: i64;
  var $i361: i64;
  var $i361.shadow: i64;
  var $i362: i64;
  var $i362.shadow: i64;
  var $p363: ref;
  var $p363.shadow: ref;
  var $p364: ref;
  var $p364.shadow: ref;
  var $i365: i32;
  var $i365.shadow: i32;
  var $i366: i64;
  var $i366.shadow: i64;
  var $p367: ref;
  var $p367.shadow: ref;
  var $i368: i32;
  var $i368.shadow: i32;
  var $i369: i64;
  var $i369.shadow: i64;
  var $i370: i64;
  var $i370.shadow: i64;
  var $p371: ref;
  var $p371.shadow: ref;
  var $i372: i32;
  var $i372.shadow: i32;
  var $i373: i64;
  var $i373.shadow: i64;
  var $p374: ref;
  var $p374.shadow: ref;
  var $i375: i32;
  var $i375.shadow: i32;
  var $i376: i64;
  var $i376.shadow: i64;
  var $i377: i64;
  var $i377.shadow: i64;
  var $i378: i64;
  var $i378.shadow: i64;
  var $p379: ref;
  var $p379.shadow: ref;
  var $i380: i32;
  var $i380.shadow: i32;
  var $i381: i64;
  var $i381.shadow: i64;
  var $p382: ref;
  var $p382.shadow: ref;
  var $i383: i32;
  var $i383.shadow: i32;
  var $i384: i64;
  var $i384.shadow: i64;
  var $i385: i64;
  var $i385.shadow: i64;
  var $i386: i64;
  var $i386.shadow: i64;
  var $p387: ref;
  var $p387.shadow: ref;
  var $i388: i32;
  var $i388.shadow: i32;
  var $i389: i64;
  var $i389.shadow: i64;
  var $p390: ref;
  var $p390.shadow: ref;
  var $i391: i32;
  var $i391.shadow: i32;
  var $i392: i64;
  var $i392.shadow: i64;
  var $i393: i64;
  var $i393.shadow: i64;
  var $i394: i64;
  var $i394.shadow: i64;
  var $p395: ref;
  var $p395.shadow: ref;
  var $i396: i32;
  var $i396.shadow: i32;
  var $i397: i64;
  var $i397.shadow: i64;
  var $p398: ref;
  var $p398.shadow: ref;
  var $i399: i32;
  var $i399.shadow: i32;
  var $i400: i64;
  var $i400.shadow: i64;
  var $i401: i64;
  var $i401.shadow: i64;
  var $i402: i64;
  var $i402.shadow: i64;
  var $p403: ref;
  var $p403.shadow: ref;
  var $i404: i32;
  var $i404.shadow: i32;
  var $i405: i64;
  var $i405.shadow: i64;
  var $p406: ref;
  var $p406.shadow: ref;
  var $i407: i32;
  var $i407.shadow: i32;
  var $i408: i64;
  var $i408.shadow: i64;
  var $i409: i64;
  var $i409.shadow: i64;
  var $i410: i64;
  var $i410.shadow: i64;
  var $p411: ref;
  var $p411.shadow: ref;
  var $i412: i32;
  var $i412.shadow: i32;
  var $i413: i64;
  var $i413.shadow: i64;
  var $p414: ref;
  var $p414.shadow: ref;
  var $i415: i32;
  var $i415.shadow: i32;
  var $i416: i64;
  var $i416.shadow: i64;
  var $i417: i64;
  var $i417.shadow: i64;
  var $i418: i64;
  var $i418.shadow: i64;
  var $p419: ref;
  var $p419.shadow: ref;
  var $i420: i32;
  var $i420.shadow: i32;
  var $i421: i64;
  var $i421.shadow: i64;
  var $p422: ref;
  var $p422.shadow: ref;
  var $i423: i32;
  var $i423.shadow: i32;
  var $i424: i64;
  var $i424.shadow: i64;
  var $i425: i64;
  var $i425.shadow: i64;
  var $i426: i64;
  var $i426.shadow: i64;
  var $p427: ref;
  var $p427.shadow: ref;
  var $p428: ref;
  var $p428.shadow: ref;
  var $i429: i32;
  var $i429.shadow: i32;
  var $i430: i64;
  var $i430.shadow: i64;
  var $p431: ref;
  var $p431.shadow: ref;
  var $i432: i32;
  var $i432.shadow: i32;
  var $i433: i64;
  var $i433.shadow: i64;
  var $i434: i64;
  var $i434.shadow: i64;
  var $p435: ref;
  var $p435.shadow: ref;
  var $i436: i32;
  var $i436.shadow: i32;
  var $i437: i64;
  var $i437.shadow: i64;
  var $p438: ref;
  var $p438.shadow: ref;
  var $i439: i32;
  var $i439.shadow: i32;
  var $i440: i64;
  var $i440.shadow: i64;
  var $i441: i64;
  var $i441.shadow: i64;
  var $i442: i64;
  var $i442.shadow: i64;
  var $p443: ref;
  var $p443.shadow: ref;
  var $i444: i32;
  var $i444.shadow: i32;
  var $i445: i64;
  var $i445.shadow: i64;
  var $p446: ref;
  var $p446.shadow: ref;
  var $i447: i32;
  var $i447.shadow: i32;
  var $i448: i64;
  var $i448.shadow: i64;
  var $i449: i64;
  var $i449.shadow: i64;
  var $i450: i64;
  var $i450.shadow: i64;
  var $p451: ref;
  var $p451.shadow: ref;
  var $i452: i32;
  var $i452.shadow: i32;
  var $i453: i64;
  var $i453.shadow: i64;
  var $p454: ref;
  var $p454.shadow: ref;
  var $i455: i32;
  var $i455.shadow: i32;
  var $i456: i64;
  var $i456.shadow: i64;
  var $i457: i64;
  var $i457.shadow: i64;
  var $i458: i64;
  var $i458.shadow: i64;
  var $p459: ref;
  var $p459.shadow: ref;
  var $i460: i32;
  var $i460.shadow: i32;
  var $i461: i64;
  var $i461.shadow: i64;
  var $p462: ref;
  var $p462.shadow: ref;
  var $i463: i32;
  var $i463.shadow: i32;
  var $i464: i64;
  var $i464.shadow: i64;
  var $i465: i64;
  var $i465.shadow: i64;
  var $i466: i64;
  var $i466.shadow: i64;
  var $p467: ref;
  var $p467.shadow: ref;
  var $i468: i32;
  var $i468.shadow: i32;
  var $i469: i64;
  var $i469.shadow: i64;
  var $p470: ref;
  var $p470.shadow: ref;
  var $i471: i32;
  var $i471.shadow: i32;
  var $i472: i64;
  var $i472.shadow: i64;
  var $i473: i64;
  var $i473.shadow: i64;
  var $i474: i64;
  var $i474.shadow: i64;
  var $p475: ref;
  var $p475.shadow: ref;
  var $i476: i32;
  var $i476.shadow: i32;
  var $i477: i64;
  var $i477.shadow: i64;
  var $p478: ref;
  var $p478.shadow: ref;
  var $i479: i32;
  var $i479.shadow: i32;
  var $i480: i64;
  var $i480.shadow: i64;
  var $i481: i64;
  var $i481.shadow: i64;
  var $i482: i64;
  var $i482.shadow: i64;
  var $p483: ref;
  var $p483.shadow: ref;
  var $p484: ref;
  var $p484.shadow: ref;
  var $i485: i32;
  var $i485.shadow: i32;
  var $i486: i64;
  var $i486.shadow: i64;
  var $p487: ref;
  var $p487.shadow: ref;
  var $i488: i32;
  var $i488.shadow: i32;
  var $i489: i64;
  var $i489.shadow: i64;
  var $i490: i64;
  var $i490.shadow: i64;
  var $p491: ref;
  var $p491.shadow: ref;
  var $i492: i32;
  var $i492.shadow: i32;
  var $i493: i64;
  var $i493.shadow: i64;
  var $p494: ref;
  var $p494.shadow: ref;
  var $i495: i32;
  var $i495.shadow: i32;
  var $i496: i64;
  var $i496.shadow: i64;
  var $i497: i64;
  var $i497.shadow: i64;
  var $i498: i64;
  var $i498.shadow: i64;
  var $p499: ref;
  var $p499.shadow: ref;
  var $i500: i32;
  var $i500.shadow: i32;
  var $i501: i64;
  var $i501.shadow: i64;
  var $p502: ref;
  var $p502.shadow: ref;
  var $i503: i32;
  var $i503.shadow: i32;
  var $i504: i64;
  var $i504.shadow: i64;
  var $i505: i64;
  var $i505.shadow: i64;
  var $i506: i64;
  var $i506.shadow: i64;
  var $p507: ref;
  var $p507.shadow: ref;
  var $i508: i32;
  var $i508.shadow: i32;
  var $i509: i64;
  var $i509.shadow: i64;
  var $p510: ref;
  var $p510.shadow: ref;
  var $i511: i32;
  var $i511.shadow: i32;
  var $i512: i64;
  var $i512.shadow: i64;
  var $i513: i64;
  var $i513.shadow: i64;
  var $i514: i64;
  var $i514.shadow: i64;
  var $p515: ref;
  var $p515.shadow: ref;
  var $i516: i32;
  var $i516.shadow: i32;
  var $i517: i64;
  var $i517.shadow: i64;
  var $p518: ref;
  var $p518.shadow: ref;
  var $i519: i32;
  var $i519.shadow: i32;
  var $i520: i64;
  var $i520.shadow: i64;
  var $i521: i64;
  var $i521.shadow: i64;
  var $i522: i64;
  var $i522.shadow: i64;
  var $p523: ref;
  var $p523.shadow: ref;
  var $i524: i32;
  var $i524.shadow: i32;
  var $i525: i64;
  var $i525.shadow: i64;
  var $p526: ref;
  var $p526.shadow: ref;
  var $i527: i32;
  var $i527.shadow: i32;
  var $i528: i64;
  var $i528.shadow: i64;
  var $i529: i64;
  var $i529.shadow: i64;
  var $i530: i64;
  var $i530.shadow: i64;
  var $p531: ref;
  var $p531.shadow: ref;
  var $p532: ref;
  var $p532.shadow: ref;
  var $i533: i32;
  var $i533.shadow: i32;
  var $i534: i64;
  var $i534.shadow: i64;
  var $p535: ref;
  var $p535.shadow: ref;
  var $i536: i32;
  var $i536.shadow: i32;
  var $i537: i64;
  var $i537.shadow: i64;
  var $i538: i64;
  var $i538.shadow: i64;
  var $p539: ref;
  var $p539.shadow: ref;
  var $i540: i32;
  var $i540.shadow: i32;
  var $i541: i64;
  var $i541.shadow: i64;
  var $p542: ref;
  var $p542.shadow: ref;
  var $i543: i32;
  var $i543.shadow: i32;
  var $i544: i64;
  var $i544.shadow: i64;
  var $i545: i64;
  var $i545.shadow: i64;
  var $i546: i64;
  var $i546.shadow: i64;
  var $p547: ref;
  var $p547.shadow: ref;
  var $i548: i32;
  var $i548.shadow: i32;
  var $i549: i64;
  var $i549.shadow: i64;
  var $p550: ref;
  var $p550.shadow: ref;
  var $i551: i32;
  var $i551.shadow: i32;
  var $i552: i64;
  var $i552.shadow: i64;
  var $i553: i64;
  var $i553.shadow: i64;
  var $i554: i64;
  var $i554.shadow: i64;
  var $p555: ref;
  var $p555.shadow: ref;
  var $i556: i32;
  var $i556.shadow: i32;
  var $i557: i64;
  var $i557.shadow: i64;
  var $p558: ref;
  var $p558.shadow: ref;
  var $i559: i32;
  var $i559.shadow: i32;
  var $i560: i64;
  var $i560.shadow: i64;
  var $i561: i64;
  var $i561.shadow: i64;
  var $i562: i64;
  var $i562.shadow: i64;
  var $p563: ref;
  var $p563.shadow: ref;
  var $i564: i32;
  var $i564.shadow: i32;
  var $i565: i64;
  var $i565.shadow: i64;
  var $p566: ref;
  var $p566.shadow: ref;
  var $i567: i32;
  var $i567.shadow: i32;
  var $i568: i64;
  var $i568.shadow: i64;
  var $i569: i64;
  var $i569.shadow: i64;
  var $i570: i64;
  var $i570.shadow: i64;
  var $p571: ref;
  var $p571.shadow: ref;
  var $p572: ref;
  var $p572.shadow: ref;
  var $i573: i32;
  var $i573.shadow: i32;
  var $i574: i64;
  var $i574.shadow: i64;
  var $p575: ref;
  var $p575.shadow: ref;
  var $i576: i32;
  var $i576.shadow: i32;
  var $i577: i64;
  var $i577.shadow: i64;
  var $i578: i64;
  var $i578.shadow: i64;
  var $p579: ref;
  var $p579.shadow: ref;
  var $i580: i32;
  var $i580.shadow: i32;
  var $i581: i64;
  var $i581.shadow: i64;
  var $p582: ref;
  var $p582.shadow: ref;
  var $i583: i32;
  var $i583.shadow: i32;
  var $i584: i64;
  var $i584.shadow: i64;
  var $i585: i64;
  var $i585.shadow: i64;
  var $i586: i64;
  var $i586.shadow: i64;
  var $p587: ref;
  var $p587.shadow: ref;
  var $i588: i32;
  var $i588.shadow: i32;
  var $i589: i64;
  var $i589.shadow: i64;
  var $p590: ref;
  var $p590.shadow: ref;
  var $i591: i32;
  var $i591.shadow: i32;
  var $i592: i64;
  var $i592.shadow: i64;
  var $i593: i64;
  var $i593.shadow: i64;
  var $i594: i64;
  var $i594.shadow: i64;
  var $p595: ref;
  var $p595.shadow: ref;
  var $i596: i32;
  var $i596.shadow: i32;
  var $i597: i64;
  var $i597.shadow: i64;
  var $p598: ref;
  var $p598.shadow: ref;
  var $i599: i32;
  var $i599.shadow: i32;
  var $i600: i64;
  var $i600.shadow: i64;
  var $i601: i64;
  var $i601.shadow: i64;
  var $i602: i64;
  var $i602.shadow: i64;
  var $p603: ref;
  var $p603.shadow: ref;
  var $p604: ref;
  var $p604.shadow: ref;
  var $i605: i32;
  var $i605.shadow: i32;
  var $i606: i64;
  var $i606.shadow: i64;
  var $p607: ref;
  var $p607.shadow: ref;
  var $i608: i32;
  var $i608.shadow: i32;
  var $i609: i64;
  var $i609.shadow: i64;
  var $i610: i64;
  var $i610.shadow: i64;
  var $p611: ref;
  var $p611.shadow: ref;
  var $i612: i32;
  var $i612.shadow: i32;
  var $i613: i64;
  var $i613.shadow: i64;
  var $p614: ref;
  var $p614.shadow: ref;
  var $i615: i32;
  var $i615.shadow: i32;
  var $i616: i64;
  var $i616.shadow: i64;
  var $i617: i64;
  var $i617.shadow: i64;
  var $i618: i64;
  var $i618.shadow: i64;
  var $p619: ref;
  var $p619.shadow: ref;
  var $i620: i32;
  var $i620.shadow: i32;
  var $i621: i64;
  var $i621.shadow: i64;
  var $p622: ref;
  var $p622.shadow: ref;
  var $i623: i32;
  var $i623.shadow: i32;
  var $i624: i64;
  var $i624.shadow: i64;
  var $i625: i64;
  var $i625.shadow: i64;
  var $i626: i64;
  var $i626.shadow: i64;
  var $p627: ref;
  var $p627.shadow: ref;
  var $p628: ref;
  var $p628.shadow: ref;
  var $i629: i32;
  var $i629.shadow: i32;
  var $i630: i64;
  var $i630.shadow: i64;
  var $p631: ref;
  var $p631.shadow: ref;
  var $i632: i32;
  var $i632.shadow: i32;
  var $i633: i64;
  var $i633.shadow: i64;
  var $i634: i64;
  var $i634.shadow: i64;
  var $p635: ref;
  var $p635.shadow: ref;
  var $i636: i32;
  var $i636.shadow: i32;
  var $i637: i64;
  var $i637.shadow: i64;
  var $p638: ref;
  var $p638.shadow: ref;
  var $i639: i32;
  var $i639.shadow: i32;
  var $i640: i64;
  var $i640.shadow: i64;
  var $i641: i64;
  var $i641.shadow: i64;
  var $i642: i64;
  var $i642.shadow: i64;
  var $p643: ref;
  var $p643.shadow: ref;
  var $p644: ref;
  var $p644.shadow: ref;
  var $i645: i32;
  var $i645.shadow: i32;
  var $i646: i64;
  var $i646.shadow: i64;
  var $p647: ref;
  var $p647.shadow: ref;
  var $i648: i32;
  var $i648.shadow: i32;
  var $i649: i64;
  var $i649.shadow: i64;
  var $i650: i64;
  var $i650.shadow: i64;
  var $p651: ref;
  var $p651.shadow: ref;
  var $i652: i64;
  var $i652.shadow: i64;
  var $i653: i32;
  var $i653.shadow: i32;
  var $i654: i1;
  var $i654.shadow: i1;
  var $i655: i64;
  var $i655.shadow: i64;
  var $p656: ref;
  var $p656.shadow: ref;
  var $i657: i64;
  var $i657.shadow: i64;
  var $i658: i64;
  var $i658.shadow: i64;
  var $i659: i32;
  var $i659.shadow: i32;
  var $i660: i32;
  var $i660.shadow: i32;
  var $i661: i64;
  var $i661.shadow: i64;
  var $p662: ref;
  var $p662.shadow: ref;
  var $i663: i64;
  var $i663.shadow: i64;
  var $i664: i32;
  var $i664.shadow: i32;
  var $i665: i32;
  var $i665.shadow: i32;
  var $p666: ref;
  var $p666.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(136,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1,$mul.ref(0,4));
  $p4.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p4 == $p4.shadow));
  $i5 := $load.i32($M.3,$p4);
  $i5.shadow := $load.i32($M.3.shadow,$p4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i32.i64($i5);
  $i6.shadow := $zext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2,$mul.ref(0,4));
  $p7.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p7 == $p7.shadow));
  $i8 := $load.i32($M.3,$p7);
  $i8.shadow := $load.i32($M.3.shadow,$p7.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i32.i64($i8);
  $i9.shadow := $zext.i32.i64($i8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $mul.i64($i6,$i9);
  $i10.shadow := $mul.i64($i6.shadow,$i9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 2} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(0,8));
  $p11.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(0,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 128, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p11 == $p11.shadow));
  $M.11 := $store.i64($M.11,$p11,$i10);
  $M.11.shadow := $store.i64($M.11.shadow,$p11.shadow,$i10.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1,$mul.ref(0,4));
  $p12.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p12 == $p12.shadow));
  $i13 := $load.i32($M.3,$p12);
  $i13.shadow := $load.i32($M.3.shadow,$p12.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i32.i64($i13);
  $i14.shadow := $zext.i32.i64($i13.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2,$mul.ref(1,4));
  $p15.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15 == $p15.shadow));
  $i16 := $load.i32($M.3,$p15);
  $i16.shadow := $load.i32($M.3.shadow,$p15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i32.i64($i16);
  $i17.shadow := $zext.i32.i64($i16.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 10} true;
  assume {:verifier.code 0} true;
  $i18 := $mul.i64($i14,$i17);
  $i18.shadow := $mul.i64($i14.shadow,$i17.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1,$mul.ref(1,4));
  $p19.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p19 == $p19.shadow));
  $i20 := $load.i32($M.3,$p19);
  $i20.shadow := $load.i32($M.3.shadow,$p19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i32.i64($i20);
  $i21.shadow := $zext.i32.i64($i20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2,$mul.ref(0,4));
  $p22.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22 == $p22.shadow));
  $i23 := $load.i32($M.3,$p22);
  $i23.shadow := $load.i32($M.3.shadow,$p22.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i32.i64($i23);
  $i24.shadow := $zext.i32.i64($i23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $mul.i64($i21,$i24);
  $i25.shadow := $mul.i64($i21.shadow,$i24.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 130, 3} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i18,$i25);
  $i26.shadow := $add.i64($i18.shadow,$i25.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 2} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(1,8));
  $p27.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(1,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 129, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27 == $p27.shadow));
  $M.11 := $store.i64($M.11,$p27,$i26);
  $M.11.shadow := $store.i64($M.11.shadow,$p27.shadow,$i26.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1,$mul.ref(0,4));
  $p28.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p28 == $p28.shadow));
  $i29 := $load.i32($M.3,$p28);
  $i29.shadow := $load.i32($M.3.shadow,$p28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i32.i64($i29);
  $i30.shadow := $zext.i32.i64($i29.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2,$mul.ref(2,4));
  $p31.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p31 == $p31.shadow));
  $i32 := $load.i32($M.3,$p31);
  $i32.shadow := $load.i32($M.3.shadow,$p31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  $i33.shadow := $zext.i32.i64($i32.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 10} true;
  assume {:verifier.code 0} true;
  $i34 := $mul.i64($i30,$i33);
  $i34.shadow := $mul.i64($i30.shadow,$i33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1,$mul.ref(1,4));
  $p35.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p35 == $p35.shadow));
  $i36 := $load.i32($M.3,$p35);
  $i36.shadow := $load.i32($M.3.shadow,$p35.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i32.i64($i36);
  $i37.shadow := $zext.i32.i64($i36.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2,$mul.ref(1,4));
  $p38.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38 == $p38.shadow));
  $i39 := $load.i32($M.3,$p38);
  $i39.shadow := $load.i32($M.3.shadow,$p38.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i32.i64($i39);
  $i40.shadow := $zext.i32.i64($i39.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 5} true;
  assume {:verifier.code 0} true;
  $i41 := $mul.i64($i37,$i40);
  $i41.shadow := $mul.i64($i37.shadow,$i40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 132, 3} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i34,$i41);
  $i42.shadow := $add.i64($i34.shadow,$i41.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1,$mul.ref(2,4));
  $p43.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p43 == $p43.shadow));
  $i44 := $load.i32($M.3,$p43);
  $i44.shadow := $load.i32($M.3.shadow,$p43.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i32.i64($i44);
  $i45.shadow := $zext.i32.i64($i44.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p2,$mul.ref(0,4));
  $p46.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p46 == $p46.shadow));
  $i47 := $load.i32($M.3,$p46);
  $i47.shadow := $load.i32($M.3.shadow,$p46.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i32.i64($i47);
  $i48.shadow := $zext.i32.i64($i47.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i49 := $mul.i64($i45,$i48);
  $i49.shadow := $mul.i64($i45.shadow,$i48.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 133, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i42,$i49);
  $i50.shadow := $add.i64($i42.shadow,$i49.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 2} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(2,8));
  $p51.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(2,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 131, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p51 == $p51.shadow));
  $M.11 := $store.i64($M.11,$p51,$i50);
  $M.11.shadow := $store.i64($M.11.shadow,$p51.shadow,$i50.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1,$mul.ref(0,4));
  $p52.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p52 == $p52.shadow));
  $i53 := $load.i32($M.3,$p52);
  $i53.shadow := $load.i32($M.3.shadow,$p52.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i32.i64($i53);
  $i54.shadow := $zext.i32.i64($i53.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2,$mul.ref(3,4));
  $p55.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p55 == $p55.shadow));
  $i56 := $load.i32($M.3,$p55);
  $i56.shadow := $load.i32($M.3.shadow,$p55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i32.i64($i56);
  $i57.shadow := $zext.i32.i64($i56.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 10} true;
  assume {:verifier.code 0} true;
  $i58 := $mul.i64($i54,$i57);
  $i58.shadow := $mul.i64($i54.shadow,$i57.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p1,$mul.ref(1,4));
  $p59.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p59 == $p59.shadow));
  $i60 := $load.i32($M.3,$p59);
  $i60.shadow := $load.i32($M.3.shadow,$p59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i32.i64($i60);
  $i61.shadow := $zext.i32.i64($i60.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p2,$mul.ref(2,4));
  $p62.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p62 == $p62.shadow));
  $i63 := $load.i32($M.3,$p62);
  $i63.shadow := $load.i32($M.3.shadow,$p62.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i32.i64($i63);
  $i64.shadow := $zext.i32.i64($i63.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i65 := $mul.i64($i61,$i64);
  $i65.shadow := $mul.i64($i61.shadow,$i64.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 135, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i58,$i65);
  $i66.shadow := $add.i64($i58.shadow,$i65.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p1,$mul.ref(2,4));
  $p67.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p67 == $p67.shadow));
  $i68 := $load.i32($M.3,$p67);
  $i68.shadow := $load.i32($M.3.shadow,$p67.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i32.i64($i68);
  $i69.shadow := $zext.i32.i64($i68.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p2,$mul.ref(1,4));
  $p70.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p70 == $p70.shadow));
  $i71 := $load.i32($M.3,$p70);
  $i71.shadow := $load.i32($M.3.shadow,$p70.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i32.i64($i71);
  $i72.shadow := $zext.i32.i64($i71.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $mul.i64($i69,$i72);
  $i73.shadow := $mul.i64($i69.shadow,$i72.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 136, 3} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i66,$i73);
  $i74.shadow := $add.i64($i66.shadow,$i73.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p1,$mul.ref(3,4));
  $p75.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p75 == $p75.shadow));
  $i76 := $load.i32($M.3,$p75);
  $i76.shadow := $load.i32($M.3.shadow,$p75.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i32.i64($i76);
  $i77.shadow := $zext.i32.i64($i76.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p2,$mul.ref(0,4));
  $p78.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p78 == $p78.shadow));
  $i79 := $load.i32($M.3,$p78);
  $i79.shadow := $load.i32($M.3.shadow,$p78.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i32.i64($i79);
  $i80.shadow := $zext.i32.i64($i79.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $mul.i64($i77,$i80);
  $i81.shadow := $mul.i64($i77.shadow,$i80.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 137, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i64($i74,$i81);
  $i82.shadow := $add.i64($i74.shadow,$i81.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 2} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(3,8));
  $p83.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(3,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 134, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p83 == $p83.shadow));
  $M.11 := $store.i64($M.11,$p83,$i82);
  $M.11.shadow := $store.i64($M.11.shadow,$p83.shadow,$i82.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p1,$mul.ref(0,4));
  $p84.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p84 == $p84.shadow));
  $i85 := $load.i32($M.3,$p84);
  $i85.shadow := $load.i32($M.3.shadow,$p84.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i32.i64($i85);
  $i86.shadow := $zext.i32.i64($i85.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p2,$mul.ref(4,4));
  $p87.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p87 == $p87.shadow));
  $i88 := $load.i32($M.3,$p87);
  $i88.shadow := $load.i32($M.3.shadow,$p87.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i32.i64($i88);
  $i89.shadow := $zext.i32.i64($i88.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 10} true;
  assume {:verifier.code 0} true;
  $i90 := $mul.i64($i86,$i89);
  $i90.shadow := $mul.i64($i86.shadow,$i89.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p1,$mul.ref(1,4));
  $p91.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p91 == $p91.shadow));
  $i92 := $load.i32($M.3,$p91);
  $i92.shadow := $load.i32($M.3.shadow,$p91.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i32.i64($i92);
  $i93.shadow := $zext.i32.i64($i92.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p2,$mul.ref(3,4));
  $p94.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p94 == $p94.shadow));
  $i95 := $load.i32($M.3,$p94);
  $i95.shadow := $load.i32($M.3.shadow,$p94.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i32.i64($i95);
  $i96.shadow := $zext.i32.i64($i95.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $mul.i64($i93,$i96);
  $i97.shadow := $mul.i64($i93.shadow,$i96.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 139, 3} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i90,$i97);
  $i98.shadow := $add.i64($i90.shadow,$i97.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p1,$mul.ref(2,4));
  $p99.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p99 == $p99.shadow));
  $i100 := $load.i32($M.3,$p99);
  $i100.shadow := $load.i32($M.3.shadow,$p99.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i32.i64($i100);
  $i101.shadow := $zext.i32.i64($i100.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p2,$mul.ref(2,4));
  $p102.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p102 == $p102.shadow));
  $i103 := $load.i32($M.3,$p102);
  $i103.shadow := $load.i32($M.3.shadow,$p102.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i32.i64($i103);
  $i104.shadow := $zext.i32.i64($i103.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 5} true;
  assume {:verifier.code 0} true;
  $i105 := $mul.i64($i101,$i104);
  $i105.shadow := $mul.i64($i101.shadow,$i104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 140, 3} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i64($i98,$i105);
  $i106.shadow := $add.i64($i98.shadow,$i105.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p1,$mul.ref(3,4));
  $p107.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p107 == $p107.shadow));
  $i108 := $load.i32($M.3,$p107);
  $i108.shadow := $load.i32($M.3.shadow,$p107.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i32.i64($i108);
  $i109.shadow := $zext.i32.i64($i108.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p2,$mul.ref(1,4));
  $p110.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p110 == $p110.shadow));
  $i111 := $load.i32($M.3,$p110);
  $i111.shadow := $load.i32($M.3.shadow,$p110.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i32.i64($i111);
  $i112.shadow := $zext.i32.i64($i111.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i113 := $mul.i64($i109,$i112);
  $i113.shadow := $mul.i64($i109.shadow,$i112.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 141, 3} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($i106,$i113);
  $i114.shadow := $add.i64($i106.shadow,$i113.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p1,$mul.ref(4,4));
  $p115.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p115 == $p115.shadow));
  $i116 := $load.i32($M.3,$p115);
  $i116.shadow := $load.i32($M.3.shadow,$p115.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i32.i64($i116);
  $i117.shadow := $zext.i32.i64($i116.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p2,$mul.ref(0,4));
  $p118.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p118 == $p118.shadow));
  $i119 := $load.i32($M.3,$p118);
  $i119.shadow := $load.i32($M.3.shadow,$p118.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i32.i64($i119);
  $i120.shadow := $zext.i32.i64($i119.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $mul.i64($i117,$i120);
  $i121.shadow := $mul.i64($i117.shadow,$i120.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 142, 3} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i64($i114,$i121);
  $i122.shadow := $add.i64($i114.shadow,$i121.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 2} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(4,8));
  $p123.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(4,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 138, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p123 == $p123.shadow));
  $M.11 := $store.i64($M.11,$p123,$i122);
  $M.11.shadow := $store.i64($M.11.shadow,$p123.shadow,$i122.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p1,$mul.ref(0,4));
  $p124.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p124 == $p124.shadow));
  $i125 := $load.i32($M.3,$p124);
  $i125.shadow := $load.i32($M.3.shadow,$p124.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $i126 := $zext.i32.i64($i125);
  $i126.shadow := $zext.i32.i64($i125.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p2,$mul.ref(5,4));
  $p127.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p127 == $p127.shadow));
  $i128 := $load.i32($M.3,$p127);
  $i128.shadow := $load.i32($M.3.shadow,$p127.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i32.i64($i128);
  $i129.shadow := $zext.i32.i64($i128.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 10} true;
  assume {:verifier.code 0} true;
  $i130 := $mul.i64($i126,$i129);
  $i130.shadow := $mul.i64($i126.shadow,$i129.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p1,$mul.ref(1,4));
  $p131.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p131 == $p131.shadow));
  $i132 := $load.i32($M.3,$p131);
  $i132.shadow := $load.i32($M.3.shadow,$p131.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i32.i64($i132);
  $i133.shadow := $zext.i32.i64($i132.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p2,$mul.ref(4,4));
  $p134.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p134 == $p134.shadow));
  $i135 := $load.i32($M.3,$p134);
  $i135.shadow := $load.i32($M.3.shadow,$p134.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i136 := $zext.i32.i64($i135);
  $i136.shadow := $zext.i32.i64($i135.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $mul.i64($i133,$i136);
  $i137.shadow := $mul.i64($i133.shadow,$i136.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 144, 3} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i64($i130,$i137);
  $i138.shadow := $add.i64($i130.shadow,$i137.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p1,$mul.ref(2,4));
  $p139.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p139 == $p139.shadow));
  $i140 := $load.i32($M.3,$p139);
  $i140.shadow := $load.i32($M.3.shadow,$p139.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i141 := $zext.i32.i64($i140);
  $i141.shadow := $zext.i32.i64($i140.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p2,$mul.ref(3,4));
  $p142.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p142 == $p142.shadow));
  $i143 := $load.i32($M.3,$p142);
  $i143.shadow := $load.i32($M.3.shadow,$p142.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i32.i64($i143);
  $i144.shadow := $zext.i32.i64($i143.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $mul.i64($i141,$i144);
  $i145.shadow := $mul.i64($i141.shadow,$i144.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 145, 3} true;
  assume {:verifier.code 0} true;
  $i146 := $add.i64($i138,$i145);
  $i146.shadow := $add.i64($i138.shadow,$i145.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p1,$mul.ref(3,4));
  $p147.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p147 == $p147.shadow));
  $i148 := $load.i32($M.3,$p147);
  $i148.shadow := $load.i32($M.3.shadow,$p147.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i32.i64($i148);
  $i149.shadow := $zext.i32.i64($i148.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p2,$mul.ref(2,4));
  $p150.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p150 == $p150.shadow));
  $i151 := $load.i32($M.3,$p150);
  $i151.shadow := $load.i32($M.3.shadow,$p150.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $zext.i32.i64($i151);
  $i152.shadow := $zext.i32.i64($i151.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i153 := $mul.i64($i149,$i152);
  $i153.shadow := $mul.i64($i149.shadow,$i152.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 146, 3} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i64($i146,$i153);
  $i154.shadow := $add.i64($i146.shadow,$i153.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p1,$mul.ref(4,4));
  $p155.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p155 == $p155.shadow));
  $i156 := $load.i32($M.3,$p155);
  $i156.shadow := $load.i32($M.3.shadow,$p155.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i32.i64($i156);
  $i157.shadow := $zext.i32.i64($i156.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p2,$mul.ref(1,4));
  $p158.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p158 == $p158.shadow));
  $i159 := $load.i32($M.3,$p158);
  $i159.shadow := $load.i32($M.3.shadow,$p158.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i160 := $zext.i32.i64($i159);
  $i160.shadow := $zext.i32.i64($i159.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 5} true;
  assume {:verifier.code 0} true;
  $i161 := $mul.i64($i157,$i160);
  $i161.shadow := $mul.i64($i157.shadow,$i160.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 147, 3} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i64($i154,$i161);
  $i162.shadow := $add.i64($i154.shadow,$i161.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p1,$mul.ref(5,4));
  $p163.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p163 == $p163.shadow));
  $i164 := $load.i32($M.3,$p163);
  $i164.shadow := $load.i32($M.3.shadow,$p163.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i32.i64($i164);
  $i165.shadow := $zext.i32.i64($i164.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p2,$mul.ref(0,4));
  $p166.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p166 == $p166.shadow));
  $i167 := $load.i32($M.3,$p166);
  $i167.shadow := $load.i32($M.3.shadow,$p166.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $zext.i32.i64($i167);
  $i168.shadow := $zext.i32.i64($i167.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i169 := $mul.i64($i165,$i168);
  $i169.shadow := $mul.i64($i165.shadow,$i168.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 148, 3} true;
  assume {:verifier.code 0} true;
  $i170 := $add.i64($i162,$i169);
  $i170.shadow := $add.i64($i162.shadow,$i169.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 2} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(5,8));
  $p171.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(5,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 143, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p171 == $p171.shadow));
  $M.11 := $store.i64($M.11,$p171,$i170);
  $M.11.shadow := $store.i64($M.11.shadow,$p171.shadow,$i170.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p1,$mul.ref(0,4));
  $p172.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p172 == $p172.shadow));
  $i173 := $load.i32($M.3,$p172);
  $i173.shadow := $load.i32($M.3.shadow,$p172.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $i174 := $zext.i32.i64($i173);
  $i174.shadow := $zext.i32.i64($i173.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p2,$mul.ref(6,4));
  $p175.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p175 == $p175.shadow));
  $i176 := $load.i32($M.3,$p175);
  $i176.shadow := $load.i32($M.3.shadow,$p175.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $i177 := $zext.i32.i64($i176);
  $i177.shadow := $zext.i32.i64($i176.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 10} true;
  assume {:verifier.code 0} true;
  $i178 := $mul.i64($i174,$i177);
  $i178.shadow := $mul.i64($i174.shadow,$i177.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p1,$mul.ref(1,4));
  $p179.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p179 == $p179.shadow));
  $i180 := $load.i32($M.3,$p179);
  $i180.shadow := $load.i32($M.3.shadow,$p179.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i181 := $zext.i32.i64($i180);
  $i181.shadow := $zext.i32.i64($i180.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p2,$mul.ref(5,4));
  $p182.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p182 == $p182.shadow));
  $i183 := $load.i32($M.3,$p182);
  $i183.shadow := $load.i32($M.3.shadow,$p182.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i32.i64($i183);
  $i184.shadow := $zext.i32.i64($i183.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 5} true;
  assume {:verifier.code 0} true;
  $i185 := $mul.i64($i181,$i184);
  $i185.shadow := $mul.i64($i181.shadow,$i184.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 150, 3} true;
  assume {:verifier.code 0} true;
  $i186 := $add.i64($i178,$i185);
  $i186.shadow := $add.i64($i178.shadow,$i185.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p1,$mul.ref(2,4));
  $p187.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p187 == $p187.shadow));
  $i188 := $load.i32($M.3,$p187);
  $i188.shadow := $load.i32($M.3.shadow,$p187.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i32.i64($i188);
  $i189.shadow := $zext.i32.i64($i188.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p2,$mul.ref(4,4));
  $p190.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p190 == $p190.shadow));
  $i191 := $load.i32($M.3,$p190);
  $i191.shadow := $load.i32($M.3.shadow,$p190.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i192 := $zext.i32.i64($i191);
  $i192.shadow := $zext.i32.i64($i191.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 5} true;
  assume {:verifier.code 0} true;
  $i193 := $mul.i64($i189,$i192);
  $i193.shadow := $mul.i64($i189.shadow,$i192.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 151, 3} true;
  assume {:verifier.code 0} true;
  $i194 := $add.i64($i186,$i193);
  $i194.shadow := $add.i64($i186.shadow,$i193.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p1,$mul.ref(3,4));
  $p195.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p195 == $p195.shadow));
  $i196 := $load.i32($M.3,$p195);
  $i196.shadow := $load.i32($M.3.shadow,$p195.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $zext.i32.i64($i196);
  $i197.shadow := $zext.i32.i64($i196.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p2,$mul.ref(3,4));
  $p198.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p198 == $p198.shadow));
  $i199 := $load.i32($M.3,$p198);
  $i199.shadow := $load.i32($M.3.shadow,$p198.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i32.i64($i199);
  $i200.shadow := $zext.i32.i64($i199.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i201 := $mul.i64($i197,$i200);
  $i201.shadow := $mul.i64($i197.shadow,$i200.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 152, 3} true;
  assume {:verifier.code 0} true;
  $i202 := $add.i64($i194,$i201);
  $i202.shadow := $add.i64($i194.shadow,$i201.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p1,$mul.ref(4,4));
  $p203.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p203 == $p203.shadow));
  $i204 := $load.i32($M.3,$p203);
  $i204.shadow := $load.i32($M.3.shadow,$p203.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i205 := $zext.i32.i64($i204);
  $i205.shadow := $zext.i32.i64($i204.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p2,$mul.ref(2,4));
  $p206.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p206 == $p206.shadow));
  $i207 := $load.i32($M.3,$p206);
  $i207.shadow := $load.i32($M.3.shadow,$p206.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $zext.i32.i64($i207);
  $i208.shadow := $zext.i32.i64($i207.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 5} true;
  assume {:verifier.code 0} true;
  $i209 := $mul.i64($i205,$i208);
  $i209.shadow := $mul.i64($i205.shadow,$i208.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 153, 3} true;
  assume {:verifier.code 0} true;
  $i210 := $add.i64($i202,$i209);
  $i210.shadow := $add.i64($i202.shadow,$i209.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p1,$mul.ref(5,4));
  $p211.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p211 == $p211.shadow));
  $i212 := $load.i32($M.3,$p211);
  $i212.shadow := $load.i32($M.3.shadow,$p211.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i213 := $zext.i32.i64($i212);
  $i213.shadow := $zext.i32.i64($i212.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p2,$mul.ref(1,4));
  $p214.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p214 == $p214.shadow));
  $i215 := $load.i32($M.3,$p214);
  $i215.shadow := $load.i32($M.3.shadow,$p214.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $zext.i32.i64($i215);
  $i216.shadow := $zext.i32.i64($i215.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $mul.i64($i213,$i216);
  $i217.shadow := $mul.i64($i213.shadow,$i216.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 154, 3} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i64($i210,$i217);
  $i218.shadow := $add.i64($i210.shadow,$i217.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p1,$mul.ref(6,4));
  $p219.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p219 == $p219.shadow));
  $i220 := $load.i32($M.3,$p219);
  $i220.shadow := $load.i32($M.3.shadow,$p219.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i221 := $zext.i32.i64($i220);
  $i221.shadow := $zext.i32.i64($i220.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p2,$mul.ref(0,4));
  $p222.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p222 == $p222.shadow));
  $i223 := $load.i32($M.3,$p222);
  $i223.shadow := $load.i32($M.3.shadow,$p222.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $zext.i32.i64($i223);
  $i224.shadow := $zext.i32.i64($i223.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i225 := $mul.i64($i221,$i224);
  $i225.shadow := $mul.i64($i221.shadow,$i224.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 155, 3} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i64($i218,$i225);
  $i226.shadow := $add.i64($i218.shadow,$i225.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 2} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(6,8));
  $p227.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(6,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 149, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p227 == $p227.shadow));
  $M.11 := $store.i64($M.11,$p227,$i226);
  $M.11.shadow := $store.i64($M.11.shadow,$p227.shadow,$i226.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p1,$mul.ref(0,4));
  $p228.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p228 == $p228.shadow));
  $i229 := $load.i32($M.3,$p228);
  $i229.shadow := $load.i32($M.3.shadow,$p228.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $i230 := $zext.i32.i64($i229);
  $i230.shadow := $zext.i32.i64($i229.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p2,$mul.ref(7,4));
  $p231.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p231 == $p231.shadow));
  $i232 := $load.i32($M.3,$p231);
  $i232.shadow := $load.i32($M.3.shadow,$p231.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $i233 := $zext.i32.i64($i232);
  $i233.shadow := $zext.i32.i64($i232.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 10} true;
  assume {:verifier.code 0} true;
  $i234 := $mul.i64($i230,$i233);
  $i234.shadow := $mul.i64($i230.shadow,$i233.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p1,$mul.ref(1,4));
  $p235.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p235 == $p235.shadow));
  $i236 := $load.i32($M.3,$p235);
  $i236.shadow := $load.i32($M.3.shadow,$p235.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $zext.i32.i64($i236);
  $i237.shadow := $zext.i32.i64($i236.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p2,$mul.ref(6,4));
  $p238.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p238 == $p238.shadow));
  $i239 := $load.i32($M.3,$p238);
  $i239.shadow := $load.i32($M.3.shadow,$p238.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i240 := $zext.i32.i64($i239);
  $i240.shadow := $zext.i32.i64($i239.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i241 := $mul.i64($i237,$i240);
  $i241.shadow := $mul.i64($i237.shadow,$i240.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 157, 3} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i64($i234,$i241);
  $i242.shadow := $add.i64($i234.shadow,$i241.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p1,$mul.ref(2,4));
  $p243.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p243 == $p243.shadow));
  $i244 := $load.i32($M.3,$p243);
  $i244.shadow := $load.i32($M.3.shadow,$p243.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $i245 := $zext.i32.i64($i244);
  $i245.shadow := $zext.i32.i64($i244.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p2,$mul.ref(5,4));
  $p246.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p246 == $p246.shadow));
  $i247 := $load.i32($M.3,$p246);
  $i247.shadow := $load.i32($M.3.shadow,$p246.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $i248 := $zext.i32.i64($i247);
  $i248.shadow := $zext.i32.i64($i247.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 5} true;
  assume {:verifier.code 0} true;
  $i249 := $mul.i64($i245,$i248);
  $i249.shadow := $mul.i64($i245.shadow,$i248.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 158, 3} true;
  assume {:verifier.code 0} true;
  $i250 := $add.i64($i242,$i249);
  $i250.shadow := $add.i64($i242.shadow,$i249.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p1,$mul.ref(3,4));
  $p251.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p251 == $p251.shadow));
  $i252 := $load.i32($M.3,$p251);
  $i252.shadow := $load.i32($M.3.shadow,$p251.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $zext.i32.i64($i252);
  $i253.shadow := $zext.i32.i64($i252.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($p2,$mul.ref(4,4));
  $p254.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p254 == $p254.shadow));
  $i255 := $load.i32($M.3,$p254);
  $i255.shadow := $load.i32($M.3.shadow,$p254.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $zext.i32.i64($i255);
  $i256.shadow := $zext.i32.i64($i255.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $mul.i64($i253,$i256);
  $i257.shadow := $mul.i64($i253.shadow,$i256.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 159, 3} true;
  assume {:verifier.code 0} true;
  $i258 := $add.i64($i250,$i257);
  $i258.shadow := $add.i64($i250.shadow,$i257.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p1,$mul.ref(4,4));
  $p259.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p259 == $p259.shadow));
  $i260 := $load.i32($M.3,$p259);
  $i260.shadow := $load.i32($M.3.shadow,$p259.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.i32.i64($i260);
  $i261.shadow := $zext.i32.i64($i260.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p2,$mul.ref(3,4));
  $p262.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p262 == $p262.shadow));
  $i263 := $load.i32($M.3,$p262);
  $i263.shadow := $load.i32($M.3.shadow,$p262.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $zext.i32.i64($i263);
  $i264.shadow := $zext.i32.i64($i263.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 5} true;
  assume {:verifier.code 0} true;
  $i265 := $mul.i64($i261,$i264);
  $i265.shadow := $mul.i64($i261.shadow,$i264.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 160, 3} true;
  assume {:verifier.code 0} true;
  $i266 := $add.i64($i258,$i265);
  $i266.shadow := $add.i64($i258.shadow,$i265.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p1,$mul.ref(5,4));
  $p267.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p267 == $p267.shadow));
  $i268 := $load.i32($M.3,$p267);
  $i268.shadow := $load.i32($M.3.shadow,$p267.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i269 := $zext.i32.i64($i268);
  $i269.shadow := $zext.i32.i64($i268.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $p270 := $add.ref($p2,$mul.ref(2,4));
  $p270.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p270 == $p270.shadow));
  $i271 := $load.i32($M.3,$p270);
  $i271.shadow := $load.i32($M.3.shadow,$p270.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $zext.i32.i64($i271);
  $i272.shadow := $zext.i32.i64($i271.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 5} true;
  assume {:verifier.code 0} true;
  $i273 := $mul.i64($i269,$i272);
  $i273.shadow := $mul.i64($i269.shadow,$i272.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 161, 3} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i64($i266,$i273);
  $i274.shadow := $add.i64($i266.shadow,$i273.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $p275 := $add.ref($p1,$mul.ref(6,4));
  $p275.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p275 == $p275.shadow));
  $i276 := $load.i32($M.3,$p275);
  $i276.shadow := $load.i32($M.3.shadow,$p275.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i277 := $zext.i32.i64($i276);
  $i277.shadow := $zext.i32.i64($i276.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $p278 := $add.ref($p2,$mul.ref(1,4));
  $p278.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p278 == $p278.shadow));
  $i279 := $load.i32($M.3,$p278);
  $i279.shadow := $load.i32($M.3.shadow,$p278.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i280 := $zext.i32.i64($i279);
  $i280.shadow := $zext.i32.i64($i279.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 5} true;
  assume {:verifier.code 0} true;
  $i281 := $mul.i64($i277,$i280);
  $i281.shadow := $mul.i64($i277.shadow,$i280.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 162, 3} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i64($i274,$i281);
  $i282.shadow := $add.i64($i274.shadow,$i281.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($p1,$mul.ref(7,4));
  $p283.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p283 == $p283.shadow));
  $i284 := $load.i32($M.3,$p283);
  $i284.shadow := $load.i32($M.3.shadow,$p283.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i285 := $zext.i32.i64($i284);
  $i285.shadow := $zext.i32.i64($i284.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p2,$mul.ref(0,4));
  $p286.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p286 == $p286.shadow));
  $i287 := $load.i32($M.3,$p286);
  $i287.shadow := $load.i32($M.3.shadow,$p286.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i288 := $zext.i32.i64($i287);
  $i288.shadow := $zext.i32.i64($i287.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $mul.i64($i285,$i288);
  $i289.shadow := $mul.i64($i285.shadow,$i288.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 163, 3} true;
  assume {:verifier.code 0} true;
  $i290 := $add.i64($i282,$i289);
  $i290.shadow := $add.i64($i282.shadow,$i289.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 2} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(7,8));
  $p291.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(7,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 156, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p291 == $p291.shadow));
  $M.11 := $store.i64($M.11,$p291,$i290);
  $M.11.shadow := $store.i64($M.11.shadow,$p291.shadow,$i290.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($p1,$mul.ref(0,4));
  $p292.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p292 == $p292.shadow));
  $i293 := $load.i32($M.3,$p292);
  $i293.shadow := $load.i32($M.3.shadow,$p292.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $i294 := $zext.i32.i64($i293);
  $i294.shadow := $zext.i32.i64($i293.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p2,$mul.ref(8,4));
  $p295.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p295 == $p295.shadow));
  $i296 := $load.i32($M.3,$p295);
  $i296.shadow := $load.i32($M.3.shadow,$p295.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $i297 := $zext.i32.i64($i296);
  $i297.shadow := $zext.i32.i64($i296.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 10} true;
  assume {:verifier.code 0} true;
  $i298 := $mul.i64($i294,$i297);
  $i298.shadow := $mul.i64($i294.shadow,$i297.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p1,$mul.ref(1,4));
  $p299.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p299 == $p299.shadow));
  $i300 := $load.i32($M.3,$p299);
  $i300.shadow := $load.i32($M.3.shadow,$p299.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i301 := $zext.i32.i64($i300);
  $i301.shadow := $zext.i32.i64($i300.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p2,$mul.ref(7,4));
  $p302.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p302 == $p302.shadow));
  $i303 := $load.i32($M.3,$p302);
  $i303.shadow := $load.i32($M.3.shadow,$p302.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i304 := $zext.i32.i64($i303);
  $i304.shadow := $zext.i32.i64($i303.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 5} true;
  assume {:verifier.code 0} true;
  $i305 := $mul.i64($i301,$i304);
  $i305.shadow := $mul.i64($i301.shadow,$i304.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 165, 3} true;
  assume {:verifier.code 0} true;
  $i306 := $add.i64($i298,$i305);
  $i306.shadow := $add.i64($i298.shadow,$i305.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $p307 := $add.ref($p1,$mul.ref(2,4));
  $p307.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p307 == $p307.shadow));
  $i308 := $load.i32($M.3,$p307);
  $i308.shadow := $load.i32($M.3.shadow,$p307.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i309 := $zext.i32.i64($i308);
  $i309.shadow := $zext.i32.i64($i308.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p2,$mul.ref(6,4));
  $p310.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p310 == $p310.shadow));
  $i311 := $load.i32($M.3,$p310);
  $i311.shadow := $load.i32($M.3.shadow,$p310.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $zext.i32.i64($i311);
  $i312.shadow := $zext.i32.i64($i311.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $mul.i64($i309,$i312);
  $i313.shadow := $mul.i64($i309.shadow,$i312.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 166, 3} true;
  assume {:verifier.code 0} true;
  $i314 := $add.i64($i306,$i313);
  $i314.shadow := $add.i64($i306.shadow,$i313.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $p315 := $add.ref($p1,$mul.ref(3,4));
  $p315.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p315 == $p315.shadow));
  $i316 := $load.i32($M.3,$p315);
  $i316.shadow := $load.i32($M.3.shadow,$p315.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $zext.i32.i64($i316);
  $i317.shadow := $zext.i32.i64($i316.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p2,$mul.ref(5,4));
  $p318.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p318 == $p318.shadow));
  $i319 := $load.i32($M.3,$p318);
  $i319.shadow := $load.i32($M.3.shadow,$p318.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i320 := $zext.i32.i64($i319);
  $i320.shadow := $zext.i32.i64($i319.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 5} true;
  assume {:verifier.code 0} true;
  $i321 := $mul.i64($i317,$i320);
  $i321.shadow := $mul.i64($i317.shadow,$i320.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 167, 3} true;
  assume {:verifier.code 0} true;
  $i322 := $add.i64($i314,$i321);
  $i322.shadow := $add.i64($i314.shadow,$i321.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p1,$mul.ref(4,4));
  $p323.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p323 == $p323.shadow));
  $i324 := $load.i32($M.3,$p323);
  $i324.shadow := $load.i32($M.3.shadow,$p323.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i325 := $zext.i32.i64($i324);
  $i325.shadow := $zext.i32.i64($i324.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($p2,$mul.ref(4,4));
  $p326.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p326 == $p326.shadow));
  $i327 := $load.i32($M.3,$p326);
  $i327.shadow := $load.i32($M.3.shadow,$p326.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i328 := $zext.i32.i64($i327);
  $i328.shadow := $zext.i32.i64($i327.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i329 := $mul.i64($i325,$i328);
  $i329.shadow := $mul.i64($i325.shadow,$i328.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 168, 3} true;
  assume {:verifier.code 0} true;
  $i330 := $add.i64($i322,$i329);
  $i330.shadow := $add.i64($i322.shadow,$i329.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $p331 := $add.ref($p1,$mul.ref(5,4));
  $p331.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p331 == $p331.shadow));
  $i332 := $load.i32($M.3,$p331);
  $i332.shadow := $load.i32($M.3.shadow,$p331.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i333 := $zext.i32.i64($i332);
  $i333.shadow := $zext.i32.i64($i332.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($p2,$mul.ref(3,4));
  $p334.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p334 == $p334.shadow));
  $i335 := $load.i32($M.3,$p334);
  $i335.shadow := $load.i32($M.3.shadow,$p334.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i336 := $zext.i32.i64($i335);
  $i336.shadow := $zext.i32.i64($i335.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 5} true;
  assume {:verifier.code 0} true;
  $i337 := $mul.i64($i333,$i336);
  $i337.shadow := $mul.i64($i333.shadow,$i336.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 169, 3} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i64($i330,$i337);
  $i338.shadow := $add.i64($i330.shadow,$i337.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $p339 := $add.ref($p1,$mul.ref(6,4));
  $p339.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p339 == $p339.shadow));
  $i340 := $load.i32($M.3,$p339);
  $i340.shadow := $load.i32($M.3.shadow,$p339.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i341 := $zext.i32.i64($i340);
  $i341.shadow := $zext.i32.i64($i340.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $p342 := $add.ref($p2,$mul.ref(2,4));
  $p342.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p342 == $p342.shadow));
  $i343 := $load.i32($M.3,$p342);
  $i343.shadow := $load.i32($M.3.shadow,$p342.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i344 := $zext.i32.i64($i343);
  $i344.shadow := $zext.i32.i64($i343.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i345 := $mul.i64($i341,$i344);
  $i345.shadow := $mul.i64($i341.shadow,$i344.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 170, 3} true;
  assume {:verifier.code 0} true;
  $i346 := $add.i64($i338,$i345);
  $i346.shadow := $add.i64($i338.shadow,$i345.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p1,$mul.ref(7,4));
  $p347.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p347 == $p347.shadow));
  $i348 := $load.i32($M.3,$p347);
  $i348.shadow := $load.i32($M.3.shadow,$p347.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i349 := $zext.i32.i64($i348);
  $i349.shadow := $zext.i32.i64($i348.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $p350 := $add.ref($p2,$mul.ref(1,4));
  $p350.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p350 == $p350.shadow));
  $i351 := $load.i32($M.3,$p350);
  $i351.shadow := $load.i32($M.3.shadow,$p350.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $zext.i32.i64($i351);
  $i352.shadow := $zext.i32.i64($i351.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 5} true;
  assume {:verifier.code 0} true;
  $i353 := $mul.i64($i349,$i352);
  $i353.shadow := $mul.i64($i349.shadow,$i352.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 171, 3} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i64($i346,$i353);
  $i354.shadow := $add.i64($i346.shadow,$i353.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $p355 := $add.ref($p1,$mul.ref(8,4));
  $p355.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p355 == $p355.shadow));
  $i356 := $load.i32($M.3,$p355);
  $i356.shadow := $load.i32($M.3.shadow,$p355.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i357 := $zext.i32.i64($i356);
  $i357.shadow := $zext.i32.i64($i356.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($p2,$mul.ref(0,4));
  $p358.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p358 == $p358.shadow));
  $i359 := $load.i32($M.3,$p358);
  $i359.shadow := $load.i32($M.3.shadow,$p358.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i360 := $zext.i32.i64($i359);
  $i360.shadow := $zext.i32.i64($i359.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $mul.i64($i357,$i360);
  $i361.shadow := $mul.i64($i357.shadow,$i360.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 172, 3} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i64($i354,$i361);
  $i362.shadow := $add.i64($i354.shadow,$i361.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 2} true;
  assume {:verifier.code 0} true;
  $p363 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(8,8));
  $p363.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(8,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 164, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p363 == $p363.shadow));
  $M.11 := $store.i64($M.11,$p363,$i362);
  $M.11.shadow := $store.i64($M.11.shadow,$p363.shadow,$i362.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p1,$mul.ref(1,4));
  $p364.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p364 == $p364.shadow));
  $i365 := $load.i32($M.3,$p364);
  $i365.shadow := $load.i32($M.3.shadow,$p364.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $i366 := $zext.i32.i64($i365);
  $i366.shadow := $zext.i32.i64($i365.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $p367 := $add.ref($p2,$mul.ref(8,4));
  $p367.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p367 == $p367.shadow));
  $i368 := $load.i32($M.3,$p367);
  $i368.shadow := $load.i32($M.3.shadow,$p367.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $i369 := $zext.i32.i64($i368);
  $i369.shadow := $zext.i32.i64($i368.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 10} true;
  assume {:verifier.code 0} true;
  $i370 := $mul.i64($i366,$i369);
  $i370.shadow := $mul.i64($i366.shadow,$i369.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $p371 := $add.ref($p1,$mul.ref(2,4));
  $p371.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p371 == $p371.shadow));
  $i372 := $load.i32($M.3,$p371);
  $i372.shadow := $load.i32($M.3.shadow,$p371.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i373 := $zext.i32.i64($i372);
  $i373.shadow := $zext.i32.i64($i372.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $p374 := $add.ref($p2,$mul.ref(7,4));
  $p374.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p374 == $p374.shadow));
  $i375 := $load.i32($M.3,$p374);
  $i375.shadow := $load.i32($M.3.shadow,$p374.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $zext.i32.i64($i375);
  $i376.shadow := $zext.i32.i64($i375.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $mul.i64($i373,$i376);
  $i377.shadow := $mul.i64($i373.shadow,$i376.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 174, 3} true;
  assume {:verifier.code 0} true;
  $i378 := $add.i64($i370,$i377);
  $i378.shadow := $add.i64($i370.shadow,$i377.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $p379 := $add.ref($p1,$mul.ref(3,4));
  $p379.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p379 == $p379.shadow));
  $i380 := $load.i32($M.3,$p379);
  $i380.shadow := $load.i32($M.3.shadow,$p379.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i381 := $zext.i32.i64($i380);
  $i381.shadow := $zext.i32.i64($i380.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $p382 := $add.ref($p2,$mul.ref(6,4));
  $p382.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p382 == $p382.shadow));
  $i383 := $load.i32($M.3,$p382);
  $i383.shadow := $load.i32($M.3.shadow,$p382.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i384 := $zext.i32.i64($i383);
  $i384.shadow := $zext.i32.i64($i383.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 5} true;
  assume {:verifier.code 0} true;
  $i385 := $mul.i64($i381,$i384);
  $i385.shadow := $mul.i64($i381.shadow,$i384.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 175, 3} true;
  assume {:verifier.code 0} true;
  $i386 := $add.i64($i378,$i385);
  $i386.shadow := $add.i64($i378.shadow,$i385.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $p387 := $add.ref($p1,$mul.ref(4,4));
  $p387.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p387 == $p387.shadow));
  $i388 := $load.i32($M.3,$p387);
  $i388.shadow := $load.i32($M.3.shadow,$p387.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i389 := $zext.i32.i64($i388);
  $i389.shadow := $zext.i32.i64($i388.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $p390 := $add.ref($p2,$mul.ref(5,4));
  $p390.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p390 == $p390.shadow));
  $i391 := $load.i32($M.3,$p390);
  $i391.shadow := $load.i32($M.3.shadow,$p390.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $zext.i32.i64($i391);
  $i392.shadow := $zext.i32.i64($i391.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 5} true;
  assume {:verifier.code 0} true;
  $i393 := $mul.i64($i389,$i392);
  $i393.shadow := $mul.i64($i389.shadow,$i392.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 176, 3} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i64($i386,$i393);
  $i394.shadow := $add.i64($i386.shadow,$i393.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $p395 := $add.ref($p1,$mul.ref(5,4));
  $p395.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p395 == $p395.shadow));
  $i396 := $load.i32($M.3,$p395);
  $i396.shadow := $load.i32($M.3.shadow,$p395.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i397 := $zext.i32.i64($i396);
  $i397.shadow := $zext.i32.i64($i396.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $p398 := $add.ref($p2,$mul.ref(4,4));
  $p398.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p398 == $p398.shadow));
  $i399 := $load.i32($M.3,$p398);
  $i399.shadow := $load.i32($M.3.shadow,$p398.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i400 := $zext.i32.i64($i399);
  $i400.shadow := $zext.i32.i64($i399.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i401 := $mul.i64($i397,$i400);
  $i401.shadow := $mul.i64($i397.shadow,$i400.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 177, 3} true;
  assume {:verifier.code 0} true;
  $i402 := $add.i64($i394,$i401);
  $i402.shadow := $add.i64($i394.shadow,$i401.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $p403 := $add.ref($p1,$mul.ref(6,4));
  $p403.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p403 == $p403.shadow));
  $i404 := $load.i32($M.3,$p403);
  $i404.shadow := $load.i32($M.3.shadow,$p403.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $i405 := $zext.i32.i64($i404);
  $i405.shadow := $zext.i32.i64($i404.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $p406 := $add.ref($p2,$mul.ref(3,4));
  $p406.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p406 == $p406.shadow));
  $i407 := $load.i32($M.3,$p406);
  $i407.shadow := $load.i32($M.3.shadow,$p406.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $i408 := $zext.i32.i64($i407);
  $i408.shadow := $zext.i32.i64($i407.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 5} true;
  assume {:verifier.code 0} true;
  $i409 := $mul.i64($i405,$i408);
  $i409.shadow := $mul.i64($i405.shadow,$i408.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 178, 3} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i64($i402,$i409);
  $i410.shadow := $add.i64($i402.shadow,$i409.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $p411 := $add.ref($p1,$mul.ref(7,4));
  $p411.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p411 == $p411.shadow));
  $i412 := $load.i32($M.3,$p411);
  $i412.shadow := $load.i32($M.3.shadow,$p411.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i413 := $zext.i32.i64($i412);
  $i413.shadow := $zext.i32.i64($i412.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $p414 := $add.ref($p2,$mul.ref(2,4));
  $p414.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p414 == $p414.shadow));
  $i415 := $load.i32($M.3,$p414);
  $i415.shadow := $load.i32($M.3.shadow,$p414.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i416 := $zext.i32.i64($i415);
  $i416.shadow := $zext.i32.i64($i415.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i417 := $mul.i64($i413,$i416);
  $i417.shadow := $mul.i64($i413.shadow,$i416.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 179, 3} true;
  assume {:verifier.code 0} true;
  $i418 := $add.i64($i410,$i417);
  $i418.shadow := $add.i64($i410.shadow,$i417.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $p419 := $add.ref($p1,$mul.ref(8,4));
  $p419.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p419 == $p419.shadow));
  $i420 := $load.i32($M.3,$p419);
  $i420.shadow := $load.i32($M.3.shadow,$p419.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $i421 := $zext.i32.i64($i420);
  $i421.shadow := $zext.i32.i64($i420.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $p422 := $add.ref($p2,$mul.ref(1,4));
  $p422.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p422 == $p422.shadow));
  $i423 := $load.i32($M.3,$p422);
  $i423.shadow := $load.i32($M.3.shadow,$p422.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $i424 := $zext.i32.i64($i423);
  $i424.shadow := $zext.i32.i64($i423.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 5} true;
  assume {:verifier.code 0} true;
  $i425 := $mul.i64($i421,$i424);
  $i425.shadow := $mul.i64($i421.shadow,$i424.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 180, 3} true;
  assume {:verifier.code 0} true;
  $i426 := $add.i64($i418,$i425);
  $i426.shadow := $add.i64($i418.shadow,$i425.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 2} true;
  assume {:verifier.code 0} true;
  $p427 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(9,8));
  $p427.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(9,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 173, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p427 == $p427.shadow));
  $M.11 := $store.i64($M.11,$p427,$i426);
  $M.11.shadow := $store.i64($M.11.shadow,$p427.shadow,$i426.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $p428 := $add.ref($p1,$mul.ref(2,4));
  $p428.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p428 == $p428.shadow));
  $i429 := $load.i32($M.3,$p428);
  $i429.shadow := $load.i32($M.3.shadow,$p428.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $i430 := $zext.i32.i64($i429);
  $i430.shadow := $zext.i32.i64($i429.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $p431 := $add.ref($p2,$mul.ref(8,4));
  $p431.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p431 == $p431.shadow));
  $i432 := $load.i32($M.3,$p431);
  $i432.shadow := $load.i32($M.3.shadow,$p431.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $i433 := $zext.i32.i64($i432);
  $i433.shadow := $zext.i32.i64($i432.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 10} true;
  assume {:verifier.code 0} true;
  $i434 := $mul.i64($i430,$i433);
  $i434.shadow := $mul.i64($i430.shadow,$i433.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $p435 := $add.ref($p1,$mul.ref(3,4));
  $p435.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p435 == $p435.shadow));
  $i436 := $load.i32($M.3,$p435);
  $i436.shadow := $load.i32($M.3.shadow,$p435.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $zext.i32.i64($i436);
  $i437.shadow := $zext.i32.i64($i436.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $p438 := $add.ref($p2,$mul.ref(7,4));
  $p438.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p438 == $p438.shadow));
  $i439 := $load.i32($M.3,$p438);
  $i439.shadow := $load.i32($M.3.shadow,$p438.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $i440 := $zext.i32.i64($i439);
  $i440.shadow := $zext.i32.i64($i439.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 5} true;
  assume {:verifier.code 0} true;
  $i441 := $mul.i64($i437,$i440);
  $i441.shadow := $mul.i64($i437.shadow,$i440.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 182, 3} true;
  assume {:verifier.code 0} true;
  $i442 := $add.i64($i434,$i441);
  $i442.shadow := $add.i64($i434.shadow,$i441.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $p443 := $add.ref($p1,$mul.ref(4,4));
  $p443.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p443 == $p443.shadow));
  $i444 := $load.i32($M.3,$p443);
  $i444.shadow := $load.i32($M.3.shadow,$p443.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $i445 := $zext.i32.i64($i444);
  $i445.shadow := $zext.i32.i64($i444.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $p446 := $add.ref($p2,$mul.ref(6,4));
  $p446.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p446 == $p446.shadow));
  $i447 := $load.i32($M.3,$p446);
  $i447.shadow := $load.i32($M.3.shadow,$p446.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $zext.i32.i64($i447);
  $i448.shadow := $zext.i32.i64($i447.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 5} true;
  assume {:verifier.code 0} true;
  $i449 := $mul.i64($i445,$i448);
  $i449.shadow := $mul.i64($i445.shadow,$i448.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 183, 3} true;
  assume {:verifier.code 0} true;
  $i450 := $add.i64($i442,$i449);
  $i450.shadow := $add.i64($i442.shadow,$i449.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $p451 := $add.ref($p1,$mul.ref(5,4));
  $p451.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p451 == $p451.shadow));
  $i452 := $load.i32($M.3,$p451);
  $i452.shadow := $load.i32($M.3.shadow,$p451.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $i453 := $zext.i32.i64($i452);
  $i453.shadow := $zext.i32.i64($i452.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $p454 := $add.ref($p2,$mul.ref(5,4));
  $p454.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p454 == $p454.shadow));
  $i455 := $load.i32($M.3,$p454);
  $i455.shadow := $load.i32($M.3.shadow,$p454.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $i456 := $zext.i32.i64($i455);
  $i456.shadow := $zext.i32.i64($i455.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 5} true;
  assume {:verifier.code 0} true;
  $i457 := $mul.i64($i453,$i456);
  $i457.shadow := $mul.i64($i453.shadow,$i456.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 184, 3} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i64($i450,$i457);
  $i458.shadow := $add.i64($i450.shadow,$i457.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $p459 := $add.ref($p1,$mul.ref(6,4));
  $p459.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p459 == $p459.shadow));
  $i460 := $load.i32($M.3,$p459);
  $i460.shadow := $load.i32($M.3.shadow,$p459.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i461 := $zext.i32.i64($i460);
  $i461.shadow := $zext.i32.i64($i460.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $p462 := $add.ref($p2,$mul.ref(4,4));
  $p462.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p462 == $p462.shadow));
  $i463 := $load.i32($M.3,$p462);
  $i463.shadow := $load.i32($M.3.shadow,$p462.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i464 := $zext.i32.i64($i463);
  $i464.shadow := $zext.i32.i64($i463.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i465 := $mul.i64($i461,$i464);
  $i465.shadow := $mul.i64($i461.shadow,$i464.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 185, 3} true;
  assume {:verifier.code 0} true;
  $i466 := $add.i64($i458,$i465);
  $i466.shadow := $add.i64($i458.shadow,$i465.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $p467 := $add.ref($p1,$mul.ref(7,4));
  $p467.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p467 == $p467.shadow));
  $i468 := $load.i32($M.3,$p467);
  $i468.shadow := $load.i32($M.3.shadow,$p467.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $i469 := $zext.i32.i64($i468);
  $i469.shadow := $zext.i32.i64($i468.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($p2,$mul.ref(3,4));
  $p470.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p470 == $p470.shadow));
  $i471 := $load.i32($M.3,$p470);
  $i471.shadow := $load.i32($M.3.shadow,$p470.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $i472 := $zext.i32.i64($i471);
  $i472.shadow := $zext.i32.i64($i471.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 5} true;
  assume {:verifier.code 0} true;
  $i473 := $mul.i64($i469,$i472);
  $i473.shadow := $mul.i64($i469.shadow,$i472.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 186, 3} true;
  assume {:verifier.code 0} true;
  $i474 := $add.i64($i466,$i473);
  $i474.shadow := $add.i64($i466.shadow,$i473.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $p475 := $add.ref($p1,$mul.ref(8,4));
  $p475.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p475 == $p475.shadow));
  $i476 := $load.i32($M.3,$p475);
  $i476.shadow := $load.i32($M.3.shadow,$p475.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $i477 := $zext.i32.i64($i476);
  $i477.shadow := $zext.i32.i64($i476.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $p478 := $add.ref($p2,$mul.ref(2,4));
  $p478.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p478 == $p478.shadow));
  $i479 := $load.i32($M.3,$p478);
  $i479.shadow := $load.i32($M.3.shadow,$p478.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $i480 := $zext.i32.i64($i479);
  $i480.shadow := $zext.i32.i64($i479.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 5} true;
  assume {:verifier.code 0} true;
  $i481 := $mul.i64($i477,$i480);
  $i481.shadow := $mul.i64($i477.shadow,$i480.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 187, 3} true;
  assume {:verifier.code 0} true;
  $i482 := $add.i64($i474,$i481);
  $i482.shadow := $add.i64($i474.shadow,$i481.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 2} true;
  assume {:verifier.code 0} true;
  $p483 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(10,8));
  $p483.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(10,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 181, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p483 == $p483.shadow));
  $M.11 := $store.i64($M.11,$p483,$i482);
  $M.11.shadow := $store.i64($M.11.shadow,$p483.shadow,$i482.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $p484 := $add.ref($p1,$mul.ref(3,4));
  $p484.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p484 == $p484.shadow));
  $i485 := $load.i32($M.3,$p484);
  $i485.shadow := $load.i32($M.3.shadow,$p484.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $i486 := $zext.i32.i64($i485);
  $i486.shadow := $zext.i32.i64($i485.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $p487 := $add.ref($p2,$mul.ref(8,4));
  $p487.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p487 == $p487.shadow));
  $i488 := $load.i32($M.3,$p487);
  $i488.shadow := $load.i32($M.3.shadow,$p487.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $i489 := $zext.i32.i64($i488);
  $i489.shadow := $zext.i32.i64($i488.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 10} true;
  assume {:verifier.code 0} true;
  $i490 := $mul.i64($i486,$i489);
  $i490.shadow := $mul.i64($i486.shadow,$i489.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $p491 := $add.ref($p1,$mul.ref(4,4));
  $p491.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p491 == $p491.shadow));
  $i492 := $load.i32($M.3,$p491);
  $i492.shadow := $load.i32($M.3.shadow,$p491.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $i493 := $zext.i32.i64($i492);
  $i493.shadow := $zext.i32.i64($i492.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $p494 := $add.ref($p2,$mul.ref(7,4));
  $p494.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p494 == $p494.shadow));
  $i495 := $load.i32($M.3,$p494);
  $i495.shadow := $load.i32($M.3.shadow,$p494.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $i496 := $zext.i32.i64($i495);
  $i496.shadow := $zext.i32.i64($i495.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 5} true;
  assume {:verifier.code 0} true;
  $i497 := $mul.i64($i493,$i496);
  $i497.shadow := $mul.i64($i493.shadow,$i496.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 189, 3} true;
  assume {:verifier.code 0} true;
  $i498 := $add.i64($i490,$i497);
  $i498.shadow := $add.i64($i490.shadow,$i497.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $p499 := $add.ref($p1,$mul.ref(5,4));
  $p499.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p499 == $p499.shadow));
  $i500 := $load.i32($M.3,$p499);
  $i500.shadow := $load.i32($M.3.shadow,$p499.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i501 := $zext.i32.i64($i500);
  $i501.shadow := $zext.i32.i64($i500.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $p502 := $add.ref($p2,$mul.ref(6,4));
  $p502.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p502 == $p502.shadow));
  $i503 := $load.i32($M.3,$p502);
  $i503.shadow := $load.i32($M.3.shadow,$p502.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i504 := $zext.i32.i64($i503);
  $i504.shadow := $zext.i32.i64($i503.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i505 := $mul.i64($i501,$i504);
  $i505.shadow := $mul.i64($i501.shadow,$i504.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 190, 3} true;
  assume {:verifier.code 0} true;
  $i506 := $add.i64($i498,$i505);
  $i506.shadow := $add.i64($i498.shadow,$i505.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $p507 := $add.ref($p1,$mul.ref(6,4));
  $p507.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p507 == $p507.shadow));
  $i508 := $load.i32($M.3,$p507);
  $i508.shadow := $load.i32($M.3.shadow,$p507.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $i509 := $zext.i32.i64($i508);
  $i509.shadow := $zext.i32.i64($i508.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $p510 := $add.ref($p2,$mul.ref(5,4));
  $p510.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p510 == $p510.shadow));
  $i511 := $load.i32($M.3,$p510);
  $i511.shadow := $load.i32($M.3.shadow,$p510.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $i512 := $zext.i32.i64($i511);
  $i512.shadow := $zext.i32.i64($i511.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 5} true;
  assume {:verifier.code 0} true;
  $i513 := $mul.i64($i509,$i512);
  $i513.shadow := $mul.i64($i509.shadow,$i512.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 191, 3} true;
  assume {:verifier.code 0} true;
  $i514 := $add.i64($i506,$i513);
  $i514.shadow := $add.i64($i506.shadow,$i513.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $p515 := $add.ref($p1,$mul.ref(7,4));
  $p515.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p515 == $p515.shadow));
  $i516 := $load.i32($M.3,$p515);
  $i516.shadow := $load.i32($M.3.shadow,$p515.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i517 := $zext.i32.i64($i516);
  $i517.shadow := $zext.i32.i64($i516.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $p518 := $add.ref($p2,$mul.ref(4,4));
  $p518.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p518 == $p518.shadow));
  $i519 := $load.i32($M.3,$p518);
  $i519.shadow := $load.i32($M.3.shadow,$p518.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i520 := $zext.i32.i64($i519);
  $i520.shadow := $zext.i32.i64($i519.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i521 := $mul.i64($i517,$i520);
  $i521.shadow := $mul.i64($i517.shadow,$i520.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 192, 3} true;
  assume {:verifier.code 0} true;
  $i522 := $add.i64($i514,$i521);
  $i522.shadow := $add.i64($i514.shadow,$i521.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $p523 := $add.ref($p1,$mul.ref(8,4));
  $p523.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p523 == $p523.shadow));
  $i524 := $load.i32($M.3,$p523);
  $i524.shadow := $load.i32($M.3.shadow,$p523.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $i525 := $zext.i32.i64($i524);
  $i525.shadow := $zext.i32.i64($i524.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $p526 := $add.ref($p2,$mul.ref(3,4));
  $p526.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p526 == $p526.shadow));
  $i527 := $load.i32($M.3,$p526);
  $i527.shadow := $load.i32($M.3.shadow,$p526.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $i528 := $zext.i32.i64($i527);
  $i528.shadow := $zext.i32.i64($i527.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 5} true;
  assume {:verifier.code 0} true;
  $i529 := $mul.i64($i525,$i528);
  $i529.shadow := $mul.i64($i525.shadow,$i528.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 193, 3} true;
  assume {:verifier.code 0} true;
  $i530 := $add.i64($i522,$i529);
  $i530.shadow := $add.i64($i522.shadow,$i529.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 2} true;
  assume {:verifier.code 0} true;
  $p531 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(11,8));
  $p531.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(11,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 188, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p531 == $p531.shadow));
  $M.11 := $store.i64($M.11,$p531,$i530);
  $M.11.shadow := $store.i64($M.11.shadow,$p531.shadow,$i530.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $p532 := $add.ref($p1,$mul.ref(4,4));
  $p532.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p532 == $p532.shadow));
  $i533 := $load.i32($M.3,$p532);
  $i533.shadow := $load.i32($M.3.shadow,$p532.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $i534 := $zext.i32.i64($i533);
  $i534.shadow := $zext.i32.i64($i533.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $p535 := $add.ref($p2,$mul.ref(8,4));
  $p535.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p535 == $p535.shadow));
  $i536 := $load.i32($M.3,$p535);
  $i536.shadow := $load.i32($M.3.shadow,$p535.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $i537 := $zext.i32.i64($i536);
  $i537.shadow := $zext.i32.i64($i536.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 10} true;
  assume {:verifier.code 0} true;
  $i538 := $mul.i64($i534,$i537);
  $i538.shadow := $mul.i64($i534.shadow,$i537.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $p539 := $add.ref($p1,$mul.ref(5,4));
  $p539.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p539 == $p539.shadow));
  $i540 := $load.i32($M.3,$p539);
  $i540.shadow := $load.i32($M.3.shadow,$p539.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $i541 := $zext.i32.i64($i540);
  $i541.shadow := $zext.i32.i64($i540.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $p542 := $add.ref($p2,$mul.ref(7,4));
  $p542.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p542 == $p542.shadow));
  $i543 := $load.i32($M.3,$p542);
  $i543.shadow := $load.i32($M.3.shadow,$p542.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $i544 := $zext.i32.i64($i543);
  $i544.shadow := $zext.i32.i64($i543.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 5} true;
  assume {:verifier.code 0} true;
  $i545 := $mul.i64($i541,$i544);
  $i545.shadow := $mul.i64($i541.shadow,$i544.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 195, 3} true;
  assume {:verifier.code 0} true;
  $i546 := $add.i64($i538,$i545);
  $i546.shadow := $add.i64($i538.shadow,$i545.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $p547 := $add.ref($p1,$mul.ref(6,4));
  $p547.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p547 == $p547.shadow));
  $i548 := $load.i32($M.3,$p547);
  $i548.shadow := $load.i32($M.3.shadow,$p547.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i549 := $zext.i32.i64($i548);
  $i549.shadow := $zext.i32.i64($i548.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $p550 := $add.ref($p2,$mul.ref(6,4));
  $p550.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p550 == $p550.shadow));
  $i551 := $load.i32($M.3,$p550);
  $i551.shadow := $load.i32($M.3.shadow,$p550.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i552 := $zext.i32.i64($i551);
  $i552.shadow := $zext.i32.i64($i551.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i553 := $mul.i64($i549,$i552);
  $i553.shadow := $mul.i64($i549.shadow,$i552.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 196, 3} true;
  assume {:verifier.code 0} true;
  $i554 := $add.i64($i546,$i553);
  $i554.shadow := $add.i64($i546.shadow,$i553.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $p555 := $add.ref($p1,$mul.ref(7,4));
  $p555.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p555 == $p555.shadow));
  $i556 := $load.i32($M.3,$p555);
  $i556.shadow := $load.i32($M.3.shadow,$p555.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $i557 := $zext.i32.i64($i556);
  $i557.shadow := $zext.i32.i64($i556.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $p558 := $add.ref($p2,$mul.ref(5,4));
  $p558.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p558 == $p558.shadow));
  $i559 := $load.i32($M.3,$p558);
  $i559.shadow := $load.i32($M.3.shadow,$p558.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $i560 := $zext.i32.i64($i559);
  $i560.shadow := $zext.i32.i64($i559.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 5} true;
  assume {:verifier.code 0} true;
  $i561 := $mul.i64($i557,$i560);
  $i561.shadow := $mul.i64($i557.shadow,$i560.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 197, 3} true;
  assume {:verifier.code 0} true;
  $i562 := $add.i64($i554,$i561);
  $i562.shadow := $add.i64($i554.shadow,$i561.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $p563 := $add.ref($p1,$mul.ref(8,4));
  $p563.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p563 == $p563.shadow));
  $i564 := $load.i32($M.3,$p563);
  $i564.shadow := $load.i32($M.3.shadow,$p563.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $i565 := $zext.i32.i64($i564);
  $i565.shadow := $zext.i32.i64($i564.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $p566 := $add.ref($p2,$mul.ref(4,4));
  $p566.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p566 == $p566.shadow));
  $i567 := $load.i32($M.3,$p566);
  $i567.shadow := $load.i32($M.3.shadow,$p566.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $i568 := $zext.i32.i64($i567);
  $i568.shadow := $zext.i32.i64($i567.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 5} true;
  assume {:verifier.code 0} true;
  $i569 := $mul.i64($i565,$i568);
  $i569.shadow := $mul.i64($i565.shadow,$i568.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 198, 3} true;
  assume {:verifier.code 0} true;
  $i570 := $add.i64($i562,$i569);
  $i570.shadow := $add.i64($i562.shadow,$i569.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 2} true;
  assume {:verifier.code 0} true;
  $p571 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(12,8));
  $p571.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(12,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 194, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p571 == $p571.shadow));
  $M.11 := $store.i64($M.11,$p571,$i570);
  $M.11.shadow := $store.i64($M.11.shadow,$p571.shadow,$i570.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $p572 := $add.ref($p1,$mul.ref(5,4));
  $p572.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p572 == $p572.shadow));
  $i573 := $load.i32($M.3,$p572);
  $i573.shadow := $load.i32($M.3.shadow,$p572.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $i574 := $zext.i32.i64($i573);
  $i574.shadow := $zext.i32.i64($i573.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $p575 := $add.ref($p2,$mul.ref(8,4));
  $p575.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p575 == $p575.shadow));
  $i576 := $load.i32($M.3,$p575);
  $i576.shadow := $load.i32($M.3.shadow,$p575.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $i577 := $zext.i32.i64($i576);
  $i577.shadow := $zext.i32.i64($i576.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 10} true;
  assume {:verifier.code 0} true;
  $i578 := $mul.i64($i574,$i577);
  $i578.shadow := $mul.i64($i574.shadow,$i577.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $p579 := $add.ref($p1,$mul.ref(6,4));
  $p579.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p579 == $p579.shadow));
  $i580 := $load.i32($M.3,$p579);
  $i580.shadow := $load.i32($M.3.shadow,$p579.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $i581 := $zext.i32.i64($i580);
  $i581.shadow := $zext.i32.i64($i580.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $p582 := $add.ref($p2,$mul.ref(7,4));
  $p582.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p582 == $p582.shadow));
  $i583 := $load.i32($M.3,$p582);
  $i583.shadow := $load.i32($M.3.shadow,$p582.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $i584 := $zext.i32.i64($i583);
  $i584.shadow := $zext.i32.i64($i583.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 5} true;
  assume {:verifier.code 0} true;
  $i585 := $mul.i64($i581,$i584);
  $i585.shadow := $mul.i64($i581.shadow,$i584.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 200, 3} true;
  assume {:verifier.code 0} true;
  $i586 := $add.i64($i578,$i585);
  $i586.shadow := $add.i64($i578.shadow,$i585.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $p587 := $add.ref($p1,$mul.ref(7,4));
  $p587.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p587 == $p587.shadow));
  $i588 := $load.i32($M.3,$p587);
  $i588.shadow := $load.i32($M.3.shadow,$p587.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i589 := $zext.i32.i64($i588);
  $i589.shadow := $zext.i32.i64($i588.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $p590 := $add.ref($p2,$mul.ref(6,4));
  $p590.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p590 == $p590.shadow));
  $i591 := $load.i32($M.3,$p590);
  $i591.shadow := $load.i32($M.3.shadow,$p590.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i592 := $zext.i32.i64($i591);
  $i592.shadow := $zext.i32.i64($i591.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i593 := $mul.i64($i589,$i592);
  $i593.shadow := $mul.i64($i589.shadow,$i592.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 201, 3} true;
  assume {:verifier.code 0} true;
  $i594 := $add.i64($i586,$i593);
  $i594.shadow := $add.i64($i586.shadow,$i593.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $p595 := $add.ref($p1,$mul.ref(8,4));
  $p595.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p595 == $p595.shadow));
  $i596 := $load.i32($M.3,$p595);
  $i596.shadow := $load.i32($M.3.shadow,$p595.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $i597 := $zext.i32.i64($i596);
  $i597.shadow := $zext.i32.i64($i596.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $p598 := $add.ref($p2,$mul.ref(5,4));
  $p598.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p598 == $p598.shadow));
  $i599 := $load.i32($M.3,$p598);
  $i599.shadow := $load.i32($M.3.shadow,$p598.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $i600 := $zext.i32.i64($i599);
  $i600.shadow := $zext.i32.i64($i599.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 5} true;
  assume {:verifier.code 0} true;
  $i601 := $mul.i64($i597,$i600);
  $i601.shadow := $mul.i64($i597.shadow,$i600.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 202, 3} true;
  assume {:verifier.code 0} true;
  $i602 := $add.i64($i594,$i601);
  $i602.shadow := $add.i64($i594.shadow,$i601.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 2} true;
  assume {:verifier.code 0} true;
  $p603 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(13,8));
  $p603.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(13,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 199, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p603 == $p603.shadow));
  $M.11 := $store.i64($M.11,$p603,$i602);
  $M.11.shadow := $store.i64($M.11.shadow,$p603.shadow,$i602.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $p604 := $add.ref($p1,$mul.ref(6,4));
  $p604.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p604 == $p604.shadow));
  $i605 := $load.i32($M.3,$p604);
  $i605.shadow := $load.i32($M.3.shadow,$p604.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $i606 := $zext.i32.i64($i605);
  $i606.shadow := $zext.i32.i64($i605.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $p607 := $add.ref($p2,$mul.ref(8,4));
  $p607.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p607 == $p607.shadow));
  $i608 := $load.i32($M.3,$p607);
  $i608.shadow := $load.i32($M.3.shadow,$p607.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $i609 := $zext.i32.i64($i608);
  $i609.shadow := $zext.i32.i64($i608.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 10} true;
  assume {:verifier.code 0} true;
  $i610 := $mul.i64($i606,$i609);
  $i610.shadow := $mul.i64($i606.shadow,$i609.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $p611 := $add.ref($p1,$mul.ref(7,4));
  $p611.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p611 == $p611.shadow));
  $i612 := $load.i32($M.3,$p611);
  $i612.shadow := $load.i32($M.3.shadow,$p611.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $i613 := $zext.i32.i64($i612);
  $i613.shadow := $zext.i32.i64($i612.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $p614 := $add.ref($p2,$mul.ref(7,4));
  $p614.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p614 == $p614.shadow));
  $i615 := $load.i32($M.3,$p614);
  $i615.shadow := $load.i32($M.3.shadow,$p614.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $i616 := $zext.i32.i64($i615);
  $i616.shadow := $zext.i32.i64($i615.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 5} true;
  assume {:verifier.code 0} true;
  $i617 := $mul.i64($i613,$i616);
  $i617.shadow := $mul.i64($i613.shadow,$i616.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 204, 3} true;
  assume {:verifier.code 0} true;
  $i618 := $add.i64($i610,$i617);
  $i618.shadow := $add.i64($i610.shadow,$i617.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $p619 := $add.ref($p1,$mul.ref(8,4));
  $p619.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p619 == $p619.shadow));
  $i620 := $load.i32($M.3,$p619);
  $i620.shadow := $load.i32($M.3.shadow,$p619.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $i621 := $zext.i32.i64($i620);
  $i621.shadow := $zext.i32.i64($i620.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $p622 := $add.ref($p2,$mul.ref(6,4));
  $p622.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p622 == $p622.shadow));
  $i623 := $load.i32($M.3,$p622);
  $i623.shadow := $load.i32($M.3.shadow,$p622.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $i624 := $zext.i32.i64($i623);
  $i624.shadow := $zext.i32.i64($i623.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 5} true;
  assume {:verifier.code 0} true;
  $i625 := $mul.i64($i621,$i624);
  $i625.shadow := $mul.i64($i621.shadow,$i624.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 205, 3} true;
  assume {:verifier.code 0} true;
  $i626 := $add.i64($i618,$i625);
  $i626.shadow := $add.i64($i618.shadow,$i625.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 2} true;
  assume {:verifier.code 0} true;
  $p627 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(14,8));
  $p627.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(14,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 203, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p627 == $p627.shadow));
  $M.11 := $store.i64($M.11,$p627,$i626);
  $M.11.shadow := $store.i64($M.11.shadow,$p627.shadow,$i626.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $p628 := $add.ref($p1,$mul.ref(7,4));
  $p628.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p628 == $p628.shadow));
  $i629 := $load.i32($M.3,$p628);
  $i629.shadow := $load.i32($M.3.shadow,$p628.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $i630 := $zext.i32.i64($i629);
  $i630.shadow := $zext.i32.i64($i629.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $p631 := $add.ref($p2,$mul.ref(8,4));
  $p631.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p631 == $p631.shadow));
  $i632 := $load.i32($M.3,$p631);
  $i632.shadow := $load.i32($M.3.shadow,$p631.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $i633 := $zext.i32.i64($i632);
  $i633.shadow := $zext.i32.i64($i632.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 10} true;
  assume {:verifier.code 0} true;
  $i634 := $mul.i64($i630,$i633);
  $i634.shadow := $mul.i64($i630.shadow,$i633.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $p635 := $add.ref($p1,$mul.ref(8,4));
  $p635.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p635 == $p635.shadow));
  $i636 := $load.i32($M.3,$p635);
  $i636.shadow := $load.i32($M.3.shadow,$p635.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i637 := $zext.i32.i64($i636);
  $i637.shadow := $zext.i32.i64($i636.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $p638 := $add.ref($p2,$mul.ref(7,4));
  $p638.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p638 == $p638.shadow));
  $i639 := $load.i32($M.3,$p638);
  $i639.shadow := $load.i32($M.3.shadow,$p638.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i640 := $zext.i32.i64($i639);
  $i640.shadow := $zext.i32.i64($i639.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i641 := $mul.i64($i637,$i640);
  $i641.shadow := $mul.i64($i637.shadow,$i640.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 207, 3} true;
  assume {:verifier.code 0} true;
  $i642 := $add.i64($i634,$i641);
  $i642.shadow := $add.i64($i634.shadow,$i641.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 2} true;
  assume {:verifier.code 0} true;
  $p643 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(15,8));
  $p643.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(15,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 206, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p643 == $p643.shadow));
  $M.11 := $store.i64($M.11,$p643,$i642);
  $M.11.shadow := $store.i64($M.11.shadow,$p643.shadow,$i642.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $p644 := $add.ref($p1,$mul.ref(8,4));
  $p644.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p644 == $p644.shadow));
  $i645 := $load.i32($M.3,$p644);
  $i645.shadow := $load.i32($M.3.shadow,$p644.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $i646 := $zext.i32.i64($i645);
  $i646.shadow := $zext.i32.i64($i645.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $p647 := $add.ref($p2,$mul.ref(8,4));
  $p647.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p647 == $p647.shadow));
  $i648 := $load.i32($M.3,$p647);
  $i648.shadow := $load.i32($M.3.shadow,$p647.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $i649 := $zext.i32.i64($i648);
  $i649.shadow := $zext.i32.i64($i648.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 10} true;
  assume {:verifier.code 0} true;
  $i650 := $mul.i64($i646,$i649);
  $i650.shadow := $mul.i64($i646.shadow,$i649.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 2} true;
  assume {:verifier.code 0} true;
  $p651 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref(16,8));
  $p651.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref(16,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 208, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p651 == $p651.shadow));
  $M.11 := $store.i64($M.11,$p651,$i650);
  $M.11.shadow := $store.i64($M.11.shadow,$p651.shadow,$i650.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 214, 7} true;
  assume {:verifier.code 0} true;
  $i652 := 0;
  $i652.shadow := 0;
  $i653 := 0;
  $i653.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i653 == $i653.shadow);
  assert {:shadow_invariant} ($p3 == $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 214, 16} true;
  assume {:verifier.code 0} true;
  $i654 := $slt.i32($i653,17);
  $i654.shadow := $slt.i32($i653.shadow,17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 214, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i654} true;
  $shadow_ok := ($shadow_ok && ($i654 == $i654.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i654 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 217, 7} true;
  assume {:verifier.code 0} true;
  $i655 := $sext.i32.i64($i653);
  $i655.shadow := $sext.i32.i64($i653.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 217, 7} true;
  assume {:verifier.code 0} true;
  $p656 := $add.ref($add.ref($p3,$mul.ref(0,136)),$mul.ref($i655,8));
  $p656.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,136)),$mul.ref($i655.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 217, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p656 == $p656.shadow));
  $i657 := $load.i64($M.11,$p656);
  $i657.shadow := $load.i64($M.11.shadow,$p656.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 217, 12} true;
  assume {:verifier.code 0} true;
  $i658 := $add.i64($i657,$i652);
  $i658.shadow := $add.i64($i657.shadow,$i652.shadow);
  call {:cexpr "w"} boogie_si_record_i64($i658);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 218, 10} true;
  assume {:verifier.code 0} true;
  $i659 := $trunc.i64.i32($i658);
  $i659.shadow := $trunc.i64.i32($i658.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 218, 22} true;
  assume {:verifier.code 0} true;
  $i660 := $and.i32($i659,1073741823);
  $i660.shadow := $and.i32($i659.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 218, 3} true;
  assume {:verifier.code 0} true;
  $i661 := $sext.i32.i64($i653);
  $i661.shadow := $sext.i32.i64($i653.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 218, 3} true;
  assume {:verifier.code 0} true;
  $p662 := $add.ref($p0,$mul.ref($i661,4));
  $p662.shadow := $add.ref($p0.shadow,$mul.ref($i661.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 218, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p662 == $p662.shadow));
  $M.9 := $store.i32($M.9,$p662,$i660);
  $M.9.shadow := $store.i32($M.9.shadow,$p662.shadow,$i660.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 219, 10} true;
  assume {:verifier.code 0} true;
  $i663 := $lshr.i64($i658,30);
  $i663.shadow := $lshr.i64($i658.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i64($i663);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 220, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i654 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 221, 10} true;
  assume {:verifier.code 0} true;
  $i665 := $trunc.i64.i32($i652);
  $i665.shadow := $trunc.i64.i32($i652.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 221, 2} true;
  assume {:verifier.code 0} true;
  $p666 := $add.ref($p0,$mul.ref(17,4));
  $p666.shadow := $add.ref($p0.shadow,$mul.ref(17,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 221, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p666 == $p666.shadow));
  $M.9 := $store.i32($M.9,$p666,$i665);
  $M.9.shadow := $store.i32($M.9.shadow,$p666.shadow,$i665.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 222, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 214, 24} true;
  assume {:verifier.code 0} true;
  $i664 := $add.i32($i653,1);
  $i664.shadow := $add.i32($i653.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i664);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 214, 2} true;
  assume {:verifier.code 0} true;
  $i652 := $i663;
  $i652.shadow := $i663.shadow;
  $i653 := $i664;
  $i653.shadow := $i664.shadow;
  goto $bb1;
}
const square9: ref;
axiom (square9 == $sub.ref(0,32217));
procedure {:inline 1} square9($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref)
modifies $M.12, $M.7, $exn;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $i4: i32;
  var $i4.shadow: i32;
  var $i5: i64;
  var $i5.shadow: i64;
  var $p6: ref;
  var $p6.shadow: ref;
  var $i7: i32;
  var $i7.shadow: i32;
  var $i8: i64;
  var $i8.shadow: i64;
  var $i9: i64;
  var $i9.shadow: i64;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $i12: i32;
  var $i12.shadow: i32;
  var $i13: i64;
  var $i13.shadow: i64;
  var $p14: ref;
  var $p14.shadow: ref;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i64;
  var $i16.shadow: i64;
  var $i17: i64;
  var $i17.shadow: i64;
  var $i18: i64;
  var $i18.shadow: i64;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $i21: i32;
  var $i21.shadow: i32;
  var $i22: i64;
  var $i22.shadow: i64;
  var $p23: ref;
  var $p23.shadow: ref;
  var $i24: i32;
  var $i24.shadow: i32;
  var $i25: i64;
  var $i25.shadow: i64;
  var $i26: i64;
  var $i26.shadow: i64;
  var $p27: ref;
  var $p27.shadow: ref;
  var $i28: i32;
  var $i28.shadow: i32;
  var $i29: i64;
  var $i29.shadow: i64;
  var $p30: ref;
  var $p30.shadow: ref;
  var $i31: i32;
  var $i31.shadow: i32;
  var $i32: i64;
  var $i32.shadow: i64;
  var $i33: i64;
  var $i33.shadow: i64;
  var $i34: i64;
  var $i34.shadow: i64;
  var $i35: i64;
  var $i35.shadow: i64;
  var $p36: ref;
  var $p36.shadow: ref;
  var $p37: ref;
  var $p37.shadow: ref;
  var $i38: i32;
  var $i38.shadow: i32;
  var $i39: i64;
  var $i39.shadow: i64;
  var $p40: ref;
  var $p40.shadow: ref;
  var $i41: i32;
  var $i41.shadow: i32;
  var $i42: i64;
  var $i42.shadow: i64;
  var $i43: i64;
  var $i43.shadow: i64;
  var $p44: ref;
  var $p44.shadow: ref;
  var $i45: i32;
  var $i45.shadow: i32;
  var $i46: i64;
  var $i46.shadow: i64;
  var $p47: ref;
  var $p47.shadow: ref;
  var $i48: i32;
  var $i48.shadow: i32;
  var $i49: i64;
  var $i49.shadow: i64;
  var $i50: i64;
  var $i50.shadow: i64;
  var $i51: i64;
  var $i51.shadow: i64;
  var $i52: i64;
  var $i52.shadow: i64;
  var $p53: ref;
  var $p53.shadow: ref;
  var $p54: ref;
  var $p54.shadow: ref;
  var $i55: i32;
  var $i55.shadow: i32;
  var $i56: i64;
  var $i56.shadow: i64;
  var $p57: ref;
  var $p57.shadow: ref;
  var $i58: i32;
  var $i58.shadow: i32;
  var $i59: i64;
  var $i59.shadow: i64;
  var $i60: i64;
  var $i60.shadow: i64;
  var $p61: ref;
  var $p61.shadow: ref;
  var $i62: i32;
  var $i62.shadow: i32;
  var $i63: i64;
  var $i63.shadow: i64;
  var $p64: ref;
  var $p64.shadow: ref;
  var $i65: i32;
  var $i65.shadow: i32;
  var $i66: i64;
  var $i66.shadow: i64;
  var $i67: i64;
  var $i67.shadow: i64;
  var $p68: ref;
  var $p68.shadow: ref;
  var $i69: i32;
  var $i69.shadow: i32;
  var $i70: i64;
  var $i70.shadow: i64;
  var $p71: ref;
  var $p71.shadow: ref;
  var $i72: i32;
  var $i72.shadow: i32;
  var $i73: i64;
  var $i73.shadow: i64;
  var $i74: i64;
  var $i74.shadow: i64;
  var $i75: i64;
  var $i75.shadow: i64;
  var $i76: i64;
  var $i76.shadow: i64;
  var $i77: i64;
  var $i77.shadow: i64;
  var $p78: ref;
  var $p78.shadow: ref;
  var $p79: ref;
  var $p79.shadow: ref;
  var $i80: i32;
  var $i80.shadow: i32;
  var $i81: i64;
  var $i81.shadow: i64;
  var $p82: ref;
  var $p82.shadow: ref;
  var $i83: i32;
  var $i83.shadow: i32;
  var $i84: i64;
  var $i84.shadow: i64;
  var $i85: i64;
  var $i85.shadow: i64;
  var $p86: ref;
  var $p86.shadow: ref;
  var $i87: i32;
  var $i87.shadow: i32;
  var $i88: i64;
  var $i88.shadow: i64;
  var $p89: ref;
  var $p89.shadow: ref;
  var $i90: i32;
  var $i90.shadow: i32;
  var $i91: i64;
  var $i91.shadow: i64;
  var $i92: i64;
  var $i92.shadow: i64;
  var $i93: i64;
  var $i93.shadow: i64;
  var $p94: ref;
  var $p94.shadow: ref;
  var $i95: i32;
  var $i95.shadow: i32;
  var $i96: i64;
  var $i96.shadow: i64;
  var $p97: ref;
  var $p97.shadow: ref;
  var $i98: i32;
  var $i98.shadow: i32;
  var $i99: i64;
  var $i99.shadow: i64;
  var $i100: i64;
  var $i100.shadow: i64;
  var $i101: i64;
  var $i101.shadow: i64;
  var $i102: i64;
  var $i102.shadow: i64;
  var $p103: ref;
  var $p103.shadow: ref;
  var $p104: ref;
  var $p104.shadow: ref;
  var $i105: i32;
  var $i105.shadow: i32;
  var $i106: i64;
  var $i106.shadow: i64;
  var $p107: ref;
  var $p107.shadow: ref;
  var $i108: i32;
  var $i108.shadow: i32;
  var $i109: i64;
  var $i109.shadow: i64;
  var $i110: i64;
  var $i110.shadow: i64;
  var $p111: ref;
  var $p111.shadow: ref;
  var $i112: i32;
  var $i112.shadow: i32;
  var $i113: i64;
  var $i113.shadow: i64;
  var $p114: ref;
  var $p114.shadow: ref;
  var $i115: i32;
  var $i115.shadow: i32;
  var $i116: i64;
  var $i116.shadow: i64;
  var $i117: i64;
  var $i117.shadow: i64;
  var $p118: ref;
  var $p118.shadow: ref;
  var $i119: i32;
  var $i119.shadow: i32;
  var $i120: i64;
  var $i120.shadow: i64;
  var $p121: ref;
  var $p121.shadow: ref;
  var $i122: i32;
  var $i122.shadow: i32;
  var $i123: i64;
  var $i123.shadow: i64;
  var $i124: i64;
  var $i124.shadow: i64;
  var $i125: i64;
  var $i125.shadow: i64;
  var $p126: ref;
  var $p126.shadow: ref;
  var $i127: i32;
  var $i127.shadow: i32;
  var $i128: i64;
  var $i128.shadow: i64;
  var $p129: ref;
  var $p129.shadow: ref;
  var $i130: i32;
  var $i130.shadow: i32;
  var $i131: i64;
  var $i131.shadow: i64;
  var $i132: i64;
  var $i132.shadow: i64;
  var $i133: i64;
  var $i133.shadow: i64;
  var $i134: i64;
  var $i134.shadow: i64;
  var $i135: i64;
  var $i135.shadow: i64;
  var $p136: ref;
  var $p136.shadow: ref;
  var $p137: ref;
  var $p137.shadow: ref;
  var $i138: i32;
  var $i138.shadow: i32;
  var $i139: i64;
  var $i139.shadow: i64;
  var $p140: ref;
  var $p140.shadow: ref;
  var $i141: i32;
  var $i141.shadow: i32;
  var $i142: i64;
  var $i142.shadow: i64;
  var $i143: i64;
  var $i143.shadow: i64;
  var $p144: ref;
  var $p144.shadow: ref;
  var $i145: i32;
  var $i145.shadow: i32;
  var $i146: i64;
  var $i146.shadow: i64;
  var $p147: ref;
  var $p147.shadow: ref;
  var $i148: i32;
  var $i148.shadow: i32;
  var $i149: i64;
  var $i149.shadow: i64;
  var $i150: i64;
  var $i150.shadow: i64;
  var $i151: i64;
  var $i151.shadow: i64;
  var $p152: ref;
  var $p152.shadow: ref;
  var $i153: i32;
  var $i153.shadow: i32;
  var $i154: i64;
  var $i154.shadow: i64;
  var $p155: ref;
  var $p155.shadow: ref;
  var $i156: i32;
  var $i156.shadow: i32;
  var $i157: i64;
  var $i157.shadow: i64;
  var $i158: i64;
  var $i158.shadow: i64;
  var $i159: i64;
  var $i159.shadow: i64;
  var $p160: ref;
  var $p160.shadow: ref;
  var $i161: i32;
  var $i161.shadow: i32;
  var $i162: i64;
  var $i162.shadow: i64;
  var $p163: ref;
  var $p163.shadow: ref;
  var $i164: i32;
  var $i164.shadow: i32;
  var $i165: i64;
  var $i165.shadow: i64;
  var $i166: i64;
  var $i166.shadow: i64;
  var $i167: i64;
  var $i167.shadow: i64;
  var $i168: i64;
  var $i168.shadow: i64;
  var $p169: ref;
  var $p169.shadow: ref;
  var $p170: ref;
  var $p170.shadow: ref;
  var $i171: i32;
  var $i171.shadow: i32;
  var $i172: i64;
  var $i172.shadow: i64;
  var $p173: ref;
  var $p173.shadow: ref;
  var $i174: i32;
  var $i174.shadow: i32;
  var $i175: i64;
  var $i175.shadow: i64;
  var $i176: i64;
  var $i176.shadow: i64;
  var $p177: ref;
  var $p177.shadow: ref;
  var $i178: i32;
  var $i178.shadow: i32;
  var $i179: i64;
  var $i179.shadow: i64;
  var $p180: ref;
  var $p180.shadow: ref;
  var $i181: i32;
  var $i181.shadow: i32;
  var $i182: i64;
  var $i182.shadow: i64;
  var $i183: i64;
  var $i183.shadow: i64;
  var $p184: ref;
  var $p184.shadow: ref;
  var $i185: i32;
  var $i185.shadow: i32;
  var $i186: i64;
  var $i186.shadow: i64;
  var $p187: ref;
  var $p187.shadow: ref;
  var $i188: i32;
  var $i188.shadow: i32;
  var $i189: i64;
  var $i189.shadow: i64;
  var $i190: i64;
  var $i190.shadow: i64;
  var $i191: i64;
  var $i191.shadow: i64;
  var $p192: ref;
  var $p192.shadow: ref;
  var $i193: i32;
  var $i193.shadow: i32;
  var $i194: i64;
  var $i194.shadow: i64;
  var $p195: ref;
  var $p195.shadow: ref;
  var $i196: i32;
  var $i196.shadow: i32;
  var $i197: i64;
  var $i197.shadow: i64;
  var $i198: i64;
  var $i198.shadow: i64;
  var $i199: i64;
  var $i199.shadow: i64;
  var $p200: ref;
  var $p200.shadow: ref;
  var $i201: i32;
  var $i201.shadow: i32;
  var $i202: i64;
  var $i202.shadow: i64;
  var $p203: ref;
  var $p203.shadow: ref;
  var $i204: i32;
  var $i204.shadow: i32;
  var $i205: i64;
  var $i205.shadow: i64;
  var $i206: i64;
  var $i206.shadow: i64;
  var $i207: i64;
  var $i207.shadow: i64;
  var $i208: i64;
  var $i208.shadow: i64;
  var $i209: i64;
  var $i209.shadow: i64;
  var $p210: ref;
  var $p210.shadow: ref;
  var $p211: ref;
  var $p211.shadow: ref;
  var $i212: i32;
  var $i212.shadow: i32;
  var $i213: i64;
  var $i213.shadow: i64;
  var $p214: ref;
  var $p214.shadow: ref;
  var $i215: i32;
  var $i215.shadow: i32;
  var $i216: i64;
  var $i216.shadow: i64;
  var $i217: i64;
  var $i217.shadow: i64;
  var $p218: ref;
  var $p218.shadow: ref;
  var $i219: i32;
  var $i219.shadow: i32;
  var $i220: i64;
  var $i220.shadow: i64;
  var $p221: ref;
  var $p221.shadow: ref;
  var $i222: i32;
  var $i222.shadow: i32;
  var $i223: i64;
  var $i223.shadow: i64;
  var $i224: i64;
  var $i224.shadow: i64;
  var $i225: i64;
  var $i225.shadow: i64;
  var $p226: ref;
  var $p226.shadow: ref;
  var $i227: i32;
  var $i227.shadow: i32;
  var $i228: i64;
  var $i228.shadow: i64;
  var $p229: ref;
  var $p229.shadow: ref;
  var $i230: i32;
  var $i230.shadow: i32;
  var $i231: i64;
  var $i231.shadow: i64;
  var $i232: i64;
  var $i232.shadow: i64;
  var $i233: i64;
  var $i233.shadow: i64;
  var $p234: ref;
  var $p234.shadow: ref;
  var $i235: i32;
  var $i235.shadow: i32;
  var $i236: i64;
  var $i236.shadow: i64;
  var $p237: ref;
  var $p237.shadow: ref;
  var $i238: i32;
  var $i238.shadow: i32;
  var $i239: i64;
  var $i239.shadow: i64;
  var $i240: i64;
  var $i240.shadow: i64;
  var $i241: i64;
  var $i241.shadow: i64;
  var $i242: i64;
  var $i242.shadow: i64;
  var $p243: ref;
  var $p243.shadow: ref;
  var $p244: ref;
  var $p244.shadow: ref;
  var $i245: i32;
  var $i245.shadow: i32;
  var $i246: i64;
  var $i246.shadow: i64;
  var $p247: ref;
  var $p247.shadow: ref;
  var $i248: i32;
  var $i248.shadow: i32;
  var $i249: i64;
  var $i249.shadow: i64;
  var $i250: i64;
  var $i250.shadow: i64;
  var $p251: ref;
  var $p251.shadow: ref;
  var $i252: i32;
  var $i252.shadow: i32;
  var $i253: i64;
  var $i253.shadow: i64;
  var $p254: ref;
  var $p254.shadow: ref;
  var $i255: i32;
  var $i255.shadow: i32;
  var $i256: i64;
  var $i256.shadow: i64;
  var $i257: i64;
  var $i257.shadow: i64;
  var $p258: ref;
  var $p258.shadow: ref;
  var $i259: i32;
  var $i259.shadow: i32;
  var $i260: i64;
  var $i260.shadow: i64;
  var $p261: ref;
  var $p261.shadow: ref;
  var $i262: i32;
  var $i262.shadow: i32;
  var $i263: i64;
  var $i263.shadow: i64;
  var $i264: i64;
  var $i264.shadow: i64;
  var $i265: i64;
  var $i265.shadow: i64;
  var $p266: ref;
  var $p266.shadow: ref;
  var $i267: i32;
  var $i267.shadow: i32;
  var $i268: i64;
  var $i268.shadow: i64;
  var $p269: ref;
  var $p269.shadow: ref;
  var $i270: i32;
  var $i270.shadow: i32;
  var $i271: i64;
  var $i271.shadow: i64;
  var $i272: i64;
  var $i272.shadow: i64;
  var $i273: i64;
  var $i273.shadow: i64;
  var $i274: i64;
  var $i274.shadow: i64;
  var $i275: i64;
  var $i275.shadow: i64;
  var $p276: ref;
  var $p276.shadow: ref;
  var $p277: ref;
  var $p277.shadow: ref;
  var $i278: i32;
  var $i278.shadow: i32;
  var $i279: i64;
  var $i279.shadow: i64;
  var $p280: ref;
  var $p280.shadow: ref;
  var $i281: i32;
  var $i281.shadow: i32;
  var $i282: i64;
  var $i282.shadow: i64;
  var $i283: i64;
  var $i283.shadow: i64;
  var $p284: ref;
  var $p284.shadow: ref;
  var $i285: i32;
  var $i285.shadow: i32;
  var $i286: i64;
  var $i286.shadow: i64;
  var $p287: ref;
  var $p287.shadow: ref;
  var $i288: i32;
  var $i288.shadow: i32;
  var $i289: i64;
  var $i289.shadow: i64;
  var $i290: i64;
  var $i290.shadow: i64;
  var $i291: i64;
  var $i291.shadow: i64;
  var $p292: ref;
  var $p292.shadow: ref;
  var $i293: i32;
  var $i293.shadow: i32;
  var $i294: i64;
  var $i294.shadow: i64;
  var $p295: ref;
  var $p295.shadow: ref;
  var $i296: i32;
  var $i296.shadow: i32;
  var $i297: i64;
  var $i297.shadow: i64;
  var $i298: i64;
  var $i298.shadow: i64;
  var $i299: i64;
  var $i299.shadow: i64;
  var $i300: i64;
  var $i300.shadow: i64;
  var $p301: ref;
  var $p301.shadow: ref;
  var $p302: ref;
  var $p302.shadow: ref;
  var $i303: i32;
  var $i303.shadow: i32;
  var $i304: i64;
  var $i304.shadow: i64;
  var $p305: ref;
  var $p305.shadow: ref;
  var $i306: i32;
  var $i306.shadow: i32;
  var $i307: i64;
  var $i307.shadow: i64;
  var $i308: i64;
  var $i308.shadow: i64;
  var $p309: ref;
  var $p309.shadow: ref;
  var $i310: i32;
  var $i310.shadow: i32;
  var $i311: i64;
  var $i311.shadow: i64;
  var $p312: ref;
  var $p312.shadow: ref;
  var $i313: i32;
  var $i313.shadow: i32;
  var $i314: i64;
  var $i314.shadow: i64;
  var $i315: i64;
  var $i315.shadow: i64;
  var $p316: ref;
  var $p316.shadow: ref;
  var $i317: i32;
  var $i317.shadow: i32;
  var $i318: i64;
  var $i318.shadow: i64;
  var $p319: ref;
  var $p319.shadow: ref;
  var $i320: i32;
  var $i320.shadow: i32;
  var $i321: i64;
  var $i321.shadow: i64;
  var $i322: i64;
  var $i322.shadow: i64;
  var $i323: i64;
  var $i323.shadow: i64;
  var $i324: i64;
  var $i324.shadow: i64;
  var $i325: i64;
  var $i325.shadow: i64;
  var $p326: ref;
  var $p326.shadow: ref;
  var $p327: ref;
  var $p327.shadow: ref;
  var $i328: i32;
  var $i328.shadow: i32;
  var $i329: i64;
  var $i329.shadow: i64;
  var $p330: ref;
  var $p330.shadow: ref;
  var $i331: i32;
  var $i331.shadow: i32;
  var $i332: i64;
  var $i332.shadow: i64;
  var $i333: i64;
  var $i333.shadow: i64;
  var $p334: ref;
  var $p334.shadow: ref;
  var $i335: i32;
  var $i335.shadow: i32;
  var $i336: i64;
  var $i336.shadow: i64;
  var $p337: ref;
  var $p337.shadow: ref;
  var $i338: i32;
  var $i338.shadow: i32;
  var $i339: i64;
  var $i339.shadow: i64;
  var $i340: i64;
  var $i340.shadow: i64;
  var $i341: i64;
  var $i341.shadow: i64;
  var $i342: i64;
  var $i342.shadow: i64;
  var $p343: ref;
  var $p343.shadow: ref;
  var $p344: ref;
  var $p344.shadow: ref;
  var $i345: i32;
  var $i345.shadow: i32;
  var $i346: i64;
  var $i346.shadow: i64;
  var $p347: ref;
  var $p347.shadow: ref;
  var $i348: i32;
  var $i348.shadow: i32;
  var $i349: i64;
  var $i349.shadow: i64;
  var $i350: i64;
  var $i350.shadow: i64;
  var $p351: ref;
  var $p351.shadow: ref;
  var $i352: i32;
  var $i352.shadow: i32;
  var $i353: i64;
  var $i353.shadow: i64;
  var $p354: ref;
  var $p354.shadow: ref;
  var $i355: i32;
  var $i355.shadow: i32;
  var $i356: i64;
  var $i356.shadow: i64;
  var $i357: i64;
  var $i357.shadow: i64;
  var $i358: i64;
  var $i358.shadow: i64;
  var $i359: i64;
  var $i359.shadow: i64;
  var $p360: ref;
  var $p360.shadow: ref;
  var $p361: ref;
  var $p361.shadow: ref;
  var $i362: i32;
  var $i362.shadow: i32;
  var $i363: i64;
  var $i363.shadow: i64;
  var $p364: ref;
  var $p364.shadow: ref;
  var $i365: i32;
  var $i365.shadow: i32;
  var $i366: i64;
  var $i366.shadow: i64;
  var $i367: i64;
  var $i367.shadow: i64;
  var $i368: i64;
  var $i368.shadow: i64;
  var $p369: ref;
  var $p369.shadow: ref;
  var $p370: ref;
  var $p370.shadow: ref;
  var $i371: i32;
  var $i371.shadow: i32;
  var $i372: i64;
  var $i372.shadow: i64;
  var $p373: ref;
  var $p373.shadow: ref;
  var $i374: i32;
  var $i374.shadow: i32;
  var $i375: i64;
  var $i375.shadow: i64;
  var $i376: i64;
  var $i376.shadow: i64;
  var $p377: ref;
  var $p377.shadow: ref;
  var $i378: i64;
  var $i378.shadow: i64;
  var $i379: i32;
  var $i379.shadow: i32;
  var $i380: i1;
  var $i380.shadow: i1;
  var $i381: i64;
  var $i381.shadow: i64;
  var $p382: ref;
  var $p382.shadow: ref;
  var $i383: i64;
  var $i383.shadow: i64;
  var $i384: i64;
  var $i384.shadow: i64;
  var $i385: i32;
  var $i385.shadow: i32;
  var $i386: i32;
  var $i386.shadow: i32;
  var $i387: i64;
  var $i387.shadow: i64;
  var $p388: ref;
  var $p388.shadow: ref;
  var $i389: i64;
  var $i389.shadow: i64;
  var $i390: i32;
  var $i390.shadow: i32;
  var $i391: i32;
  var $i391.shadow: i32;
  var $p392: ref;
  var $p392.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(136,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1,$mul.ref(0,4));
  $p3.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p3 == $p3.shadow));
  $i4 := $load.i32($M.3,$p3);
  $i4.shadow := $load.i32($M.3.shadow,$p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  $i5.shadow := $zext.i32.i64($i4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1,$mul.ref(0,4));
  $p6.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6 == $p6.shadow));
  $i7 := $load.i32($M.3,$p6);
  $i7.shadow := $load.i32($M.3.shadow,$p6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i7);
  $i8.shadow := $zext.i32.i64($i7.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $mul.i64($i5,$i8);
  $i9.shadow := $mul.i64($i5.shadow,$i8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 2} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(0,8));
  $p10.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(0,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 235, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10 == $p10.shadow));
  $M.12 := $store.i64($M.12,$p10,$i9);
  $M.12.shadow := $store.i64($M.12.shadow,$p10.shadow,$i9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1,$mul.ref(0,4));
  $p11.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p11 == $p11.shadow));
  $i12 := $load.i32($M.3,$p11);
  $i12.shadow := $load.i32($M.3.shadow,$p11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i32.i64($i12);
  $i13.shadow := $zext.i32.i64($i12.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1,$mul.ref(1,4));
  $p14.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p14 == $p14.shadow));
  $i15 := $load.i32($M.3,$p14);
  $i15.shadow := $load.i32($M.3.shadow,$p14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i32.i64($i15);
  $i16.shadow := $zext.i32.i64($i15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 12} true;
  assume {:verifier.code 0} true;
  $i17 := $mul.i64($i13,$i16);
  $i17.shadow := $mul.i64($i13.shadow,$i16.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $shl.i64($i17,1);
  $i18.shadow := $shl.i64($i17.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 2} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(1,8));
  $p19.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(1,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 236, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p19 == $p19.shadow));
  $M.12 := $store.i64($M.12,$p19,$i18);
  $M.12.shadow := $store.i64($M.12.shadow,$p19.shadow,$i18.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1,$mul.ref(1,4));
  $p20.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p20 == $p20.shadow));
  $i21 := $load.i32($M.3,$p20);
  $i21.shadow := $load.i32($M.3.shadow,$p20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i32.i64($i21);
  $i22.shadow := $zext.i32.i64($i21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1,$mul.ref(1,4));
  $p23.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p23 == $p23.shadow));
  $i24 := $load.i32($M.3,$p23);
  $i24.shadow := $load.i32($M.3.shadow,$p23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i32.i64($i24);
  $i25.shadow := $zext.i32.i64($i24.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 10} true;
  assume {:verifier.code 0} true;
  $i26 := $mul.i64($i22,$i25);
  $i26.shadow := $mul.i64($i22.shadow,$i25.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1,$mul.ref(0,4));
  $p27.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p27 == $p27.shadow));
  $i28 := $load.i32($M.3,$p27);
  $i28.shadow := $load.i32($M.3.shadow,$p27.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i32.i64($i28);
  $i29.shadow := $zext.i32.i64($i28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1,$mul.ref(2,4));
  $p30.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p30 == $p30.shadow));
  $i31 := $load.i32($M.3,$p30);
  $i31.shadow := $load.i32($M.3.shadow,$p30.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i32.i64($i31);
  $i32.shadow := $zext.i32.i64($i31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $mul.i64($i29,$i32);
  $i33.shadow := $mul.i64($i29.shadow,$i32.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 26} true;
  assume {:verifier.code 0} true;
  $i34 := $shl.i64($i33,1);
  $i34.shadow := $shl.i64($i33.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 238, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i26,$i34);
  $i35.shadow := $add.i64($i26.shadow,$i34.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 2} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(2,8));
  $p36.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(2,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 237, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36 == $p36.shadow));
  $M.12 := $store.i64($M.12,$p36,$i35);
  $M.12.shadow := $store.i64($M.12.shadow,$p36.shadow,$i35.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1,$mul.ref(0,4));
  $p37.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p37 == $p37.shadow));
  $i38 := $load.i32($M.3,$p37);
  $i38.shadow := $load.i32($M.3.shadow,$p37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  $i39.shadow := $zext.i32.i64($i38.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p1,$mul.ref(3,4));
  $p40.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p40 == $p40.shadow));
  $i41 := $load.i32($M.3,$p40);
  $i41.shadow := $load.i32($M.3.shadow,$p40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i32.i64($i41);
  $i42.shadow := $zext.i32.i64($i41.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 12} true;
  assume {:verifier.code 0} true;
  $i43 := $mul.i64($i39,$i42);
  $i43.shadow := $mul.i64($i39.shadow,$i42.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1,$mul.ref(1,4));
  $p44.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p44 == $p44.shadow));
  $i45 := $load.i32($M.3,$p44);
  $i45.shadow := $load.i32($M.3.shadow,$p44.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i32.i64($i45);
  $i46.shadow := $zext.i32.i64($i45.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p1,$mul.ref(2,4));
  $p47.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p47 == $p47.shadow));
  $i48 := $load.i32($M.3,$p47);
  $i48.shadow := $load.i32($M.3.shadow,$p47.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i32.i64($i48);
  $i49.shadow := $zext.i32.i64($i48.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $mul.i64($i46,$i49);
  $i50.shadow := $mul.i64($i46.shadow,$i49.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 3} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i43,$i50);
  $i51.shadow := $add.i64($i43.shadow,$i50.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 240, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $shl.i64($i51,1);
  $i52.shadow := $shl.i64($i51.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 2} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(3,8));
  $p53.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(3,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 239, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p53 == $p53.shadow));
  $M.12 := $store.i64($M.12,$p53,$i52);
  $M.12.shadow := $store.i64($M.12.shadow,$p53.shadow,$i52.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1,$mul.ref(2,4));
  $p54.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p54 == $p54.shadow));
  $i55 := $load.i32($M.3,$p54);
  $i55.shadow := $load.i32($M.3.shadow,$p54.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i32.i64($i55);
  $i56.shadow := $zext.i32.i64($i55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p1,$mul.ref(2,4));
  $p57.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57 == $p57.shadow));
  $i58 := $load.i32($M.3,$p57);
  $i58.shadow := $load.i32($M.3.shadow,$p57.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i32.i64($i58);
  $i59.shadow := $zext.i32.i64($i58.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 10} true;
  assume {:verifier.code 0} true;
  $i60 := $mul.i64($i56,$i59);
  $i60.shadow := $mul.i64($i56.shadow,$i59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1,$mul.ref(0,4));
  $p61.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p61 == $p61.shadow));
  $i62 := $load.i32($M.3,$p61);
  $i62.shadow := $load.i32($M.3.shadow,$p61.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i32.i64($i62);
  $i63.shadow := $zext.i32.i64($i62.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p1,$mul.ref(4,4));
  $p64.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p64 == $p64.shadow));
  $i65 := $load.i32($M.3,$p64);
  $i65.shadow := $load.i32($M.3.shadow,$p64.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i32.i64($i65);
  $i66.shadow := $zext.i32.i64($i65.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i67 := $mul.i64($i63,$i66);
  $i67.shadow := $mul.i64($i63.shadow,$i66.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p1,$mul.ref(1,4));
  $p68.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p68 == $p68.shadow));
  $i69 := $load.i32($M.3,$p68);
  $i69.shadow := $load.i32($M.3.shadow,$p68.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i32.i64($i69);
  $i70.shadow := $zext.i32.i64($i69.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p1,$mul.ref(3,4));
  $p71.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p71 == $p71.shadow));
  $i72 := $load.i32($M.3,$p71);
  $i72.shadow := $load.i32($M.3.shadow,$p71.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i32.i64($i72);
  $i73.shadow := $zext.i32.i64($i72.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i74 := $mul.i64($i70,$i73);
  $i74.shadow := $mul.i64($i70.shadow,$i73.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 3} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64($i67,$i74);
  $i75.shadow := $add.i64($i67.shadow,$i74.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 243, 24} true;
  assume {:verifier.code 0} true;
  $i76 := $shl.i64($i75,1);
  $i76.shadow := $shl.i64($i75.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 242, 3} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i60,$i76);
  $i77.shadow := $add.i64($i60.shadow,$i76.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 2} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(4,8));
  $p78.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(4,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 241, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p78 == $p78.shadow));
  $M.12 := $store.i64($M.12,$p78,$i77);
  $M.12.shadow := $store.i64($M.12.shadow,$p78.shadow,$i77.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p1,$mul.ref(0,4));
  $p79.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p79 == $p79.shadow));
  $i80 := $load.i32($M.3,$p79);
  $i80.shadow := $load.i32($M.3.shadow,$p79.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i32.i64($i80);
  $i81.shadow := $zext.i32.i64($i80.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p1,$mul.ref(5,4));
  $p82.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p82 == $p82.shadow));
  $i83 := $load.i32($M.3,$p82);
  $i83.shadow := $load.i32($M.3.shadow,$p82.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i32.i64($i83);
  $i84.shadow := $zext.i32.i64($i83.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 12} true;
  assume {:verifier.code 0} true;
  $i85 := $mul.i64($i81,$i84);
  $i85.shadow := $mul.i64($i81.shadow,$i84.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p1,$mul.ref(1,4));
  $p86.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p86 == $p86.shadow));
  $i87 := $load.i32($M.3,$p86);
  $i87.shadow := $load.i32($M.3.shadow,$p86.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i32.i64($i87);
  $i88.shadow := $zext.i32.i64($i87.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p1,$mul.ref(4,4));
  $p89.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p89 == $p89.shadow));
  $i90 := $load.i32($M.3,$p89);
  $i90.shadow := $load.i32($M.3.shadow,$p89.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i32.i64($i90);
  $i91.shadow := $zext.i32.i64($i90.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $mul.i64($i88,$i91);
  $i92.shadow := $mul.i64($i88.shadow,$i91.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 245, 3} true;
  assume {:verifier.code 0} true;
  $i93 := $add.i64($i85,$i92);
  $i93.shadow := $add.i64($i85.shadow,$i92.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p1,$mul.ref(2,4));
  $p94.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p94 == $p94.shadow));
  $i95 := $load.i32($M.3,$p94);
  $i95.shadow := $load.i32($M.3.shadow,$p94.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i32.i64($i95);
  $i96.shadow := $zext.i32.i64($i95.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p1,$mul.ref(3,4));
  $p97.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p97 == $p97.shadow));
  $i98 := $load.i32($M.3,$p97);
  $i98.shadow := $load.i32($M.3.shadow,$p97.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i32.i64($i98);
  $i99.shadow := $zext.i32.i64($i98.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $mul.i64($i96,$i99);
  $i100.shadow := $mul.i64($i96.shadow,$i99.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 3} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i64($i93,$i100);
  $i101.shadow := $add.i64($i93.shadow,$i100.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 246, 24} true;
  assume {:verifier.code 0} true;
  $i102 := $shl.i64($i101,1);
  $i102.shadow := $shl.i64($i101.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 2} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(5,8));
  $p103.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(5,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 244, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p103 == $p103.shadow));
  $M.12 := $store.i64($M.12,$p103,$i102);
  $M.12.shadow := $store.i64($M.12.shadow,$p103.shadow,$i102.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p1,$mul.ref(3,4));
  $p104.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p104 == $p104.shadow));
  $i105 := $load.i32($M.3,$p104);
  $i105.shadow := $load.i32($M.3.shadow,$p104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i32.i64($i105);
  $i106.shadow := $zext.i32.i64($i105.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p1,$mul.ref(3,4));
  $p107.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p107 == $p107.shadow));
  $i108 := $load.i32($M.3,$p107);
  $i108.shadow := $load.i32($M.3.shadow,$p107.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i32.i64($i108);
  $i109.shadow := $zext.i32.i64($i108.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 10} true;
  assume {:verifier.code 0} true;
  $i110 := $mul.i64($i106,$i109);
  $i110.shadow := $mul.i64($i106.shadow,$i109.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p1,$mul.ref(0,4));
  $p111.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p111 == $p111.shadow));
  $i112 := $load.i32($M.3,$p111);
  $i112.shadow := $load.i32($M.3.shadow,$p111.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i32.i64($i112);
  $i113.shadow := $zext.i32.i64($i112.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p1,$mul.ref(6,4));
  $p114.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p114 == $p114.shadow));
  $i115 := $load.i32($M.3,$p114);
  $i115.shadow := $load.i32($M.3.shadow,$p114.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.i32.i64($i115);
  $i116.shadow := $zext.i32.i64($i115.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $mul.i64($i113,$i116);
  $i117.shadow := $mul.i64($i113.shadow,$i116.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p1,$mul.ref(1,4));
  $p118.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p118 == $p118.shadow));
  $i119 := $load.i32($M.3,$p118);
  $i119.shadow := $load.i32($M.3.shadow,$p118.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i32.i64($i119);
  $i120.shadow := $zext.i32.i64($i119.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p1,$mul.ref(5,4));
  $p121.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p121 == $p121.shadow));
  $i122 := $load.i32($M.3,$p121);
  $i122.shadow := $load.i32($M.3.shadow,$p121.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i32.i64($i122);
  $i123.shadow := $zext.i32.i64($i122.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 5} true;
  assume {:verifier.code 0} true;
  $i124 := $mul.i64($i120,$i123);
  $i124.shadow := $mul.i64($i120.shadow,$i123.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 249, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64($i117,$i124);
  $i125.shadow := $add.i64($i117.shadow,$i124.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p1,$mul.ref(2,4));
  $p126.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p126 == $p126.shadow));
  $i127 := $load.i32($M.3,$p126);
  $i127.shadow := $load.i32($M.3.shadow,$p126.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i32.i64($i127);
  $i128.shadow := $zext.i32.i64($i127.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p1,$mul.ref(4,4));
  $p129.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p129 == $p129.shadow));
  $i130 := $load.i32($M.3,$p129);
  $i130.shadow := $load.i32($M.3.shadow,$p129.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i32.i64($i130);
  $i131.shadow := $zext.i32.i64($i130.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 5} true;
  assume {:verifier.code 0} true;
  $i132 := $mul.i64($i128,$i131);
  $i132.shadow := $mul.i64($i128.shadow,$i131.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i64($i125,$i132);
  $i133.shadow := $add.i64($i125.shadow,$i132.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 250, 24} true;
  assume {:verifier.code 0} true;
  $i134 := $shl.i64($i133,1);
  $i134.shadow := $shl.i64($i133.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 248, 3} true;
  assume {:verifier.code 0} true;
  $i135 := $add.i64($i110,$i134);
  $i135.shadow := $add.i64($i110.shadow,$i134.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 2} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(6,8));
  $p136.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(6,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 247, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p136 == $p136.shadow));
  $M.12 := $store.i64($M.12,$p136,$i135);
  $M.12.shadow := $store.i64($M.12.shadow,$p136.shadow,$i135.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p1,$mul.ref(0,4));
  $p137.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p137 == $p137.shadow));
  $i138 := $load.i32($M.3,$p137);
  $i138.shadow := $load.i32($M.3.shadow,$p137.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $i139 := $zext.i32.i64($i138);
  $i139.shadow := $zext.i32.i64($i138.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p1,$mul.ref(7,4));
  $p140.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p140 == $p140.shadow));
  $i141 := $load.i32($M.3,$p140);
  $i141.shadow := $load.i32($M.3.shadow,$p140.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i32.i64($i141);
  $i142.shadow := $zext.i32.i64($i141.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 12} true;
  assume {:verifier.code 0} true;
  $i143 := $mul.i64($i139,$i142);
  $i143.shadow := $mul.i64($i139.shadow,$i142.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p1,$mul.ref(1,4));
  $p144.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p144 == $p144.shadow));
  $i145 := $load.i32($M.3,$p144);
  $i145.shadow := $load.i32($M.3.shadow,$p144.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.i32.i64($i145);
  $i146.shadow := $zext.i32.i64($i145.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p1,$mul.ref(6,4));
  $p147.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p147 == $p147.shadow));
  $i148 := $load.i32($M.3,$p147);
  $i148.shadow := $load.i32($M.3.shadow,$p147.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i32.i64($i148);
  $i149.shadow := $zext.i32.i64($i148.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $mul.i64($i146,$i149);
  $i150.shadow := $mul.i64($i146.shadow,$i149.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 252, 3} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i64($i143,$i150);
  $i151.shadow := $add.i64($i143.shadow,$i150.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p1,$mul.ref(2,4));
  $p152.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p152 == $p152.shadow));
  $i153 := $load.i32($M.3,$p152);
  $i153.shadow := $load.i32($M.3.shadow,$p152.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i32.i64($i153);
  $i154.shadow := $zext.i32.i64($i153.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p1,$mul.ref(5,4));
  $p155.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p155 == $p155.shadow));
  $i156 := $load.i32($M.3,$p155);
  $i156.shadow := $load.i32($M.3.shadow,$p155.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i32.i64($i156);
  $i157.shadow := $zext.i32.i64($i156.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $mul.i64($i154,$i157);
  $i158.shadow := $mul.i64($i154.shadow,$i157.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 253, 3} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i64($i151,$i158);
  $i159.shadow := $add.i64($i151.shadow,$i158.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p1,$mul.ref(3,4));
  $p160.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p160 == $p160.shadow));
  $i161 := $load.i32($M.3,$p160);
  $i161.shadow := $load.i32($M.3.shadow,$p160.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.i32.i64($i161);
  $i162.shadow := $zext.i32.i64($i161.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p1,$mul.ref(4,4));
  $p163.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p163 == $p163.shadow));
  $i164 := $load.i32($M.3,$p163);
  $i164.shadow := $load.i32($M.3.shadow,$p163.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i32.i64($i164);
  $i165.shadow := $zext.i32.i64($i164.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $mul.i64($i162,$i165);
  $i166.shadow := $mul.i64($i162.shadow,$i165.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i64($i159,$i166);
  $i167.shadow := $add.i64($i159.shadow,$i166.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 254, 24} true;
  assume {:verifier.code 0} true;
  $i168 := $shl.i64($i167,1);
  $i168.shadow := $shl.i64($i167.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 2} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(7,8));
  $p169.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(7,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 251, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p169 == $p169.shadow));
  $M.12 := $store.i64($M.12,$p169,$i168);
  $M.12.shadow := $store.i64($M.12.shadow,$p169.shadow,$i168.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p1,$mul.ref(4,4));
  $p170.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p170 == $p170.shadow));
  $i171 := $load.i32($M.3,$p170);
  $i171.shadow := $load.i32($M.3.shadow,$p170.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i32.i64($i171);
  $i172.shadow := $zext.i32.i64($i171.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p1,$mul.ref(4,4));
  $p173.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p173 == $p173.shadow));
  $i174 := $load.i32($M.3,$p173);
  $i174.shadow := $load.i32($M.3.shadow,$p173.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i32.i64($i174);
  $i175.shadow := $zext.i32.i64($i174.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 10} true;
  assume {:verifier.code 0} true;
  $i176 := $mul.i64($i172,$i175);
  $i176.shadow := $mul.i64($i172.shadow,$i175.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p1,$mul.ref(0,4));
  $p177.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p177 == $p177.shadow));
  $i178 := $load.i32($M.3,$p177);
  $i178.shadow := $load.i32($M.3.shadow,$p177.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $zext.i32.i64($i178);
  $i179.shadow := $zext.i32.i64($i178.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p1,$mul.ref(8,4));
  $p180.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p180 == $p180.shadow));
  $i181 := $load.i32($M.3,$p180);
  $i181.shadow := $load.i32($M.3.shadow,$p180.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $zext.i32.i64($i181);
  $i182.shadow := $zext.i32.i64($i181.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 7} true;
  assume {:verifier.code 0} true;
  $i183 := $mul.i64($i179,$i182);
  $i183.shadow := $mul.i64($i179.shadow,$i182.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p1,$mul.ref(1,4));
  $p184.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p184 == $p184.shadow));
  $i185 := $load.i32($M.3,$p184);
  $i185.shadow := $load.i32($M.3.shadow,$p184.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $i186 := $zext.i32.i64($i185);
  $i186.shadow := $zext.i32.i64($i185.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p1,$mul.ref(7,4));
  $p187.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p187 == $p187.shadow));
  $i188 := $load.i32($M.3,$p187);
  $i188.shadow := $load.i32($M.3.shadow,$p187.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i32.i64($i188);
  $i189.shadow := $zext.i32.i64($i188.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 5} true;
  assume {:verifier.code 0} true;
  $i190 := $mul.i64($i186,$i189);
  $i190.shadow := $mul.i64($i186.shadow,$i189.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 257, 3} true;
  assume {:verifier.code 0} true;
  $i191 := $add.i64($i183,$i190);
  $i191.shadow := $add.i64($i183.shadow,$i190.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p1,$mul.ref(2,4));
  $p192.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p192 == $p192.shadow));
  $i193 := $load.i32($M.3,$p192);
  $i193.shadow := $load.i32($M.3.shadow,$p192.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.i32.i64($i193);
  $i194.shadow := $zext.i32.i64($i193.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p1,$mul.ref(6,4));
  $p195.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p195 == $p195.shadow));
  $i196 := $load.i32($M.3,$p195);
  $i196.shadow := $load.i32($M.3.shadow,$p195.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $zext.i32.i64($i196);
  $i197.shadow := $zext.i32.i64($i196.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i198 := $mul.i64($i194,$i197);
  $i198.shadow := $mul.i64($i194.shadow,$i197.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 258, 3} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i64($i191,$i198);
  $i199.shadow := $add.i64($i191.shadow,$i198.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p1,$mul.ref(3,4));
  $p200.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p200 == $p200.shadow));
  $i201 := $load.i32($M.3,$p200);
  $i201.shadow := $load.i32($M.3.shadow,$p200.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i32.i64($i201);
  $i202.shadow := $zext.i32.i64($i201.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p1,$mul.ref(5,4));
  $p203.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p203 == $p203.shadow));
  $i204 := $load.i32($M.3,$p203);
  $i204.shadow := $load.i32($M.3.shadow,$p203.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $i205 := $zext.i32.i64($i204);
  $i205.shadow := $zext.i32.i64($i204.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $mul.i64($i202,$i205);
  $i206.shadow := $mul.i64($i202.shadow,$i205.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 3} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i64($i199,$i206);
  $i207.shadow := $add.i64($i199.shadow,$i206.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 259, 24} true;
  assume {:verifier.code 0} true;
  $i208 := $shl.i64($i207,1);
  $i208.shadow := $shl.i64($i207.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 256, 3} true;
  assume {:verifier.code 0} true;
  $i209 := $add.i64($i176,$i208);
  $i209.shadow := $add.i64($i176.shadow,$i208.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 2} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(8,8));
  $p210.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(8,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 255, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p210 == $p210.shadow));
  $M.12 := $store.i64($M.12,$p210,$i209);
  $M.12.shadow := $store.i64($M.12.shadow,$p210.shadow,$i209.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p1,$mul.ref(1,4));
  $p211.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p211 == $p211.shadow));
  $i212 := $load.i32($M.3,$p211);
  $i212.shadow := $load.i32($M.3.shadow,$p211.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $i213 := $zext.i32.i64($i212);
  $i213.shadow := $zext.i32.i64($i212.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p1,$mul.ref(8,4));
  $p214.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p214 == $p214.shadow));
  $i215 := $load.i32($M.3,$p214);
  $i215.shadow := $load.i32($M.3.shadow,$p214.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $i216 := $zext.i32.i64($i215);
  $i216.shadow := $zext.i32.i64($i215.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 12} true;
  assume {:verifier.code 0} true;
  $i217 := $mul.i64($i213,$i216);
  $i217.shadow := $mul.i64($i213.shadow,$i216.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p1,$mul.ref(2,4));
  $p218.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p218 == $p218.shadow));
  $i219 := $load.i32($M.3,$p218);
  $i219.shadow := $load.i32($M.3.shadow,$p218.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $i220 := $zext.i32.i64($i219);
  $i220.shadow := $zext.i32.i64($i219.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p1,$mul.ref(7,4));
  $p221.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p221 == $p221.shadow));
  $i222 := $load.i32($M.3,$p221);
  $i222.shadow := $load.i32($M.3.shadow,$p221.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $i223 := $zext.i32.i64($i222);
  $i223.shadow := $zext.i32.i64($i222.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $mul.i64($i220,$i223);
  $i224.shadow := $mul.i64($i220.shadow,$i223.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 261, 3} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i64($i217,$i224);
  $i225.shadow := $add.i64($i217.shadow,$i224.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p1,$mul.ref(3,4));
  $p226.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p226 == $p226.shadow));
  $i227 := $load.i32($M.3,$p226);
  $i227.shadow := $load.i32($M.3.shadow,$p226.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i228 := $zext.i32.i64($i227);
  $i228.shadow := $zext.i32.i64($i227.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p1,$mul.ref(6,4));
  $p229.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p229 == $p229.shadow));
  $i230 := $load.i32($M.3,$p229);
  $i230.shadow := $load.i32($M.3.shadow,$p229.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i231 := $zext.i32.i64($i230);
  $i231.shadow := $zext.i32.i64($i230.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $mul.i64($i228,$i231);
  $i232.shadow := $mul.i64($i228.shadow,$i231.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 262, 3} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i64($i225,$i232);
  $i233.shadow := $add.i64($i225.shadow,$i232.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p1,$mul.ref(4,4));
  $p234.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p234 == $p234.shadow));
  $i235 := $load.i32($M.3,$p234);
  $i235.shadow := $load.i32($M.3.shadow,$p234.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $i236 := $zext.i32.i64($i235);
  $i236.shadow := $zext.i32.i64($i235.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p1,$mul.ref(5,4));
  $p237.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p237 == $p237.shadow));
  $i238 := $load.i32($M.3,$p237);
  $i238.shadow := $load.i32($M.3.shadow,$p237.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $i239 := $zext.i32.i64($i238);
  $i239.shadow := $zext.i32.i64($i238.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 5} true;
  assume {:verifier.code 0} true;
  $i240 := $mul.i64($i236,$i239);
  $i240.shadow := $mul.i64($i236.shadow,$i239.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 3} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i64($i233,$i240);
  $i241.shadow := $add.i64($i233.shadow,$i240.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 263, 24} true;
  assume {:verifier.code 0} true;
  $i242 := $shl.i64($i241,1);
  $i242.shadow := $shl.i64($i241.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 2} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(9,8));
  $p243.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(9,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 260, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p243 == $p243.shadow));
  $M.12 := $store.i64($M.12,$p243,$i242);
  $M.12.shadow := $store.i64($M.12.shadow,$p243.shadow,$i242.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p1,$mul.ref(5,4));
  $p244.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p244 == $p244.shadow));
  $i245 := $load.i32($M.3,$p244);
  $i245.shadow := $load.i32($M.3.shadow,$p244.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $i246 := $zext.i32.i64($i245);
  $i246.shadow := $zext.i32.i64($i245.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p1,$mul.ref(5,4));
  $p247.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p247 == $p247.shadow));
  $i248 := $load.i32($M.3,$p247);
  $i248.shadow := $load.i32($M.3.shadow,$p247.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $i249 := $zext.i32.i64($i248);
  $i249.shadow := $zext.i32.i64($i248.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 10} true;
  assume {:verifier.code 0} true;
  $i250 := $mul.i64($i246,$i249);
  $i250.shadow := $mul.i64($i246.shadow,$i249.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p1,$mul.ref(2,4));
  $p251.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p251 == $p251.shadow));
  $i252 := $load.i32($M.3,$p251);
  $i252.shadow := $load.i32($M.3.shadow,$p251.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $i253 := $zext.i32.i64($i252);
  $i253.shadow := $zext.i32.i64($i252.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($p1,$mul.ref(8,4));
  $p254.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p254 == $p254.shadow));
  $i255 := $load.i32($M.3,$p254);
  $i255.shadow := $load.i32($M.3.shadow,$p254.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $zext.i32.i64($i255);
  $i256.shadow := $zext.i32.i64($i255.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 7} true;
  assume {:verifier.code 0} true;
  $i257 := $mul.i64($i253,$i256);
  $i257.shadow := $mul.i64($i253.shadow,$i256.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p1,$mul.ref(3,4));
  $p258.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p258 == $p258.shadow));
  $i259 := $load.i32($M.3,$p258);
  $i259.shadow := $load.i32($M.3.shadow,$p258.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $i260 := $zext.i32.i64($i259);
  $i260.shadow := $zext.i32.i64($i259.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p1,$mul.ref(7,4));
  $p261.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p261 == $p261.shadow));
  $i262 := $load.i32($M.3,$p261);
  $i262.shadow := $load.i32($M.3.shadow,$p261.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $i263 := $zext.i32.i64($i262);
  $i263.shadow := $zext.i32.i64($i262.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $mul.i64($i260,$i263);
  $i264.shadow := $mul.i64($i260.shadow,$i263.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 266, 3} true;
  assume {:verifier.code 0} true;
  $i265 := $add.i64($i257,$i264);
  $i265.shadow := $add.i64($i257.shadow,$i264.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($p1,$mul.ref(4,4));
  $p266.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p266 == $p266.shadow));
  $i267 := $load.i32($M.3,$p266);
  $i267.shadow := $load.i32($M.3.shadow,$p266.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i268 := $zext.i32.i64($i267);
  $i268.shadow := $zext.i32.i64($i267.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p1,$mul.ref(6,4));
  $p269.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p269 == $p269.shadow));
  $i270 := $load.i32($M.3,$p269);
  $i270.shadow := $load.i32($M.3.shadow,$p269.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $zext.i32.i64($i270);
  $i271.shadow := $zext.i32.i64($i270.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $mul.i64($i268,$i271);
  $i272.shadow := $mul.i64($i268.shadow,$i271.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 3} true;
  assume {:verifier.code 0} true;
  $i273 := $add.i64($i265,$i272);
  $i273.shadow := $add.i64($i265.shadow,$i272.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 267, 24} true;
  assume {:verifier.code 0} true;
  $i274 := $shl.i64($i273,1);
  $i274.shadow := $shl.i64($i273.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 265, 3} true;
  assume {:verifier.code 0} true;
  $i275 := $add.i64($i250,$i274);
  $i275.shadow := $add.i64($i250.shadow,$i274.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 2} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(10,8));
  $p276.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(10,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 264, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p276 == $p276.shadow));
  $M.12 := $store.i64($M.12,$p276,$i275);
  $M.12.shadow := $store.i64($M.12.shadow,$p276.shadow,$i275.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($p1,$mul.ref(3,4));
  $p277.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p277 == $p277.shadow));
  $i278 := $load.i32($M.3,$p277);
  $i278.shadow := $load.i32($M.3.shadow,$p277.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $i279 := $zext.i32.i64($i278);
  $i279.shadow := $zext.i32.i64($i278.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p1,$mul.ref(8,4));
  $p280.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p280 == $p280.shadow));
  $i281 := $load.i32($M.3,$p280);
  $i281.shadow := $load.i32($M.3.shadow,$p280.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $i282 := $zext.i32.i64($i281);
  $i282.shadow := $zext.i32.i64($i281.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 12} true;
  assume {:verifier.code 0} true;
  $i283 := $mul.i64($i279,$i282);
  $i283.shadow := $mul.i64($i279.shadow,$i282.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $p284 := $add.ref($p1,$mul.ref(4,4));
  $p284.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p284 == $p284.shadow));
  $i285 := $load.i32($M.3,$p284);
  $i285.shadow := $load.i32($M.3.shadow,$p284.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i286 := $zext.i32.i64($i285);
  $i286.shadow := $zext.i32.i64($i285.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p1,$mul.ref(7,4));
  $p287.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p287 == $p287.shadow));
  $i288 := $load.i32($M.3,$p287);
  $i288.shadow := $load.i32($M.3.shadow,$p287.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $zext.i32.i64($i288);
  $i289.shadow := $zext.i32.i64($i288.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i290 := $mul.i64($i286,$i289);
  $i290.shadow := $mul.i64($i286.shadow,$i289.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 269, 3} true;
  assume {:verifier.code 0} true;
  $i291 := $add.i64($i283,$i290);
  $i291.shadow := $add.i64($i283.shadow,$i290.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($p1,$mul.ref(5,4));
  $p292.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p292 == $p292.shadow));
  $i293 := $load.i32($M.3,$p292);
  $i293.shadow := $load.i32($M.3.shadow,$p292.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $zext.i32.i64($i293);
  $i294.shadow := $zext.i32.i64($i293.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p1,$mul.ref(6,4));
  $p295.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p295 == $p295.shadow));
  $i296 := $load.i32($M.3,$p295);
  $i296.shadow := $load.i32($M.3.shadow,$p295.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $i297 := $zext.i32.i64($i296);
  $i297.shadow := $zext.i32.i64($i296.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 5} true;
  assume {:verifier.code 0} true;
  $i298 := $mul.i64($i294,$i297);
  $i298.shadow := $mul.i64($i294.shadow,$i297.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 3} true;
  assume {:verifier.code 0} true;
  $i299 := $add.i64($i291,$i298);
  $i299.shadow := $add.i64($i291.shadow,$i298.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 270, 24} true;
  assume {:verifier.code 0} true;
  $i300 := $shl.i64($i299,1);
  $i300.shadow := $shl.i64($i299.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 2} true;
  assume {:verifier.code 0} true;
  $p301 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(11,8));
  $p301.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(11,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 268, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p301 == $p301.shadow));
  $M.12 := $store.i64($M.12,$p301,$i300);
  $M.12.shadow := $store.i64($M.12.shadow,$p301.shadow,$i300.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p1,$mul.ref(6,4));
  $p302.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p302 == $p302.shadow));
  $i303 := $load.i32($M.3,$p302);
  $i303.shadow := $load.i32($M.3.shadow,$p302.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $i304 := $zext.i32.i64($i303);
  $i304.shadow := $zext.i32.i64($i303.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p1,$mul.ref(6,4));
  $p305.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p305 == $p305.shadow));
  $i306 := $load.i32($M.3,$p305);
  $i306.shadow := $load.i32($M.3.shadow,$p305.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $i307 := $zext.i32.i64($i306);
  $i307.shadow := $zext.i32.i64($i306.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 10} true;
  assume {:verifier.code 0} true;
  $i308 := $mul.i64($i304,$i307);
  $i308.shadow := $mul.i64($i304.shadow,$i307.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $p309 := $add.ref($p1,$mul.ref(4,4));
  $p309.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p309 == $p309.shadow));
  $i310 := $load.i32($M.3,$p309);
  $i310.shadow := $load.i32($M.3.shadow,$p309.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $i311 := $zext.i32.i64($i310);
  $i311.shadow := $zext.i32.i64($i310.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($p1,$mul.ref(8,4));
  $p312.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p312 == $p312.shadow));
  $i313 := $load.i32($M.3,$p312);
  $i313.shadow := $load.i32($M.3.shadow,$p312.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.i32.i64($i313);
  $i314.shadow := $zext.i32.i64($i313.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 7} true;
  assume {:verifier.code 0} true;
  $i315 := $mul.i64($i311,$i314);
  $i315.shadow := $mul.i64($i311.shadow,$i314.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($p1,$mul.ref(5,4));
  $p316.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p316 == $p316.shadow));
  $i317 := $load.i32($M.3,$p316);
  $i317.shadow := $load.i32($M.3.shadow,$p316.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i318 := $zext.i32.i64($i317);
  $i318.shadow := $zext.i32.i64($i317.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $p319 := $add.ref($p1,$mul.ref(7,4));
  $p319.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p319 == $p319.shadow));
  $i320 := $load.i32($M.3,$p319);
  $i320.shadow := $load.i32($M.3.shadow,$p319.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i321 := $zext.i32.i64($i320);
  $i321.shadow := $zext.i32.i64($i320.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $mul.i64($i318,$i321);
  $i322.shadow := $mul.i64($i318.shadow,$i321.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 3} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i64($i315,$i322);
  $i323.shadow := $add.i64($i315.shadow,$i322.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 273, 24} true;
  assume {:verifier.code 0} true;
  $i324 := $shl.i64($i323,1);
  $i324.shadow := $shl.i64($i323.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 272, 3} true;
  assume {:verifier.code 0} true;
  $i325 := $add.i64($i308,$i324);
  $i325.shadow := $add.i64($i308.shadow,$i324.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 2} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(12,8));
  $p326.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(12,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 271, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p326 == $p326.shadow));
  $M.12 := $store.i64($M.12,$p326,$i325);
  $M.12.shadow := $store.i64($M.12.shadow,$p326.shadow,$i325.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p1,$mul.ref(5,4));
  $p327.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p327 == $p327.shadow));
  $i328 := $load.i32($M.3,$p327);
  $i328.shadow := $load.i32($M.3.shadow,$p327.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $i329 := $zext.i32.i64($i328);
  $i329.shadow := $zext.i32.i64($i328.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($p1,$mul.ref(8,4));
  $p330.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p330 == $p330.shadow));
  $i331 := $load.i32($M.3,$p330);
  $i331.shadow := $load.i32($M.3.shadow,$p330.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $i332 := $zext.i32.i64($i331);
  $i332.shadow := $zext.i32.i64($i331.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 12} true;
  assume {:verifier.code 0} true;
  $i333 := $mul.i64($i329,$i332);
  $i333.shadow := $mul.i64($i329.shadow,$i332.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($p1,$mul.ref(6,4));
  $p334.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p334 == $p334.shadow));
  $i335 := $load.i32($M.3,$p334);
  $i335.shadow := $load.i32($M.3.shadow,$p334.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $i336 := $zext.i32.i64($i335);
  $i336.shadow := $zext.i32.i64($i335.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $p337 := $add.ref($p1,$mul.ref(7,4));
  $p337.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p337 == $p337.shadow));
  $i338 := $load.i32($M.3,$p337);
  $i338.shadow := $load.i32($M.3.shadow,$p337.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $i339 := $zext.i32.i64($i338);
  $i339.shadow := $zext.i32.i64($i338.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 5} true;
  assume {:verifier.code 0} true;
  $i340 := $mul.i64($i336,$i339);
  $i340.shadow := $mul.i64($i336.shadow,$i339.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 3} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i64($i333,$i340);
  $i341.shadow := $add.i64($i333.shadow,$i340.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 275, 24} true;
  assume {:verifier.code 0} true;
  $i342 := $shl.i64($i341,1);
  $i342.shadow := $shl.i64($i341.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 2} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(13,8));
  $p343.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(13,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 274, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p343 == $p343.shadow));
  $M.12 := $store.i64($M.12,$p343,$i342);
  $M.12.shadow := $store.i64($M.12.shadow,$p343.shadow,$i342.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $p344 := $add.ref($p1,$mul.ref(7,4));
  $p344.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p344 == $p344.shadow));
  $i345 := $load.i32($M.3,$p344);
  $i345.shadow := $load.i32($M.3.shadow,$p344.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $i346 := $zext.i32.i64($i345);
  $i346.shadow := $zext.i32.i64($i345.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p1,$mul.ref(7,4));
  $p347.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p347 == $p347.shadow));
  $i348 := $load.i32($M.3,$p347);
  $i348.shadow := $load.i32($M.3.shadow,$p347.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $i349 := $zext.i32.i64($i348);
  $i349.shadow := $zext.i32.i64($i348.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 10} true;
  assume {:verifier.code 0} true;
  $i350 := $mul.i64($i346,$i349);
  $i350.shadow := $mul.i64($i346.shadow,$i349.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $p351 := $add.ref($p1,$mul.ref(6,4));
  $p351.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p351 == $p351.shadow));
  $i352 := $load.i32($M.3,$p351);
  $i352.shadow := $load.i32($M.3.shadow,$p351.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i353 := $zext.i32.i64($i352);
  $i353.shadow := $zext.i32.i64($i352.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($p1,$mul.ref(8,4));
  $p354.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p354 == $p354.shadow));
  $i355 := $load.i32($M.3,$p354);
  $i355.shadow := $load.i32($M.3.shadow,$p354.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $zext.i32.i64($i355);
  $i356.shadow := $zext.i32.i64($i355.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i357 := $mul.i64($i353,$i356);
  $i357.shadow := $mul.i64($i353.shadow,$i356.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 26} true;
  assume {:verifier.code 0} true;
  $i358 := $shl.i64($i357,1);
  $i358.shadow := $shl.i64($i357.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 277, 3} true;
  assume {:verifier.code 0} true;
  $i359 := $add.i64($i350,$i358);
  $i359.shadow := $add.i64($i350.shadow,$i358.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 2} true;
  assume {:verifier.code 0} true;
  $p360 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(14,8));
  $p360.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(14,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 276, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p360 == $p360.shadow));
  $M.12 := $store.i64($M.12,$p360,$i359);
  $M.12.shadow := $store.i64($M.12.shadow,$p360.shadow,$i359.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $p361 := $add.ref($p1,$mul.ref(7,4));
  $p361.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p361 == $p361.shadow));
  $i362 := $load.i32($M.3,$p361);
  $i362.shadow := $load.i32($M.3.shadow,$p361.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $i363 := $zext.i32.i64($i362);
  $i363.shadow := $zext.i32.i64($i362.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p1,$mul.ref(8,4));
  $p364.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p364 == $p364.shadow));
  $i365 := $load.i32($M.3,$p364);
  $i365.shadow := $load.i32($M.3.shadow,$p364.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $i366 := $zext.i32.i64($i365);
  $i366.shadow := $zext.i32.i64($i365.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 12} true;
  assume {:verifier.code 0} true;
  $i367 := $mul.i64($i363,$i366);
  $i367.shadow := $mul.i64($i363.shadow,$i366.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 31} true;
  assume {:verifier.code 0} true;
  $i368 := $shl.i64($i367,1);
  $i368.shadow := $shl.i64($i367.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 2} true;
  assume {:verifier.code 0} true;
  $p369 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(15,8));
  $p369.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(15,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 278, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p369 == $p369.shadow));
  $M.12 := $store.i64($M.12,$p369,$i368);
  $M.12.shadow := $store.i64($M.12.shadow,$p369.shadow,$i368.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p1,$mul.ref(8,4));
  $p370.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p370 == $p370.shadow));
  $i371 := $load.i32($M.3,$p370);
  $i371.shadow := $load.i32($M.3.shadow,$p370.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $i372 := $zext.i32.i64($i371);
  $i372.shadow := $zext.i32.i64($i371.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($p1,$mul.ref(8,4));
  $p373.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p373 == $p373.shadow));
  $i374 := $load.i32($M.3,$p373);
  $i374.shadow := $load.i32($M.3.shadow,$p373.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $i375 := $zext.i32.i64($i374);
  $i375.shadow := $zext.i32.i64($i374.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 10} true;
  assume {:verifier.code 0} true;
  $i376 := $mul.i64($i372,$i375);
  $i376.shadow := $mul.i64($i372.shadow,$i375.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 2} true;
  assume {:verifier.code 0} true;
  $p377 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref(16,8));
  $p377.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref(16,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 279, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p377 == $p377.shadow));
  $M.12 := $store.i64($M.12,$p377,$i376);
  $M.12.shadow := $store.i64($M.12.shadow,$p377.shadow,$i376.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 285, 7} true;
  assume {:verifier.code 0} true;
  $i378 := 0;
  $i378.shadow := 0;
  $i379 := 0;
  $i379.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i379 == $i379.shadow);
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 285, 16} true;
  assume {:verifier.code 0} true;
  $i380 := $slt.i32($i379,17);
  $i380.shadow := $slt.i32($i379.shadow,17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 285, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i380} true;
  $shadow_ok := ($shadow_ok && ($i380 == $i380.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i380 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i381 := $sext.i32.i64($i379);
  $i381.shadow := $sext.i32.i64($i379.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $p382 := $add.ref($add.ref($p2,$mul.ref(0,136)),$mul.ref($i381,8));
  $p382.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,136)),$mul.ref($i381.shadow,8));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p382 == $p382.shadow));
  $i383 := $load.i64($M.12,$p382);
  $i383.shadow := $load.i64($M.12.shadow,$p382.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 288, 12} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i64($i383,$i378);
  $i384.shadow := $add.i64($i383.shadow,$i378.shadow);
  call {:cexpr "w"} boogie_si_record_i64($i384);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 289, 10} true;
  assume {:verifier.code 0} true;
  $i385 := $trunc.i64.i32($i384);
  $i385.shadow := $trunc.i64.i32($i384.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 289, 22} true;
  assume {:verifier.code 0} true;
  $i386 := $and.i32($i385,1073741823);
  $i386.shadow := $and.i32($i385.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 289, 3} true;
  assume {:verifier.code 0} true;
  $i387 := $sext.i32.i64($i379);
  $i387.shadow := $sext.i32.i64($i379.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 289, 3} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p0,$mul.ref($i387,4));
  $p388.shadow := $add.ref($p0.shadow,$mul.ref($i387.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 289, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p388 == $p388.shadow));
  $M.7 := $store.i32($M.7,$p388,$i386);
  $M.7.shadow := $store.i32($M.7.shadow,$p388.shadow,$i386.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 290, 10} true;
  assume {:verifier.code 0} true;
  $i389 := $lshr.i64($i384,30);
  $i389.shadow := $lshr.i64($i384.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i64($i389);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 291, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i380 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 292, 10} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i64.i32($i378);
  $i391.shadow := $trunc.i64.i32($i378.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 292, 2} true;
  assume {:verifier.code 0} true;
  $p392 := $add.ref($p0,$mul.ref(17,4));
  $p392.shadow := $add.ref($p0.shadow,$mul.ref(17,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 292, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p392 == $p392.shadow));
  $M.7 := $store.i32($M.7,$p392,$i391);
  $M.7.shadow := $store.i32($M.7.shadow,$p392.shadow,$i391.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 293, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 285, 24} true;
  assume {:verifier.code 0} true;
  $i390 := $add.i32($i379,1);
  $i390.shadow := $add.i32($i379.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i390);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 285, 2} true;
  assume {:verifier.code 0} true;
  $i378 := $i389;
  $i378.shadow := $i389.shadow;
  $i379 := $i390;
  $i379.shadow := $i390.shadow;
  goto $bb1;
}
const MUX: ref;
axiom (MUX == $sub.ref(0,33249));
procedure {:inline 1} MUX($i0: i32, $i0.shadow: i32, $i1: i32, $i1.shadow: i32, $i2: i32, $i2.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
{
  var $i3: i32;
  var $i3.shadow: i32;
  var $i4: i32;
  var $i4.shadow: i32;
  var $i5: i32;
  var $i5.shadow: i32;
  var $i6: i32;
  var $i6.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/inner.h", 772, 14} true;
  assume {:verifier.code 0} true;
  call {:cexpr "MUX:arg:ctl"} boogie_si_record_i32($i0);
  call {:cexpr "MUX:arg:x"} boogie_si_record_i32($i1);
  call {:cexpr "MUX:arg:y"} boogie_si_record_i32($i2);
  assume {:sourceloc "../BearSSL/src/inner.h", 772, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0,$i0);
  $i3.shadow := $sub.i32(0,$i0.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 772, 24} true;
  assume {:verifier.code 0} true;
  $i4 := $xor.i32($i1,$i2);
  $i4.shadow := $xor.i32($i1.shadow,$i2.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 772, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i3,$i4);
  $i5.shadow := $and.i32($i3.shadow,$i4.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 772, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $xor.i32($i2,$i5);
  $i6.shadow := $xor.i32($i2.shadow,$i5.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 772, 2} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $r.shadow := $i6.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
}
const add_f256: ref;
axiom (add_f256 == $sub.ref(0,34281));
procedure {:inline 1} add_f256($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $p2: ref, $p2.shadow: ref)
modifies $M.3, $exn;
{
  var $i3: i32;
  var $i3.shadow: i32;
  var $i4: i32;
  var $i4.shadow: i32;
  var $i5: i32;
  var $i5.shadow: i32;
  var $i6: i1;
  var $i6.shadow: i1;
  var $i7: i64;
  var $i7.shadow: i64;
  var $p8: ref;
  var $p8.shadow: ref;
  var $i9: i32;
  var $i9.shadow: i32;
  var $i10: i64;
  var $i10.shadow: i64;
  var $p11: ref;
  var $p11.shadow: ref;
  var $i12: i32;
  var $i12.shadow: i32;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i64;
  var $i16.shadow: i64;
  var $p17: ref;
  var $p17.shadow: ref;
  var $i18: i32;
  var $i18.shadow: i32;
  var $i19: i32;
  var $i19.shadow: i32;
  var $i20: i32;
  var $i20.shadow: i32;
  var $p21: ref;
  var $p21.shadow: ref;
  var $i22: i32;
  var $i22.shadow: i32;
  var $i23: i32;
  var $i23.shadow: i32;
  var $i24: i32;
  var $i24.shadow: i32;
  var $p25: ref;
  var $p25.shadow: ref;
  var $i26: i32;
  var $i26.shadow: i32;
  var $i27: i32;
  var $i27.shadow: i32;
  var $i28: i32;
  var $i28.shadow: i32;
  var $p29: ref;
  var $p29.shadow: ref;
  var $i30: i32;
  var $i30.shadow: i32;
  var $i31: i32;
  var $i31.shadow: i32;
  var $i32: i32;
  var $i32.shadow: i32;
  var $p33: ref;
  var $p33.shadow: ref;
  var $i34: i32;
  var $i34.shadow: i32;
  var $i35: i32;
  var $i35.shadow: i32;
  var $i36: i32;
  var $i36.shadow: i32;
  var $i37: i32;
  var $i37.shadow: i32;
  var $i38: i1;
  var $i38.shadow: i1;
  var $i39: i64;
  var $i39.shadow: i64;
  var $p40: ref;
  var $p40.shadow: ref;
  var $i41: i32;
  var $i41.shadow: i32;
  var $i42: i32;
  var $i42.shadow: i32;
  var $i43: i32;
  var $i43.shadow: i32;
  var $i44: i64;
  var $i44.shadow: i64;
  var $p45: ref;
  var $p45.shadow: ref;
  var $i46: i32;
  var $i46.shadow: i32;
  var $i47: i32;
  var $i47.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 324, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 324, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $u1;
  $i3.shadow := $u1;
  $i4 := 0;
  $i4.shadow := 0;
  $i5 := 0;
  $i5.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i5 == $i5.shadow);
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 324, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5,9);
  $i6.shadow := $slt.i32($i5.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 324, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $shadow_ok := ($shadow_ok && ($i6 == $i6.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i5);
  $i7.shadow := $sext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1,$mul.ref($i7,4));
  $p8.shadow := $add.ref($p1.shadow,$mul.ref($i7.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p8 == $p8.shadow));
  $i9 := $load.i32($M.3,$p8);
  $i9.shadow := $load.i32($M.3.shadow,$p8.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i5);
  $i10.shadow := $sext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2,$mul.ref($i10,4));
  $p11.shadow := $add.ref($p2.shadow,$mul.ref($i10.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 14} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p11 == $p11.shadow));
  $i12 := $load.i32($M.3,$p11);
  $i12.shadow := $load.i32($M.3.shadow,$p11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i9,$i12);
  $i13.shadow := $add.i32($i9.shadow,$i12.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 325, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i13,$i4);
  $i14.shadow := $add.i32($i13.shadow,$i4.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 326, 12} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14,1073741823);
  $i15.shadow := $and.i32($i14.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 326, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i5);
  $i16.shadow := $sext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 326, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0,$mul.ref($i16,4));
  $p17.shadow := $add.ref($p0.shadow,$mul.ref($i16.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 326, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p17 == $p17.shadow));
  $M.3 := $store.i32($M.3,$p17,$i15);
  $M.3.shadow := $store.i32($M.3.shadow,$p17.shadow,$i15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 327, 10} true;
  assume {:verifier.code 0} true;
  $i18 := $lshr.i32($i14,30);
  $i18.shadow := $lshr.i32($i14.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i32($i18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 328, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 329, 4} true;
  assume {:verifier.code 0} true;
  $i20 := $lshr.i32($i3,16);
  $i20.shadow := $lshr.i32($i3.shadow,16);
  call {:cexpr "w"} boogie_si_record_i32($i20);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 330, 2} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0,$mul.ref(8,4));
  $p21.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p21 == $p21.shadow));
  $i22 := $load.i32($M.3,$p21);
  $i22.shadow := $load.i32($M.3.shadow,$p21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22,65535);
  $i23.shadow := $and.i32($i22.shadow,65535);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p21 == $p21.shadow));
  $M.3 := $store.i32($M.3,$p21,$i23);
  $M.3.shadow := $store.i32($M.3.shadow,$p21.shadow,$i23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 331, 12} true;
  assume {:verifier.code 0} true;
  $i24 := $shl.i32($i20,6);
  $i24.shadow := $shl.i32($i20.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 331, 2} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0,$mul.ref(3,4));
  $p25.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 331, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p25 == $p25.shadow));
  $i26 := $load.i32($M.3,$p25);
  $i26.shadow := $load.i32($M.3.shadow,$p25.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 331, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $sub.i32($i26,$i24);
  $i27.shadow := $sub.i32($i26.shadow,$i24.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 331, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p25 == $p25.shadow));
  $M.3 := $store.i32($M.3,$p25,$i27);
  $M.3.shadow := $store.i32($M.3.shadow,$p25.shadow,$i27.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 332, 12} true;
  assume {:verifier.code 0} true;
  $i28 := $shl.i32($i20,12);
  $i28.shadow := $shl.i32($i20.shadow,12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 332, 2} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0,$mul.ref(6,4));
  $p29.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29 == $p29.shadow));
  $i30 := $load.i32($M.3,$p29);
  $i30.shadow := $load.i32($M.3.shadow,$p29.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32($i30,$i28);
  $i31.shadow := $sub.i32($i30.shadow,$i28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29 == $p29.shadow));
  $M.3 := $store.i32($M.3,$p29,$i31);
  $M.3.shadow := $store.i32($M.3.shadow,$p29.shadow,$i31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 333, 12} true;
  assume {:verifier.code 0} true;
  $i32 := $shl.i32($i20,14);
  $i32.shadow := $shl.i32($i20.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 333, 2} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0,$mul.ref(7,4));
  $p33.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 333, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p33 == $p33.shadow));
  $i34 := $load.i32($M.3,$p33);
  $i34.shadow := $load.i32($M.3.shadow,$p33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 333, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i34,$i32);
  $i35.shadow := $add.i32($i34.shadow,$i32.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 333, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p33 == $p33.shadow));
  $M.3 := $store.i32($M.3,$p33,$i35);
  $M.3.shadow := $store.i32($M.3.shadow,$p33.shadow,$i35.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 335, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $i20;
  $i36.shadow := $i20.shadow;
  $i37 := 0;
  $i37.shadow := 0;
  goto $bb5;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 324, 23} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i5,1);
  $i19.shadow := $add.i32($i5.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i19);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 324, 2} true;
  assume {:verifier.code 0} true;
  $i3 := $i14;
  $i3.shadow := $i14.shadow;
  $i4 := $i18;
  $i4.shadow := $i18.shadow;
  $i5 := $i19;
  $i5.shadow := $i19.shadow;
  goto $bb1;
$bb5:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i37 == $i37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 335, 16} true;
  assume {:verifier.code 0} true;
  $i38 := $slt.i32($i37,9);
  $i38.shadow := $slt.i32($i37.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 335, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  $shadow_ok := ($shadow_ok && ($i38 == $i38.shadow));
  goto $bb6, $bb7;
$bb6:
  assume ($i38 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i37);
  $i39.shadow := $sext.i32.i64($i37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0,$mul.ref($i39,4));
  $p40.shadow := $add.ref($p0.shadow,$mul.ref($i39.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p40 == $p40.shadow));
  $i41 := $load.i32($M.3,$p40);
  $i41.shadow := $load.i32($M.3.shadow,$p40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 336, 12} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i41,$i36);
  $i42.shadow := $add.i32($i41.shadow,$i36.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i42);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 337, 12} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i42,1073741823);
  $i43.shadow := $and.i32($i42.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 337, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i37);
  $i44.shadow := $sext.i32.i64($i37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 337, 3} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0,$mul.ref($i44,4));
  $p45.shadow := $add.ref($p0.shadow,$mul.ref($i44.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 337, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p45 == $p45.shadow));
  $M.3 := $store.i32($M.3,$p45,$i43);
  $M.3.shadow := $store.i32($M.3.shadow,$p45.shadow,$i43.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 338, 8} true;
  assume {:verifier.code 0} true;
  $i46 := $ashr.i32($i42,30);
  $i46.shadow := $ashr.i32($i42.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i32($i46);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 339, 2} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !($i38 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 340, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb8:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 335, 23} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i37,1);
  $i47.shadow := $add.i32($i37.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i47);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 335, 2} true;
  assume {:verifier.code 0} true;
  $i36 := $i46;
  $i36.shadow := $i46.shadow;
  $i37 := $i47;
  $i37.shadow := $i47.shadow;
  goto $bb5;
}
const sub_f256: ref;
axiom (sub_f256 == $sub.ref(0,35313));
procedure {:inline 1} sub_f256($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $p2: ref, $p2.shadow: ref)
modifies $M.3, $exn;
{
  var $p3: ref;
  var $p3.shadow: ref;
  var $i4: i32;
  var $i4.shadow: i32;
  var $p5: ref;
  var $p5.shadow: ref;
  var $i6: i32;
  var $i6.shadow: i32;
  var $i7: i32;
  var $i7.shadow: i32;
  var $i8: i32;
  var $i8.shadow: i32;
  var $i9: i32;
  var $i9.shadow: i32;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $i12: i32;
  var $i12.shadow: i32;
  var $p13: ref;
  var $p13.shadow: ref;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i32;
  var $i16.shadow: i32;
  var $i17: i32;
  var $i17.shadow: i32;
  var $i18: i32;
  var $i18.shadow: i32;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $i21: i32;
  var $i21.shadow: i32;
  var $p22: ref;
  var $p22.shadow: ref;
  var $i23: i32;
  var $i23.shadow: i32;
  var $i24: i32;
  var $i24.shadow: i32;
  var $i25: i32;
  var $i25.shadow: i32;
  var $i26: i32;
  var $i26.shadow: i32;
  var $i27: i32;
  var $i27.shadow: i32;
  var $p28: ref;
  var $p28.shadow: ref;
  var $p29: ref;
  var $p29.shadow: ref;
  var $i30: i32;
  var $i30.shadow: i32;
  var $p31: ref;
  var $p31.shadow: ref;
  var $i32: i32;
  var $i32.shadow: i32;
  var $i33: i32;
  var $i33.shadow: i32;
  var $i34: i32;
  var $i34.shadow: i32;
  var $i35: i32;
  var $i35.shadow: i32;
  var $i36: i32;
  var $i36.shadow: i32;
  var $i37: i32;
  var $i37.shadow: i32;
  var $p38: ref;
  var $p38.shadow: ref;
  var $p39: ref;
  var $p39.shadow: ref;
  var $i40: i32;
  var $i40.shadow: i32;
  var $p41: ref;
  var $p41.shadow: ref;
  var $i42: i32;
  var $i42.shadow: i32;
  var $i43: i32;
  var $i43.shadow: i32;
  var $i44: i32;
  var $i44.shadow: i32;
  var $i45: i32;
  var $i45.shadow: i32;
  var $i46: i32;
  var $i46.shadow: i32;
  var $p47: ref;
  var $p47.shadow: ref;
  var $p48: ref;
  var $p48.shadow: ref;
  var $i49: i32;
  var $i49.shadow: i32;
  var $p50: ref;
  var $p50.shadow: ref;
  var $i51: i32;
  var $i51.shadow: i32;
  var $i52: i32;
  var $i52.shadow: i32;
  var $i53: i32;
  var $i53.shadow: i32;
  var $i54: i32;
  var $i54.shadow: i32;
  var $i55: i32;
  var $i55.shadow: i32;
  var $p56: ref;
  var $p56.shadow: ref;
  var $p57: ref;
  var $p57.shadow: ref;
  var $i58: i32;
  var $i58.shadow: i32;
  var $p59: ref;
  var $p59.shadow: ref;
  var $i60: i32;
  var $i60.shadow: i32;
  var $i61: i32;
  var $i61.shadow: i32;
  var $i62: i32;
  var $i62.shadow: i32;
  var $i63: i32;
  var $i63.shadow: i32;
  var $i64: i32;
  var $i64.shadow: i32;
  var $i65: i32;
  var $i65.shadow: i32;
  var $p66: ref;
  var $p66.shadow: ref;
  var $p67: ref;
  var $p67.shadow: ref;
  var $i68: i32;
  var $i68.shadow: i32;
  var $p69: ref;
  var $p69.shadow: ref;
  var $i70: i32;
  var $i70.shadow: i32;
  var $i71: i32;
  var $i71.shadow: i32;
  var $i72: i32;
  var $i72.shadow: i32;
  var $i73: i32;
  var $i73.shadow: i32;
  var $i74: i32;
  var $i74.shadow: i32;
  var $i75: i32;
  var $i75.shadow: i32;
  var $p76: ref;
  var $p76.shadow: ref;
  var $p77: ref;
  var $p77.shadow: ref;
  var $i78: i32;
  var $i78.shadow: i32;
  var $p79: ref;
  var $p79.shadow: ref;
  var $i80: i32;
  var $i80.shadow: i32;
  var $i81: i32;
  var $i81.shadow: i32;
  var $i82: i32;
  var $i82.shadow: i32;
  var $i83: i32;
  var $i83.shadow: i32;
  var $i84: i32;
  var $i84.shadow: i32;
  var $i85: i32;
  var $i85.shadow: i32;
  var $p86: ref;
  var $p86.shadow: ref;
  var $i87: i32;
  var $i87.shadow: i32;
  var $p88: ref;
  var $p88.shadow: ref;
  var $i89: i32;
  var $i89.shadow: i32;
  var $i90: i32;
  var $i90.shadow: i32;
  var $i91: i32;
  var $i91.shadow: i32;
  var $p92: ref;
  var $p92.shadow: ref;
  var $i93: i32;
  var $i93.shadow: i32;
  var $i94: i32;
  var $i94.shadow: i32;
  var $i95: i32;
  var $i95.shadow: i32;
  var $p96: ref;
  var $p96.shadow: ref;
  var $i97: i32;
  var $i97.shadow: i32;
  var $i98: i32;
  var $i98.shadow: i32;
  var $i99: i32;
  var $i99.shadow: i32;
  var $p100: ref;
  var $p100.shadow: ref;
  var $i101: i32;
  var $i101.shadow: i32;
  var $i102: i32;
  var $i102.shadow: i32;
  var $i103: i32;
  var $i103.shadow: i32;
  var $i104: i32;
  var $i104.shadow: i32;
  var $i105: i1;
  var $i105.shadow: i1;
  var $i106: i64;
  var $i106.shadow: i64;
  var $p107: ref;
  var $p107.shadow: ref;
  var $i108: i32;
  var $i108.shadow: i32;
  var $i109: i32;
  var $i109.shadow: i32;
  var $i110: i32;
  var $i110.shadow: i32;
  var $i111: i64;
  var $i111.shadow: i64;
  var $p112: ref;
  var $p112.shadow: ref;
  var $i113: i32;
  var $i113.shadow: i32;
  var $i114: i32;
  var $i114.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 6} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 6} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1,$mul.ref(0,4));
  $p3.shadow := $add.ref($p1.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p3 == $p3.shadow));
  $i4 := $load.i32($M.3,$p3);
  $i4.shadow := $load.i32($M.3.shadow,$p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2,$mul.ref(0,4));
  $p5.shadow := $add.ref($p2.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p5 == $p5.shadow));
  $i6 := $load.i32($M.3,$p5);
  $i6.shadow := $load.i32($M.3.shadow,$p5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i4,$i6);
  $i7.shadow := $sub.i32($i4.shadow,$i6.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 356, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32($i7,2);
  $i8.shadow := $sub.i32($i7.shadow,2);
  call {:cexpr "w"} boogie_si_record_i32($i8);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 357, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8,1073741823);
  $i9.shadow := $and.i32($i8.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 357, 2} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0,$mul.ref(0,4));
  $p10.shadow := $add.ref($p0.shadow,$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 357, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10 == $p10.shadow));
  $M.3 := $store.i32($M.3,$p10,$i9);
  $M.3.shadow := $store.i32($M.3.shadow,$p10.shadow,$i9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 6} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1,$mul.ref(1,4));
  $p11.shadow := $add.ref($p1.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p11 == $p11.shadow));
  $i12 := $load.i32($M.3,$p11);
  $i12.shadow := $load.i32($M.3.shadow,$p11.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2,$mul.ref(1,4));
  $p13.shadow := $add.ref($p2.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p13 == $p13.shadow));
  $i14 := $load.i32($M.3,$p13);
  $i14.shadow := $load.i32($M.3.shadow,$p13.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32($i12,$i14);
  $i15.shadow := $sub.i32($i12.shadow,$i14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 20} true;
  assume {:verifier.code 0} true;
  $i16 := $ashr.i32($i8,30);
  $i16.shadow := $ashr.i32($i8.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 358, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i15,$i16);
  $i17.shadow := $add.i32($i15.shadow,$i16.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i17);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 359, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17,1073741823);
  $i18.shadow := $and.i32($i17.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 359, 2} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0,$mul.ref(1,4));
  $p19.shadow := $add.ref($p0.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 359, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p19 == $p19.shadow));
  $M.3 := $store.i32($M.3,$p19,$i18);
  $M.3.shadow := $store.i32($M.3.shadow,$p19.shadow,$i18.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 6} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1,$mul.ref(2,4));
  $p20.shadow := $add.ref($p1.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p20 == $p20.shadow));
  $i21 := $load.i32($M.3,$p20);
  $i21.shadow := $load.i32($M.3.shadow,$p20.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2,$mul.ref(2,4));
  $p22.shadow := $add.ref($p2.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p22 == $p22.shadow));
  $i23 := $load.i32($M.3,$p22);
  $i23.shadow := $load.i32($M.3.shadow,$p22.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32($i21,$i23);
  $i24.shadow := $sub.i32($i21.shadow,$i23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 20} true;
  assume {:verifier.code 0} true;
  $i25 := $ashr.i32($i17,30);
  $i25.shadow := $ashr.i32($i17.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 360, 18} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i24,$i25);
  $i26.shadow := $add.i32($i24.shadow,$i25.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i26);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 361, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i26,1073741823);
  $i27.shadow := $and.i32($i26.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 361, 2} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0,$mul.ref(2,4));
  $p28.shadow := $add.ref($p0.shadow,$mul.ref(2,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 361, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p28 == $p28.shadow));
  $M.3 := $store.i32($M.3,$p28,$i27);
  $M.3.shadow := $store.i32($M.3.shadow,$p28.shadow,$i27.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 6} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1,$mul.ref(3,4));
  $p29.shadow := $add.ref($p1.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29 == $p29.shadow));
  $i30 := $load.i32($M.3,$p29);
  $i30.shadow := $load.i32($M.3.shadow,$p29.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 13} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2,$mul.ref(3,4));
  $p31.shadow := $add.ref($p2.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p31 == $p31.shadow));
  $i32 := $load.i32($M.3,$p31);
  $i32.shadow := $load.i32($M.3.shadow,$p31.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 11} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32($i30,$i32);
  $i33.shadow := $sub.i32($i30.shadow,$i32.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 20} true;
  assume {:verifier.code 0} true;
  $i34 := $ashr.i32($i26,30);
  $i34.shadow := $ashr.i32($i26.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 18} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i33,$i34);
  $i35.shadow := $add.i32($i33.shadow,$i34.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 362, 32} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i35,128);
  $i36.shadow := $add.i32($i35.shadow,128);
  call {:cexpr "w"} boogie_si_record_i32($i36);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 363, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i32($i36,1073741823);
  $i37.shadow := $and.i32($i36.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 363, 2} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0,$mul.ref(3,4));
  $p38.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p38 == $p38.shadow));
  $M.3 := $store.i32($M.3,$p38,$i37);
  $M.3.shadow := $store.i32($M.3.shadow,$p38.shadow,$i37.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 6} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1,$mul.ref(4,4));
  $p39.shadow := $add.ref($p1.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p39 == $p39.shadow));
  $i40 := $load.i32($M.3,$p39);
  $i40.shadow := $load.i32($M.3.shadow,$p39.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p2,$mul.ref(4,4));
  $p41.shadow := $add.ref($p2.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p41 == $p41.shadow));
  $i42 := $load.i32($M.3,$p41);
  $i42.shadow := $load.i32($M.3.shadow,$p41.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 11} true;
  assume {:verifier.code 0} true;
  $i43 := $sub.i32($i40,$i42);
  $i43.shadow := $sub.i32($i40.shadow,$i42.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 20} true;
  assume {:verifier.code 0} true;
  $i44 := $ashr.i32($i36,30);
  $i44.shadow := $ashr.i32($i36.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 364, 18} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i43,$i44);
  $i45.shadow := $add.i32($i43.shadow,$i44.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i45);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 365, 11} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45,1073741823);
  $i46.shadow := $and.i32($i45.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 365, 2} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0,$mul.ref(4,4));
  $p47.shadow := $add.ref($p0.shadow,$mul.ref(4,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p47 == $p47.shadow));
  $M.3 := $store.i32($M.3,$p47,$i46);
  $M.3.shadow := $store.i32($M.3.shadow,$p47.shadow,$i46.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 6} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1,$mul.ref(5,4));
  $p48.shadow := $add.ref($p1.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p48 == $p48.shadow));
  $i49 := $load.i32($M.3,$p48);
  $i49.shadow := $load.i32($M.3.shadow,$p48.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 13} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p2,$mul.ref(5,4));
  $p50.shadow := $add.ref($p2.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p50 == $p50.shadow));
  $i51 := $load.i32($M.3,$p50);
  $i51.shadow := $load.i32($M.3.shadow,$p50.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32($i49,$i51);
  $i52.shadow := $sub.i32($i49.shadow,$i51.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $ashr.i32($i45,30);
  $i53.shadow := $ashr.i32($i45.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 366, 18} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i52,$i53);
  $i54.shadow := $add.i32($i52.shadow,$i53.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i54);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 367, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $and.i32($i54,1073741823);
  $i55.shadow := $and.i32($i54.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 367, 2} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0,$mul.ref(5,4));
  $p56.shadow := $add.ref($p0.shadow,$mul.ref(5,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 367, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p56 == $p56.shadow));
  $M.3 := $store.i32($M.3,$p56,$i55);
  $M.3.shadow := $store.i32($M.3.shadow,$p56.shadow,$i55.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 6} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p1,$mul.ref(6,4));
  $p57.shadow := $add.ref($p1.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p57 == $p57.shadow));
  $i58 := $load.i32($M.3,$p57);
  $i58.shadow := $load.i32($M.3.shadow,$p57.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 13} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p2,$mul.ref(6,4));
  $p59.shadow := $add.ref($p2.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p59 == $p59.shadow));
  $i60 := $load.i32($M.3,$p59);
  $i60.shadow := $load.i32($M.3.shadow,$p59.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 11} true;
  assume {:verifier.code 0} true;
  $i61 := $sub.i32($i58,$i60);
  $i61.shadow := $sub.i32($i58.shadow,$i60.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 20} true;
  assume {:verifier.code 0} true;
  $i62 := $ashr.i32($i54,30);
  $i62.shadow := $ashr.i32($i54.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 18} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i32($i61,$i62);
  $i63.shadow := $add.i32($i61.shadow,$i62.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 368, 32} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i63,8192);
  $i64.shadow := $add.i32($i63.shadow,8192);
  call {:cexpr "w"} boogie_si_record_i32($i64);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 369, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $and.i32($i64,1073741823);
  $i65.shadow := $and.i32($i64.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 369, 2} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0,$mul.ref(6,4));
  $p66.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 369, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p66 == $p66.shadow));
  $M.3 := $store.i32($M.3,$p66,$i65);
  $M.3.shadow := $store.i32($M.3.shadow,$p66.shadow,$i65.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 6} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p1,$mul.ref(7,4));
  $p67.shadow := $add.ref($p1.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p67 == $p67.shadow));
  $i68 := $load.i32($M.3,$p67);
  $i68.shadow := $load.i32($M.3.shadow,$p67.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 13} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p2,$mul.ref(7,4));
  $p69.shadow := $add.ref($p2.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p69 == $p69.shadow));
  $i70 := $load.i32($M.3,$p69);
  $i70.shadow := $load.i32($M.3.shadow,$p69.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 11} true;
  assume {:verifier.code 0} true;
  $i71 := $sub.i32($i68,$i70);
  $i71.shadow := $sub.i32($i68.shadow,$i70.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 20} true;
  assume {:verifier.code 0} true;
  $i72 := $ashr.i32($i64,30);
  $i72.shadow := $ashr.i32($i64.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 18} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i71,$i72);
  $i73.shadow := $add.i32($i71.shadow,$i72.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 370, 32} true;
  assume {:verifier.code 0} true;
  $i74 := $sub.i32($i73,32768);
  $i74.shadow := $sub.i32($i73.shadow,32768);
  call {:cexpr "w"} boogie_si_record_i32($i74);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 371, 11} true;
  assume {:verifier.code 0} true;
  $i75 := $and.i32($i74,1073741823);
  $i75.shadow := $and.i32($i74.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 371, 2} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0,$mul.ref(7,4));
  $p76.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 371, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p76 == $p76.shadow));
  $M.3 := $store.i32($M.3,$p76,$i75);
  $M.3.shadow := $store.i32($M.3.shadow,$p76.shadow,$i75.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 6} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p1,$mul.ref(8,4));
  $p77.shadow := $add.ref($p1.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 6} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p77 == $p77.shadow));
  $i78 := $load.i32($M.3,$p77);
  $i78.shadow := $load.i32($M.3.shadow,$p77.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 13} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p2,$mul.ref(8,4));
  $p79.shadow := $add.ref($p2.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 13} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p79 == $p79.shadow));
  $i80 := $load.i32($M.3,$p79);
  $i80.shadow := $load.i32($M.3.shadow,$p79.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 11} true;
  assume {:verifier.code 0} true;
  $i81 := $sub.i32($i78,$i80);
  $i81.shadow := $sub.i32($i78.shadow,$i80.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 20} true;
  assume {:verifier.code 0} true;
  $i82 := $ashr.i32($i74,30);
  $i82.shadow := $ashr.i32($i74.shadow,30);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 18} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i81,$i82);
  $i83.shadow := $add.i32($i81.shadow,$i82.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 372, 32} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i83,131072);
  $i84.shadow := $add.i32($i83.shadow,131072);
  call {:cexpr "w"} boogie_si_record_i32($i84);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 373, 11} true;
  assume {:verifier.code 0} true;
  $i85 := $and.i32($i84,65535);
  $i85.shadow := $and.i32($i84.shadow,65535);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 373, 2} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0,$mul.ref(8,4));
  $p86.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 373, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p86 == $p86.shadow));
  $M.3 := $store.i32($M.3,$p86,$i85);
  $M.3.shadow := $store.i32($M.3.shadow,$p86.shadow,$i85.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 374, 4} true;
  assume {:verifier.code 0} true;
  $i87 := $lshr.i32($i84,16);
  $i87.shadow := $lshr.i32($i84.shadow,16);
  call {:cexpr "w"} boogie_si_record_i32($i87);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 375, 2} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0,$mul.ref(8,4));
  $p88.shadow := $add.ref($p0.shadow,$mul.ref(8,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 375, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p88 == $p88.shadow));
  $i89 := $load.i32($M.3,$p88);
  $i89.shadow := $load.i32($M.3.shadow,$p88.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 375, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i32($i89,65535);
  $i90.shadow := $and.i32($i89.shadow,65535);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 375, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p88 == $p88.shadow));
  $M.3 := $store.i32($M.3,$p88,$i90);
  $M.3.shadow := $store.i32($M.3.shadow,$p88.shadow,$i90.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 376, 12} true;
  assume {:verifier.code 0} true;
  $i91 := $shl.i32($i87,6);
  $i91.shadow := $shl.i32($i87.shadow,6);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 376, 2} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0,$mul.ref(3,4));
  $p92.shadow := $add.ref($p0.shadow,$mul.ref(3,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p92 == $p92.shadow));
  $i93 := $load.i32($M.3,$p92);
  $i93.shadow := $load.i32($M.3.shadow,$p92.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i32($i93,$i91);
  $i94.shadow := $sub.i32($i93.shadow,$i91.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p92 == $p92.shadow));
  $M.3 := $store.i32($M.3,$p92,$i94);
  $M.3.shadow := $store.i32($M.3.shadow,$p92.shadow,$i94.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 377, 12} true;
  assume {:verifier.code 0} true;
  $i95 := $shl.i32($i87,12);
  $i95.shadow := $shl.i32($i87.shadow,12);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 377, 2} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0,$mul.ref(6,4));
  $p96.shadow := $add.ref($p0.shadow,$mul.ref(6,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 377, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p96 == $p96.shadow));
  $i97 := $load.i32($M.3,$p96);
  $i97.shadow := $load.i32($M.3.shadow,$p96.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 377, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $sub.i32($i97,$i95);
  $i98.shadow := $sub.i32($i97.shadow,$i95.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 377, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p96 == $p96.shadow));
  $M.3 := $store.i32($M.3,$p96,$i98);
  $M.3.shadow := $store.i32($M.3.shadow,$p96.shadow,$i98.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 378, 12} true;
  assume {:verifier.code 0} true;
  $i99 := $shl.i32($i87,14);
  $i99.shadow := $shl.i32($i87.shadow,14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 378, 2} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0,$mul.ref(7,4));
  $p100.shadow := $add.ref($p0.shadow,$mul.ref(7,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 378, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p100 == $p100.shadow));
  $i101 := $load.i32($M.3,$p100);
  $i101.shadow := $load.i32($M.3.shadow,$p100.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 378, 7} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,$i99);
  $i102.shadow := $add.i32($i101.shadow,$i99.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 378, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p100 == $p100.shadow));
  $M.3 := $store.i32($M.3,$p100,$i102);
  $M.3.shadow := $store.i32($M.3.shadow,$p100.shadow,$i102.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 380, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $i87;
  $i103.shadow := $i87.shadow;
  $i104 := 0;
  $i104.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i104 == $i104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 380, 16} true;
  assume {:verifier.code 0} true;
  $i105 := $slt.i32($i104,9);
  $i105.shadow := $slt.i32($i104.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 380, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  $shadow_ok := ($shadow_ok && ($i105 == $i105.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i105 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 381, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $sext.i32.i64($i104);
  $i106.shadow := $sext.i32.i64($i104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 381, 7} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0,$mul.ref($i106,4));
  $p107.shadow := $add.ref($p0.shadow,$mul.ref($i106.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 381, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p107 == $p107.shadow));
  $i108 := $load.i32($M.3,$p107);
  $i108.shadow := $load.i32($M.3.shadow,$p107.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 381, 12} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i103);
  $i109.shadow := $add.i32($i108.shadow,$i103.shadow);
  call {:cexpr "w"} boogie_si_record_i32($i109);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 382, 12} true;
  assume {:verifier.code 0} true;
  $i110 := $and.i32($i109,1073741823);
  $i110.shadow := $and.i32($i109.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 382, 3} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i32.i64($i104);
  $i111.shadow := $sext.i32.i64($i104.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 382, 3} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0,$mul.ref($i111,4));
  $p112.shadow := $add.ref($p0.shadow,$mul.ref($i111.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 382, 8} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p112 == $p112.shadow));
  $M.3 := $store.i32($M.3,$p112,$i110);
  $M.3.shadow := $store.i32($M.3.shadow,$p112.shadow,$i110.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 383, 8} true;
  assume {:verifier.code 0} true;
  $i113 := $ashr.i32($i109,30);
  $i113.shadow := $ashr.i32($i109.shadow,30);
  call {:cexpr "cc"} boogie_si_record_i32($i113);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 384, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i105 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 385, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 380, 23} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i32($i104,1);
  $i114.shadow := $add.i32($i104.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i114);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 380, 2} true;
  assume {:verifier.code 0} true;
  $i103 := $i113;
  $i103.shadow := $i113.shadow;
  $i104 := $i114;
  $i104.shadow := $i114.shadow;
  goto $bb1;
}
const NOT: ref;
axiom (NOT == $sub.ref(0,36345));
procedure {:inline 1} NOT($i0: i32, $i0.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
{
  var $i1: i32;
  var $i1.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/inner.h", 763, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "NOT:arg:ctl"} boogie_si_record_i32($i0);
  assume {:sourceloc "../BearSSL/src/inner.h", 763, 13} true;
  assume {:verifier.code 0} true;
  $i1 := $xor.i32($i0,1);
  $i1.shadow := $xor.i32($i0.shadow,1);
  assume {:sourceloc "../BearSSL/src/inner.h", 763, 2} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $r.shadow := $i1.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0,37377));
procedure {:inline 1} llvm.memset.p0i8.i64($p0: ref, $p0.shadow: ref, $i1: i8, $i1.shadow: i8, $i2: i64, $i2.shadow: i64, $i3: i1, $i3.shadow: i1);
const NEQ: ref;
axiom (NEQ == $sub.ref(0,38409));
procedure {:inline 1} NEQ($i0: i32, $i0.shadow: i32, $i1: i32, $i1.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
{
  var $i2: i32;
  var $i2.shadow: i32;
  var $i3: i32;
  var $i3.shadow: i32;
  var $i4: i32;
  var $i4.shadow: i32;
  var $i5: i32;
  var $i5.shadow: i32;
$bb0:
  assume {:sourceloc "../BearSSL/src/inner.h", 795, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "NEQ:arg:x"} boogie_si_record_i32($i0);
  call {:cexpr "NEQ:arg:y"} boogie_si_record_i32($i1);
  assume {:sourceloc "../BearSSL/src/inner.h", 795, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $xor.i32($i0,$i1);
  $i2.shadow := $xor.i32($i0.shadow,$i1.shadow);
  call {:cexpr "q"} boogie_si_record_i32($i2);
  assume {:sourceloc "../BearSSL/src/inner.h", 796, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0,$i2);
  $i3.shadow := $sub.i32(0,$i2.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 796, 12} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i2,$i3);
  $i4.shadow := $or.i32($i2.shadow,$i3.shadow);
  assume {:sourceloc "../BearSSL/src/inner.h", 796, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $lshr.i32($i4,31);
  $i5.shadow := $lshr.i32($i4.shadow,31);
  assume {:sourceloc "../BearSSL/src/inner.h", 796, 2} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $r.shadow := $i5.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
}
const lookup_Gwin: ref;
axiom (lookup_Gwin == $sub.ref(0,39441));
procedure {:inline 1} lookup_Gwin($p0: ref, $p0.shadow: ref, $i1: i32, $i1.shadow: i32)
modifies $M.13, $M.3, $exn;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $i5: i32;
  var $i5.shadow: i32;
  var $i6: i1;
  var $i6.shadow: i1;
  var $i7: i32;
  var $i7.shadow: i32;
  var $i8: i32;
  var $i8.shadow: i32;
  var $i9: i32;
  var $i9.shadow: i32;
  var $i10: i64;
  var $i10.shadow: i64;
  var $i11: i1;
  var $i11.shadow: i1;
  var $i12: i64;
  var $i12.shadow: i64;
  var $p13: ref;
  var $p13.shadow: ref;
  var $p14: ref;
  var $p14.shadow: ref;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i16: i32;
  var $i16.shadow: i32;
  var $p17: ref;
  var $p17.shadow: ref;
  var $i18: i32;
  var $i18.shadow: i32;
  var $i19: i32;
  var $i19.shadow: i32;
  var $i20: i64;
  var $i20.shadow: i64;
  var $i21: i32;
  var $i21.shadow: i32;
  var $p22: ref;
  var $p22.shadow: ref;
  var $p23: ref;
  var $p23.shadow: ref;
  var $p24: ref;
  var $p24.shadow: ref;
  var $p25: ref;
  var $p25.shadow: ref;
  var $p26: ref;
  var $p26.shadow: ref;
  var $p27: ref;
  var $p27.shadow: ref;
  var $p28: ref;
  var $p28.shadow: ref;
  var $p29: ref;
  var $p29.shadow: ref;
  var $p30: ref;
  var $p30.shadow: ref;
  var $p31: ref;
  var $p31.shadow: ref;
  var $p32: ref;
  var $p32.shadow: ref;
  var $p33: ref;
  var $p33.shadow: ref;
  var $p34: ref;
  var $p34.shadow: ref;
  var $p35: ref;
  var $p35.shadow: ref;
  var $p36: ref;
  var $p36.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1275, 2} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(72,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  call {:cexpr "lookup_Gwin:arg:idx"} boogie_si_record_i32($i1);
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1275, 2} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2,$mul.ref(0,72)),$mul.ref(0,4));
  $p3.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,72)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1275, 2} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  $p4.shadow := $bitcast.ref.ref($p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1275, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p4 == $p4.shadow));
  call $M.13, $M.13.shadow := $memset.i8($M.13, $M.13.shadow, $p4, $p4.shadow, 0, 0, 72, 72, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1276, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  $i5.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i5 == $i5.shadow);
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1276, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $ult.i32($i5,15);
  $i6.shadow := $ult.i32($i5.shadow,15);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1276, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  $shadow_ok := ($shadow_ok && ($i6 == $i6.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1279, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i32($i5,1);
  $i7.shadow := $add.i32($i5.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1279, 8} true;
  assume {:verifier.code 0} true;
  call $i8, $i8.shadow := EQ($i1, $i1.shadow, $i7, $i7.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1279, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0,$i8);
  $i9.shadow := $sub.i32(0,$i8.shadow);
  call {:cexpr "m"} boogie_si_record_i32($i9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1280, 8} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  $i10.shadow := 0;
  goto $bb4;
$bb3:
  assume !($i6 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1284, 12} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p22.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p23 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p23.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1284, 2} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  $p24.shadow := $bitcast.ref.ref($p23.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1284, 16} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p2,$mul.ref(0,72)),$mul.ref(0,4));
  $p25.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,72)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1284, 2} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  $p26.shadow := $bitcast.ref.ref($p25.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1284, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p24 == $p24.shadow));
  $shadow_ok := ($shadow_ok && ($p26 == $p26.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.13, $M.13.shadow, $p24, $p24.shadow, $p26, $p26.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1285, 12} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p27.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p28 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p28.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1285, 2} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  $p29.shadow := $bitcast.ref.ref($p28.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1285, 16} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p2,$mul.ref(0,72)),$mul.ref(9,4));
  $p30.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,72)),$mul.ref(9,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1285, 2} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  $p31.shadow := $bitcast.ref.ref($p30.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1285, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p29 == $p29.shadow));
  $shadow_ok := ($shadow_ok && ($p31 == $p31.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.13, $M.13.shadow, $p29, $p29.shadow, $p31, $p31.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1286, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p32.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p33 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p33.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1286, 2} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  $p34.shadow := $bitcast.ref.ref($p33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1286, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p34 == $p34.shadow));
  call $M.3, $M.3.shadow := $memset.i8($M.3, $M.3.shadow, $p34, $p34.shadow, 0, 0, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1287, 5} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p35.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p36 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p36.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1287, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p36 == $p36.shadow));
  $M.3 := $store.i32($M.3,$p36,1);
  $M.3.shadow := $store.i32($M.3.shadow,$p36.shadow,1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1288, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($i10 == $i10.shadow);
  assert {:shadow_invariant} ($i5 == $i5.shadow);
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1280, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $ult.i64($i10,18);
  $i11.shadow := $ult.i64($i10.shadow,18);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1280, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  $shadow_ok := ($shadow_ok && ($i11 == $i11.shadow));
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i32.i64($i5);
  $i12.shadow := $zext.i32.i64($i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref($i12,72));
  $p13.shadow := $add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref($i12.shadow,72));
  $p14 := $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref($i12,72)),$mul.ref($i10,4));
  $p14.shadow := $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref($i12.shadow,72)),$mul.ref($i10.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 17} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p14 == $p14.shadow));
  $i15 := $load.i32($M.14,$p14);
  $i15.shadow := $load.i32($M.14.shadow,$p14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 15} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i9,$i15);
  $i16.shadow := $and.i32($i9.shadow,$i15.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 4} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2,$mul.ref(0,72)),$mul.ref($i10,4));
  $p17.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,72)),$mul.ref($i10.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p17 == $p17.shadow));
  $i18 := $load.i32($M.13,$p17);
  $i18.shadow := $load.i32($M.13.shadow,$p17.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 10} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i18,$i16);
  $i19.shadow := $or.i32($i18.shadow,$i16.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1281, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p17 == $p17.shadow));
  $M.13 := $store.i32($M.13,$p17,$i19);
  $M.13.shadow := $store.i32($M.13.shadow,$p17.shadow,$i19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1282, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !($i11 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1283, 2} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1280, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i10,1);
  $i20.shadow := $add.i64($i10.shadow,1);
  call {:cexpr "u"} boogie_si_record_i64($i20);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1280, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i20;
  $i10.shadow := $i20.shadow;
  goto $bb4;
$bb8:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1276, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i5,1);
  $i21.shadow := $add.i32($i5.shadow,1);
  call {:cexpr "k"} boogie_si_record_i32($i21);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1276, 2} true;
  assume {:verifier.code 0} true;
  $i5 := $i21;
  $i5.shadow := $i21.shadow;
  goto $bb1;
}
const p256_add_mixed: ref;
axiom (p256_add_mixed == $sub.ref(0,40473));
procedure {:inline 1} p256_add_mixed($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref) returns ($r: i32, $r.shadow: i32)
modifies $M.3, $exn;
modifies $M.8;
modifies $M.10;
modifies $M.11, $M.9;
modifies $M.12, $M.7;
modifies $CurrAddr;
{
  var $p2: ref;
  var $p2.shadow: ref;
  var $p3: ref;
  var $p3.shadow: ref;
  var $p4: ref;
  var $p4.shadow: ref;
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $p8: ref;
  var $p8.shadow: ref;
  var $p9: ref;
  var $p9.shadow: ref;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $p12: ref;
  var $p12.shadow: ref;
  var $p13: ref;
  var $p13.shadow: ref;
  var $p14: ref;
  var $p14.shadow: ref;
  var $p15: ref;
  var $p15.shadow: ref;
  var $p16: ref;
  var $p16.shadow: ref;
  var $p17: ref;
  var $p17.shadow: ref;
  var $p18: ref;
  var $p18.shadow: ref;
  var $p19: ref;
  var $p19.shadow: ref;
  var $p20: ref;
  var $p20.shadow: ref;
  var $p21: ref;
  var $p21.shadow: ref;
  var $p22: ref;
  var $p22.shadow: ref;
  var $p23: ref;
  var $p23.shadow: ref;
  var $p24: ref;
  var $p24.shadow: ref;
  var $p25: ref;
  var $p25.shadow: ref;
  var $p26: ref;
  var $p26.shadow: ref;
  var $p27: ref;
  var $p27.shadow: ref;
  var $p28: ref;
  var $p28.shadow: ref;
  var $p29: ref;
  var $p29.shadow: ref;
  var $p30: ref;
  var $p30.shadow: ref;
  var $p31: ref;
  var $p31.shadow: ref;
  var $p32: ref;
  var $p32.shadow: ref;
  var $p33: ref;
  var $p33.shadow: ref;
  var $p34: ref;
  var $p34.shadow: ref;
  var $p35: ref;
  var $p35.shadow: ref;
  var $p36: ref;
  var $p36.shadow: ref;
  var $p37: ref;
  var $p37.shadow: ref;
  var $p38: ref;
  var $p38.shadow: ref;
  var $p39: ref;
  var $p39.shadow: ref;
  var $p40: ref;
  var $p40.shadow: ref;
  var $i41: i32;
  var $i41.shadow: i32;
  var $i42: i32;
  var $i42.shadow: i32;
  var $i43: i32;
  var $i43.shadow: i32;
  var $i44: i1;
  var $i44.shadow: i1;
  var $i45: i64;
  var $i45.shadow: i64;
  var $p46: ref;
  var $p46.shadow: ref;
  var $i47: i32;
  var $i47.shadow: i32;
  var $i48: i32;
  var $i48.shadow: i32;
  var $i49: i32;
  var $i49.shadow: i32;
  var $i50: i32;
  var $i50.shadow: i32;
  var $i51: i32;
  var $i51.shadow: i32;
  var $i52: i32;
  var $i52.shadow: i32;
  var $p53: ref;
  var $p53.shadow: ref;
  var $p54: ref;
  var $p54.shadow: ref;
  var $p55: ref;
  var $p55.shadow: ref;
  var $p56: ref;
  var $p56.shadow: ref;
  var $p57: ref;
  var $p57.shadow: ref;
  var $p58: ref;
  var $p58.shadow: ref;
  var $p59: ref;
  var $p59.shadow: ref;
  var $p60: ref;
  var $p60.shadow: ref;
  var $p61: ref;
  var $p61.shadow: ref;
  var $p62: ref;
  var $p62.shadow: ref;
  var $p63: ref;
  var $p63.shadow: ref;
  var $p64: ref;
  var $p64.shadow: ref;
  var $p65: ref;
  var $p65.shadow: ref;
  var $p66: ref;
  var $p66.shadow: ref;
  var $p67: ref;
  var $p67.shadow: ref;
  var $p68: ref;
  var $p68.shadow: ref;
  var $p69: ref;
  var $p69.shadow: ref;
  var $p70: ref;
  var $p70.shadow: ref;
  var $p71: ref;
  var $p71.shadow: ref;
  var $p72: ref;
  var $p72.shadow: ref;
  var $p73: ref;
  var $p73.shadow: ref;
  var $p74: ref;
  var $p74.shadow: ref;
  var $p75: ref;
  var $p75.shadow: ref;
  var $p76: ref;
  var $p76.shadow: ref;
  var $p77: ref;
  var $p77.shadow: ref;
  var $p78: ref;
  var $p78.shadow: ref;
  var $p79: ref;
  var $p79.shadow: ref;
  var $p80: ref;
  var $p80.shadow: ref;
  var $p81: ref;
  var $p81.shadow: ref;
  var $p82: ref;
  var $p82.shadow: ref;
  var $p83: ref;
  var $p83.shadow: ref;
  var $p84: ref;
  var $p84.shadow: ref;
  var $p85: ref;
  var $p85.shadow: ref;
  var $p86: ref;
  var $p86.shadow: ref;
  var $p87: ref;
  var $p87.shadow: ref;
  var $p88: ref;
  var $p88.shadow: ref;
  var $p89: ref;
  var $p89.shadow: ref;
  var $p90: ref;
  var $p90.shadow: ref;
  var $p91: ref;
  var $p91.shadow: ref;
  var $p92: ref;
  var $p92.shadow: ref;
  var $p93: ref;
  var $p93.shadow: ref;
  var $p94: ref;
  var $p94.shadow: ref;
  var $p95: ref;
  var $p95.shadow: ref;
  var $p96: ref;
  var $p96.shadow: ref;
  var $p97: ref;
  var $p97.shadow: ref;
  var $p98: ref;
  var $p98.shadow: ref;
  var $p99: ref;
  var $p99.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 979, 2} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p2.shadow := $p2;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p3.shadow := $p3;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p4.shadow := $p4;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p5.shadow := $p5;
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p6.shadow := $p6;
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p7.shadow := $p7;
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(36,$zext.i32.i64(1)));
  $p8.shadow := $p8;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 979, 2} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p9.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 979, 2} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  $p10.shadow := $bitcast.ref.ref($p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 979, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p11.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p12 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p12.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 979, 2} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  $p13.shadow := $bitcast.ref.ref($p12.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 979, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p10 == $p10.shadow));
  $shadow_ok := ($shadow_ok && ($p13 == $p13.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p10, $p10.shadow, $p13, $p13.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 980, 2} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p14.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 980, 2} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  $p15.shadow := $bitcast.ref.ref($p14.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 980, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p16.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p17 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p17.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 980, 2} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  $p18.shadow := $bitcast.ref.ref($p17.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 980, 2} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p15 == $p15.shadow));
  $shadow_ok := ($shadow_ok && ($p18 == $p18.shadow));
  call $M.3, $M.3.shadow := $memcpy.i8($M.3, $M.3.shadow, $M.3, $M.3.shadow, $p15, $p15.shadow, $p18, $p18.shadow, 36, 36, false, false);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 985, 14} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p19.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 985, 22} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p20.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p21 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p21.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 985, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p19, $p19.shadow, $p21, $p21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 986, 11} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p22.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 986, 19} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(0,1));
  $p23.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p24 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p24.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 986, 22} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p25.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 986, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p22, $p22.shadow, $p24, $p24.shadow, $p25, $p25.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 987, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p26.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 987, 19} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p27.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p28 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p28.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 987, 22} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p29.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 987, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p26, $p26.shadow, $p28, $p28.shadow, $p29, $p29.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 988, 11} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p30.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 988, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(36,1));
  $p31.shadow := $add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p32 := $add.ref($add.ref($add.ref($p1,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p32.shadow := $add.ref($add.ref($add.ref($p1.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 988, 22} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p33.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 988, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p30, $p30.shadow, $p32, $p32.shadow, $p33, $p33.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 995, 11} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p34.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 995, 15} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p35.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 995, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p36.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 995, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p34, $p34.shadow, $p35, $p35.shadow, $p36, $p36.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 996, 11} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p37.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 996, 15} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p38.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 996, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p39.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 996, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p37, $p37.shadow, $p38, $p38.shadow, $p39, $p39.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 997, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p40.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 997, 2} true;
  assume {:verifier.code 0} true;
  call $i41, $i41.shadow := reduce_final_f256($p40, $p40.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i42 := 0;
  $i42.shadow := 0;
  $i43 := 0;
  $i43.shadow := 0;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p5 == $p5.shadow);
  assert {:shadow_invariant} ($i43 == $i43.shadow);
  assert {:shadow_invariant} ($p4 == $p4.shadow);
  assert {:shadow_invariant} ($p2 == $p2.shadow);
  assert {:likely_shadow_invariant} ($p7 == $p7.shadow);
  assert {:likely_shadow_invariant} ($p8 == $p8.shadow);
  assert {:likely_shadow_invariant} ($p6 == $p6.shadow);
  assert {:likely_shadow_invariant} ($p3 == $p3.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 999, 16} true;
  assume {:verifier.code 0} true;
  $i44 := $slt.i32($i43,9);
  $i44.shadow := $slt.i32($i43.shadow,9);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 999, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  $shadow_ok := ($shadow_ok && ($i44 == $i44.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i44 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1000, 10} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i32.i64($i43);
  $i45.shadow := $sext.i32.i64($i43.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1000, 10} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref($i45,4));
  $p46.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref($i45.shadow,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1000, 10} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p46 == $p46.shadow));
  $i47 := $load.i32($M.3,$p46);
  $i47.shadow := $load.i32($M.3.shadow,$p46.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1000, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $or.i32($i42,$i47);
  $i48.shadow := $or.i32($i42.shadow,$i47.shadow);
  call {:cexpr "ret"} boogie_si_record_i32($i48);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1001, 2} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !($i44 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1002, 15} true;
  assume {:verifier.code 0} true;
  $i50 := $sub.i32(0,$i42);
  $i50.shadow := $sub.i32(0,$i42.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1002, 13} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i32($i42,$i50);
  $i51.shadow := $or.i32($i42.shadow,$i50.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1002, 21} true;
  assume {:verifier.code 0} true;
  $i52 := $lshr.i32($i51,31);
  $i52.shadow := $lshr.i32($i51.shadow,31);
  call {:cexpr "ret"} boogie_si_record_i32($i52);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1007, 14} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p8,$mul.ref(0,36)),$mul.ref(0,4));
  $p53.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1007, 18} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p54.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1007, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p53, $p53.shadow, $p54, $p54.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1008, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p55.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1008, 15} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p56.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1008, 19} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p8,$mul.ref(0,36)),$mul.ref(0,4));
  $p57.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1008, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p55, $p55.shadow, $p56, $p56.shadow, $p57, $p57.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1009, 11} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p58.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1009, 15} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p8,$mul.ref(0,36)),$mul.ref(0,4));
  $p59.shadow := $add.ref($add.ref($p8.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1009, 19} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p60.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1009, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p58, $p58.shadow, $p59, $p59.shadow, $p60, $p60.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1014, 18} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p61.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p62 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p62.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1014, 21} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p63.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1014, 2} true;
  assume {:verifier.code 0} true;
  call square_f256($p62, $p62.shadow, $p63, $p63.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1015, 15} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p64.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p65 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p65.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1015, 22} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p66.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p67 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p67.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1015, 25} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p68.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1015, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p65, $p65.shadow, $p67, $p67.shadow, $p68, $p68.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1016, 15} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p69.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p70 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p70.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1016, 22} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p71.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p72 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p72.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1016, 25} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p73.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1016, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p70, $p70.shadow, $p72, $p72.shadow, $p73, $p73.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1017, 15} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p74.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p75 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p75.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1017, 22} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p76.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p77 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p77.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1017, 25} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p78.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1017, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p75, $p75.shadow, $p77, $p77.shadow, $p78, $p78.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1022, 11} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p79.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p80.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1022, 23} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1));
  $p81.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1));
  $p82 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  $p82.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(0,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1022, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p79, $p79.shadow, $p80, $p80.shadow, $p82, $p82.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1023, 15} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p83.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p84 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p84.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1023, 18} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p5,$mul.ref(0,36)),$mul.ref(0,4));
  $p85.shadow := $add.ref($add.ref($p5.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1023, 22} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p7,$mul.ref(0,36)),$mul.ref(0,4));
  $p86.shadow := $add.ref($add.ref($p7.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1023, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p84, $p84.shadow, $p85, $p85.shadow, $p86, $p86.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1024, 11} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p87.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1024, 15} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p6,$mul.ref(0,36)),$mul.ref(0,4));
  $p88.shadow := $add.ref($add.ref($p6.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1024, 19} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p4,$mul.ref(0,36)),$mul.ref(0,4));
  $p89.shadow := $add.ref($add.ref($p4.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1024, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p87, $p87.shadow, $p88, $p88.shadow, $p89, $p89.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1025, 15} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p90.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p91 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p91.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1025, 22} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1));
  $p92.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1));
  $p93 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  $p93.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(36,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1025, 25} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p2,$mul.ref(0,36)),$mul.ref(0,4));
  $p94.shadow := $add.ref($add.ref($p2.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1025, 2} true;
  assume {:verifier.code 0} true;
  call sub_f256($p91, $p91.shadow, $p93, $p93.shadow, $p94, $p94.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1030, 15} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p95.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p96 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p96.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1030, 22} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1));
  $p97.shadow := $add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1));
  $p98 := $add.ref($add.ref($add.ref($p0,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  $p98.shadow := $add.ref($add.ref($add.ref($p0.shadow,$mul.ref(0,108)),$mul.ref(72,1)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1030, 25} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p3,$mul.ref(0,36)),$mul.ref(0,4));
  $p99.shadow := $add.ref($add.ref($p3.shadow,$mul.ref(0,36)),$mul.ref(0,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1030, 2} true;
  assume {:verifier.code 0} true;
  call mul_f256($p96, $p96.shadow, $p98, $p98.shadow, $p99, $p99.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 1032, 2} true;
  assume {:verifier.code 0} true;
  $r := $i52;
  $r.shadow := $i52.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 999, 23} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i43,1);
  $i49.shadow := $add.i32($i43.shadow,1);
  call {:cexpr "i"} boogie_si_record_i32($i49);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 999, 2} true;
  assume {:verifier.code 0} true;
  $i42 := $i48;
  $i42.shadow := $i48.shadow;
  $i43 := $i49;
  $i43.shadow := $i49.shadow;
  goto $bb1;
}
const be8_to_le30: ref;
axiom (be8_to_le30 == $sub.ref(0,41505));
procedure {:inline 1} be8_to_le30($p0: ref, $p0.shadow: ref, $p1: ref, $p1.shadow: ref, $i2: i64, $i2.shadow: i64) returns ($r: i32, $r.shadow: i32)
modifies $exn, $M.3;
{
  var $i3: i32;
  var $i3.shadow: i32;
  var $i4: i64;
  var $i4.shadow: i64;
  var $i5: i32;
  var $i5.shadow: i32;
  var $p6: ref;
  var $p6.shadow: ref;
  var $i7: i64;
  var $i7.shadow: i64;
  var $i8: i1;
  var $i8.shadow: i1;
  var $p9: ref;
  var $p9.shadow: ref;
  var $i10: i8;
  var $i10.shadow: i8;
  var $i11: i32;
  var $i11.shadow: i32;
  var $i12: i1;
  var $i12.shadow: i1;
  var $i13: i32;
  var $i13.shadow: i32;
  var $i14: i32;
  var $i14.shadow: i32;
  var $i15: i32;
  var $i15.shadow: i32;
  var $i19: i32;
  var $i19.shadow: i32;
  var $i20: i32;
  var $i20.shadow: i32;
  var $i21: i32;
  var $i21.shadow: i32;
  var $p22: ref;
  var $p22.shadow: ref;
  var $i23: i32;
  var $i23.shadow: i32;
  var $i24: i32;
  var $i24.shadow: i32;
  var $i25: i32;
  var $i25.shadow: i32;
  var $i16: i32;
  var $i16.shadow: i32;
  var $i17: i32;
  var $i17.shadow: i32;
  var $p18: ref;
  var $p18.shadow: ref;
$bb0:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 60, 2} true;
  assume {:verifier.code 0} true;
  call {:cexpr "be8_to_le30:arg:len"} boogie_si_record_i64($i2);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 60, 2} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  $i3.shadow := 0;
  $i4 := $i2;
  $i4.shadow := $i2.shadow;
  $i5 := 0;
  $i5.shadow := 0;
  $p6 := $p0;
  $p6.shadow := $p0.shadow;
  goto $bb1;
$bb1:
  assert {:shadow_invariant} $shadow_ok;
  assert {:shadow_invariant} ($p6 == $p6.shadow);
  assert {:shadow_invariant} ($i5 == $i5.shadow);
  assert {:shadow_invariant} ($i4 == $i4.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 60, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i4,$sub.i64(0,1));
  $i7.shadow := $add.i64($i4.shadow,$sub.i64(0,1));
  call {:cexpr "len"} boogie_si_record_i64($i7);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 60, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $ugt.i64($i4,0);
  $i8.shadow := $ugt.i64($i4.shadow,0);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 60, 2} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  $shadow_ok := ($shadow_ok && ($i8 == $i8.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i8 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 63, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1,$mul.ref($i7,1));
  $p9.shadow := $add.ref($p1.shadow,$mul.ref($i7.shadow,1));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 63, 7} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p9 == $p9.shadow));
  $i10 := $load.i8($M.4,$p9);
  $i10.shadow := $load.i8($M.4.shadow,$p9.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 63, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  $i11.shadow := $zext.i8.i32($i10.shadow);
  call {:cexpr "b"} boogie_si_record_i32($i11);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 64, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i5,22);
  $i12.shadow := $slt.i32($i5.shadow,22);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 64, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  $shadow_ok := ($shadow_ok && ($i12 == $i12.shadow));
  goto $bb4, $bb5;
$bb3:
  assume !($i8 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 73, 2} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $r.shadow := $i3.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 65, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $shl.i32($i11,$i5);
  $i13.shadow := $shl.i32($i11.shadow,$i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 65, 8} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i32($i3,$i13);
  $i14.shadow := $or.i32($i3.shadow,$i13.shadow);
  call {:cexpr "acc"} boogie_si_record_i32($i14);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 66, 12} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i5,8);
  $i15.shadow := $add.i32($i5.shadow,8);
  call {:cexpr "acc_len"} boogie_si_record_i32($i15);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 67, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i14;
  $i16.shadow := $i14.shadow;
  $i17 := $i15;
  $i17.shadow := $i15.shadow;
  $p18 := $p6;
  $p18.shadow := $p6.shadow;
  goto $bb6;
$bb5:
  assume !($i12 == 1);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 68, 24} true;
  assume {:verifier.code 0} true;
  $i19 := $shl.i32($i11,$i5);
  $i19.shadow := $shl.i32($i11.shadow,$i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 68, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i3,$i19);
  $i20.shadow := $or.i32($i3.shadow,$i19.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 68, 37} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i32($i20,1073741823);
  $i21.shadow := $and.i32($i20.shadow,1073741823);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 68, 9} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p6,$mul.ref(1,4));
  $p22.shadow := $add.ref($p6.shadow,$mul.ref(1,4));
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 68, 12} true;
  assume {:verifier.code 0} true;
  $shadow_ok := ($shadow_ok && ($p6 == $p6.shadow));
  $M.3 := $store.i32($M.3,$p6,$i21);
  $M.3.shadow := $store.i32($M.3.shadow,$p6.shadow,$i21.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 69, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i32(30,$i5);
  $i23.shadow := $sub.i32(30,$i5.shadow);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 69, 12} true;
  assume {:verifier.code 0} true;
  $i24 := $lshr.i32($i11,$i23);
  $i24.shadow := $lshr.i32($i11.shadow,$i23.shadow);
  call {:cexpr "acc"} boogie_si_record_i32($i24);
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 70, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32($i5,22);
  $i25.shadow := $sub.i32($i5.shadow,22);
  call {:cexpr "acc_len"} boogie_si_record_i32($i25);
  assume {:verifier.code 0} true;
  $i16 := $i24;
  $i16.shadow := $i24.shadow;
  $i17 := $i25;
  $i17.shadow := $i25.shadow;
  $p18 := $p22;
  $p18.shadow := $p22.shadow;
  goto $bb6;
$bb6:
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "../BearSSL/src/ec/ec_p256_m31.c", 60, 2} true;
  assume {:verifier.code 0} true;
  $i3 := $i16;
  $i3.shadow := $i16.shadow;
  $i4 := $i7;
  $i4.shadow := $i7.shadow;
  $i5 := $i17;
  $i5.shadow := $i17.shadow;
  $p6 := $p18;
  $p6.shadow := $p18.shadow;
  goto $bb1;
}
const api_mul_wrapper: ref;
axiom (api_mul_wrapper == $sub.ref(0,42537));
procedure {:entrypoint} api_mul_wrapper($p0: ref, $p0.shadow: ref, $i1: i64, $i1.shadow: i64, $p2: ref, $p2.shadow: ref, $i3: i64, $i3.shadow: i64, $i4: i32, $i4.shadow: i32)
requires {:public_in $p0} true;
requires {:public_in $i1} true;
requires {:public_in $p2} true;
requires {:public_in $i3} true;
requires {:public_in $i4} true;
requires {:public_in $load.i8, $M.4, $p0, 1, 64} true;
modifies $exn;
modifies $CurrAddr, $M.17, $M.18, $M.19, $M.20, $M.16, $M.21, $M.22, $M.6, $M.14, $M.3;
modifies $M.4;
modifies $M.8, $M.10;
modifies $M.11, $M.9, $M.12, $M.7;
requires ($p0 == $p0.shadow);
requires ($i1 == $i1.shadow);
requires ($p2 == $p2.shadow);
requires ($i3 == $i3.shadow);
requires ($i4 == $i4.shadow);
requires ($load.i8($M.4,($p0 + 0)) == $load.i8($M.4.shadow,($p0.shadow + 0)));
requires ($load.i8($M.4,($p0 + 1)) == $load.i8($M.4.shadow,($p0.shadow + 1)));
requires ($load.i8($M.4,($p0 + 2)) == $load.i8($M.4.shadow,($p0.shadow + 2)));
requires ($load.i8($M.4,($p0 + 3)) == $load.i8($M.4.shadow,($p0.shadow + 3)));
requires ($load.i8($M.4,($p0 + 4)) == $load.i8($M.4.shadow,($p0.shadow + 4)));
requires ($load.i8($M.4,($p0 + 5)) == $load.i8($M.4.shadow,($p0.shadow + 5)));
requires ($load.i8($M.4,($p0 + 6)) == $load.i8($M.4.shadow,($p0.shadow + 6)));
requires ($load.i8($M.4,($p0 + 7)) == $load.i8($M.4.shadow,($p0.shadow + 7)));
requires ($load.i8($M.4,($p0 + 8)) == $load.i8($M.4.shadow,($p0.shadow + 8)));
requires ($load.i8($M.4,($p0 + 9)) == $load.i8($M.4.shadow,($p0.shadow + 9)));
requires ($load.i8($M.4,($p0 + 10)) == $load.i8($M.4.shadow,($p0.shadow + 10)));
requires ($load.i8($M.4,($p0 + 11)) == $load.i8($M.4.shadow,($p0.shadow + 11)));
requires ($load.i8($M.4,($p0 + 12)) == $load.i8($M.4.shadow,($p0.shadow + 12)));
requires ($load.i8($M.4,($p0 + 13)) == $load.i8($M.4.shadow,($p0.shadow + 13)));
requires ($load.i8($M.4,($p0 + 14)) == $load.i8($M.4.shadow,($p0.shadow + 14)));
requires ($load.i8($M.4,($p0 + 15)) == $load.i8($M.4.shadow,($p0.shadow + 15)));
requires ($load.i8($M.4,($p0 + 16)) == $load.i8($M.4.shadow,($p0.shadow + 16)));
requires ($load.i8($M.4,($p0 + 17)) == $load.i8($M.4.shadow,($p0.shadow + 17)));
requires ($load.i8($M.4,($p0 + 18)) == $load.i8($M.4.shadow,($p0.shadow + 18)));
requires ($load.i8($M.4,($p0 + 19)) == $load.i8($M.4.shadow,($p0.shadow + 19)));
requires ($load.i8($M.4,($p0 + 20)) == $load.i8($M.4.shadow,($p0.shadow + 20)));
requires ($load.i8($M.4,($p0 + 21)) == $load.i8($M.4.shadow,($p0.shadow + 21)));
requires ($load.i8($M.4,($p0 + 22)) == $load.i8($M.4.shadow,($p0.shadow + 22)));
requires ($load.i8($M.4,($p0 + 23)) == $load.i8($M.4.shadow,($p0.shadow + 23)));
requires ($load.i8($M.4,($p0 + 24)) == $load.i8($M.4.shadow,($p0.shadow + 24)));
requires ($load.i8($M.4,($p0 + 25)) == $load.i8($M.4.shadow,($p0.shadow + 25)));
requires ($load.i8($M.4,($p0 + 26)) == $load.i8($M.4.shadow,($p0.shadow + 26)));
requires ($load.i8($M.4,($p0 + 27)) == $load.i8($M.4.shadow,($p0.shadow + 27)));
requires ($load.i8($M.4,($p0 + 28)) == $load.i8($M.4.shadow,($p0.shadow + 28)));
requires ($load.i8($M.4,($p0 + 29)) == $load.i8($M.4.shadow,($p0.shadow + 29)));
requires ($load.i8($M.4,($p0 + 30)) == $load.i8($M.4.shadow,($p0.shadow + 30)));
requires ($load.i8($M.4,($p0 + 31)) == $load.i8($M.4.shadow,($p0.shadow + 31)));
requires ($load.i8($M.4,($p0 + 32)) == $load.i8($M.4.shadow,($p0.shadow + 32)));
requires ($load.i8($M.4,($p0 + 33)) == $load.i8($M.4.shadow,($p0.shadow + 33)));
requires ($load.i8($M.4,($p0 + 34)) == $load.i8($M.4.shadow,($p0.shadow + 34)));
requires ($load.i8($M.4,($p0 + 35)) == $load.i8($M.4.shadow,($p0.shadow + 35)));
requires ($load.i8($M.4,($p0 + 36)) == $load.i8($M.4.shadow,($p0.shadow + 36)));
requires ($load.i8($M.4,($p0 + 37)) == $load.i8($M.4.shadow,($p0.shadow + 37)));
requires ($load.i8($M.4,($p0 + 38)) == $load.i8($M.4.shadow,($p0.shadow + 38)));
requires ($load.i8($M.4,($p0 + 39)) == $load.i8($M.4.shadow,($p0.shadow + 39)));
requires ($load.i8($M.4,($p0 + 40)) == $load.i8($M.4.shadow,($p0.shadow + 40)));
requires ($load.i8($M.4,($p0 + 41)) == $load.i8($M.4.shadow,($p0.shadow + 41)));
requires ($load.i8($M.4,($p0 + 42)) == $load.i8($M.4.shadow,($p0.shadow + 42)));
requires ($load.i8($M.4,($p0 + 43)) == $load.i8($M.4.shadow,($p0.shadow + 43)));
requires ($load.i8($M.4,($p0 + 44)) == $load.i8($M.4.shadow,($p0.shadow + 44)));
requires ($load.i8($M.4,($p0 + 45)) == $load.i8($M.4.shadow,($p0.shadow + 45)));
requires ($load.i8($M.4,($p0 + 46)) == $load.i8($M.4.shadow,($p0.shadow + 46)));
requires ($load.i8($M.4,($p0 + 47)) == $load.i8($M.4.shadow,($p0.shadow + 47)));
requires ($load.i8($M.4,($p0 + 48)) == $load.i8($M.4.shadow,($p0.shadow + 48)));
requires ($load.i8($M.4,($p0 + 49)) == $load.i8($M.4.shadow,($p0.shadow + 49)));
requires ($load.i8($M.4,($p0 + 50)) == $load.i8($M.4.shadow,($p0.shadow + 50)));
requires ($load.i8($M.4,($p0 + 51)) == $load.i8($M.4.shadow,($p0.shadow + 51)));
requires ($load.i8($M.4,($p0 + 52)) == $load.i8($M.4.shadow,($p0.shadow + 52)));
requires ($load.i8($M.4,($p0 + 53)) == $load.i8($M.4.shadow,($p0.shadow + 53)));
requires ($load.i8($M.4,($p0 + 54)) == $load.i8($M.4.shadow,($p0.shadow + 54)));
requires ($load.i8($M.4,($p0 + 55)) == $load.i8($M.4.shadow,($p0.shadow + 55)));
requires ($load.i8($M.4,($p0 + 56)) == $load.i8($M.4.shadow,($p0.shadow + 56)));
requires ($load.i8($M.4,($p0 + 57)) == $load.i8($M.4.shadow,($p0.shadow + 57)));
requires ($load.i8($M.4,($p0 + 58)) == $load.i8($M.4.shadow,($p0.shadow + 58)));
requires ($load.i8($M.4,($p0 + 59)) == $load.i8($M.4.shadow,($p0.shadow + 59)));
requires ($load.i8($M.4,($p0 + 60)) == $load.i8($M.4.shadow,($p0.shadow + 60)));
requires ($load.i8($M.4,($p0 + 61)) == $load.i8($M.4.shadow,($p0.shadow + 61)));
requires ($load.i8($M.4,($p0 + 62)) == $load.i8($M.4.shadow,($p0.shadow + 62)));
requires ($load.i8($M.4,($p0 + 63)) == $load.i8($M.4.shadow,($p0.shadow + 63)));
{
  var $p5: ref;
  var $p5.shadow: ref;
  var $p6: ref;
  var $p6.shadow: ref;
  var $p7: ref;
  var $p7.shadow: ref;
  var $p8: ref;
  var $p8.shadow: ref;
  var $p9: ref;
  var $p9.shadow: ref;
  var $p10: ref;
  var $p10.shadow: ref;
  var $p11: ref;
  var $p11.shadow: ref;
  var $p12: ref;
  var $p12.shadow: ref;
  var $i13: i32;
  var $i13.shadow: i32;
$bb0:
  $shadow_ok := true;
  call $initialize();
  assume {:sourceloc "api_mul.c", 9, 12} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:api_mul_wrapper"} boogie_si_record_ref(api_mul_wrapper);
  call {:cexpr "smack:arg:api_mul_wrapper:$p0"} boogie_si_record_ref($p0);
  call {:cexpr "smack:arg:api_mul_wrapper:$i1"} boogie_si_record_i64($i1);
  call {:cexpr "smack:arg:api_mul_wrapper:$p2"} boogie_si_record_ref($p2);
  call {:cexpr "smack:arg:api_mul_wrapper:$i3"} boogie_si_record_i64($i3);
  call {:cexpr "smack:arg:api_mul_wrapper:$i4"} boogie_si_record_i32($i4);
  call {:cexpr "api_mul_wrapper:arg:Glen"} boogie_si_record_i64($i1);
  call {:cexpr "api_mul_wrapper:arg:kblen"} boogie_si_record_i64($i3);
  call {:cexpr "api_mul_wrapper:arg:curve"} boogie_si_record_i32($i4);
  assume {:sourceloc "api_mul.c", 9, 12} true;
  assume {:verifier.code 0} true;
  call {:name $p0} $p5 := __SMACK_value.ref($p0);
  $p5.shadow := $p5;
  assume $isExternal($p5);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p5);
  assume {:sourceloc "api_mul.c", 9, 2} true;
  assume {:verifier.code 0} true;
  call public_in($p5, $p5.shadow);
  assume {:sourceloc "api_mul.c", 10, 12} true;
  assume {:verifier.code 0} true;
  call {:name $i1} $p6 := __SMACK_value.i64($i1);
  $p6.shadow := $p6;
  assume $isExternal($p6);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p6);
  assume {:sourceloc "api_mul.c", 10, 2} true;
  assume {:verifier.code 0} true;
  call public_in($p6, $p6.shadow);
  assume {:sourceloc "api_mul.c", 11, 12} true;
  assume {:verifier.code 0} true;
  call {:name $p2} $p7 := __SMACK_value.ref($p2);
  $p7.shadow := $p7;
  assume $isExternal($p7);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p7);
  assume {:sourceloc "api_mul.c", 11, 2} true;
  assume {:verifier.code 0} true;
  call public_in($p7, $p7.shadow);
  assume {:sourceloc "api_mul.c", 12, 12} true;
  assume {:verifier.code 0} true;
  call {:name $i3} $p8 := __SMACK_value.i64($i3);
  $p8.shadow := $p8;
  assume $isExternal($p8);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p8);
  assume {:sourceloc "api_mul.c", 12, 2} true;
  assume {:verifier.code 0} true;
  call public_in($p8, $p8.shadow);
  assume {:sourceloc "api_mul.c", 13, 12} true;
  assume {:verifier.code 0} true;
  call {:name $i4} $p9 := __SMACK_value.i32($i4);
  $p9.shadow := $p9;
  assume $isExternal($p9);
  call {:cexpr "smack:ext:__SMACK_value"} boogie_si_record_ref($p9);
  assume {:sourceloc "api_mul.c", 13, 2} true;
  assume {:verifier.code 0} true;
  call public_in($p9, $p9.shadow);
  assume {:sourceloc "api_mul.c", 15, 12} true;
  assume {:verifier.code 1} true;
  call {:name $p0} {:array "$load.i8", $M.4, $p0, 1, 64} $p10 := __SMACK_values($p0, 64);
  $p10.shadow := $p10;
  assume $isExternal($p10);
  call {:cexpr "smack:ext:__SMACK_values"} boogie_si_record_ref($p10);
  assume {:sourceloc "api_mul.c", 15, 2} true;
  assume {:verifier.code 0} true;
  call public_in($p10, $p10.shadow);
  assume {:sourceloc "api_mul.c", 18, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref(br_ec_p256_m31,$mul.ref(0,56)),$mul.ref(32,1));
  $p11.shadow := $add.ref($add.ref(br_ec_p256_m31,$mul.ref(0,56)),$mul.ref(32,1));
  assume {:sourceloc "api_mul.c", 18, 7} true;
  assume {:verifier.code 0} true;
  $p12 := $M.16;
  $p12.shadow := $M.16.shadow;
  call $i13, $i13.shadow := devirtbounce($p12, $p12.shadow, $p0, $p0.shadow, $i1, $i1.shadow, $p2, $p2.shadow, $i3, $i3.shadow, 23, 23);
  assume {:sourceloc "api_mul.c", 19, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  $exn.shadow := false;
  assert $shadow_ok;
  return;
}
const __SMACK_value: ref;
axiom (__SMACK_value == $sub.ref(0,43569));
procedure {:inline 1} __SMACK_value.i32(p.0: i32) returns ($r: ref);
procedure {:inline 1} __SMACK_value.i64(p.0: i64) returns ($r: ref);
procedure {:inline 1} __SMACK_value.ref(p.0: ref) returns ($r: ref);
const public_in: ref;
axiom (public_in == $sub.ref(0,44601));
procedure {:inline 1} public_in($p0: ref, $p0.shadow: ref);
const __SMACK_values: ref;
axiom (__SMACK_values == $sub.ref(0,45633));
procedure {:inline 1} __SMACK_values($p0: ref, $i1: i32) returns ($r: ref);
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0,46665));
procedure {:inline 1} __SMACK_code.ref($p0: ref);
procedure {:inline 1} __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0,47697));
procedure {:inline 1} __VERIFIER_assume($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 45, 3} true;
  assume {:verifier.code 1} true;
  assume ($i0 != $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 46, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0,48729));
procedure {:inline 1} __SMACK_dummy($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_and32: ref;
axiom (__SMACK_and32 == $sub.ref(0,49761));
procedure {:inline 1} __SMACK_and32($i0: i32, $i1: i32) returns ($r: i32)
modifies $exn;
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i4: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i20: i1;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i19: i32;
  var $i24: i64;
  var $i25: i64;
  var $i26: i32;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i35: i1;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i34: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i50: i1;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i49: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i32;
  var $i57: i32;
  var $i58: i64;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i65: i1;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i64: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i80: i1;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i79: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i32;
  var $i87: i32;
  var $i88: i64;
  var $i89: i64;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i95: i1;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i94: i32;
  var $i99: i64;
  var $i100: i64;
  var $i101: i32;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $i105: i32;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i110: i1;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i109: i32;
  var $i114: i64;
  var $i115: i64;
  var $i116: i32;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $i120: i32;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i125: i1;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i124: i32;
  var $i129: i64;
  var $i130: i64;
  var $i131: i32;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i140: i1;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i139: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i32;
  var $i147: i32;
  var $i148: i64;
  var $i149: i64;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i155: i1;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i154: i32;
  var $i159: i64;
  var $i160: i64;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i170: i1;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i169: i32;
  var $i174: i64;
  var $i175: i64;
  var $i176: i32;
  var $i177: i32;
  var $i178: i64;
  var $i179: i64;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i185: i1;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i184: i32;
  var $i189: i64;
  var $i190: i64;
  var $i191: i32;
  var $i192: i32;
  var $i193: i64;
  var $i194: i64;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i200: i1;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i199: i32;
  var $i204: i64;
  var $i205: i64;
  var $i206: i32;
  var $i207: i32;
  var $i208: i64;
  var $i209: i64;
  var $i210: i32;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i215: i1;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i214: i32;
  var $i219: i64;
  var $i220: i64;
  var $i221: i32;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $i225: i32;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i230: i1;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i229: i32;
  var $i234: i64;
  var $i235: i64;
  var $i236: i32;
  var $i237: i32;
  var $i238: i64;
  var $i239: i64;
  var $i240: i32;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i245: i1;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i244: i32;
  var $i249: i64;
  var $i250: i64;
  var $i251: i32;
  var $i252: i32;
  var $i253: i64;
  var $i254: i64;
  var $i255: i32;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i260: i1;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i259: i32;
  var $i264: i64;
  var $i265: i64;
  var $i266: i32;
  var $i267: i32;
  var $i268: i64;
  var $i269: i64;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i275: i1;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i274: i32;
  var $i279: i64;
  var $i280: i64;
  var $i281: i32;
  var $i282: i32;
  var $i283: i64;
  var $i284: i64;
  var $i285: i32;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i290: i1;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i289: i32;
  var $i294: i64;
  var $i295: i64;
  var $i296: i32;
  var $i297: i32;
  var $i298: i64;
  var $i299: i64;
  var $i300: i32;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i305: i1;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i304: i32;
  var $i309: i64;
  var $i310: i64;
  var $i311: i32;
  var $i312: i32;
  var $i313: i64;
  var $i314: i64;
  var $i315: i32;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i320: i1;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i319: i32;
  var $i324: i64;
  var $i325: i64;
  var $i326: i32;
  var $i327: i32;
  var $i328: i64;
  var $i329: i64;
  var $i330: i32;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i335: i1;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i334: i32;
  var $i339: i64;
  var $i340: i64;
  var $i341: i32;
  var $i342: i32;
  var $i343: i64;
  var $i344: i64;
  var $i345: i32;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i350: i1;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i349: i32;
  var $i354: i64;
  var $i355: i64;
  var $i356: i32;
  var $i357: i32;
  var $i358: i64;
  var $i359: i64;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i365: i1;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i364: i32;
  var $i369: i64;
  var $i370: i64;
  var $i371: i32;
  var $i372: i32;
  var $i373: i64;
  var $i374: i64;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i380: i1;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i379: i32;
  var $i384: i64;
  var $i385: i64;
  var $i386: i32;
  var $i387: i32;
  var $i388: i64;
  var $i389: i64;
  var $i390: i32;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i395: i1;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i394: i32;
  var $i399: i64;
  var $i400: i64;
  var $i401: i32;
  var $i402: i32;
  var $i403: i64;
  var $i404: i64;
  var $i405: i32;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i410: i1;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i409: i32;
  var $i414: i64;
  var $i415: i64;
  var $i416: i32;
  var $i417: i32;
  var $i418: i64;
  var $i419: i64;
  var $i420: i32;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i425: i1;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i424: i32;
  var $i429: i64;
  var $i430: i64;
  var $i431: i32;
  var $i432: i32;
  var $i433: i64;
  var $i434: i64;
  var $i435: i32;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i440: i1;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i439: i32;
  var $i444: i64;
  var $i445: i64;
  var $i446: i32;
  var $i447: i32;
  var $i448: i64;
  var $i449: i64;
  var $i450: i32;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i455: i1;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i454: i32;
  var $i459: i64;
  var $i460: i64;
  var $i461: i32;
  var $i462: i32;
  var $i463: i64;
  var $i464: i64;
  var $i465: i32;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i470: i1;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i469: i32;
  var $i474: i64;
  var $i475: i64;
  var $i476: i32;
  var $i477: i32;
  var $i478: i64;
  var $i479: i64;
  var $i480: i32;
  var $i481: i32;
  var $i482: i32;
  var $i483: i1;
  var $i485: i1;
  var $i486: i1;
  var $i488: i32;
  var $i487: i32;
  var $i484: i32;
  var $i489: i64;
  var $i490: i64;
  var $i491: i32;
  var $i492: i32;
  var $i493: i64;
  var $i494: i64;
  var $i495: i32;
  var $i496: i32;
  var $i497: i32;
  var $i498: i1;
  var $i500: i1;
  var $i501: i1;
  var $i503: i32;
  var $i502: i32;
  var $i499: i32;
  var $i504: i64;
  var $i505: i64;
  var $i506: i32;
  var $i507: i32;
  var $i508: i64;
  var $i509: i64;
  var $i510: i32;
  var $i511: i32;
  var $i512: i32;
  var $i513: i1;
  var $i515: i1;
  var $i516: i1;
  var $i518: i32;
  var $i517: i32;
  var $i514: i32;
  var $i519: i64;
  var $i520: i64;
  var $i521: i32;
  var $i522: i32;
  var $i523: i64;
  var $i524: i64;
  var $i525: i32;
  var $i526: i32;
  var $i527: i32;
  var $i528: i1;
  var $i530: i1;
  var $i531: i1;
  var $i533: i32;
  var $i532: i32;
  var $i529: i32;
  var $i534: i64;
  var $i535: i64;
  var $i536: i32;
  var $i537: i32;
  var $i538: i64;
  var $i539: i64;
  var $i540: i32;
  var $i541: i32;
  var $i542: i32;
  var $i543: i1;
  var $i545: i1;
  var $i546: i1;
  var $i548: i32;
  var $i547: i32;
  var $i544: i32;
  var $i549: i64;
  var $i550: i64;
  var $i551: i32;
  var $i552: i32;
  var $i553: i64;
  var $i554: i64;
  var $i555: i32;
  var $i556: i32;
  var $i557: i32;
  var $i558: i1;
  var $i560: i1;
  var $i561: i1;
  var $i563: i32;
  var $i562: i32;
  var $i559: i32;
  var $i564: i64;
  var $i565: i64;
  var $i566: i32;
  var $i567: i32;
  var $i568: i64;
  var $i569: i64;
  var $i570: i32;
  var $i571: i32;
  var $i572: i32;
  var $i573: i1;
  var $i575: i1;
  var $i576: i1;
  var $i578: i32;
  var $i577: i32;
  var $i574: i32;
  var $i579: i64;
  var $i580: i64;
  var $i581: i32;
  var $i582: i32;
  var $i583: i64;
  var $i584: i64;
  var $i585: i32;
  var $i586: i32;
  var $i587: i32;
  var $i588: i1;
  var $i590: i1;
  var $i591: i1;
  var $i593: i32;
  var $i592: i32;
  var $i589: i32;
  var $i594: i64;
  var $i595: i64;
  var $i596: i32;
  var $i597: i32;
  var $i598: i64;
  var $i599: i64;
  var $i600: i32;
  var $i601: i32;
  var $i602: i32;
  var $i603: i1;
  var $i605: i1;
  var $i606: i1;
  var $i608: i32;
  var $i607: i32;
  var $i604: i32;
  var $i609: i64;
  var $i610: i64;
  var $i611: i32;
  var $i612: i32;
  var $i613: i64;
  var $i614: i64;
  var $i615: i32;
  var $i616: i32;
  var $i617: i32;
  var $i618: i1;
  var $i620: i1;
  var $i621: i1;
  var $i623: i32;
  var $i622: i32;
  var $i619: i32;
  var $i624: i64;
  var $i625: i64;
  var $i626: i32;
  var $i627: i32;
  var $i628: i64;
  var $i629: i64;
  var $i630: i32;
  var $i631: i32;
  var $i632: i32;
  var $i633: i1;
  var $i635: i1;
  var $i636: i1;
  var $i638: i32;
  var $i637: i32;
  var $i634: i32;
  var $i639: i64;
  var $i640: i64;
  var $i641: i32;
  var $i642: i32;
  var $i643: i64;
  var $i644: i64;
  var $i645: i32;
  var $i646: i32;
  var $i647: i32;
  var $i648: i1;
  var $i650: i1;
  var $i651: i1;
  var $i653: i32;
  var $i652: i32;
  var $i649: i32;
  var $i654: i64;
  var $i655: i64;
  var $i656: i32;
  var $i657: i32;
  var $i658: i64;
  var $i659: i64;
  var $i660: i32;
  var $i661: i32;
  var $i662: i32;
  var $i663: i1;
  var $i665: i1;
  var $i666: i1;
  var $i668: i32;
  var $i667: i32;
  var $i664: i32;
  var $i669: i64;
  var $i670: i64;
  var $i671: i32;
  var $i672: i32;
  var $i673: i64;
  var $i674: i64;
  var $i675: i32;
  var $i676: i32;
  var $i677: i32;
  var $i678: i1;
  var $i680: i1;
  var $i681: i1;
  var $i683: i32;
  var $i682: i32;
  var $i679: i32;
  var $i684: i64;
  var $i685: i64;
  var $i686: i32;
  var $i687: i32;
  var $i688: i64;
  var $i689: i64;
  var $i690: i32;
  var $i691: i32;
  var $i692: i32;
  var $i693: i1;
  var $i695: i1;
  var $i696: i1;
  var $i698: i32;
  var $i697: i32;
  var $i694: i32;
  var $i699: i64;
  var $i700: i64;
  var $i701: i32;
  var $i702: i32;
  var $i703: i64;
  var $i704: i64;
  var $i705: i32;
  var $i706: i32;
  var $i707: i32;
  var $i708: i1;
  var $i710: i1;
  var $i711: i1;
  var $i713: i32;
  var $i712: i32;
  var $i709: i32;
  var $i714: i64;
  var $i715: i64;
  var $i716: i32;
  var $i717: i32;
  var $i718: i64;
  var $i719: i64;
  var $i720: i32;
  var $i721: i32;
  var $i722: i32;
  var $i723: i1;
  var $i725: i1;
  var $i726: i1;
  var $i728: i32;
  var $i727: i32;
  var $i724: i32;
  var $i729: i64;
  var $i730: i64;
  var $i731: i32;
  var $i732: i32;
  var $i733: i64;
  var $i734: i64;
  var $i735: i32;
  var $i736: i32;
  var $i737: i32;
  var $i738: i1;
  var $i740: i1;
  var $i741: i1;
  var $i743: i32;
  var $i742: i32;
  var $i739: i32;
  var $i744: i64;
  var $i745: i64;
  var $i746: i32;
  var $i747: i32;
  var $i748: i64;
  var $i749: i64;
  var $i750: i32;
  var $i751: i32;
  var $i752: i32;
  var $i753: i1;
  var $i755: i1;
  var $i756: i1;
  var $i758: i32;
  var $i757: i32;
  var $i754: i32;
  var $i759: i64;
  var $i760: i64;
  var $i761: i32;
  var $i762: i32;
  var $i763: i64;
  var $i764: i64;
  var $i765: i32;
  var $i766: i32;
  var $i767: i32;
  var $i768: i1;
  var $i770: i1;
  var $i771: i1;
  var $i773: i32;
  var $i772: i32;
  var $i769: i32;
  var $i774: i64;
  var $i775: i64;
  var $i776: i32;
  var $i777: i32;
  var $i778: i64;
  var $i779: i64;
  var $i780: i32;
  var $i781: i32;
  var $i782: i32;
  var $i783: i1;
  var $i785: i1;
  var $i786: i1;
  var $i788: i32;
  var $i787: i32;
  var $i784: i32;
  var $i789: i64;
  var $i790: i64;
  var $i791: i32;
  var $i792: i32;
  var $i793: i64;
  var $i794: i64;
  var $i795: i32;
  var $i796: i32;
  var $i797: i32;
  var $i798: i1;
  var $i800: i1;
  var $i801: i1;
  var $i803: i32;
  var $i802: i32;
  var $i799: i32;
  var $i804: i64;
  var $i805: i64;
  var $i806: i32;
  var $i807: i32;
  var $i808: i64;
  var $i809: i64;
  var $i810: i32;
  var $i811: i32;
  var $i812: i32;
  var $i813: i1;
  var $i815: i1;
  var $i816: i1;
  var $i818: i32;
  var $i817: i32;
  var $i814: i32;
  var $i819: i64;
  var $i820: i64;
  var $i821: i32;
  var $i822: i32;
  var $i823: i64;
  var $i824: i64;
  var $i825: i32;
  var $i826: i32;
  var $i827: i32;
  var $i828: i1;
  var $i830: i1;
  var $i831: i1;
  var $i833: i32;
  var $i832: i32;
  var $i829: i32;
  var $i834: i64;
  var $i835: i64;
  var $i836: i32;
  var $i837: i32;
  var $i838: i64;
  var $i839: i64;
  var $i840: i32;
  var $i841: i32;
  var $i842: i32;
  var $i843: i1;
  var $i845: i1;
  var $i846: i1;
  var $i848: i32;
  var $i847: i32;
  var $i844: i32;
  var $i849: i64;
  var $i850: i64;
  var $i851: i32;
  var $i852: i32;
  var $i853: i64;
  var $i854: i64;
  var $i855: i32;
  var $i856: i32;
  var $i857: i32;
  var $i858: i1;
  var $i860: i1;
  var $i861: i1;
  var $i863: i32;
  var $i862: i32;
  var $i859: i32;
  var $i864: i64;
  var $i865: i64;
  var $i866: i32;
  var $i867: i32;
  var $i868: i64;
  var $i869: i64;
  var $i870: i32;
  var $i871: i32;
  var $i872: i32;
  var $i873: i1;
  var $i875: i1;
  var $i876: i1;
  var $i878: i32;
  var $i877: i32;
  var $i874: i32;
  var $i879: i64;
  var $i880: i64;
  var $i881: i32;
  var $i882: i32;
  var $i883: i64;
  var $i884: i64;
  var $i885: i32;
  var $i886: i32;
  var $i887: i32;
  var $i888: i1;
  var $i890: i1;
  var $i891: i1;
  var $i893: i32;
  var $i892: i32;
  var $i889: i32;
  var $i894: i64;
  var $i895: i64;
  var $i896: i32;
  var $i897: i32;
  var $i898: i64;
  var $i899: i64;
  var $i900: i32;
  var $i901: i32;
  var $i902: i32;
  var $i903: i1;
  var $i905: i1;
  var $i906: i1;
  var $i908: i32;
  var $i907: i32;
  var $i904: i32;
  var $i909: i64;
  var $i910: i64;
  var $i911: i32;
  var $i912: i32;
  var $i913: i64;
  var $i914: i64;
  var $i915: i32;
  var $i916: i32;
  var $i917: i32;
  var $i918: i1;
  var $i920: i1;
  var $i921: i1;
  var $i923: i32;
  var $i922: i32;
  var $i919: i32;
  var $i924: i64;
  var $i925: i64;
  var $i926: i32;
  var $i927: i32;
  var $i928: i64;
  var $i929: i64;
  var $i930: i32;
  var $i931: i32;
  var $i932: i32;
  var $i933: i1;
  var $i935: i1;
  var $i936: i1;
  var $i938: i32;
  var $i937: i32;
  var $i934: i32;
  var $i939: i64;
  var $i940: i64;
  var $i941: i32;
  var $i942: i32;
  var $i943: i64;
  var $i944: i64;
  var $i945: i32;
  var $i946: i32;
  var $i947: i32;
  var $i948: i1;
  var $i950: i1;
  var $i951: i1;
  var $i953: i32;
  var $i952: i32;
  var $i949: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_and32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0,0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i1,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  assume !($i3 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $srem.i64($i9,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  call {:cexpr "a"} boogie_si_record_i32($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 67, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i11,$i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $srem.i64($i13,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  call {:cexpr "b"} boogie_si_record_i32($i15);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 69, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i15,$i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 71, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i4,$i4);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $i17;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb9;
$bb6:
  assume !($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i1,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume !($i6 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 65, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  goto $bb3;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i16,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  assume !($i18 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i64($i24,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i25);
  call {:cexpr "a"} boogie_si_record_i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 78, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26,$i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $srem.i64($i28,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  call {:cexpr "b"} boogie_si_record_i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 80, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i30,$i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 82, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i19,$i19);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i32;
  assume {:branchcond $i33} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 74, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 75, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb18;
$bb15:
  assume !($i20 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $sgt.i32($i16,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume !($i21 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 76, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i22;
  goto $bb12;
$bb19:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i31,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  assume !($i33 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $srem.i64($i39,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i64.i32($i40);
  call {:cexpr "a"} boogie_si_record_i32($i41);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 89, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i41,$i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $srem.i64($i43,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  call {:cexpr "b"} boogie_si_record_i32($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 91, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i45,$i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 93, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i34,$i34);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $i47;
  assume {:branchcond $i48} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 85, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 86, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb27;
$bb24:
  assume !($i35 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 20} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i31,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 87, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $i37;
  goto $bb21;
$bb28:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i46,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  assume !($i48 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $srem.i64($i54,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i64.i32($i55);
  call {:cexpr "a"} boogie_si_record_i32($i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 100, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i56,$i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $srem.i64($i58,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $trunc.i64.i32($i59);
  call {:cexpr "b"} boogie_si_record_i32($i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 102, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i60,$i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i49,$i49);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $i62;
  assume {:branchcond $i63} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 96, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 97, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb36;
$bb33:
  assume !($i50 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $sgt.i32($i46,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 98, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i52;
  goto $bb30;
$bb37:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i61,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  assume !($i63 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 9} true;
  assume {:verifier.code 0} true;
  $i70 := $srem.i64($i69,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  call {:cexpr "a"} boogie_si_record_i32($i71);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i71,$i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $srem.i64($i73,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i64.i32($i74);
  call {:cexpr "b"} boogie_si_record_i32($i75);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i75,$i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i64,$i64);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $i77;
  assume {:branchcond $i78} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 107, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb45;
$bb42:
  assume !($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 20} true;
  assume {:verifier.code 0} true;
  $i66 := $sgt.i32($i61,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume ($i66 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume !($i66 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 109, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $i67;
  goto $bb39;
$bb46:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 11} true;
  assume {:verifier.code 0} true;
  $i80 := $slt.i32($i76,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  assume !($i78 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $srem.i64($i84,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i64.i32($i85);
  call {:cexpr "a"} boogie_si_record_i32($i86);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 122, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $srem.i64($i88,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i64.i32($i89);
  call {:cexpr "b"} boogie_si_record_i32($i90);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i79,$i79);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $i92;
  assume {:branchcond $i93} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume ($i80 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 118, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb54;
$bb51:
  assume !($i80 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 20} true;
  assume {:verifier.code 0} true;
  $i81 := $sgt.i32($i76,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume ($i81 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume !($i81 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 120, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $i82;
  goto $bb48;
$bb55:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $slt.i32($i91,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  assume !($i93 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $sext.i32.i64($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $srem.i64($i99,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i64.i32($i100);
  call {:cexpr "a"} boogie_si_record_i32($i101);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,$i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $sext.i32.i64($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 9} true;
  assume {:verifier.code 0} true;
  $i104 := $srem.i64($i103,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i64.i32($i104);
  call {:cexpr "b"} boogie_si_record_i32($i105);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105,$i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i94,$i94);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $i107;
  assume {:branchcond $i108} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 129, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb63;
$bb60:
  assume !($i95 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 20} true;
  assume {:verifier.code 0} true;
  $i96 := $sgt.i32($i91,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume ($i96 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume !($i96 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 131, 3} true;
  assume {:verifier.code 0} true;
  $i94 := $i97;
  goto $bb57;
$bb64:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 11} true;
  assume {:verifier.code 0} true;
  $i110 := $slt.i32($i106,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  assume !($i108 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $srem.i64($i114,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i64.i32($i115);
  call {:cexpr "a"} boogie_si_record_i32($i116);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $add.i32($i116,$i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i32.i64($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $srem.i64($i118,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i32($i119);
  call {:cexpr "b"} boogie_si_record_i32($i120);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i120,$i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i109,$i109);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i122;
  assume {:branchcond $i123} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume ($i110 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb72;
$bb69:
  assume !($i110 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 20} true;
  assume {:verifier.code 0} true;
  $i111 := $sgt.i32($i106,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume !($i111 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 142, 3} true;
  assume {:verifier.code 0} true;
  $i109 := $i112;
  goto $bb66;
$bb73:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 11} true;
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i121,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $srem.i64($i129,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.i64.i32($i130);
  call {:cexpr "a"} boogie_si_record_i32($i131);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i131,$i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i64($i133,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i64.i32($i134);
  call {:cexpr "b"} boogie_si_record_i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i32($i135,$i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i124,$i124);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $i137;
  assume {:branchcond $i138} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume ($i125 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 151, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb81;
$bb78:
  assume !($i125 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 20} true;
  assume {:verifier.code 0} true;
  $i126 := $sgt.i32($i121,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume !($i126 == 1);
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 153, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i127;
  goto $bb75;
$bb82:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $slt.i32($i136,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  assume !($i138 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i32.i64($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 9} true;
  assume {:verifier.code 0} true;
  $i145 := $srem.i64($i144,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i64.i32($i145);
  call {:cexpr "a"} boogie_si_record_i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146,$i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i32.i64($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 9} true;
  assume {:verifier.code 0} true;
  $i149 := $srem.i64($i148,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i64.i32($i149);
  call {:cexpr "b"} boogie_si_record_i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i32($i150,$i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i139,$i139);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $i152;
  assume {:branchcond $i153} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume ($i140 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 162, 9} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb90;
$bb87:
  assume !($i140 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 20} true;
  assume {:verifier.code 0} true;
  $i141 := $sgt.i32($i136,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume ($i141 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume !($i141 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 164, 3} true;
  assume {:verifier.code 0} true;
  $i139 := $i142;
  goto $bb84;
$bb91:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  assume !($i153 == 1);
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i32.i64($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $srem.i64($i159,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i160);
  call {:cexpr "a"} boogie_si_record_i32($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i161,$i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 9} true;
  assume {:verifier.code 0} true;
  $i164 := $srem.i64($i163,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i165 := $trunc.i64.i32($i164);
  call {:cexpr "b"} boogie_si_record_i32($i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $add.i32($i165,$i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 181, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i154,$i154);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $i167;
  assume {:branchcond $i168} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb99;
$bb96:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 20} true;
  assume {:verifier.code 0} true;
  $i156 := $sgt.i32($i151,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume ($i156 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume !($i156 == 1);
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 175, 3} true;
  assume {:verifier.code 0} true;
  $i154 := $i157;
  goto $bb93;
$bb100:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 11} true;
  assume {:verifier.code 0} true;
  $i170 := $slt.i32($i166,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  assume !($i168 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i174 := $sext.i32.i64($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 9} true;
  assume {:verifier.code 0} true;
  $i175 := $srem.i64($i174,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i32($i175);
  call {:cexpr "a"} boogie_si_record_i32($i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 188, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i32($i176,$i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i178 := $sext.i32.i64($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 9} true;
  assume {:verifier.code 0} true;
  $i179 := $srem.i64($i178,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $trunc.i64.i32($i179);
  call {:cexpr "b"} boogie_si_record_i32($i180);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i32($i180,$i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i169,$i169);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $i182;
  assume {:branchcond $i183} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume ($i170 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 184, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb108;
$bb105:
  assume !($i170 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 20} true;
  assume {:verifier.code 0} true;
  $i171 := $sgt.i32($i166,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume ($i171 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume !($i171 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 186, 3} true;
  assume {:verifier.code 0} true;
  $i169 := $i172;
  goto $bb102;
$bb109:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 11} true;
  assume {:verifier.code 0} true;
  $i185 := $slt.i32($i181,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  assume !($i183 == 1);
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i189 := $sext.i32.i64($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $srem.i64($i189,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $trunc.i64.i32($i190);
  call {:cexpr "a"} boogie_si_record_i32($i191);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 199, 5} true;
  assume {:verifier.code 0} true;
  $i192 := $add.i32($i191,$i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $sext.i32.i64($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $srem.i64($i193,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i64.i32($i194);
  call {:cexpr "b"} boogie_si_record_i32($i195);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 203, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i184,$i184);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $i197;
  assume {:branchcond $i198} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume ($i185 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 195, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb117;
$bb114:
  assume !($i185 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i181,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 197, 3} true;
  assume {:verifier.code 0} true;
  $i184 := $i187;
  goto $bb111;
$bb118:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 11} true;
  assume {:verifier.code 0} true;
  $i200 := $slt.i32($i196,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  assume !($i198 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i204 := $sext.i32.i64($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 9} true;
  assume {:verifier.code 0} true;
  $i205 := $srem.i64($i204,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i206 := $trunc.i64.i32($i205);
  call {:cexpr "a"} boogie_si_record_i32($i206);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 210, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i208 := $sext.i32.i64($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 9} true;
  assume {:verifier.code 0} true;
  $i209 := $srem.i64($i208,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i64.i32($i209);
  call {:cexpr "b"} boogie_si_record_i32($i210);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 212, 5} true;
  assume {:verifier.code 0} true;
  $i211 := $add.i32($i210,$i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 214, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i199,$i199);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $i212;
  assume {:branchcond $i213} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume ($i200 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 206, 9} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb126;
$bb123:
  assume !($i200 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $sgt.i32($i196,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume ($i201 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume !($i201 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 208, 3} true;
  assume {:verifier.code 0} true;
  $i199 := $i202;
  goto $bb120;
$bb127:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 11} true;
  assume {:verifier.code 0} true;
  $i215 := $slt.i32($i211,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  assume !($i213 == 1);
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i219 := $sext.i32.i64($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 9} true;
  assume {:verifier.code 0} true;
  $i220 := $srem.i64($i219,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i64.i32($i220);
  call {:cexpr "a"} boogie_si_record_i32($i221);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 221, 5} true;
  assume {:verifier.code 0} true;
  $i222 := $add.i32($i221,$i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i32.i64($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 9} true;
  assume {:verifier.code 0} true;
  $i224 := $srem.i64($i223,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i225 := $trunc.i64.i32($i224);
  call {:cexpr "b"} boogie_si_record_i32($i225);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 223, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i32($i225,$i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 225, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i214,$i214);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $i227;
  assume {:branchcond $i228} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 217, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 218, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb135;
$bb132:
  assume !($i215 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 20} true;
  assume {:verifier.code 0} true;
  $i216 := $sgt.i32($i211,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume ($i216 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume !($i216 == 1);
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 219, 3} true;
  assume {:verifier.code 0} true;
  $i214 := $i217;
  goto $bb129;
$bb136:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 11} true;
  assume {:verifier.code 0} true;
  $i230 := $slt.i32($i226,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  assume !($i228 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i32.i64($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 9} true;
  assume {:verifier.code 0} true;
  $i235 := $srem.i64($i234,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i236 := $trunc.i64.i32($i235);
  call {:cexpr "a"} boogie_si_record_i32($i236);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $add.i32($i236,$i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $srem.i64($i238,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i64.i32($i239);
  call {:cexpr "b"} boogie_si_record_i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 234, 5} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i32($i240,$i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 236, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i229,$i229);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $i242;
  assume {:branchcond $i243} true;
  goto $bb145, $bb146;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume ($i230 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 228, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 229, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb144;
$bb141:
  assume !($i230 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 20} true;
  assume {:verifier.code 0} true;
  $i231 := $sgt.i32($i226,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume ($i231 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume !($i231 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 230, 3} true;
  assume {:verifier.code 0} true;
  $i229 := $i232;
  goto $bb138;
$bb145:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 11} true;
  assume {:verifier.code 0} true;
  $i245 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb148, $bb150;
$bb146:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  assume !($i243 == 1);
  goto $bb147;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i32.i64($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i64($i249,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i64.i32($i250);
  call {:cexpr "a"} boogie_si_record_i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i32($i251,$i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i32.i64($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 9} true;
  assume {:verifier.code 0} true;
  $i254 := $srem.i64($i253,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i64.i32($i254);
  call {:cexpr "b"} boogie_si_record_i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $add.i32($i255,$i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 247, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i244,$i244);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $i257;
  assume {:branchcond $i258} true;
  goto $bb154, $bb155;
$bb148:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume ($i245 == 1);
  goto $bb149;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 239, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb153;
$bb150:
  assume !($i245 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 20} true;
  assume {:verifier.code 0} true;
  $i246 := $sgt.i32($i241,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb151, $bb152;
$bb151:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume ($i246 == 1);
  goto $bb149;
$bb152:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume !($i246 == 1);
  goto $bb153;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 241, 3} true;
  assume {:verifier.code 0} true;
  $i244 := $i247;
  goto $bb147;
$bb154:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 11} true;
  assume {:verifier.code 0} true;
  $i260 := $slt.i32($i256,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i260} true;
  goto $bb157, $bb159;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume !($i258 == 1);
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i32.i64($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 9} true;
  assume {:verifier.code 0} true;
  $i265 := $srem.i64($i264,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i64.i32($i265);
  call {:cexpr "a"} boogie_si_record_i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i267 := $add.i32($i266,$i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i268 := $sext.i32.i64($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 9} true;
  assume {:verifier.code 0} true;
  $i269 := $srem.i64($i268,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i270 := $trunc.i64.i32($i269);
  call {:cexpr "b"} boogie_si_record_i32($i270);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i270,$i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i259,$i259);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $i272;
  assume {:branchcond $i273} true;
  goto $bb163, $bb164;
$bb157:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume ($i260 == 1);
  goto $bb158;
$bb158:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 250, 9} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 251, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb162;
$bb159:
  assume !($i260 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $sgt.i32($i256,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb160, $bb161;
$bb160:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume ($i261 == 1);
  goto $bb158;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume !($i261 == 1);
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 3} true;
  assume {:verifier.code 0} true;
  $i259 := $i262;
  goto $bb156;
$bb163:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 11} true;
  assume {:verifier.code 0} true;
  $i275 := $slt.i32($i271,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb166, $bb168;
$bb164:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  assume !($i273 == 1);
  goto $bb165;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i32.i64($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 9} true;
  assume {:verifier.code 0} true;
  $i280 := $srem.i64($i279,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i281 := $trunc.i64.i32($i280);
  call {:cexpr "a"} boogie_si_record_i32($i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 265, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i32($i281,$i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i283 := $sext.i32.i64($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 9} true;
  assume {:verifier.code 0} true;
  $i284 := $srem.i64($i283,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $trunc.i64.i32($i284);
  call {:cexpr "b"} boogie_si_record_i32($i285);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i32($i285,$i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i274,$i274);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $i287;
  assume {:branchcond $i288} true;
  goto $bb172, $bb173;
$bb166:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume ($i275 == 1);
  goto $bb167;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 261, 9} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb171;
$bb168:
  assume !($i275 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 20} true;
  assume {:verifier.code 0} true;
  $i276 := $sgt.i32($i271,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb169, $bb170;
$bb169:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume ($i276 == 1);
  goto $bb167;
$bb170:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume !($i276 == 1);
  goto $bb171;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 263, 3} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb165;
$bb172:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 11} true;
  assume {:verifier.code 0} true;
  $i290 := $slt.i32($i286,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i290} true;
  goto $bb175, $bb177;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  assume !($i288 == 1);
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i294 := $sext.i32.i64($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 9} true;
  assume {:verifier.code 0} true;
  $i295 := $srem.i64($i294,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $trunc.i64.i32($i295);
  call {:cexpr "a"} boogie_si_record_i32($i296);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 276, 5} true;
  assume {:verifier.code 0} true;
  $i297 := $add.i32($i296,$i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $sext.i32.i64($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $srem.i64($i298,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i300 := $trunc.i64.i32($i299);
  call {:cexpr "b"} boogie_si_record_i32($i300);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 278, 5} true;
  assume {:verifier.code 0} true;
  $i301 := $add.i32($i300,$i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 280, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i289,$i289);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $i302;
  assume {:branchcond $i303} true;
  goto $bb181, $bb182;
$bb175:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume ($i290 == 1);
  goto $bb176;
$bb176:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 272, 9} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb180;
$bb177:
  assume !($i290 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 20} true;
  assume {:verifier.code 0} true;
  $i291 := $sgt.i32($i286,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb178, $bb179;
$bb178:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume ($i291 == 1);
  goto $bb176;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume !($i291 == 1);
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 274, 3} true;
  assume {:verifier.code 0} true;
  $i289 := $i292;
  goto $bb174;
$bb181:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 11} true;
  assume {:verifier.code 0} true;
  $i305 := $slt.i32($i301,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb184, $bb186;
$bb182:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  assume !($i303 == 1);
  goto $bb183;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 9} true;
  assume {:verifier.code 0} true;
  $i310 := $srem.i64($i309,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i311 := $trunc.i64.i32($i310);
  call {:cexpr "a"} boogie_si_record_i32($i311);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 287, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311,$i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i313 := $sext.i32.i64($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 9} true;
  assume {:verifier.code 0} true;
  $i314 := $srem.i64($i313,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i315 := $trunc.i64.i32($i314);
  call {:cexpr "b"} boogie_si_record_i32($i315);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 289, 5} true;
  assume {:verifier.code 0} true;
  $i316 := $add.i32($i315,$i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 291, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i304,$i304);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $i317;
  assume {:branchcond $i318} true;
  goto $bb190, $bb191;
$bb184:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume ($i305 == 1);
  goto $bb185;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 283, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 284, 5} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb189;
$bb186:
  assume !($i305 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 20} true;
  assume {:verifier.code 0} true;
  $i306 := $sgt.i32($i301,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb187, $bb188;
$bb187:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume ($i306 == 1);
  goto $bb185;
$bb188:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume !($i306 == 1);
  goto $bb189;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 285, 3} true;
  assume {:verifier.code 0} true;
  $i304 := $i307;
  goto $bb183;
$bb190:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 11} true;
  assume {:verifier.code 0} true;
  $i320 := $slt.i32($i316,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i320} true;
  goto $bb193, $bb195;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  assume !($i318 == 1);
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i324 := $sext.i32.i64($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 9} true;
  assume {:verifier.code 0} true;
  $i325 := $srem.i64($i324,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i326 := $trunc.i64.i32($i325);
  call {:cexpr "a"} boogie_si_record_i32($i326);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 298, 5} true;
  assume {:verifier.code 0} true;
  $i327 := $add.i32($i326,$i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i32.i64($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 9} true;
  assume {:verifier.code 0} true;
  $i329 := $srem.i64($i328,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i330 := $trunc.i64.i32($i329);
  call {:cexpr "b"} boogie_si_record_i32($i330);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 300, 5} true;
  assume {:verifier.code 0} true;
  $i331 := $add.i32($i330,$i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 302, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i319,$i319);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $i332;
  assume {:branchcond $i333} true;
  goto $bb199, $bb200;
$bb193:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume ($i320 == 1);
  goto $bb194;
$bb194:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 294, 9} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 295, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb198;
$bb195:
  assume !($i320 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 20} true;
  assume {:verifier.code 0} true;
  $i321 := $sgt.i32($i316,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb196, $bb197;
$bb196:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume ($i321 == 1);
  goto $bb194;
$bb197:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume !($i321 == 1);
  goto $bb198;
$bb198:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 296, 3} true;
  assume {:verifier.code 0} true;
  $i319 := $i322;
  goto $bb192;
$bb199:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 11} true;
  assume {:verifier.code 0} true;
  $i335 := $slt.i32($i331,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb202, $bb204;
$bb200:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  assume !($i333 == 1);
  goto $bb201;
$bb201:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i32.i64($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 9} true;
  assume {:verifier.code 0} true;
  $i340 := $srem.i64($i339,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i341 := $trunc.i64.i32($i340);
  call {:cexpr "a"} boogie_si_record_i32($i341);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 309, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $add.i32($i341,$i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i32.i64($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i64($i343,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i64.i32($i344);
  call {:cexpr "b"} boogie_si_record_i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 311, 5} true;
  assume {:verifier.code 0} true;
  $i346 := $add.i32($i345,$i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 313, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i334,$i334);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $i347;
  assume {:branchcond $i348} true;
  goto $bb208, $bb209;
$bb202:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume ($i335 == 1);
  goto $bb203;
$bb203:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 305, 9} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 306, 5} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb207;
$bb204:
  assume !($i335 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 20} true;
  assume {:verifier.code 0} true;
  $i336 := $sgt.i32($i331,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb205, $bb206;
$bb205:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume ($i336 == 1);
  goto $bb203;
$bb206:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume !($i336 == 1);
  goto $bb207;
$bb207:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 307, 3} true;
  assume {:verifier.code 0} true;
  $i334 := $i337;
  goto $bb201;
$bb208:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 11} true;
  assume {:verifier.code 0} true;
  $i350 := $slt.i32($i346,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb211, $bb213;
$bb209:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  assume !($i348 == 1);
  goto $bb210;
$bb210:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i32.i64($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $srem.i64($i354,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $trunc.i64.i32($i355);
  call {:cexpr "a"} boogie_si_record_i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 320, 5} true;
  assume {:verifier.code 0} true;
  $i357 := $add.i32($i356,$i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i358 := $sext.i32.i64($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 9} true;
  assume {:verifier.code 0} true;
  $i359 := $srem.i64($i358,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i360 := $trunc.i64.i32($i359);
  call {:cexpr "b"} boogie_si_record_i32($i360);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 322, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $add.i32($i360,$i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 324, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i349,$i349);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $i362;
  assume {:branchcond $i363} true;
  goto $bb217, $bb218;
$bb211:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume ($i350 == 1);
  goto $bb212;
$bb212:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 316, 9} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 317, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb216;
$bb213:
  assume !($i350 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 20} true;
  assume {:verifier.code 0} true;
  $i351 := $sgt.i32($i346,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb214, $bb215;
$bb214:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume ($i351 == 1);
  goto $bb212;
$bb215:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume !($i351 == 1);
  goto $bb216;
$bb216:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 318, 3} true;
  assume {:verifier.code 0} true;
  $i349 := $i352;
  goto $bb210;
$bb217:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 11} true;
  assume {:verifier.code 0} true;
  $i365 := $slt.i32($i361,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i365} true;
  goto $bb220, $bb222;
$bb218:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  assume !($i363 == 1);
  goto $bb219;
$bb219:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i32.i64($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 9} true;
  assume {:verifier.code 0} true;
  $i370 := $srem.i64($i369,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i64.i32($i370);
  call {:cexpr "a"} boogie_si_record_i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 331, 5} true;
  assume {:verifier.code 0} true;
  $i372 := $add.i32($i371,$i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 9} true;
  assume {:verifier.code 0} true;
  $i374 := $srem.i64($i373,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i375 := $trunc.i64.i32($i374);
  call {:cexpr "b"} boogie_si_record_i32($i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 333, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $add.i32($i375,$i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 335, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i364,$i364);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $i377;
  assume {:branchcond $i378} true;
  goto $bb226, $bb227;
$bb220:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume ($i365 == 1);
  goto $bb221;
$bb221:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 327, 9} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 328, 5} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb225;
$bb222:
  assume !($i365 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 20} true;
  assume {:verifier.code 0} true;
  $i366 := $sgt.i32($i361,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb223, $bb224;
$bb223:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume ($i366 == 1);
  goto $bb221;
$bb224:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume !($i366 == 1);
  goto $bb225;
$bb225:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 329, 3} true;
  assume {:verifier.code 0} true;
  $i364 := $i367;
  goto $bb219;
$bb226:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 11} true;
  assume {:verifier.code 0} true;
  $i380 := $slt.i32($i376,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i380} true;
  goto $bb229, $bb231;
$bb227:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  assume !($i378 == 1);
  goto $bb228;
$bb228:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i384 := $sext.i32.i64($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 9} true;
  assume {:verifier.code 0} true;
  $i385 := $srem.i64($i384,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i386 := $trunc.i64.i32($i385);
  call {:cexpr "a"} boogie_si_record_i32($i386);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 342, 5} true;
  assume {:verifier.code 0} true;
  $i387 := $add.i32($i386,$i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i32.i64($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 9} true;
  assume {:verifier.code 0} true;
  $i389 := $srem.i64($i388,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i390 := $trunc.i64.i32($i389);
  call {:cexpr "b"} boogie_si_record_i32($i390);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 344, 5} true;
  assume {:verifier.code 0} true;
  $i391 := $add.i32($i390,$i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 346, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i379,$i379);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $i392;
  assume {:branchcond $i393} true;
  goto $bb235, $bb236;
$bb229:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume ($i380 == 1);
  goto $bb230;
$bb230:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 338, 9} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 339, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb234;
$bb231:
  assume !($i380 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 20} true;
  assume {:verifier.code 0} true;
  $i381 := $sgt.i32($i376,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb232, $bb233;
$bb232:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume ($i381 == 1);
  goto $bb230;
$bb233:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume !($i381 == 1);
  goto $bb234;
$bb234:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 340, 3} true;
  assume {:verifier.code 0} true;
  $i379 := $i382;
  goto $bb228;
$bb235:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 11} true;
  assume {:verifier.code 0} true;
  $i395 := $slt.i32($i391,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i395} true;
  goto $bb238, $bb240;
$bb236:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  assume !($i393 == 1);
  goto $bb237;
$bb237:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i399 := $sext.i32.i64($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 9} true;
  assume {:verifier.code 0} true;
  $i400 := $srem.i64($i399,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $trunc.i64.i32($i400);
  call {:cexpr "a"} boogie_si_record_i32($i401);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 353, 5} true;
  assume {:verifier.code 0} true;
  $i402 := $add.i32($i401,$i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $sext.i32.i64($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 9} true;
  assume {:verifier.code 0} true;
  $i404 := $srem.i64($i403,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i405 := $trunc.i64.i32($i404);
  call {:cexpr "b"} boogie_si_record_i32($i405);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 355, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405,$i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 357, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i394,$i394);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $i407;
  assume {:branchcond $i408} true;
  goto $bb244, $bb245;
$bb238:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume ($i395 == 1);
  goto $bb239;
$bb239:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 349, 9} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 350, 5} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb243;
$bb240:
  assume !($i395 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 20} true;
  assume {:verifier.code 0} true;
  $i396 := $sgt.i32($i391,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb241, $bb242;
$bb241:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume ($i396 == 1);
  goto $bb239;
$bb242:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume !($i396 == 1);
  goto $bb243;
$bb243:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 351, 3} true;
  assume {:verifier.code 0} true;
  $i394 := $i397;
  goto $bb237;
$bb244:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 11} true;
  assume {:verifier.code 0} true;
  $i410 := $slt.i32($i406,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i410} true;
  goto $bb247, $bb249;
$bb245:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  assume !($i408 == 1);
  goto $bb246;
$bb246:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $sext.i32.i64($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $srem.i64($i414,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i416 := $trunc.i64.i32($i415);
  call {:cexpr "a"} boogie_si_record_i32($i416);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 364, 5} true;
  assume {:verifier.code 0} true;
  $i417 := $add.i32($i416,$i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i418 := $sext.i32.i64($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $srem.i64($i418,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i420 := $trunc.i64.i32($i419);
  call {:cexpr "b"} boogie_si_record_i32($i420);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 366, 5} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420,$i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 368, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i409,$i409);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $i422;
  assume {:branchcond $i423} true;
  goto $bb253, $bb254;
$bb247:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume ($i410 == 1);
  goto $bb248;
$bb248:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 360, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 361, 5} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb252;
$bb249:
  assume !($i410 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 20} true;
  assume {:verifier.code 0} true;
  $i411 := $sgt.i32($i406,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb250, $bb251;
$bb250:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume ($i411 == 1);
  goto $bb248;
$bb251:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume !($i411 == 1);
  goto $bb252;
$bb252:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 362, 3} true;
  assume {:verifier.code 0} true;
  $i409 := $i412;
  goto $bb246;
$bb253:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 11} true;
  assume {:verifier.code 0} true;
  $i425 := $slt.i32($i421,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i425} true;
  goto $bb256, $bb258;
$bb254:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  assume !($i423 == 1);
  goto $bb255;
$bb255:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i429 := $sext.i32.i64($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 9} true;
  assume {:verifier.code 0} true;
  $i430 := $srem.i64($i429,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i431 := $trunc.i64.i32($i430);
  call {:cexpr "a"} boogie_si_record_i32($i431);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 375, 5} true;
  assume {:verifier.code 0} true;
  $i432 := $add.i32($i431,$i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i32.i64($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 9} true;
  assume {:verifier.code 0} true;
  $i434 := $srem.i64($i433,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i435 := $trunc.i64.i32($i434);
  call {:cexpr "b"} boogie_si_record_i32($i435);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 377, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $add.i32($i435,$i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 379, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i424,$i424);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $i437;
  assume {:branchcond $i438} true;
  goto $bb262, $bb263;
$bb256:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume ($i425 == 1);
  goto $bb257;
$bb257:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 371, 9} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 372, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb261;
$bb258:
  assume !($i425 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 20} true;
  assume {:verifier.code 0} true;
  $i426 := $sgt.i32($i421,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb259, $bb260;
$bb259:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume ($i426 == 1);
  goto $bb257;
$bb260:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume !($i426 == 1);
  goto $bb261;
$bb261:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 373, 3} true;
  assume {:verifier.code 0} true;
  $i424 := $i427;
  goto $bb255;
$bb262:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 11} true;
  assume {:verifier.code 0} true;
  $i440 := $slt.i32($i436,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i440} true;
  goto $bb265, $bb267;
$bb263:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  assume !($i438 == 1);
  goto $bb264;
$bb264:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i32.i64($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 9} true;
  assume {:verifier.code 0} true;
  $i445 := $srem.i64($i444,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i446 := $trunc.i64.i32($i445);
  call {:cexpr "a"} boogie_si_record_i32($i446);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 386, 5} true;
  assume {:verifier.code 0} true;
  $i447 := $add.i32($i446,$i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i448 := $sext.i32.i64($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $srem.i64($i448,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i450 := $trunc.i64.i32($i449);
  call {:cexpr "b"} boogie_si_record_i32($i450);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 388, 5} true;
  assume {:verifier.code 0} true;
  $i451 := $add.i32($i450,$i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 390, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i439,$i439);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $i452;
  assume {:branchcond $i453} true;
  goto $bb271, $bb272;
$bb265:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume ($i440 == 1);
  goto $bb266;
$bb266:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 382, 9} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 383, 5} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb270;
$bb267:
  assume !($i440 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 20} true;
  assume {:verifier.code 0} true;
  $i441 := $sgt.i32($i436,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb268, $bb269;
$bb268:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume ($i441 == 1);
  goto $bb266;
$bb269:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume !($i441 == 1);
  goto $bb270;
$bb270:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 384, 3} true;
  assume {:verifier.code 0} true;
  $i439 := $i442;
  goto $bb264;
$bb271:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 11} true;
  assume {:verifier.code 0} true;
  $i455 := $slt.i32($i451,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i455} true;
  goto $bb274, $bb276;
$bb272:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  assume !($i453 == 1);
  goto $bb273;
$bb273:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i459 := $sext.i32.i64($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 9} true;
  assume {:verifier.code 0} true;
  $i460 := $srem.i64($i459,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i461 := $trunc.i64.i32($i460);
  call {:cexpr "a"} boogie_si_record_i32($i461);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 397, 5} true;
  assume {:verifier.code 0} true;
  $i462 := $add.i32($i461,$i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i463 := $sext.i32.i64($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 9} true;
  assume {:verifier.code 0} true;
  $i464 := $srem.i64($i463,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i465 := $trunc.i64.i32($i464);
  call {:cexpr "b"} boogie_si_record_i32($i465);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 399, 5} true;
  assume {:verifier.code 0} true;
  $i466 := $add.i32($i465,$i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 401, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i454,$i454);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $i467;
  assume {:branchcond $i468} true;
  goto $bb280, $bb281;
$bb274:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume ($i455 == 1);
  goto $bb275;
$bb275:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 393, 9} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 394, 5} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb279;
$bb276:
  assume !($i455 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 20} true;
  assume {:verifier.code 0} true;
  $i456 := $sgt.i32($i451,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb277, $bb278;
$bb277:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume ($i456 == 1);
  goto $bb275;
$bb278:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume !($i456 == 1);
  goto $bb279;
$bb279:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 395, 3} true;
  assume {:verifier.code 0} true;
  $i454 := $i457;
  goto $bb273;
$bb280:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 11} true;
  assume {:verifier.code 0} true;
  $i470 := $slt.i32($i466,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i470} true;
  goto $bb283, $bb285;
$bb281:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  assume !($i468 == 1);
  goto $bb282;
$bb282:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i474 := $sext.i32.i64($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 9} true;
  assume {:verifier.code 0} true;
  $i475 := $srem.i64($i474,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i476 := $trunc.i64.i32($i475);
  call {:cexpr "a"} boogie_si_record_i32($i476);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 408, 5} true;
  assume {:verifier.code 0} true;
  $i477 := $add.i32($i476,$i476);
  call {:cexpr "a"} boogie_si_record_i32($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i478 := $sext.i32.i64($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 9} true;
  assume {:verifier.code 0} true;
  $i479 := $srem.i64($i478,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i480 := $trunc.i64.i32($i479);
  call {:cexpr "b"} boogie_si_record_i32($i480);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 410, 5} true;
  assume {:verifier.code 0} true;
  $i481 := $add.i32($i480,$i480);
  call {:cexpr "b"} boogie_si_record_i32($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 412, 5} true;
  assume {:verifier.code 0} true;
  $i482 := $add.i32($i469,$i469);
  call {:cexpr "c"} boogie_si_record_i32($i482);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 9} true;
  assume {:verifier.code 0} true;
  $i483 := $slt.i32($i477,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  $i484 := $i482;
  assume {:branchcond $i483} true;
  goto $bb289, $bb290;
$bb283:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume ($i470 == 1);
  goto $bb284;
$bb284:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 404, 9} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 405, 5} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb288;
$bb285:
  assume !($i470 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 20} true;
  assume {:verifier.code 0} true;
  $i471 := $sgt.i32($i466,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb286, $bb287;
$bb286:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume ($i471 == 1);
  goto $bb284;
$bb287:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume !($i471 == 1);
  goto $bb288;
$bb288:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 406, 3} true;
  assume {:verifier.code 0} true;
  $i469 := $i472;
  goto $bb282;
$bb289:
  assume ($i483 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 11} true;
  assume {:verifier.code 0} true;
  $i485 := $slt.i32($i481,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i485} true;
  goto $bb292, $bb294;
$bb290:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  assume !($i483 == 1);
  goto $bb291;
$bb291:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i489 := $sext.i32.i64($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 9} true;
  assume {:verifier.code 0} true;
  $i490 := $srem.i64($i489,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i491 := $trunc.i64.i32($i490);
  call {:cexpr "a"} boogie_si_record_i32($i491);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 419, 5} true;
  assume {:verifier.code 0} true;
  $i492 := $add.i32($i491,$i491);
  call {:cexpr "a"} boogie_si_record_i32($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i493 := $sext.i32.i64($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 9} true;
  assume {:verifier.code 0} true;
  $i494 := $srem.i64($i493,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i495 := $trunc.i64.i32($i494);
  call {:cexpr "b"} boogie_si_record_i32($i495);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 421, 5} true;
  assume {:verifier.code 0} true;
  $i496 := $add.i32($i495,$i495);
  call {:cexpr "b"} boogie_si_record_i32($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 423, 5} true;
  assume {:verifier.code 0} true;
  $i497 := $add.i32($i484,$i484);
  call {:cexpr "c"} boogie_si_record_i32($i497);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 9} true;
  assume {:verifier.code 0} true;
  $i498 := $slt.i32($i492,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  $i499 := $i497;
  assume {:branchcond $i498} true;
  goto $bb298, $bb299;
$bb292:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume ($i485 == 1);
  goto $bb293;
$bb293:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 415, 9} true;
  assume {:verifier.code 0} true;
  $i488 := $add.i32($i482,1);
  call {:cexpr "c"} boogie_si_record_i32($i488);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 416, 5} true;
  assume {:verifier.code 0} true;
  $i487 := $i488;
  goto $bb297;
$bb294:
  assume !($i485 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 20} true;
  assume {:verifier.code 0} true;
  $i486 := $sgt.i32($i481,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  $i487 := $i482;
  assume {:branchcond $i486} true;
  goto $bb295, $bb296;
$bb295:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume ($i486 == 1);
  goto $bb293;
$bb296:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume !($i486 == 1);
  goto $bb297;
$bb297:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 417, 3} true;
  assume {:verifier.code 0} true;
  $i484 := $i487;
  goto $bb291;
$bb298:
  assume ($i498 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 11} true;
  assume {:verifier.code 0} true;
  $i500 := $slt.i32($i496,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i500} true;
  goto $bb301, $bb303;
$bb299:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  assume !($i498 == 1);
  goto $bb300;
$bb300:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i504 := $sext.i32.i64($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 9} true;
  assume {:verifier.code 0} true;
  $i505 := $srem.i64($i504,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i506 := $trunc.i64.i32($i505);
  call {:cexpr "a"} boogie_si_record_i32($i506);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 430, 5} true;
  assume {:verifier.code 0} true;
  $i507 := $add.i32($i506,$i506);
  call {:cexpr "a"} boogie_si_record_i32($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i508 := $sext.i32.i64($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 9} true;
  assume {:verifier.code 0} true;
  $i509 := $srem.i64($i508,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i510 := $trunc.i64.i32($i509);
  call {:cexpr "b"} boogie_si_record_i32($i510);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 432, 5} true;
  assume {:verifier.code 0} true;
  $i511 := $add.i32($i510,$i510);
  call {:cexpr "b"} boogie_si_record_i32($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 434, 5} true;
  assume {:verifier.code 0} true;
  $i512 := $add.i32($i499,$i499);
  call {:cexpr "c"} boogie_si_record_i32($i512);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 9} true;
  assume {:verifier.code 0} true;
  $i513 := $slt.i32($i507,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  $i514 := $i512;
  assume {:branchcond $i513} true;
  goto $bb307, $bb308;
$bb301:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume ($i500 == 1);
  goto $bb302;
$bb302:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 426, 9} true;
  assume {:verifier.code 0} true;
  $i503 := $add.i32($i497,1);
  call {:cexpr "c"} boogie_si_record_i32($i503);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 427, 5} true;
  assume {:verifier.code 0} true;
  $i502 := $i503;
  goto $bb306;
$bb303:
  assume !($i500 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 20} true;
  assume {:verifier.code 0} true;
  $i501 := $sgt.i32($i496,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  $i502 := $i497;
  assume {:branchcond $i501} true;
  goto $bb304, $bb305;
$bb304:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume ($i501 == 1);
  goto $bb302;
$bb305:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume !($i501 == 1);
  goto $bb306;
$bb306:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 428, 3} true;
  assume {:verifier.code 0} true;
  $i499 := $i502;
  goto $bb300;
$bb307:
  assume ($i513 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 11} true;
  assume {:verifier.code 0} true;
  $i515 := $slt.i32($i511,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i515} true;
  goto $bb310, $bb312;
$bb308:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  assume !($i513 == 1);
  goto $bb309;
$bb309:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i519 := $sext.i32.i64($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 9} true;
  assume {:verifier.code 0} true;
  $i520 := $srem.i64($i519,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i521 := $trunc.i64.i32($i520);
  call {:cexpr "a"} boogie_si_record_i32($i521);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 441, 5} true;
  assume {:verifier.code 0} true;
  $i522 := $add.i32($i521,$i521);
  call {:cexpr "a"} boogie_si_record_i32($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i523 := $sext.i32.i64($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 9} true;
  assume {:verifier.code 0} true;
  $i524 := $srem.i64($i523,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i525 := $trunc.i64.i32($i524);
  call {:cexpr "b"} boogie_si_record_i32($i525);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 443, 5} true;
  assume {:verifier.code 0} true;
  $i526 := $add.i32($i525,$i525);
  call {:cexpr "b"} boogie_si_record_i32($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 445, 5} true;
  assume {:verifier.code 0} true;
  $i527 := $add.i32($i514,$i514);
  call {:cexpr "c"} boogie_si_record_i32($i527);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 9} true;
  assume {:verifier.code 0} true;
  $i528 := $slt.i32($i522,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  $i529 := $i527;
  assume {:branchcond $i528} true;
  goto $bb316, $bb317;
$bb310:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume ($i515 == 1);
  goto $bb311;
$bb311:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 437, 9} true;
  assume {:verifier.code 0} true;
  $i518 := $add.i32($i512,1);
  call {:cexpr "c"} boogie_si_record_i32($i518);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 438, 5} true;
  assume {:verifier.code 0} true;
  $i517 := $i518;
  goto $bb315;
$bb312:
  assume !($i515 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 20} true;
  assume {:verifier.code 0} true;
  $i516 := $sgt.i32($i511,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  $i517 := $i512;
  assume {:branchcond $i516} true;
  goto $bb313, $bb314;
$bb313:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume ($i516 == 1);
  goto $bb311;
$bb314:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume !($i516 == 1);
  goto $bb315;
$bb315:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i514 := $i517;
  goto $bb309;
$bb316:
  assume ($i528 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 11} true;
  assume {:verifier.code 0} true;
  $i530 := $slt.i32($i526,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i530} true;
  goto $bb319, $bb321;
$bb317:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  assume !($i528 == 1);
  goto $bb318;
$bb318:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i534 := $sext.i32.i64($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 9} true;
  assume {:verifier.code 0} true;
  $i535 := $srem.i64($i534,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i536 := $trunc.i64.i32($i535);
  call {:cexpr "a"} boogie_si_record_i32($i536);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 452, 5} true;
  assume {:verifier.code 0} true;
  $i537 := $add.i32($i536,$i536);
  call {:cexpr "a"} boogie_si_record_i32($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i538 := $sext.i32.i64($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 9} true;
  assume {:verifier.code 0} true;
  $i539 := $srem.i64($i538,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i540 := $trunc.i64.i32($i539);
  call {:cexpr "b"} boogie_si_record_i32($i540);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 454, 5} true;
  assume {:verifier.code 0} true;
  $i541 := $add.i32($i540,$i540);
  call {:cexpr "b"} boogie_si_record_i32($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 456, 5} true;
  assume {:verifier.code 0} true;
  $i542 := $add.i32($i529,$i529);
  call {:cexpr "c"} boogie_si_record_i32($i542);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 9} true;
  assume {:verifier.code 0} true;
  $i543 := $slt.i32($i537,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  $i544 := $i542;
  assume {:branchcond $i543} true;
  goto $bb325, $bb326;
$bb319:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume ($i530 == 1);
  goto $bb320;
$bb320:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 448, 9} true;
  assume {:verifier.code 0} true;
  $i533 := $add.i32($i527,1);
  call {:cexpr "c"} boogie_si_record_i32($i533);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 449, 5} true;
  assume {:verifier.code 0} true;
  $i532 := $i533;
  goto $bb324;
$bb321:
  assume !($i530 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 20} true;
  assume {:verifier.code 0} true;
  $i531 := $sgt.i32($i526,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  $i532 := $i527;
  assume {:branchcond $i531} true;
  goto $bb322, $bb323;
$bb322:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume ($i531 == 1);
  goto $bb320;
$bb323:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume !($i531 == 1);
  goto $bb324;
$bb324:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 450, 3} true;
  assume {:verifier.code 0} true;
  $i529 := $i532;
  goto $bb318;
$bb325:
  assume ($i543 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 11} true;
  assume {:verifier.code 0} true;
  $i545 := $slt.i32($i541,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i545} true;
  goto $bb328, $bb330;
$bb326:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  assume !($i543 == 1);
  goto $bb327;
$bb327:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i549 := $sext.i32.i64($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 9} true;
  assume {:verifier.code 0} true;
  $i550 := $srem.i64($i549,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i551 := $trunc.i64.i32($i550);
  call {:cexpr "a"} boogie_si_record_i32($i551);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 463, 5} true;
  assume {:verifier.code 0} true;
  $i552 := $add.i32($i551,$i551);
  call {:cexpr "a"} boogie_si_record_i32($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i553 := $sext.i32.i64($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 9} true;
  assume {:verifier.code 0} true;
  $i554 := $srem.i64($i553,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i555 := $trunc.i64.i32($i554);
  call {:cexpr "b"} boogie_si_record_i32($i555);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 465, 5} true;
  assume {:verifier.code 0} true;
  $i556 := $add.i32($i555,$i555);
  call {:cexpr "b"} boogie_si_record_i32($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 467, 5} true;
  assume {:verifier.code 0} true;
  $i557 := $add.i32($i544,$i544);
  call {:cexpr "c"} boogie_si_record_i32($i557);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 9} true;
  assume {:verifier.code 0} true;
  $i558 := $slt.i32($i552,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  $i559 := $i557;
  assume {:branchcond $i558} true;
  goto $bb334, $bb335;
$bb328:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume ($i545 == 1);
  goto $bb329;
$bb329:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 459, 9} true;
  assume {:verifier.code 0} true;
  $i548 := $add.i32($i542,1);
  call {:cexpr "c"} boogie_si_record_i32($i548);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 460, 5} true;
  assume {:verifier.code 0} true;
  $i547 := $i548;
  goto $bb333;
$bb330:
  assume !($i545 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 20} true;
  assume {:verifier.code 0} true;
  $i546 := $sgt.i32($i541,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  $i547 := $i542;
  assume {:branchcond $i546} true;
  goto $bb331, $bb332;
$bb331:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume ($i546 == 1);
  goto $bb329;
$bb332:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume !($i546 == 1);
  goto $bb333;
$bb333:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 461, 3} true;
  assume {:verifier.code 0} true;
  $i544 := $i547;
  goto $bb327;
$bb334:
  assume ($i558 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 11} true;
  assume {:verifier.code 0} true;
  $i560 := $slt.i32($i556,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i560} true;
  goto $bb337, $bb339;
$bb335:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  assume !($i558 == 1);
  goto $bb336;
$bb336:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i564 := $sext.i32.i64($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 9} true;
  assume {:verifier.code 0} true;
  $i565 := $srem.i64($i564,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i566 := $trunc.i64.i32($i565);
  call {:cexpr "a"} boogie_si_record_i32($i566);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 474, 5} true;
  assume {:verifier.code 0} true;
  $i567 := $add.i32($i566,$i566);
  call {:cexpr "a"} boogie_si_record_i32($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i568 := $sext.i32.i64($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 9} true;
  assume {:verifier.code 0} true;
  $i569 := $srem.i64($i568,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i570 := $trunc.i64.i32($i569);
  call {:cexpr "b"} boogie_si_record_i32($i570);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 476, 5} true;
  assume {:verifier.code 0} true;
  $i571 := $add.i32($i570,$i570);
  call {:cexpr "b"} boogie_si_record_i32($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 478, 5} true;
  assume {:verifier.code 0} true;
  $i572 := $add.i32($i559,$i559);
  call {:cexpr "c"} boogie_si_record_i32($i572);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 9} true;
  assume {:verifier.code 0} true;
  $i573 := $slt.i32($i567,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $i574 := $i572;
  assume {:branchcond $i573} true;
  goto $bb343, $bb344;
$bb337:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume ($i560 == 1);
  goto $bb338;
$bb338:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 470, 9} true;
  assume {:verifier.code 0} true;
  $i563 := $add.i32($i557,1);
  call {:cexpr "c"} boogie_si_record_i32($i563);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 471, 5} true;
  assume {:verifier.code 0} true;
  $i562 := $i563;
  goto $bb342;
$bb339:
  assume !($i560 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 20} true;
  assume {:verifier.code 0} true;
  $i561 := $sgt.i32($i556,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  $i562 := $i557;
  assume {:branchcond $i561} true;
  goto $bb340, $bb341;
$bb340:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume ($i561 == 1);
  goto $bb338;
$bb341:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume !($i561 == 1);
  goto $bb342;
$bb342:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 472, 3} true;
  assume {:verifier.code 0} true;
  $i559 := $i562;
  goto $bb336;
$bb343:
  assume ($i573 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 11} true;
  assume {:verifier.code 0} true;
  $i575 := $slt.i32($i571,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i575} true;
  goto $bb346, $bb348;
$bb344:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  assume !($i573 == 1);
  goto $bb345;
$bb345:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i579 := $sext.i32.i64($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 9} true;
  assume {:verifier.code 0} true;
  $i580 := $srem.i64($i579,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i581 := $trunc.i64.i32($i580);
  call {:cexpr "a"} boogie_si_record_i32($i581);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 485, 5} true;
  assume {:verifier.code 0} true;
  $i582 := $add.i32($i581,$i581);
  call {:cexpr "a"} boogie_si_record_i32($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i583 := $sext.i32.i64($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 9} true;
  assume {:verifier.code 0} true;
  $i584 := $srem.i64($i583,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i585 := $trunc.i64.i32($i584);
  call {:cexpr "b"} boogie_si_record_i32($i585);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 487, 5} true;
  assume {:verifier.code 0} true;
  $i586 := $add.i32($i585,$i585);
  call {:cexpr "b"} boogie_si_record_i32($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 489, 5} true;
  assume {:verifier.code 0} true;
  $i587 := $add.i32($i574,$i574);
  call {:cexpr "c"} boogie_si_record_i32($i587);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 9} true;
  assume {:verifier.code 0} true;
  $i588 := $slt.i32($i582,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  $i589 := $i587;
  assume {:branchcond $i588} true;
  goto $bb352, $bb353;
$bb346:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume ($i575 == 1);
  goto $bb347;
$bb347:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 481, 9} true;
  assume {:verifier.code 0} true;
  $i578 := $add.i32($i572,1);
  call {:cexpr "c"} boogie_si_record_i32($i578);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 482, 5} true;
  assume {:verifier.code 0} true;
  $i577 := $i578;
  goto $bb351;
$bb348:
  assume !($i575 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 20} true;
  assume {:verifier.code 0} true;
  $i576 := $sgt.i32($i571,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  $i577 := $i572;
  assume {:branchcond $i576} true;
  goto $bb349, $bb350;
$bb349:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume ($i576 == 1);
  goto $bb347;
$bb350:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume !($i576 == 1);
  goto $bb351;
$bb351:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 483, 3} true;
  assume {:verifier.code 0} true;
  $i574 := $i577;
  goto $bb345;
$bb352:
  assume ($i588 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 11} true;
  assume {:verifier.code 0} true;
  $i590 := $slt.i32($i586,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i590} true;
  goto $bb355, $bb357;
$bb353:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  assume !($i588 == 1);
  goto $bb354;
$bb354:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i594 := $sext.i32.i64($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 9} true;
  assume {:verifier.code 0} true;
  $i595 := $srem.i64($i594,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i596 := $trunc.i64.i32($i595);
  call {:cexpr "a"} boogie_si_record_i32($i596);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 496, 5} true;
  assume {:verifier.code 0} true;
  $i597 := $add.i32($i596,$i596);
  call {:cexpr "a"} boogie_si_record_i32($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i598 := $sext.i32.i64($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 9} true;
  assume {:verifier.code 0} true;
  $i599 := $srem.i64($i598,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i600 := $trunc.i64.i32($i599);
  call {:cexpr "b"} boogie_si_record_i32($i600);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 498, 5} true;
  assume {:verifier.code 0} true;
  $i601 := $add.i32($i600,$i600);
  call {:cexpr "b"} boogie_si_record_i32($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 500, 5} true;
  assume {:verifier.code 0} true;
  $i602 := $add.i32($i589,$i589);
  call {:cexpr "c"} boogie_si_record_i32($i602);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 9} true;
  assume {:verifier.code 0} true;
  $i603 := $slt.i32($i597,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  $i604 := $i602;
  assume {:branchcond $i603} true;
  goto $bb361, $bb362;
$bb355:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume ($i590 == 1);
  goto $bb356;
$bb356:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 492, 9} true;
  assume {:verifier.code 0} true;
  $i593 := $add.i32($i587,1);
  call {:cexpr "c"} boogie_si_record_i32($i593);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 493, 5} true;
  assume {:verifier.code 0} true;
  $i592 := $i593;
  goto $bb360;
$bb357:
  assume !($i590 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 20} true;
  assume {:verifier.code 0} true;
  $i591 := $sgt.i32($i586,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  $i592 := $i587;
  assume {:branchcond $i591} true;
  goto $bb358, $bb359;
$bb358:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume ($i591 == 1);
  goto $bb356;
$bb359:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume !($i591 == 1);
  goto $bb360;
$bb360:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 494, 3} true;
  assume {:verifier.code 0} true;
  $i589 := $i592;
  goto $bb354;
$bb361:
  assume ($i603 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 11} true;
  assume {:verifier.code 0} true;
  $i605 := $slt.i32($i601,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i605} true;
  goto $bb364, $bb366;
$bb362:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  assume !($i603 == 1);
  goto $bb363;
$bb363:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i609 := $sext.i32.i64($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 9} true;
  assume {:verifier.code 0} true;
  $i610 := $srem.i64($i609,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i611 := $trunc.i64.i32($i610);
  call {:cexpr "a"} boogie_si_record_i32($i611);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 507, 5} true;
  assume {:verifier.code 0} true;
  $i612 := $add.i32($i611,$i611);
  call {:cexpr "a"} boogie_si_record_i32($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i613 := $sext.i32.i64($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 9} true;
  assume {:verifier.code 0} true;
  $i614 := $srem.i64($i613,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i615 := $trunc.i64.i32($i614);
  call {:cexpr "b"} boogie_si_record_i32($i615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 509, 5} true;
  assume {:verifier.code 0} true;
  $i616 := $add.i32($i615,$i615);
  call {:cexpr "b"} boogie_si_record_i32($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 511, 5} true;
  assume {:verifier.code 0} true;
  $i617 := $add.i32($i604,$i604);
  call {:cexpr "c"} boogie_si_record_i32($i617);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 9} true;
  assume {:verifier.code 0} true;
  $i618 := $slt.i32($i612,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  $i619 := $i617;
  assume {:branchcond $i618} true;
  goto $bb370, $bb371;
$bb364:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume ($i605 == 1);
  goto $bb365;
$bb365:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 503, 9} true;
  assume {:verifier.code 0} true;
  $i608 := $add.i32($i602,1);
  call {:cexpr "c"} boogie_si_record_i32($i608);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 504, 5} true;
  assume {:verifier.code 0} true;
  $i607 := $i608;
  goto $bb369;
$bb366:
  assume !($i605 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 20} true;
  assume {:verifier.code 0} true;
  $i606 := $sgt.i32($i601,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  $i607 := $i602;
  assume {:branchcond $i606} true;
  goto $bb367, $bb368;
$bb367:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume ($i606 == 1);
  goto $bb365;
$bb368:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume !($i606 == 1);
  goto $bb369;
$bb369:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 505, 3} true;
  assume {:verifier.code 0} true;
  $i604 := $i607;
  goto $bb363;
$bb370:
  assume ($i618 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 11} true;
  assume {:verifier.code 0} true;
  $i620 := $slt.i32($i616,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i620} true;
  goto $bb373, $bb375;
$bb371:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  assume !($i618 == 1);
  goto $bb372;
$bb372:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i624 := $sext.i32.i64($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 9} true;
  assume {:verifier.code 0} true;
  $i625 := $srem.i64($i624,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i626 := $trunc.i64.i32($i625);
  call {:cexpr "a"} boogie_si_record_i32($i626);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 518, 5} true;
  assume {:verifier.code 0} true;
  $i627 := $add.i32($i626,$i626);
  call {:cexpr "a"} boogie_si_record_i32($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i628 := $sext.i32.i64($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 9} true;
  assume {:verifier.code 0} true;
  $i629 := $srem.i64($i628,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i630 := $trunc.i64.i32($i629);
  call {:cexpr "b"} boogie_si_record_i32($i630);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 520, 5} true;
  assume {:verifier.code 0} true;
  $i631 := $add.i32($i630,$i630);
  call {:cexpr "b"} boogie_si_record_i32($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 522, 5} true;
  assume {:verifier.code 0} true;
  $i632 := $add.i32($i619,$i619);
  call {:cexpr "c"} boogie_si_record_i32($i632);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 9} true;
  assume {:verifier.code 0} true;
  $i633 := $slt.i32($i627,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  $i634 := $i632;
  assume {:branchcond $i633} true;
  goto $bb379, $bb380;
$bb373:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume ($i620 == 1);
  goto $bb374;
$bb374:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 514, 9} true;
  assume {:verifier.code 0} true;
  $i623 := $add.i32($i617,1);
  call {:cexpr "c"} boogie_si_record_i32($i623);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 515, 5} true;
  assume {:verifier.code 0} true;
  $i622 := $i623;
  goto $bb378;
$bb375:
  assume !($i620 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 20} true;
  assume {:verifier.code 0} true;
  $i621 := $sgt.i32($i616,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  $i622 := $i617;
  assume {:branchcond $i621} true;
  goto $bb376, $bb377;
$bb376:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume ($i621 == 1);
  goto $bb374;
$bb377:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume !($i621 == 1);
  goto $bb378;
$bb378:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 516, 3} true;
  assume {:verifier.code 0} true;
  $i619 := $i622;
  goto $bb372;
$bb379:
  assume ($i633 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 11} true;
  assume {:verifier.code 0} true;
  $i635 := $slt.i32($i631,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i635} true;
  goto $bb382, $bb384;
$bb380:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  assume !($i633 == 1);
  goto $bb381;
$bb381:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i639 := $sext.i32.i64($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 9} true;
  assume {:verifier.code 0} true;
  $i640 := $srem.i64($i639,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i641 := $trunc.i64.i32($i640);
  call {:cexpr "a"} boogie_si_record_i32($i641);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 529, 5} true;
  assume {:verifier.code 0} true;
  $i642 := $add.i32($i641,$i641);
  call {:cexpr "a"} boogie_si_record_i32($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i643 := $sext.i32.i64($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 9} true;
  assume {:verifier.code 0} true;
  $i644 := $srem.i64($i643,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i645 := $trunc.i64.i32($i644);
  call {:cexpr "b"} boogie_si_record_i32($i645);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 531, 5} true;
  assume {:verifier.code 0} true;
  $i646 := $add.i32($i645,$i645);
  call {:cexpr "b"} boogie_si_record_i32($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 533, 5} true;
  assume {:verifier.code 0} true;
  $i647 := $add.i32($i634,$i634);
  call {:cexpr "c"} boogie_si_record_i32($i647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 9} true;
  assume {:verifier.code 0} true;
  $i648 := $slt.i32($i642,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  $i649 := $i647;
  assume {:branchcond $i648} true;
  goto $bb388, $bb389;
$bb382:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume ($i635 == 1);
  goto $bb383;
$bb383:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 525, 9} true;
  assume {:verifier.code 0} true;
  $i638 := $add.i32($i632,1);
  call {:cexpr "c"} boogie_si_record_i32($i638);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 526, 5} true;
  assume {:verifier.code 0} true;
  $i637 := $i638;
  goto $bb387;
$bb384:
  assume !($i635 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 20} true;
  assume {:verifier.code 0} true;
  $i636 := $sgt.i32($i631,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  $i637 := $i632;
  assume {:branchcond $i636} true;
  goto $bb385, $bb386;
$bb385:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume ($i636 == 1);
  goto $bb383;
$bb386:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume !($i636 == 1);
  goto $bb387;
$bb387:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 527, 3} true;
  assume {:verifier.code 0} true;
  $i634 := $i637;
  goto $bb381;
$bb388:
  assume ($i648 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 11} true;
  assume {:verifier.code 0} true;
  $i650 := $slt.i32($i646,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i650} true;
  goto $bb391, $bb393;
$bb389:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  assume !($i648 == 1);
  goto $bb390;
$bb390:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i654 := $sext.i32.i64($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 9} true;
  assume {:verifier.code 0} true;
  $i655 := $srem.i64($i654,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i656 := $trunc.i64.i32($i655);
  call {:cexpr "a"} boogie_si_record_i32($i656);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 540, 5} true;
  assume {:verifier.code 0} true;
  $i657 := $add.i32($i656,$i656);
  call {:cexpr "a"} boogie_si_record_i32($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i658 := $sext.i32.i64($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 9} true;
  assume {:verifier.code 0} true;
  $i659 := $srem.i64($i658,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i660 := $trunc.i64.i32($i659);
  call {:cexpr "b"} boogie_si_record_i32($i660);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 542, 5} true;
  assume {:verifier.code 0} true;
  $i661 := $add.i32($i660,$i660);
  call {:cexpr "b"} boogie_si_record_i32($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 5} true;
  assume {:verifier.code 0} true;
  $i662 := $add.i32($i649,$i649);
  call {:cexpr "c"} boogie_si_record_i32($i662);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 9} true;
  assume {:verifier.code 0} true;
  $i663 := $slt.i32($i657,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  $i664 := $i662;
  assume {:branchcond $i663} true;
  goto $bb397, $bb398;
$bb391:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume ($i650 == 1);
  goto $bb392;
$bb392:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 536, 9} true;
  assume {:verifier.code 0} true;
  $i653 := $add.i32($i647,1);
  call {:cexpr "c"} boogie_si_record_i32($i653);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 537, 5} true;
  assume {:verifier.code 0} true;
  $i652 := $i653;
  goto $bb396;
$bb393:
  assume !($i650 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 20} true;
  assume {:verifier.code 0} true;
  $i651 := $sgt.i32($i646,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  $i652 := $i647;
  assume {:branchcond $i651} true;
  goto $bb394, $bb395;
$bb394:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume ($i651 == 1);
  goto $bb392;
$bb395:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume !($i651 == 1);
  goto $bb396;
$bb396:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 538, 3} true;
  assume {:verifier.code 0} true;
  $i649 := $i652;
  goto $bb390;
$bb397:
  assume ($i663 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 11} true;
  assume {:verifier.code 0} true;
  $i665 := $slt.i32($i661,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i665} true;
  goto $bb400, $bb402;
$bb398:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  assume !($i663 == 1);
  goto $bb399;
$bb399:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i669 := $sext.i32.i64($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 9} true;
  assume {:verifier.code 0} true;
  $i670 := $srem.i64($i669,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i671 := $trunc.i64.i32($i670);
  call {:cexpr "a"} boogie_si_record_i32($i671);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 551, 5} true;
  assume {:verifier.code 0} true;
  $i672 := $add.i32($i671,$i671);
  call {:cexpr "a"} boogie_si_record_i32($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i673 := $sext.i32.i64($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 9} true;
  assume {:verifier.code 0} true;
  $i674 := $srem.i64($i673,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i675 := $trunc.i64.i32($i674);
  call {:cexpr "b"} boogie_si_record_i32($i675);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 553, 5} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i32($i675,$i675);
  call {:cexpr "b"} boogie_si_record_i32($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 555, 5} true;
  assume {:verifier.code 0} true;
  $i677 := $add.i32($i664,$i664);
  call {:cexpr "c"} boogie_si_record_i32($i677);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 9} true;
  assume {:verifier.code 0} true;
  $i678 := $slt.i32($i672,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  $i679 := $i677;
  assume {:branchcond $i678} true;
  goto $bb406, $bb407;
$bb400:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume ($i665 == 1);
  goto $bb401;
$bb401:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 547, 9} true;
  assume {:verifier.code 0} true;
  $i668 := $add.i32($i662,1);
  call {:cexpr "c"} boogie_si_record_i32($i668);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 5} true;
  assume {:verifier.code 0} true;
  $i667 := $i668;
  goto $bb405;
$bb402:
  assume !($i665 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 20} true;
  assume {:verifier.code 0} true;
  $i666 := $sgt.i32($i661,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  $i667 := $i662;
  assume {:branchcond $i666} true;
  goto $bb403, $bb404;
$bb403:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume ($i666 == 1);
  goto $bb401;
$bb404:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume !($i666 == 1);
  goto $bb405;
$bb405:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 549, 3} true;
  assume {:verifier.code 0} true;
  $i664 := $i667;
  goto $bb399;
$bb406:
  assume ($i678 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 11} true;
  assume {:verifier.code 0} true;
  $i680 := $slt.i32($i676,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i680} true;
  goto $bb409, $bb411;
$bb407:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  assume !($i678 == 1);
  goto $bb408;
$bb408:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i684 := $sext.i32.i64($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 9} true;
  assume {:verifier.code 0} true;
  $i685 := $srem.i64($i684,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i686 := $trunc.i64.i32($i685);
  call {:cexpr "a"} boogie_si_record_i32($i686);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 562, 5} true;
  assume {:verifier.code 0} true;
  $i687 := $add.i32($i686,$i686);
  call {:cexpr "a"} boogie_si_record_i32($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i688 := $sext.i32.i64($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 9} true;
  assume {:verifier.code 0} true;
  $i689 := $srem.i64($i688,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i690 := $trunc.i64.i32($i689);
  call {:cexpr "b"} boogie_si_record_i32($i690);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 564, 5} true;
  assume {:verifier.code 0} true;
  $i691 := $add.i32($i690,$i690);
  call {:cexpr "b"} boogie_si_record_i32($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 566, 5} true;
  assume {:verifier.code 0} true;
  $i692 := $add.i32($i679,$i679);
  call {:cexpr "c"} boogie_si_record_i32($i692);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 9} true;
  assume {:verifier.code 0} true;
  $i693 := $slt.i32($i687,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  $i694 := $i692;
  assume {:branchcond $i693} true;
  goto $bb415, $bb416;
$bb409:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume ($i680 == 1);
  goto $bb410;
$bb410:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 558, 9} true;
  assume {:verifier.code 0} true;
  $i683 := $add.i32($i677,1);
  call {:cexpr "c"} boogie_si_record_i32($i683);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 559, 5} true;
  assume {:verifier.code 0} true;
  $i682 := $i683;
  goto $bb414;
$bb411:
  assume !($i680 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 20} true;
  assume {:verifier.code 0} true;
  $i681 := $sgt.i32($i676,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  $i682 := $i677;
  assume {:branchcond $i681} true;
  goto $bb412, $bb413;
$bb412:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume ($i681 == 1);
  goto $bb410;
$bb413:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume !($i681 == 1);
  goto $bb414;
$bb414:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 560, 3} true;
  assume {:verifier.code 0} true;
  $i679 := $i682;
  goto $bb408;
$bb415:
  assume ($i693 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 11} true;
  assume {:verifier.code 0} true;
  $i695 := $slt.i32($i691,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i695} true;
  goto $bb418, $bb420;
$bb416:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  assume !($i693 == 1);
  goto $bb417;
$bb417:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i699 := $sext.i32.i64($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 9} true;
  assume {:verifier.code 0} true;
  $i700 := $srem.i64($i699,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i701 := $trunc.i64.i32($i700);
  call {:cexpr "a"} boogie_si_record_i32($i701);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 573, 5} true;
  assume {:verifier.code 0} true;
  $i702 := $add.i32($i701,$i701);
  call {:cexpr "a"} boogie_si_record_i32($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i703 := $sext.i32.i64($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 9} true;
  assume {:verifier.code 0} true;
  $i704 := $srem.i64($i703,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i705 := $trunc.i64.i32($i704);
  call {:cexpr "b"} boogie_si_record_i32($i705);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 575, 5} true;
  assume {:verifier.code 0} true;
  $i706 := $add.i32($i705,$i705);
  call {:cexpr "b"} boogie_si_record_i32($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 577, 5} true;
  assume {:verifier.code 0} true;
  $i707 := $add.i32($i694,$i694);
  call {:cexpr "c"} boogie_si_record_i32($i707);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 9} true;
  assume {:verifier.code 0} true;
  $i708 := $slt.i32($i702,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  $i709 := $i707;
  assume {:branchcond $i708} true;
  goto $bb424, $bb425;
$bb418:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume ($i695 == 1);
  goto $bb419;
$bb419:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 569, 9} true;
  assume {:verifier.code 0} true;
  $i698 := $add.i32($i692,1);
  call {:cexpr "c"} boogie_si_record_i32($i698);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 570, 5} true;
  assume {:verifier.code 0} true;
  $i697 := $i698;
  goto $bb423;
$bb420:
  assume !($i695 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 20} true;
  assume {:verifier.code 0} true;
  $i696 := $sgt.i32($i691,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  $i697 := $i692;
  assume {:branchcond $i696} true;
  goto $bb421, $bb422;
$bb421:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume ($i696 == 1);
  goto $bb419;
$bb422:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume !($i696 == 1);
  goto $bb423;
$bb423:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 571, 3} true;
  assume {:verifier.code 0} true;
  $i694 := $i697;
  goto $bb417;
$bb424:
  assume ($i708 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 11} true;
  assume {:verifier.code 0} true;
  $i710 := $slt.i32($i706,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i710} true;
  goto $bb427, $bb429;
$bb425:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  assume !($i708 == 1);
  goto $bb426;
$bb426:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i714 := $sext.i32.i64($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 9} true;
  assume {:verifier.code 0} true;
  $i715 := $srem.i64($i714,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i716 := $trunc.i64.i32($i715);
  call {:cexpr "a"} boogie_si_record_i32($i716);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 584, 5} true;
  assume {:verifier.code 0} true;
  $i717 := $add.i32($i716,$i716);
  call {:cexpr "a"} boogie_si_record_i32($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i718 := $sext.i32.i64($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 9} true;
  assume {:verifier.code 0} true;
  $i719 := $srem.i64($i718,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i720 := $trunc.i64.i32($i719);
  call {:cexpr "b"} boogie_si_record_i32($i720);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 586, 5} true;
  assume {:verifier.code 0} true;
  $i721 := $add.i32($i720,$i720);
  call {:cexpr "b"} boogie_si_record_i32($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 588, 5} true;
  assume {:verifier.code 0} true;
  $i722 := $add.i32($i709,$i709);
  call {:cexpr "c"} boogie_si_record_i32($i722);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 9} true;
  assume {:verifier.code 0} true;
  $i723 := $slt.i32($i717,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  $i724 := $i722;
  assume {:branchcond $i723} true;
  goto $bb433, $bb434;
$bb427:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume ($i710 == 1);
  goto $bb428;
$bb428:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 580, 9} true;
  assume {:verifier.code 0} true;
  $i713 := $add.i32($i707,1);
  call {:cexpr "c"} boogie_si_record_i32($i713);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 581, 5} true;
  assume {:verifier.code 0} true;
  $i712 := $i713;
  goto $bb432;
$bb429:
  assume !($i710 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 20} true;
  assume {:verifier.code 0} true;
  $i711 := $sgt.i32($i706,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  $i712 := $i707;
  assume {:branchcond $i711} true;
  goto $bb430, $bb431;
$bb430:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume ($i711 == 1);
  goto $bb428;
$bb431:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume !($i711 == 1);
  goto $bb432;
$bb432:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 582, 3} true;
  assume {:verifier.code 0} true;
  $i709 := $i712;
  goto $bb426;
$bb433:
  assume ($i723 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 11} true;
  assume {:verifier.code 0} true;
  $i725 := $slt.i32($i721,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i725} true;
  goto $bb436, $bb438;
$bb434:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  assume !($i723 == 1);
  goto $bb435;
$bb435:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i729 := $sext.i32.i64($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 9} true;
  assume {:verifier.code 0} true;
  $i730 := $srem.i64($i729,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i731 := $trunc.i64.i32($i730);
  call {:cexpr "a"} boogie_si_record_i32($i731);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 595, 5} true;
  assume {:verifier.code 0} true;
  $i732 := $add.i32($i731,$i731);
  call {:cexpr "a"} boogie_si_record_i32($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i733 := $sext.i32.i64($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 9} true;
  assume {:verifier.code 0} true;
  $i734 := $srem.i64($i733,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i735 := $trunc.i64.i32($i734);
  call {:cexpr "b"} boogie_si_record_i32($i735);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 597, 5} true;
  assume {:verifier.code 0} true;
  $i736 := $add.i32($i735,$i735);
  call {:cexpr "b"} boogie_si_record_i32($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 599, 5} true;
  assume {:verifier.code 0} true;
  $i737 := $add.i32($i724,$i724);
  call {:cexpr "c"} boogie_si_record_i32($i737);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 9} true;
  assume {:verifier.code 0} true;
  $i738 := $slt.i32($i732,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $i739 := $i737;
  assume {:branchcond $i738} true;
  goto $bb442, $bb443;
$bb436:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume ($i725 == 1);
  goto $bb437;
$bb437:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 591, 9} true;
  assume {:verifier.code 0} true;
  $i728 := $add.i32($i722,1);
  call {:cexpr "c"} boogie_si_record_i32($i728);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 592, 5} true;
  assume {:verifier.code 0} true;
  $i727 := $i728;
  goto $bb441;
$bb438:
  assume !($i725 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 20} true;
  assume {:verifier.code 0} true;
  $i726 := $sgt.i32($i721,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  $i727 := $i722;
  assume {:branchcond $i726} true;
  goto $bb439, $bb440;
$bb439:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume ($i726 == 1);
  goto $bb437;
$bb440:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume !($i726 == 1);
  goto $bb441;
$bb441:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 593, 3} true;
  assume {:verifier.code 0} true;
  $i724 := $i727;
  goto $bb435;
$bb442:
  assume ($i738 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 11} true;
  assume {:verifier.code 0} true;
  $i740 := $slt.i32($i736,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i740} true;
  goto $bb445, $bb447;
$bb443:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  assume !($i738 == 1);
  goto $bb444;
$bb444:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i744 := $sext.i32.i64($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 9} true;
  assume {:verifier.code 0} true;
  $i745 := $srem.i64($i744,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i746 := $trunc.i64.i32($i745);
  call {:cexpr "a"} boogie_si_record_i32($i746);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 606, 5} true;
  assume {:verifier.code 0} true;
  $i747 := $add.i32($i746,$i746);
  call {:cexpr "a"} boogie_si_record_i32($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i748 := $sext.i32.i64($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 9} true;
  assume {:verifier.code 0} true;
  $i749 := $srem.i64($i748,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i750 := $trunc.i64.i32($i749);
  call {:cexpr "b"} boogie_si_record_i32($i750);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 608, 5} true;
  assume {:verifier.code 0} true;
  $i751 := $add.i32($i750,$i750);
  call {:cexpr "b"} boogie_si_record_i32($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 610, 5} true;
  assume {:verifier.code 0} true;
  $i752 := $add.i32($i739,$i739);
  call {:cexpr "c"} boogie_si_record_i32($i752);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 9} true;
  assume {:verifier.code 0} true;
  $i753 := $slt.i32($i747,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  $i754 := $i752;
  assume {:branchcond $i753} true;
  goto $bb451, $bb452;
$bb445:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume ($i740 == 1);
  goto $bb446;
$bb446:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 602, 9} true;
  assume {:verifier.code 0} true;
  $i743 := $add.i32($i737,1);
  call {:cexpr "c"} boogie_si_record_i32($i743);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 603, 5} true;
  assume {:verifier.code 0} true;
  $i742 := $i743;
  goto $bb450;
$bb447:
  assume !($i740 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 20} true;
  assume {:verifier.code 0} true;
  $i741 := $sgt.i32($i736,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  $i742 := $i737;
  assume {:branchcond $i741} true;
  goto $bb448, $bb449;
$bb448:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume ($i741 == 1);
  goto $bb446;
$bb449:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume !($i741 == 1);
  goto $bb450;
$bb450:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i739 := $i742;
  goto $bb444;
$bb451:
  assume ($i753 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 11} true;
  assume {:verifier.code 0} true;
  $i755 := $slt.i32($i751,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i755} true;
  goto $bb454, $bb456;
$bb452:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  assume !($i753 == 1);
  goto $bb453;
$bb453:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i759 := $sext.i32.i64($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 9} true;
  assume {:verifier.code 0} true;
  $i760 := $srem.i64($i759,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i761 := $trunc.i64.i32($i760);
  call {:cexpr "a"} boogie_si_record_i32($i761);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 617, 5} true;
  assume {:verifier.code 0} true;
  $i762 := $add.i32($i761,$i761);
  call {:cexpr "a"} boogie_si_record_i32($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i763 := $sext.i32.i64($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 9} true;
  assume {:verifier.code 0} true;
  $i764 := $srem.i64($i763,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i765 := $trunc.i64.i32($i764);
  call {:cexpr "b"} boogie_si_record_i32($i765);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 619, 5} true;
  assume {:verifier.code 0} true;
  $i766 := $add.i32($i765,$i765);
  call {:cexpr "b"} boogie_si_record_i32($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 621, 5} true;
  assume {:verifier.code 0} true;
  $i767 := $add.i32($i754,$i754);
  call {:cexpr "c"} boogie_si_record_i32($i767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 9} true;
  assume {:verifier.code 0} true;
  $i768 := $slt.i32($i762,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  $i769 := $i767;
  assume {:branchcond $i768} true;
  goto $bb460, $bb461;
$bb454:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume ($i755 == 1);
  goto $bb455;
$bb455:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 613, 9} true;
  assume {:verifier.code 0} true;
  $i758 := $add.i32($i752,1);
  call {:cexpr "c"} boogie_si_record_i32($i758);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 614, 5} true;
  assume {:verifier.code 0} true;
  $i757 := $i758;
  goto $bb459;
$bb456:
  assume !($i755 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 20} true;
  assume {:verifier.code 0} true;
  $i756 := $sgt.i32($i751,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  $i757 := $i752;
  assume {:branchcond $i756} true;
  goto $bb457, $bb458;
$bb457:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume ($i756 == 1);
  goto $bb455;
$bb458:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume !($i756 == 1);
  goto $bb459;
$bb459:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 615, 3} true;
  assume {:verifier.code 0} true;
  $i754 := $i757;
  goto $bb453;
$bb460:
  assume ($i768 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 11} true;
  assume {:verifier.code 0} true;
  $i770 := $slt.i32($i766,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i770} true;
  goto $bb463, $bb465;
$bb461:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  assume !($i768 == 1);
  goto $bb462;
$bb462:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i774 := $sext.i32.i64($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 9} true;
  assume {:verifier.code 0} true;
  $i775 := $srem.i64($i774,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i776 := $trunc.i64.i32($i775);
  call {:cexpr "a"} boogie_si_record_i32($i776);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 628, 5} true;
  assume {:verifier.code 0} true;
  $i777 := $add.i32($i776,$i776);
  call {:cexpr "a"} boogie_si_record_i32($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i778 := $sext.i32.i64($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 9} true;
  assume {:verifier.code 0} true;
  $i779 := $srem.i64($i778,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i780 := $trunc.i64.i32($i779);
  call {:cexpr "b"} boogie_si_record_i32($i780);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 630, 5} true;
  assume {:verifier.code 0} true;
  $i781 := $add.i32($i780,$i780);
  call {:cexpr "b"} boogie_si_record_i32($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 632, 5} true;
  assume {:verifier.code 0} true;
  $i782 := $add.i32($i769,$i769);
  call {:cexpr "c"} boogie_si_record_i32($i782);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 9} true;
  assume {:verifier.code 0} true;
  $i783 := $slt.i32($i777,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  $i784 := $i782;
  assume {:branchcond $i783} true;
  goto $bb469, $bb470;
$bb463:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume ($i770 == 1);
  goto $bb464;
$bb464:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 624, 9} true;
  assume {:verifier.code 0} true;
  $i773 := $add.i32($i767,1);
  call {:cexpr "c"} boogie_si_record_i32($i773);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 625, 5} true;
  assume {:verifier.code 0} true;
  $i772 := $i773;
  goto $bb468;
$bb465:
  assume !($i770 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 20} true;
  assume {:verifier.code 0} true;
  $i771 := $sgt.i32($i766,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  $i772 := $i767;
  assume {:branchcond $i771} true;
  goto $bb466, $bb467;
$bb466:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume ($i771 == 1);
  goto $bb464;
$bb467:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume !($i771 == 1);
  goto $bb468;
$bb468:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 626, 3} true;
  assume {:verifier.code 0} true;
  $i769 := $i772;
  goto $bb462;
$bb469:
  assume ($i783 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 11} true;
  assume {:verifier.code 0} true;
  $i785 := $slt.i32($i781,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i785} true;
  goto $bb472, $bb474;
$bb470:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  assume !($i783 == 1);
  goto $bb471;
$bb471:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i789 := $sext.i32.i64($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 9} true;
  assume {:verifier.code 0} true;
  $i790 := $srem.i64($i789,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i791 := $trunc.i64.i32($i790);
  call {:cexpr "a"} boogie_si_record_i32($i791);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 639, 5} true;
  assume {:verifier.code 0} true;
  $i792 := $add.i32($i791,$i791);
  call {:cexpr "a"} boogie_si_record_i32($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i793 := $sext.i32.i64($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 9} true;
  assume {:verifier.code 0} true;
  $i794 := $srem.i64($i793,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i795 := $trunc.i64.i32($i794);
  call {:cexpr "b"} boogie_si_record_i32($i795);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 641, 5} true;
  assume {:verifier.code 0} true;
  $i796 := $add.i32($i795,$i795);
  call {:cexpr "b"} boogie_si_record_i32($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 643, 5} true;
  assume {:verifier.code 0} true;
  $i797 := $add.i32($i784,$i784);
  call {:cexpr "c"} boogie_si_record_i32($i797);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 9} true;
  assume {:verifier.code 0} true;
  $i798 := $slt.i32($i792,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  $i799 := $i797;
  assume {:branchcond $i798} true;
  goto $bb478, $bb479;
$bb472:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume ($i785 == 1);
  goto $bb473;
$bb473:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 635, 9} true;
  assume {:verifier.code 0} true;
  $i788 := $add.i32($i782,1);
  call {:cexpr "c"} boogie_si_record_i32($i788);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 636, 5} true;
  assume {:verifier.code 0} true;
  $i787 := $i788;
  goto $bb477;
$bb474:
  assume !($i785 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 20} true;
  assume {:verifier.code 0} true;
  $i786 := $sgt.i32($i781,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  $i787 := $i782;
  assume {:branchcond $i786} true;
  goto $bb475, $bb476;
$bb475:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume ($i786 == 1);
  goto $bb473;
$bb476:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume !($i786 == 1);
  goto $bb477;
$bb477:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 637, 3} true;
  assume {:verifier.code 0} true;
  $i784 := $i787;
  goto $bb471;
$bb478:
  assume ($i798 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 11} true;
  assume {:verifier.code 0} true;
  $i800 := $slt.i32($i796,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i800} true;
  goto $bb481, $bb483;
$bb479:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  assume !($i798 == 1);
  goto $bb480;
$bb480:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i804 := $sext.i32.i64($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 9} true;
  assume {:verifier.code 0} true;
  $i805 := $srem.i64($i804,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i806 := $trunc.i64.i32($i805);
  call {:cexpr "a"} boogie_si_record_i32($i806);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 650, 5} true;
  assume {:verifier.code 0} true;
  $i807 := $add.i32($i806,$i806);
  call {:cexpr "a"} boogie_si_record_i32($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i808 := $sext.i32.i64($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 9} true;
  assume {:verifier.code 0} true;
  $i809 := $srem.i64($i808,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i810 := $trunc.i64.i32($i809);
  call {:cexpr "b"} boogie_si_record_i32($i810);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 652, 5} true;
  assume {:verifier.code 0} true;
  $i811 := $add.i32($i810,$i810);
  call {:cexpr "b"} boogie_si_record_i32($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 654, 5} true;
  assume {:verifier.code 0} true;
  $i812 := $add.i32($i799,$i799);
  call {:cexpr "c"} boogie_si_record_i32($i812);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 9} true;
  assume {:verifier.code 0} true;
  $i813 := $slt.i32($i807,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  $i814 := $i812;
  assume {:branchcond $i813} true;
  goto $bb487, $bb488;
$bb481:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume ($i800 == 1);
  goto $bb482;
$bb482:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 646, 9} true;
  assume {:verifier.code 0} true;
  $i803 := $add.i32($i797,1);
  call {:cexpr "c"} boogie_si_record_i32($i803);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 647, 5} true;
  assume {:verifier.code 0} true;
  $i802 := $i803;
  goto $bb486;
$bb483:
  assume !($i800 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 20} true;
  assume {:verifier.code 0} true;
  $i801 := $sgt.i32($i796,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  $i802 := $i797;
  assume {:branchcond $i801} true;
  goto $bb484, $bb485;
$bb484:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume ($i801 == 1);
  goto $bb482;
$bb485:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume !($i801 == 1);
  goto $bb486;
$bb486:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 648, 3} true;
  assume {:verifier.code 0} true;
  $i799 := $i802;
  goto $bb480;
$bb487:
  assume ($i813 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 11} true;
  assume {:verifier.code 0} true;
  $i815 := $slt.i32($i811,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i815} true;
  goto $bb490, $bb492;
$bb488:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  assume !($i813 == 1);
  goto $bb489;
$bb489:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i819 := $sext.i32.i64($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 9} true;
  assume {:verifier.code 0} true;
  $i820 := $srem.i64($i819,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i821 := $trunc.i64.i32($i820);
  call {:cexpr "a"} boogie_si_record_i32($i821);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 661, 5} true;
  assume {:verifier.code 0} true;
  $i822 := $add.i32($i821,$i821);
  call {:cexpr "a"} boogie_si_record_i32($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i823 := $sext.i32.i64($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 9} true;
  assume {:verifier.code 0} true;
  $i824 := $srem.i64($i823,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i825 := $trunc.i64.i32($i824);
  call {:cexpr "b"} boogie_si_record_i32($i825);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 663, 5} true;
  assume {:verifier.code 0} true;
  $i826 := $add.i32($i825,$i825);
  call {:cexpr "b"} boogie_si_record_i32($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 665, 5} true;
  assume {:verifier.code 0} true;
  $i827 := $add.i32($i814,$i814);
  call {:cexpr "c"} boogie_si_record_i32($i827);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 9} true;
  assume {:verifier.code 0} true;
  $i828 := $slt.i32($i822,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  $i829 := $i827;
  assume {:branchcond $i828} true;
  goto $bb496, $bb497;
$bb490:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume ($i815 == 1);
  goto $bb491;
$bb491:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 657, 9} true;
  assume {:verifier.code 0} true;
  $i818 := $add.i32($i812,1);
  call {:cexpr "c"} boogie_si_record_i32($i818);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 658, 5} true;
  assume {:verifier.code 0} true;
  $i817 := $i818;
  goto $bb495;
$bb492:
  assume !($i815 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 20} true;
  assume {:verifier.code 0} true;
  $i816 := $sgt.i32($i811,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  $i817 := $i812;
  assume {:branchcond $i816} true;
  goto $bb493, $bb494;
$bb493:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume ($i816 == 1);
  goto $bb491;
$bb494:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume !($i816 == 1);
  goto $bb495;
$bb495:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 659, 3} true;
  assume {:verifier.code 0} true;
  $i814 := $i817;
  goto $bb489;
$bb496:
  assume ($i828 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 11} true;
  assume {:verifier.code 0} true;
  $i830 := $slt.i32($i826,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i830} true;
  goto $bb499, $bb501;
$bb497:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  assume !($i828 == 1);
  goto $bb498;
$bb498:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i834 := $sext.i32.i64($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 9} true;
  assume {:verifier.code 0} true;
  $i835 := $srem.i64($i834,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i836 := $trunc.i64.i32($i835);
  call {:cexpr "a"} boogie_si_record_i32($i836);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 672, 5} true;
  assume {:verifier.code 0} true;
  $i837 := $add.i32($i836,$i836);
  call {:cexpr "a"} boogie_si_record_i32($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i838 := $sext.i32.i64($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 9} true;
  assume {:verifier.code 0} true;
  $i839 := $srem.i64($i838,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i840 := $trunc.i64.i32($i839);
  call {:cexpr "b"} boogie_si_record_i32($i840);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 674, 5} true;
  assume {:verifier.code 0} true;
  $i841 := $add.i32($i840,$i840);
  call {:cexpr "b"} boogie_si_record_i32($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 676, 5} true;
  assume {:verifier.code 0} true;
  $i842 := $add.i32($i829,$i829);
  call {:cexpr "c"} boogie_si_record_i32($i842);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 9} true;
  assume {:verifier.code 0} true;
  $i843 := $slt.i32($i837,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  $i844 := $i842;
  assume {:branchcond $i843} true;
  goto $bb505, $bb506;
$bb499:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume ($i830 == 1);
  goto $bb500;
$bb500:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 668, 9} true;
  assume {:verifier.code 0} true;
  $i833 := $add.i32($i827,1);
  call {:cexpr "c"} boogie_si_record_i32($i833);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 669, 5} true;
  assume {:verifier.code 0} true;
  $i832 := $i833;
  goto $bb504;
$bb501:
  assume !($i830 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 20} true;
  assume {:verifier.code 0} true;
  $i831 := $sgt.i32($i826,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  $i832 := $i827;
  assume {:branchcond $i831} true;
  goto $bb502, $bb503;
$bb502:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume ($i831 == 1);
  goto $bb500;
$bb503:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume !($i831 == 1);
  goto $bb504;
$bb504:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $i829 := $i832;
  goto $bb498;
$bb505:
  assume ($i843 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 11} true;
  assume {:verifier.code 0} true;
  $i845 := $slt.i32($i841,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i845} true;
  goto $bb508, $bb510;
$bb506:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  assume !($i843 == 1);
  goto $bb507;
$bb507:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i849 := $sext.i32.i64($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 9} true;
  assume {:verifier.code 0} true;
  $i850 := $srem.i64($i849,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i851 := $trunc.i64.i32($i850);
  call {:cexpr "a"} boogie_si_record_i32($i851);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 683, 5} true;
  assume {:verifier.code 0} true;
  $i852 := $add.i32($i851,$i851);
  call {:cexpr "a"} boogie_si_record_i32($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i853 := $sext.i32.i64($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 9} true;
  assume {:verifier.code 0} true;
  $i854 := $srem.i64($i853,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i855 := $trunc.i64.i32($i854);
  call {:cexpr "b"} boogie_si_record_i32($i855);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 685, 5} true;
  assume {:verifier.code 0} true;
  $i856 := $add.i32($i855,$i855);
  call {:cexpr "b"} boogie_si_record_i32($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 687, 5} true;
  assume {:verifier.code 0} true;
  $i857 := $add.i32($i844,$i844);
  call {:cexpr "c"} boogie_si_record_i32($i857);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 9} true;
  assume {:verifier.code 0} true;
  $i858 := $slt.i32($i852,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  $i859 := $i857;
  assume {:branchcond $i858} true;
  goto $bb514, $bb515;
$bb508:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume ($i845 == 1);
  goto $bb509;
$bb509:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 679, 9} true;
  assume {:verifier.code 0} true;
  $i848 := $add.i32($i842,1);
  call {:cexpr "c"} boogie_si_record_i32($i848);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 680, 5} true;
  assume {:verifier.code 0} true;
  $i847 := $i848;
  goto $bb513;
$bb510:
  assume !($i845 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 20} true;
  assume {:verifier.code 0} true;
  $i846 := $sgt.i32($i841,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  $i847 := $i842;
  assume {:branchcond $i846} true;
  goto $bb511, $bb512;
$bb511:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume ($i846 == 1);
  goto $bb509;
$bb512:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume !($i846 == 1);
  goto $bb513;
$bb513:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 681, 3} true;
  assume {:verifier.code 0} true;
  $i844 := $i847;
  goto $bb507;
$bb514:
  assume ($i858 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 11} true;
  assume {:verifier.code 0} true;
  $i860 := $slt.i32($i856,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i860} true;
  goto $bb517, $bb519;
$bb515:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  assume !($i858 == 1);
  goto $bb516;
$bb516:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i864 := $sext.i32.i64($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 9} true;
  assume {:verifier.code 0} true;
  $i865 := $srem.i64($i864,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i866 := $trunc.i64.i32($i865);
  call {:cexpr "a"} boogie_si_record_i32($i866);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 694, 5} true;
  assume {:verifier.code 0} true;
  $i867 := $add.i32($i866,$i866);
  call {:cexpr "a"} boogie_si_record_i32($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i868 := $sext.i32.i64($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 9} true;
  assume {:verifier.code 0} true;
  $i869 := $srem.i64($i868,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i870 := $trunc.i64.i32($i869);
  call {:cexpr "b"} boogie_si_record_i32($i870);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 696, 5} true;
  assume {:verifier.code 0} true;
  $i871 := $add.i32($i870,$i870);
  call {:cexpr "b"} boogie_si_record_i32($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 698, 5} true;
  assume {:verifier.code 0} true;
  $i872 := $add.i32($i859,$i859);
  call {:cexpr "c"} boogie_si_record_i32($i872);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 9} true;
  assume {:verifier.code 0} true;
  $i873 := $slt.i32($i867,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  $i874 := $i872;
  assume {:branchcond $i873} true;
  goto $bb523, $bb524;
$bb517:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume ($i860 == 1);
  goto $bb518;
$bb518:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 690, 9} true;
  assume {:verifier.code 0} true;
  $i863 := $add.i32($i857,1);
  call {:cexpr "c"} boogie_si_record_i32($i863);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 691, 5} true;
  assume {:verifier.code 0} true;
  $i862 := $i863;
  goto $bb522;
$bb519:
  assume !($i860 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 20} true;
  assume {:verifier.code 0} true;
  $i861 := $sgt.i32($i856,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  $i862 := $i857;
  assume {:branchcond $i861} true;
  goto $bb520, $bb521;
$bb520:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume ($i861 == 1);
  goto $bb518;
$bb521:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume !($i861 == 1);
  goto $bb522;
$bb522:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 692, 3} true;
  assume {:verifier.code 0} true;
  $i859 := $i862;
  goto $bb516;
$bb523:
  assume ($i873 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 11} true;
  assume {:verifier.code 0} true;
  $i875 := $slt.i32($i871,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i875} true;
  goto $bb526, $bb528;
$bb524:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  assume !($i873 == 1);
  goto $bb525;
$bb525:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i879 := $sext.i32.i64($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 9} true;
  assume {:verifier.code 0} true;
  $i880 := $srem.i64($i879,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i881 := $trunc.i64.i32($i880);
  call {:cexpr "a"} boogie_si_record_i32($i881);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 705, 5} true;
  assume {:verifier.code 0} true;
  $i882 := $add.i32($i881,$i881);
  call {:cexpr "a"} boogie_si_record_i32($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i883 := $sext.i32.i64($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 9} true;
  assume {:verifier.code 0} true;
  $i884 := $srem.i64($i883,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i885 := $trunc.i64.i32($i884);
  call {:cexpr "b"} boogie_si_record_i32($i885);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 707, 5} true;
  assume {:verifier.code 0} true;
  $i886 := $add.i32($i885,$i885);
  call {:cexpr "b"} boogie_si_record_i32($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 709, 5} true;
  assume {:verifier.code 0} true;
  $i887 := $add.i32($i874,$i874);
  call {:cexpr "c"} boogie_si_record_i32($i887);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 9} true;
  assume {:verifier.code 0} true;
  $i888 := $slt.i32($i882,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  $i889 := $i887;
  assume {:branchcond $i888} true;
  goto $bb532, $bb533;
$bb526:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume ($i875 == 1);
  goto $bb527;
$bb527:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 701, 9} true;
  assume {:verifier.code 0} true;
  $i878 := $add.i32($i872,1);
  call {:cexpr "c"} boogie_si_record_i32($i878);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 702, 5} true;
  assume {:verifier.code 0} true;
  $i877 := $i878;
  goto $bb531;
$bb528:
  assume !($i875 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 20} true;
  assume {:verifier.code 0} true;
  $i876 := $sgt.i32($i871,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  $i877 := $i872;
  assume {:branchcond $i876} true;
  goto $bb529, $bb530;
$bb529:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume ($i876 == 1);
  goto $bb527;
$bb530:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume !($i876 == 1);
  goto $bb531;
$bb531:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 703, 3} true;
  assume {:verifier.code 0} true;
  $i874 := $i877;
  goto $bb525;
$bb532:
  assume ($i888 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 11} true;
  assume {:verifier.code 0} true;
  $i890 := $slt.i32($i886,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i890} true;
  goto $bb535, $bb537;
$bb533:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  assume !($i888 == 1);
  goto $bb534;
$bb534:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i894 := $sext.i32.i64($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 9} true;
  assume {:verifier.code 0} true;
  $i895 := $srem.i64($i894,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i896 := $trunc.i64.i32($i895);
  call {:cexpr "a"} boogie_si_record_i32($i896);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 716, 5} true;
  assume {:verifier.code 0} true;
  $i897 := $add.i32($i896,$i896);
  call {:cexpr "a"} boogie_si_record_i32($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i898 := $sext.i32.i64($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 9} true;
  assume {:verifier.code 0} true;
  $i899 := $srem.i64($i898,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i900 := $trunc.i64.i32($i899);
  call {:cexpr "b"} boogie_si_record_i32($i900);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 718, 5} true;
  assume {:verifier.code 0} true;
  $i901 := $add.i32($i900,$i900);
  call {:cexpr "b"} boogie_si_record_i32($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 720, 5} true;
  assume {:verifier.code 0} true;
  $i902 := $add.i32($i889,$i889);
  call {:cexpr "c"} boogie_si_record_i32($i902);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 9} true;
  assume {:verifier.code 0} true;
  $i903 := $slt.i32($i897,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  $i904 := $i902;
  assume {:branchcond $i903} true;
  goto $bb541, $bb542;
$bb535:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume ($i890 == 1);
  goto $bb536;
$bb536:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 712, 9} true;
  assume {:verifier.code 0} true;
  $i893 := $add.i32($i887,1);
  call {:cexpr "c"} boogie_si_record_i32($i893);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 713, 5} true;
  assume {:verifier.code 0} true;
  $i892 := $i893;
  goto $bb540;
$bb537:
  assume !($i890 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 20} true;
  assume {:verifier.code 0} true;
  $i891 := $sgt.i32($i886,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  $i892 := $i887;
  assume {:branchcond $i891} true;
  goto $bb538, $bb539;
$bb538:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume ($i891 == 1);
  goto $bb536;
$bb539:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume !($i891 == 1);
  goto $bb540;
$bb540:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 714, 3} true;
  assume {:verifier.code 0} true;
  $i889 := $i892;
  goto $bb534;
$bb541:
  assume ($i903 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 11} true;
  assume {:verifier.code 0} true;
  $i905 := $slt.i32($i901,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i905} true;
  goto $bb544, $bb546;
$bb542:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  assume !($i903 == 1);
  goto $bb543;
$bb543:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i909 := $sext.i32.i64($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 9} true;
  assume {:verifier.code 0} true;
  $i910 := $srem.i64($i909,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i911 := $trunc.i64.i32($i910);
  call {:cexpr "a"} boogie_si_record_i32($i911);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 727, 5} true;
  assume {:verifier.code 0} true;
  $i912 := $add.i32($i911,$i911);
  call {:cexpr "a"} boogie_si_record_i32($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i913 := $sext.i32.i64($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 9} true;
  assume {:verifier.code 0} true;
  $i914 := $srem.i64($i913,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i915 := $trunc.i64.i32($i914);
  call {:cexpr "b"} boogie_si_record_i32($i915);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 729, 5} true;
  assume {:verifier.code 0} true;
  $i916 := $add.i32($i915,$i915);
  call {:cexpr "b"} boogie_si_record_i32($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 731, 5} true;
  assume {:verifier.code 0} true;
  $i917 := $add.i32($i904,$i904);
  call {:cexpr "c"} boogie_si_record_i32($i917);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 9} true;
  assume {:verifier.code 0} true;
  $i918 := $slt.i32($i912,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  $i919 := $i917;
  assume {:branchcond $i918} true;
  goto $bb550, $bb551;
$bb544:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume ($i905 == 1);
  goto $bb545;
$bb545:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 723, 9} true;
  assume {:verifier.code 0} true;
  $i908 := $add.i32($i902,1);
  call {:cexpr "c"} boogie_si_record_i32($i908);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 724, 5} true;
  assume {:verifier.code 0} true;
  $i907 := $i908;
  goto $bb549;
$bb546:
  assume !($i905 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 20} true;
  assume {:verifier.code 0} true;
  $i906 := $sgt.i32($i901,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  $i907 := $i902;
  assume {:branchcond $i906} true;
  goto $bb547, $bb548;
$bb547:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume ($i906 == 1);
  goto $bb545;
$bb548:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume !($i906 == 1);
  goto $bb549;
$bb549:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 725, 3} true;
  assume {:verifier.code 0} true;
  $i904 := $i907;
  goto $bb543;
$bb550:
  assume ($i918 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 11} true;
  assume {:verifier.code 0} true;
  $i920 := $slt.i32($i916,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i920} true;
  goto $bb553, $bb555;
$bb551:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  assume !($i918 == 1);
  goto $bb552;
$bb552:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i924 := $sext.i32.i64($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 9} true;
  assume {:verifier.code 0} true;
  $i925 := $srem.i64($i924,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i926 := $trunc.i64.i32($i925);
  call {:cexpr "a"} boogie_si_record_i32($i926);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 738, 5} true;
  assume {:verifier.code 0} true;
  $i927 := $add.i32($i926,$i926);
  call {:cexpr "a"} boogie_si_record_i32($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i928 := $sext.i32.i64($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 9} true;
  assume {:verifier.code 0} true;
  $i929 := $srem.i64($i928,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i930 := $trunc.i64.i32($i929);
  call {:cexpr "b"} boogie_si_record_i32($i930);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 740, 5} true;
  assume {:verifier.code 0} true;
  $i931 := $add.i32($i930,$i930);
  call {:cexpr "b"} boogie_si_record_i32($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 742, 5} true;
  assume {:verifier.code 0} true;
  $i932 := $add.i32($i919,$i919);
  call {:cexpr "c"} boogie_si_record_i32($i932);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 9} true;
  assume {:verifier.code 0} true;
  $i933 := $slt.i32($i927,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  $i934 := $i932;
  assume {:branchcond $i933} true;
  goto $bb559, $bb560;
$bb553:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume ($i920 == 1);
  goto $bb554;
$bb554:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 734, 9} true;
  assume {:verifier.code 0} true;
  $i923 := $add.i32($i917,1);
  call {:cexpr "c"} boogie_si_record_i32($i923);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 735, 5} true;
  assume {:verifier.code 0} true;
  $i922 := $i923;
  goto $bb558;
$bb555:
  assume !($i920 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 20} true;
  assume {:verifier.code 0} true;
  $i921 := $sgt.i32($i916,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  $i922 := $i917;
  assume {:branchcond $i921} true;
  goto $bb556, $bb557;
$bb556:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume ($i921 == 1);
  goto $bb554;
$bb557:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume !($i921 == 1);
  goto $bb558;
$bb558:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 736, 3} true;
  assume {:verifier.code 0} true;
  $i919 := $i922;
  goto $bb552;
$bb559:
  assume ($i933 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 11} true;
  assume {:verifier.code 0} true;
  $i935 := $slt.i32($i931,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i935} true;
  goto $bb562, $bb564;
$bb560:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  assume !($i933 == 1);
  goto $bb561;
$bb561:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i939 := $sext.i32.i64($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 9} true;
  assume {:verifier.code 0} true;
  $i940 := $srem.i64($i939,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i941 := $trunc.i64.i32($i940);
  call {:cexpr "a"} boogie_si_record_i32($i941);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 749, 5} true;
  assume {:verifier.code 0} true;
  $i942 := $add.i32($i941,$i941);
  call {:cexpr "a"} boogie_si_record_i32($i942);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i943 := $sext.i32.i64($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 9} true;
  assume {:verifier.code 0} true;
  $i944 := $srem.i64($i943,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i945 := $trunc.i64.i32($i944);
  call {:cexpr "b"} boogie_si_record_i32($i945);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 751, 5} true;
  assume {:verifier.code 0} true;
  $i946 := $add.i32($i945,$i945);
  call {:cexpr "b"} boogie_si_record_i32($i946);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 753, 5} true;
  assume {:verifier.code 0} true;
  $i947 := $add.i32($i934,$i934);
  call {:cexpr "c"} boogie_si_record_i32($i947);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 9} true;
  assume {:verifier.code 0} true;
  $i948 := $slt.i32($i942,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  $i949 := $i947;
  assume {:branchcond $i948} true;
  goto $bb568, $bb569;
$bb562:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume ($i935 == 1);
  goto $bb563;
$bb563:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 745, 9} true;
  assume {:verifier.code 0} true;
  $i938 := $add.i32($i932,1);
  call {:cexpr "c"} boogie_si_record_i32($i938);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 746, 5} true;
  assume {:verifier.code 0} true;
  $i937 := $i938;
  goto $bb567;
$bb564:
  assume !($i935 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 20} true;
  assume {:verifier.code 0} true;
  $i936 := $sgt.i32($i931,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  $i937 := $i932;
  assume {:branchcond $i936} true;
  goto $bb565, $bb566;
$bb565:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume ($i936 == 1);
  goto $bb563;
$bb566:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume !($i936 == 1);
  goto $bb567;
$bb567:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 747, 3} true;
  assume {:verifier.code 0} true;
  $i934 := $i937;
  goto $bb561;
$bb568:
  assume ($i948 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 11} true;
  assume {:verifier.code 0} true;
  $i950 := $slt.i32($i946,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i950} true;
  goto $bb571, $bb573;
$bb569:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  assume !($i948 == 1);
  goto $bb570;
$bb570:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 764, 3} true;
  assume {:verifier.code 0} true;
  $r := $i949;
  $exn := false;
  return;
$bb571:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume ($i950 == 1);
  goto $bb572;
$bb572:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 756, 9} true;
  assume {:verifier.code 0} true;
  $i953 := $add.i32($i947,1);
  call {:cexpr "c"} boogie_si_record_i32($i953);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 757, 5} true;
  assume {:verifier.code 0} true;
  $i952 := $i953;
  goto $bb576;
$bb573:
  assume !($i950 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 20} true;
  assume {:verifier.code 0} true;
  $i951 := $sgt.i32($i946,2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  $i952 := $i947;
  assume {:branchcond $i951} true;
  goto $bb574, $bb575;
$bb574:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume ($i951 == 1);
  goto $bb572;
$bb575:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume !($i951 == 1);
  goto $bb576;
$bb576:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 758, 3} true;
  assume {:verifier.code 0} true;
  $i949 := $i952;
  goto $bb570;
}
const __SMACK_and64: ref;
axiom (__SMACK_and64 == $sub.ref(0,50793));
procedure {:inline 1} __SMACK_and64($i0: i64, $i1: i64) returns ($r: i64)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_and64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_and64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 68} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 51} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_and32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_and32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 45} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 38} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_and16: ref;
axiom (__SMACK_and16 == $sub.ref(0,51825));
procedure {:inline 1} __SMACK_and16($i0: i16, $i1: i16) returns ($r: i16)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $i13: i16;
  var $i8: i16;
  var $i17: i32;
  var $i18: i32;
  var $i19: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i16;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i16;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i42: i16;
  var $i37: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i16;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i16;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i16;
  var $i71: i16;
  var $i66: i16;
  var $i75: i32;
  var $i76: i32;
  var $i77: i16;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i16;
  var $i82: i32;
  var $i83: i32;
  var $i84: i16;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i16;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i16;
  var $i100: i16;
  var $i95: i16;
  var $i104: i32;
  var $i105: i32;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i16;
  var $i111: i32;
  var $i112: i32;
  var $i113: i16;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i16;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i16;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i16;
  var $i129: i16;
  var $i124: i16;
  var $i133: i32;
  var $i134: i32;
  var $i135: i16;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i16;
  var $i140: i32;
  var $i141: i32;
  var $i142: i16;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i16;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i16;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i16;
  var $i158: i16;
  var $i153: i16;
  var $i162: i32;
  var $i163: i32;
  var $i164: i16;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i16;
  var $i169: i32;
  var $i170: i32;
  var $i171: i16;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i16;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i16;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i16;
  var $i187: i16;
  var $i182: i16;
  var $i191: i32;
  var $i192: i32;
  var $i193: i16;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i32;
  var $i199: i32;
  var $i200: i16;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i16;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i16;
  var $i216: i16;
  var $i211: i16;
  var $i220: i32;
  var $i221: i32;
  var $i222: i16;
  var $i223: i32;
  var $i224: i32;
  var $i225: i32;
  var $i226: i16;
  var $i227: i32;
  var $i228: i32;
  var $i229: i16;
  var $i230: i32;
  var $i231: i32;
  var $i232: i32;
  var $i233: i16;
  var $i234: i32;
  var $i235: i32;
  var $i236: i32;
  var $i237: i16;
  var $i238: i32;
  var $i239: i1;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i1;
  var $i246: i32;
  var $i247: i32;
  var $i248: i16;
  var $i245: i16;
  var $i240: i16;
  var $i249: i32;
  var $i250: i32;
  var $i251: i16;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $i255: i16;
  var $i256: i32;
  var $i257: i32;
  var $i258: i16;
  var $i259: i32;
  var $i260: i32;
  var $i261: i32;
  var $i262: i16;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $i266: i16;
  var $i267: i32;
  var $i268: i1;
  var $i270: i32;
  var $i271: i1;
  var $i272: i32;
  var $i273: i1;
  var $i275: i32;
  var $i276: i32;
  var $i277: i16;
  var $i274: i16;
  var $i269: i16;
  var $i278: i32;
  var $i279: i32;
  var $i280: i16;
  var $i281: i32;
  var $i282: i32;
  var $i283: i32;
  var $i284: i16;
  var $i285: i32;
  var $i286: i32;
  var $i287: i16;
  var $i288: i32;
  var $i289: i32;
  var $i290: i32;
  var $i291: i16;
  var $i292: i32;
  var $i293: i32;
  var $i294: i32;
  var $i295: i16;
  var $i296: i32;
  var $i297: i1;
  var $i299: i32;
  var $i300: i1;
  var $i301: i32;
  var $i302: i1;
  var $i304: i32;
  var $i305: i32;
  var $i306: i16;
  var $i303: i16;
  var $i298: i16;
  var $i307: i32;
  var $i308: i32;
  var $i309: i16;
  var $i310: i32;
  var $i311: i32;
  var $i312: i32;
  var $i313: i16;
  var $i314: i32;
  var $i315: i32;
  var $i316: i16;
  var $i317: i32;
  var $i318: i32;
  var $i319: i32;
  var $i320: i16;
  var $i321: i32;
  var $i322: i32;
  var $i323: i32;
  var $i324: i16;
  var $i325: i32;
  var $i326: i1;
  var $i328: i32;
  var $i329: i1;
  var $i330: i32;
  var $i331: i1;
  var $i333: i32;
  var $i334: i32;
  var $i335: i16;
  var $i332: i16;
  var $i327: i16;
  var $i336: i32;
  var $i337: i32;
  var $i338: i16;
  var $i339: i32;
  var $i340: i32;
  var $i341: i32;
  var $i342: i16;
  var $i343: i32;
  var $i344: i32;
  var $i345: i16;
  var $i346: i32;
  var $i347: i32;
  var $i348: i32;
  var $i349: i16;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i16;
  var $i354: i32;
  var $i355: i1;
  var $i357: i32;
  var $i358: i1;
  var $i359: i32;
  var $i360: i1;
  var $i362: i32;
  var $i363: i32;
  var $i364: i16;
  var $i361: i16;
  var $i356: i16;
  var $i365: i32;
  var $i366: i32;
  var $i367: i16;
  var $i368: i32;
  var $i369: i32;
  var $i370: i32;
  var $i371: i16;
  var $i372: i32;
  var $i373: i32;
  var $i374: i16;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i16;
  var $i379: i32;
  var $i380: i32;
  var $i381: i32;
  var $i382: i16;
  var $i383: i32;
  var $i384: i1;
  var $i386: i32;
  var $i387: i1;
  var $i388: i32;
  var $i389: i1;
  var $i391: i32;
  var $i392: i32;
  var $i393: i16;
  var $i390: i16;
  var $i385: i16;
  var $i394: i32;
  var $i395: i32;
  var $i396: i16;
  var $i397: i32;
  var $i398: i32;
  var $i399: i32;
  var $i400: i16;
  var $i401: i32;
  var $i402: i32;
  var $i403: i16;
  var $i404: i32;
  var $i405: i32;
  var $i406: i32;
  var $i407: i16;
  var $i408: i32;
  var $i409: i32;
  var $i410: i32;
  var $i411: i16;
  var $i412: i32;
  var $i413: i1;
  var $i415: i32;
  var $i416: i1;
  var $i417: i32;
  var $i418: i1;
  var $i420: i32;
  var $i421: i32;
  var $i422: i16;
  var $i419: i16;
  var $i414: i16;
  var $i423: i32;
  var $i424: i32;
  var $i425: i16;
  var $i426: i32;
  var $i427: i32;
  var $i428: i32;
  var $i429: i16;
  var $i430: i32;
  var $i431: i32;
  var $i432: i16;
  var $i433: i32;
  var $i434: i32;
  var $i435: i32;
  var $i436: i16;
  var $i437: i32;
  var $i438: i32;
  var $i439: i32;
  var $i440: i16;
  var $i441: i32;
  var $i442: i1;
  var $i444: i32;
  var $i445: i1;
  var $i446: i32;
  var $i447: i1;
  var $i449: i32;
  var $i450: i32;
  var $i451: i16;
  var $i448: i16;
  var $i443: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_and16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3,$i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  call {:cexpr "c"} boogie_si_record_i16($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  assume !($i7 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i16($i18);
  call {:cexpr "a"} boogie_si_record_i16($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21,$i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  call {:cexpr "a"} boogie_si_record_i16($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  call {:cexpr "b"} boogie_si_record_i16($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28,$i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  call {:cexpr "b"} boogie_si_record_i16($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32,$i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i16($i33);
  call {:cexpr "c"} boogie_si_record_i16($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i16.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  call {:cexpr "c"} boogie_si_record_i16($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 776, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume !($i12 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 777, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i16($i47);
  call {:cexpr "a"} boogie_si_record_i16($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50,$i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  call {:cexpr "a"} boogie_si_record_i16($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  call {:cexpr "b"} boogie_si_record_i16($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57,$i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i16($i58);
  call {:cexpr "b"} boogie_si_record_i16($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61,$i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i16($i62);
  call {:cexpr "c"} boogie_si_record_i16($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i16.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i16($i44);
  call {:cexpr "c"} boogie_si_record_i16($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 787, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !($i39 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume !($i41 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 788, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  assume !($i65 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i16($i76);
  call {:cexpr "a"} boogie_si_record_i16($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  call {:cexpr "a"} boogie_si_record_i16($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i16($i83);
  call {:cexpr "b"} boogie_si_record_i16($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  call {:cexpr "b"} boogie_si_record_i16($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i16($i91);
  call {:cexpr "c"} boogie_si_record_i16($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i16.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i16($i73);
  call {:cexpr "c"} boogie_si_record_i16($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 798, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !($i68 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume !($i70 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 799, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  assume !($i94 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i16($i105);
  call {:cexpr "a"} boogie_si_record_i16($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i16($i109);
  call {:cexpr "a"} boogie_si_record_i16($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i16($i112);
  call {:cexpr "b"} boogie_si_record_i16($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115,$i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i16($i116);
  call {:cexpr "b"} boogie_si_record_i16($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i16($i120);
  call {:cexpr "c"} boogie_si_record_i16($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i16.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i16($i102);
  call {:cexpr "c"} boogie_si_record_i16($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 809, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !($i97 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume !($i99 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 810, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i16($i134);
  call {:cexpr "a"} boogie_si_record_i16($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137,$i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i16($i138);
  call {:cexpr "a"} boogie_si_record_i16($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i16($i141);
  call {:cexpr "b"} boogie_si_record_i16($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144,$i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i16($i145);
  call {:cexpr "b"} boogie_si_record_i16($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148,$i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i16($i149);
  call {:cexpr "c"} boogie_si_record_i16($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i16.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i16($i131);
  call {:cexpr "c"} boogie_si_record_i16($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 820, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume !($i128 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 821, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i16($i163);
  call {:cexpr "a"} boogie_si_record_i16($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166,$i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i16($i167);
  call {:cexpr "a"} boogie_si_record_i16($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i16($i170);
  call {:cexpr "b"} boogie_si_record_i16($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173,$i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i16($i174);
  call {:cexpr "b"} boogie_si_record_i16($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177,$i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i16($i178);
  call {:cexpr "c"} boogie_si_record_i16($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i16.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i16($i160);
  call {:cexpr "c"} boogie_si_record_i16($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 831, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume !($i157 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 832, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  assume !($i181 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i16($i192);
  call {:cexpr "a"} boogie_si_record_i16($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i16($i196);
  call {:cexpr "a"} boogie_si_record_i16($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i16($i199);
  call {:cexpr "b"} boogie_si_record_i16($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i16($i203);
  call {:cexpr "b"} boogie_si_record_i16($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i16($i207);
  call {:cexpr "c"} boogie_si_record_i16($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i16.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i16($i189);
  call {:cexpr "c"} boogie_si_record_i16($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 842, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !($i184 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 843, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  assume !($i210 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i32($i220,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i32.i16($i221);
  call {:cexpr "a"} boogie_si_record_i16($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 8} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i32($i224,$i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i32.i16($i225);
  call {:cexpr "a"} boogie_si_record_i16($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i227 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $srem.i32($i227,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $trunc.i32.i16($i228);
  call {:cexpr "b"} boogie_si_record_i16($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 8} true;
  assume {:verifier.code 0} true;
  $i230 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $add.i32($i231,$i230);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i233 := $trunc.i32.i16($i232);
  call {:cexpr "b"} boogie_si_record_i16($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 8} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i32($i235,$i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i32.i16($i236);
  call {:cexpr "c"} boogie_si_record_i16($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $slt.i32($i238,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $i237;
  assume {:branchcond $i239} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i16.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i16($i218);
  call {:cexpr "c"} boogie_si_record_i16($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 853, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume !($i215 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 854, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
$bb73:
  assume ($i239 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 11} true;
  assume {:verifier.code 0} true;
  $i242 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  assume !($i239 == 1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i32($i249,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i32.i16($i250);
  call {:cexpr "a"} boogie_si_record_i16($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 8} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i32($i253,$i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i32.i16($i254);
  call {:cexpr "a"} boogie_si_record_i16($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 9} true;
  assume {:verifier.code 0} true;
  $i257 := $srem.i32($i256,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i258 := $trunc.i32.i16($i257);
  call {:cexpr "b"} boogie_si_record_i16($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 8} true;
  assume {:verifier.code 0} true;
  $i259 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i260 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i32($i260,$i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $trunc.i32.i16($i261);
  call {:cexpr "b"} boogie_si_record_i16($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 8} true;
  assume {:verifier.code 0} true;
  $i263 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i265 := $add.i32($i264,$i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i32.i16($i265);
  call {:cexpr "c"} boogie_si_record_i16($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $i266;
  assume {:branchcond $i268} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume ($i242 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i246 := $sext.i16.i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i246,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $trunc.i32.i16($i247);
  call {:cexpr "c"} boogie_si_record_i16($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 864, 5} true;
  assume {:verifier.code 0} true;
  $i245 := $i248;
  goto $bb81;
$bb78:
  assume !($i242 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 20} true;
  assume {:verifier.code 0} true;
  $i244 := $sgt.i32($i243,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i245 := $i237;
  assume {:branchcond $i244} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume ($i244 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume !($i244 == 1);
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 865, 3} true;
  assume {:verifier.code 0} true;
  $i240 := $i245;
  goto $bb75;
$bb82:
  assume ($i268 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 11} true;
  assume {:verifier.code 0} true;
  $i271 := $slt.i32($i270,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i271} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  assume !($i268 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 9} true;
  assume {:verifier.code 0} true;
  $i279 := $srem.i32($i278,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $trunc.i32.i16($i279);
  call {:cexpr "a"} boogie_si_record_i16($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 8} true;
  assume {:verifier.code 0} true;
  $i281 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i282,$i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i32.i16($i283);
  call {:cexpr "a"} boogie_si_record_i16($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 9} true;
  assume {:verifier.code 0} true;
  $i286 := $srem.i32($i285,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i287 := $trunc.i32.i16($i286);
  call {:cexpr "b"} boogie_si_record_i16($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 8} true;
  assume {:verifier.code 0} true;
  $i288 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i290 := $add.i32($i289,$i288);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i291 := $trunc.i32.i16($i290);
  call {:cexpr "b"} boogie_si_record_i16($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 8} true;
  assume {:verifier.code 0} true;
  $i292 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i293 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i293,$i292);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i295 := $trunc.i32.i16($i294);
  call {:cexpr "c"} boogie_si_record_i16($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 9} true;
  assume {:verifier.code 0} true;
  $i297 := $slt.i32($i296,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $i295;
  assume {:branchcond $i297} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume ($i271 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i16.i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i276 := $add.i32($i275,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $trunc.i32.i16($i276);
  call {:cexpr "c"} boogie_si_record_i16($i277);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 875, 5} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb90;
$bb87:
  assume !($i271 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 18} true;
  assume {:verifier.code 0} true;
  $i272 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 20} true;
  assume {:verifier.code 0} true;
  $i273 := $sgt.i32($i272,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i274 := $i266;
  assume {:branchcond $i273} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume ($i273 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume !($i273 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 876, 3} true;
  assume {:verifier.code 0} true;
  $i269 := $i274;
  goto $bb84;
$bb91:
  assume ($i297 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 11} true;
  assume {:verifier.code 0} true;
  $i300 := $slt.i32($i299,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  assume !($i297 == 1);
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i307 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $srem.i32($i307,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $trunc.i32.i16($i308);
  call {:cexpr "a"} boogie_si_record_i16($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 8} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i311 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311,$i310);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $trunc.i32.i16($i312);
  call {:cexpr "a"} boogie_si_record_i16($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i32($i314,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i16($i315);
  call {:cexpr "b"} boogie_si_record_i16($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 8} true;
  assume {:verifier.code 0} true;
  $i317 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i318 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i318,$i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i320 := $trunc.i32.i16($i319);
  call {:cexpr "b"} boogie_si_record_i16($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 8} true;
  assume {:verifier.code 0} true;
  $i321 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i322,$i321);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $trunc.i32.i16($i323);
  call {:cexpr "c"} boogie_si_record_i16($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $slt.i32($i325,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $i324;
  assume {:branchcond $i326} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume ($i300 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i304 := $sext.i16.i32($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i32($i304,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i306 := $trunc.i32.i16($i305);
  call {:cexpr "c"} boogie_si_record_i16($i306);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 886, 5} true;
  assume {:verifier.code 0} true;
  $i303 := $i306;
  goto $bb99;
$bb96:
  assume !($i300 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 18} true;
  assume {:verifier.code 0} true;
  $i301 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 20} true;
  assume {:verifier.code 0} true;
  $i302 := $sgt.i32($i301,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $i295;
  assume {:branchcond $i302} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume ($i302 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume !($i302 == 1);
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 887, 3} true;
  assume {:verifier.code 0} true;
  $i298 := $i303;
  goto $bb93;
$bb100:
  assume ($i326 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 11} true;
  assume {:verifier.code 0} true;
  $i329 := $slt.i32($i328,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  assume !($i326 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i336 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $srem.i32($i336,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $trunc.i32.i16($i337);
  call {:cexpr "a"} boogie_si_record_i16($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 8} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i32($i340,$i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i16($i341);
  call {:cexpr "a"} boogie_si_record_i16($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i32($i343,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i32.i16($i344);
  call {:cexpr "b"} boogie_si_record_i16($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 8} true;
  assume {:verifier.code 0} true;
  $i346 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i348 := $add.i32($i347,$i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i349 := $trunc.i32.i16($i348);
  call {:cexpr "b"} boogie_si_record_i16($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 8} true;
  assume {:verifier.code 0} true;
  $i350 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i351 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $add.i32($i351,$i350);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i353 := $trunc.i32.i16($i352);
  call {:cexpr "c"} boogie_si_record_i16($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $slt.i32($i354,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $i353;
  assume {:branchcond $i355} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume ($i329 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $sext.i16.i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i333,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i335 := $trunc.i32.i16($i334);
  call {:cexpr "c"} boogie_si_record_i16($i335);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 897, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $i335;
  goto $bb108;
$bb105:
  assume !($i329 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 18} true;
  assume {:verifier.code 0} true;
  $i330 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 20} true;
  assume {:verifier.code 0} true;
  $i331 := $sgt.i32($i330,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i332 := $i324;
  assume {:branchcond $i331} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume ($i331 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume !($i331 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 898, 3} true;
  assume {:verifier.code 0} true;
  $i327 := $i332;
  goto $bb102;
$bb109:
  assume ($i355 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i357 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 11} true;
  assume {:verifier.code 0} true;
  $i358 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i358} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  assume !($i355 == 1);
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i365 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 9} true;
  assume {:verifier.code 0} true;
  $i366 := $srem.i32($i365,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i367 := $trunc.i32.i16($i366);
  call {:cexpr "a"} boogie_si_record_i16($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 8} true;
  assume {:verifier.code 0} true;
  $i368 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i370 := $add.i32($i369,$i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i32.i16($i370);
  call {:cexpr "a"} boogie_si_record_i16($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 9} true;
  assume {:verifier.code 0} true;
  $i373 := $srem.i32($i372,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $trunc.i32.i16($i373);
  call {:cexpr "b"} boogie_si_record_i16($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 8} true;
  assume {:verifier.code 0} true;
  $i375 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i376,$i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i378 := $trunc.i32.i16($i377);
  call {:cexpr "b"} boogie_si_record_i16($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 8} true;
  assume {:verifier.code 0} true;
  $i379 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i380 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i381 := $add.i32($i380,$i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $trunc.i32.i16($i381);
  call {:cexpr "c"} boogie_si_record_i16($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 9} true;
  assume {:verifier.code 0} true;
  $i384 := $slt.i32($i383,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $i382;
  assume {:branchcond $i384} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume ($i358 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i362 := $sext.i16.i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $add.i32($i362,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i364 := $trunc.i32.i16($i363);
  call {:cexpr "c"} boogie_si_record_i16($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 908, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $i364;
  goto $bb117;
$bb114:
  assume !($i358 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 18} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 20} true;
  assume {:verifier.code 0} true;
  $i360 := $sgt.i32($i359,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i361 := $i353;
  assume {:branchcond $i360} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume ($i360 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume !($i360 == 1);
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 909, 3} true;
  assume {:verifier.code 0} true;
  $i356 := $i361;
  goto $bb111;
$bb118:
  assume ($i384 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 11} true;
  assume {:verifier.code 0} true;
  $i387 := $slt.i32($i386,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i387} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  assume !($i384 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 9} true;
  assume {:verifier.code 0} true;
  $i395 := $srem.i32($i394,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i396 := $trunc.i32.i16($i395);
  call {:cexpr "a"} boogie_si_record_i16($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 8} true;
  assume {:verifier.code 0} true;
  $i397 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i398 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i398,$i397);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i400 := $trunc.i32.i16($i399);
  call {:cexpr "a"} boogie_si_record_i16($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 9} true;
  assume {:verifier.code 0} true;
  $i402 := $srem.i32($i401,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $trunc.i32.i16($i402);
  call {:cexpr "b"} boogie_si_record_i16($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 8} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i405 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405,$i404);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $trunc.i32.i16($i406);
  call {:cexpr "b"} boogie_si_record_i16($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 8} true;
  assume {:verifier.code 0} true;
  $i408 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i409 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i32($i409,$i408);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i411 := $trunc.i32.i16($i410);
  call {:cexpr "c"} boogie_si_record_i16($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i412 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $slt.i32($i412,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $i411;
  assume {:branchcond $i413} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume ($i387 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i391 := $sext.i16.i32($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i391,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $trunc.i32.i16($i392);
  call {:cexpr "c"} boogie_si_record_i16($i393);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 919, 5} true;
  assume {:verifier.code 0} true;
  $i390 := $i393;
  goto $bb126;
$bb123:
  assume !($i387 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 18} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 20} true;
  assume {:verifier.code 0} true;
  $i389 := $sgt.i32($i388,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $i382;
  assume {:branchcond $i389} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume ($i389 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume !($i389 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 920, 3} true;
  assume {:verifier.code 0} true;
  $i385 := $i390;
  goto $bb120;
$bb127:
  assume ($i413 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 11} true;
  assume {:verifier.code 0} true;
  $i416 := $slt.i32($i415,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i416} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  assume !($i413 == 1);
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i423 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 9} true;
  assume {:verifier.code 0} true;
  $i424 := $srem.i32($i423,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i425 := $trunc.i32.i16($i424);
  call {:cexpr "a"} boogie_si_record_i16($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 8} true;
  assume {:verifier.code 0} true;
  $i426 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i427,$i426);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $trunc.i32.i16($i428);
  call {:cexpr "a"} boogie_si_record_i16($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i32($i430,32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i32.i16($i431);
  call {:cexpr "b"} boogie_si_record_i16($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 8} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i435 := $add.i32($i434,$i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i32.i16($i435);
  call {:cexpr "b"} boogie_si_record_i16($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 8} true;
  assume {:verifier.code 0} true;
  $i437 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i438 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i438,$i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i440 := $trunc.i32.i16($i439);
  call {:cexpr "c"} boogie_si_record_i16($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i441 := $sext.i16.i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $slt.i32($i441,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $i440;
  assume {:branchcond $i442} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume ($i416 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $sext.i16.i32($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i32.i16($i421);
  call {:cexpr "c"} boogie_si_record_i16($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 930, 5} true;
  assume {:verifier.code 0} true;
  $i419 := $i422;
  goto $bb135;
$bb132:
  assume !($i416 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 18} true;
  assume {:verifier.code 0} true;
  $i417 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 20} true;
  assume {:verifier.code 0} true;
  $i418 := $sgt.i32($i417,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $i411;
  assume {:branchcond $i418} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume ($i418 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume !($i418 == 1);
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 931, 3} true;
  assume {:verifier.code 0} true;
  $i414 := $i419;
  goto $bb129;
$bb136:
  assume ($i442 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 11} true;
  assume {:verifier.code 0} true;
  $i445 := $slt.i32($i444,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i445} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  assume !($i442 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 948, 3} true;
  assume {:verifier.code 0} true;
  $r := $i443;
  $exn := false;
  return;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume ($i445 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i16.i32($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $add.i32($i449,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i32.i16($i450);
  call {:cexpr "c"} boogie_si_record_i16($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 941, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $i451;
  goto $bb144;
$bb141:
  assume !($i445 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 18} true;
  assume {:verifier.code 0} true;
  $i446 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 20} true;
  assume {:verifier.code 0} true;
  $i447 := $sgt.i32($i446,32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i448 := $i440;
  assume {:branchcond $i447} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume ($i447 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume !($i447 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 942, 3} true;
  assume {:verifier.code 0} true;
  $i443 := $i448;
  goto $bb138;
}
const __SMACK_and8: ref;
axiom (__SMACK_and8 == $sub.ref(0,52857));
procedure {:inline 1} __SMACK_and8($i0: i8, $i1: i8) returns ($r: i8)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i13: i8;
  var $i8: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $i42: i8;
  var $i37: i8;
  var $i46: i32;
  var $i47: i32;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i8;
  var $i71: i8;
  var $i66: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i8;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i8;
  var $i100: i8;
  var $i95: i8;
  var $i104: i32;
  var $i105: i32;
  var $i106: i8;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i8;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i8;
  var $i129: i8;
  var $i124: i8;
  var $i133: i32;
  var $i134: i32;
  var $i135: i8;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $i140: i32;
  var $i141: i32;
  var $i142: i8;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i8;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i8;
  var $i158: i8;
  var $i153: i8;
  var $i162: i32;
  var $i163: i32;
  var $i164: i8;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i8;
  var $i169: i32;
  var $i170: i32;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i8;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i8;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i8;
  var $i187: i8;
  var $i182: i8;
  var $i191: i32;
  var $i192: i32;
  var $i193: i8;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i8;
  var $i198: i32;
  var $i199: i32;
  var $i200: i8;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i8;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i8;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i8;
  var $i216: i8;
  var $i211: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_and8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3,$i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  call {:cexpr "c"} boogie_si_record_i8($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  assume !($i7 == 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  call {:cexpr "a"} boogie_si_record_i8($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21,$i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  call {:cexpr "a"} boogie_si_record_i8($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  call {:cexpr "b"} boogie_si_record_i8($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28,$i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  call {:cexpr "b"} boogie_si_record_i8($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32,$i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i8($i33);
  call {:cexpr "c"} boogie_si_record_i8($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  call {:cexpr "c"} boogie_si_record_i8($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 958, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !($i10 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume !($i12 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 959, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  call {:cexpr "a"} boogie_si_record_i8($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50,$i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  call {:cexpr "a"} boogie_si_record_i8($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  call {:cexpr "b"} boogie_si_record_i8($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57,$i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  call {:cexpr "b"} boogie_si_record_i8($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61,$i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  call {:cexpr "c"} boogie_si_record_i8($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i8.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  call {:cexpr "c"} boogie_si_record_i8($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 969, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !($i39 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume !($i41 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 970, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  assume !($i65 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  call {:cexpr "a"} boogie_si_record_i8($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79,$i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i8($i80);
  call {:cexpr "a"} boogie_si_record_i8($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i8($i83);
  call {:cexpr "b"} boogie_si_record_i8($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86,$i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  call {:cexpr "b"} boogie_si_record_i8($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90,$i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  call {:cexpr "c"} boogie_si_record_i8($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i8.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  call {:cexpr "c"} boogie_si_record_i8($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 980, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !($i68 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume !($i70 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 981, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  assume !($i94 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i8($i105);
  call {:cexpr "a"} boogie_si_record_i8($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108,$i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i8($i109);
  call {:cexpr "a"} boogie_si_record_i8($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  call {:cexpr "b"} boogie_si_record_i8($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115,$i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i8($i116);
  call {:cexpr "b"} boogie_si_record_i8($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119,$i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  call {:cexpr "c"} boogie_si_record_i8($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i8.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i8($i102);
  call {:cexpr "c"} boogie_si_record_i8($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 991, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !($i97 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume !($i99 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 992, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  assume !($i123 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i8($i134);
  call {:cexpr "a"} boogie_si_record_i8($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137,$i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  call {:cexpr "a"} boogie_si_record_i8($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i8($i141);
  call {:cexpr "b"} boogie_si_record_i8($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144,$i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i8($i145);
  call {:cexpr "b"} boogie_si_record_i8($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148,$i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i8($i149);
  call {:cexpr "c"} boogie_si_record_i8($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i8.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i8($i131);
  call {:cexpr "c"} boogie_si_record_i8($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1002, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume !($i128 == 1);
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1003, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  assume !($i152 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i8($i163);
  call {:cexpr "a"} boogie_si_record_i8($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166,$i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i8($i167);
  call {:cexpr "a"} boogie_si_record_i8($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i8($i170);
  call {:cexpr "b"} boogie_si_record_i8($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173,$i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i8($i174);
  call {:cexpr "b"} boogie_si_record_i8($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177,$i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i8($i178);
  call {:cexpr "c"} boogie_si_record_i8($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i8.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i8($i160);
  call {:cexpr "c"} boogie_si_record_i8($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1013, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !($i155 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume !($i157 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1014, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  assume !($i181 == 1);
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i8($i192);
  call {:cexpr "a"} boogie_si_record_i8($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195,$i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i8($i196);
  call {:cexpr "a"} boogie_si_record_i8($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198,128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i8($i199);
  call {:cexpr "b"} boogie_si_record_i8($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202,$i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i8($i203);
  call {:cexpr "b"} boogie_si_record_i8($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206,$i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i8($i207);
  call {:cexpr "c"} boogie_si_record_i8($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i8.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i8.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i8($i189);
  call {:cexpr "c"} boogie_si_record_i8($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1024, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !($i184 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1025, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  assume !($i210 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1042, 3} true;
  assume {:verifier.code 0} true;
  $r := $i211;
  $exn := false;
  return;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i8.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217,1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i8($i218);
  call {:cexpr "c"} boogie_si_record_i8($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1035, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214,127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume !($i215 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1036, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
}
const __SMACK_or32: ref;
axiom (__SMACK_or32 == $sub.ref(0,53889));
procedure {:inline 1} __SMACK_or32($i0: i32, $i1: i32) returns ($r: i32)
modifies $exn;
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i5: i32;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i20: i32;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i35: i32;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $i42: i32;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i50: i32;
  var $i54: i32;
  var $i55: i64;
  var $i56: i64;
  var $i57: i32;
  var $i58: i32;
  var $i59: i64;
  var $i60: i64;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i65: i32;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $i72: i32;
  var $i73: i32;
  var $i74: i64;
  var $i75: i64;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i79: i32;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i80: i32;
  var $i84: i32;
  var $i85: i64;
  var $i86: i64;
  var $i87: i32;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i95: i32;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i109: i32;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i110: i32;
  var $i114: i32;
  var $i115: i64;
  var $i116: i64;
  var $i117: i32;
  var $i118: i32;
  var $i119: i64;
  var $i120: i64;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i124: i32;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i125: i32;
  var $i129: i32;
  var $i130: i64;
  var $i131: i64;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i139: i32;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i140: i32;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $i147: i32;
  var $i148: i32;
  var $i149: i64;
  var $i150: i64;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i155: i32;
  var $i159: i32;
  var $i160: i64;
  var $i161: i64;
  var $i162: i32;
  var $i163: i32;
  var $i164: i64;
  var $i165: i64;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i32;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i170: i32;
  var $i174: i32;
  var $i175: i64;
  var $i176: i64;
  var $i177: i32;
  var $i178: i32;
  var $i179: i64;
  var $i180: i64;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i185: i32;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $i192: i32;
  var $i193: i32;
  var $i194: i64;
  var $i195: i64;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i199: i32;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i200: i32;
  var $i204: i32;
  var $i205: i64;
  var $i206: i64;
  var $i207: i32;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i215: i32;
  var $i219: i32;
  var $i220: i64;
  var $i221: i64;
  var $i222: i32;
  var $i223: i32;
  var $i224: i64;
  var $i225: i64;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i229: i32;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i230: i32;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $i237: i32;
  var $i238: i32;
  var $i239: i64;
  var $i240: i64;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i245: i32;
  var $i249: i32;
  var $i250: i64;
  var $i251: i64;
  var $i252: i32;
  var $i253: i32;
  var $i254: i64;
  var $i255: i64;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i260: i32;
  var $i264: i32;
  var $i265: i64;
  var $i266: i64;
  var $i267: i32;
  var $i268: i32;
  var $i269: i64;
  var $i270: i64;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i274: i32;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i275: i32;
  var $i279: i32;
  var $i280: i64;
  var $i281: i64;
  var $i282: i32;
  var $i283: i32;
  var $i284: i64;
  var $i285: i64;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i289: i32;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i290: i32;
  var $i294: i32;
  var $i295: i64;
  var $i296: i64;
  var $i297: i32;
  var $i298: i32;
  var $i299: i64;
  var $i300: i64;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i304: i32;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i305: i32;
  var $i309: i32;
  var $i310: i64;
  var $i311: i64;
  var $i312: i32;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i319: i32;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i320: i32;
  var $i324: i32;
  var $i325: i64;
  var $i326: i64;
  var $i327: i32;
  var $i328: i32;
  var $i329: i64;
  var $i330: i64;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i334: i32;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i335: i32;
  var $i339: i32;
  var $i340: i64;
  var $i341: i64;
  var $i342: i32;
  var $i343: i32;
  var $i344: i64;
  var $i345: i64;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i349: i32;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i350: i32;
  var $i354: i32;
  var $i355: i64;
  var $i356: i64;
  var $i357: i32;
  var $i358: i32;
  var $i359: i64;
  var $i360: i64;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i364: i32;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i365: i32;
  var $i369: i32;
  var $i370: i64;
  var $i371: i64;
  var $i372: i32;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i379: i32;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i380: i32;
  var $i384: i32;
  var $i385: i64;
  var $i386: i64;
  var $i387: i32;
  var $i388: i32;
  var $i389: i64;
  var $i390: i64;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i394: i32;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i395: i32;
  var $i399: i32;
  var $i400: i64;
  var $i401: i64;
  var $i402: i32;
  var $i403: i32;
  var $i404: i64;
  var $i405: i64;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i409: i32;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i410: i32;
  var $i414: i32;
  var $i415: i64;
  var $i416: i64;
  var $i417: i32;
  var $i418: i32;
  var $i419: i64;
  var $i420: i64;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i424: i32;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i425: i32;
  var $i429: i32;
  var $i430: i64;
  var $i431: i64;
  var $i432: i32;
  var $i433: i32;
  var $i434: i64;
  var $i435: i64;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i439: i32;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i440: i32;
  var $i444: i32;
  var $i445: i64;
  var $i446: i64;
  var $i447: i32;
  var $i448: i32;
  var $i449: i64;
  var $i450: i64;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i454: i32;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i455: i32;
  var $i459: i32;
  var $i460: i64;
  var $i461: i64;
  var $i462: i32;
  var $i463: i32;
  var $i464: i64;
  var $i465: i64;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i469: i32;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i470: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_or32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_or32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0,0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1050, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i1,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1054, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i0,$i0);
  call {:cexpr "a"} boogie_si_record_i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $srem.i64($i10,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1056, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i1,$i1);
  call {:cexpr "b"} boogie_si_record_i32($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $srem.i64($i14,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1059, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i5,$i5);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1052, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2,1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1053, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb6;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  assume !($i6 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i5 := $i7;
  goto $bb3;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1061, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb9;
$bb8:
  assume !($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i16,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1065, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i12,$i12);
  call {:cexpr "a"} boogie_si_record_i32($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $srem.i64($i25,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1067, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i16,$i16);
  call {:cexpr "b"} boogie_si_record_i32($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $srem.i64($i29,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i64.i32($i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1070, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i20,$i20);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb13, $bb14;
$bb10:
  assume ($i21 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1063, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17,1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1064, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb12;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  assume !($i21 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i20 := $i22;
  goto $bb9;
$bb13:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1072, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $i34;
  goto $bb15;
$bb14:
  assume !($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 16} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i31,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1076, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i27,$i27);
  call {:cexpr "a"} boogie_si_record_i32($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $srem.i64($i40,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i64.i32($i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1078, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i31,$i31);
  call {:cexpr "b"} boogie_si_record_i32($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $srem.i64($i44,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i64.i32($i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1081, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i35,$i35);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1074, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32,1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1075, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb18;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  assume !($i36 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i35 := $i37;
  goto $bb15;
$bb19:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1083, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i49;
  goto $bb21;
$bb20:
  assume !($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i46,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1087, 5} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i42,$i42);
  call {:cexpr "a"} boogie_si_record_i32($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $srem.i64($i55,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i64.i32($i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1089, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i46,$i46);
  call {:cexpr "b"} boogie_si_record_i32($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $srem.i64($i59,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i64.i32($i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1092, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i50,$i50);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb25, $bb26;
$bb22:
  assume ($i51 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1085, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47,1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1086, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb24;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  assume !($i51 == 1);
  goto $bb24;
$bb24:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i50 := $i52;
  goto $bb21;
$bb25:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1094, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i64);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $i64;
  goto $bb27;
$bb26:
  assume !($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 16} true;
  assume {:verifier.code 0} true;
  $i66 := $slt.i32($i61,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb28, $bb29;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1098, 5} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i57,$i57);
  call {:cexpr "a"} boogie_si_record_i32($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $srem.i64($i70,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i64.i32($i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1100, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i61,$i61);
  call {:cexpr "b"} boogie_si_record_i32($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $srem.i64($i74,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i32($i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1103, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i65,$i65);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb31, $bb32;
$bb28:
  assume ($i66 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1096, 7} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62,1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1097, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb30;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  assume !($i66 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i65 := $i67;
  goto $bb27;
$bb31:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1105, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i79);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $i79;
  goto $bb33;
$bb32:
  assume !($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 16} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i76,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1109, 5} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i72,$i72);
  call {:cexpr "a"} boogie_si_record_i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $srem.i64($i85,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1111, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i76,$i76);
  call {:cexpr "b"} boogie_si_record_i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 9} true;
  assume {:verifier.code 0} true;
  $i90 := $srem.i64($i89,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i64.i32($i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1114, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i80,$i80);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb37, $bb38;
$bb34:
  assume ($i81 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1107, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77,1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1108, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb36;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  assume !($i81 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i80 := $i82;
  goto $bb33;
$bb37:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1116, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i94);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i94;
  goto $bb39;
$bb38:
  assume !($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 16} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i91,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1120, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i32($i87,$i87);
  call {:cexpr "a"} boogie_si_record_i32($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $srem.i64($i100,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i32($i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1122, 5} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i91,$i91);
  call {:cexpr "b"} boogie_si_record_i32($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i64($i104,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i64.i32($i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1125, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i95,$i95);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb43, $bb44;
$bb40:
  assume ($i96 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1118, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92,1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1119, 3} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb42;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  assume !($i96 == 1);
  goto $bb42;
$bb42:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i95 := $i97;
  goto $bb39;
$bb43:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1127, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i109);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 3} true;
  assume {:verifier.code 0} true;
  $i110 := $i109;
  goto $bb45;
$bb44:
  assume !($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 16} true;
  assume {:verifier.code 0} true;
  $i111 := $slt.i32($i106,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb46, $bb47;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1131, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i32($i102,$i102);
  call {:cexpr "a"} boogie_si_record_i32($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 9} true;
  assume {:verifier.code 0} true;
  $i116 := $srem.i64($i115,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i64.i32($i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1133, 5} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i32($i106,$i106);
  call {:cexpr "b"} boogie_si_record_i32($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 9} true;
  assume {:verifier.code 0} true;
  $i120 := $srem.i64($i119,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i64.i32($i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1136, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i110,$i110);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb49, $bb50;
$bb46:
  assume ($i111 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1129, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107,1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1130, 3} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb48;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  assume !($i111 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i110 := $i112;
  goto $bb45;
$bb49:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1138, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $i124;
  goto $bb51;
$bb50:
  assume !($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 16} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i121,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb52, $bb53;
$bb51:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1142, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i117,$i117);
  call {:cexpr "a"} boogie_si_record_i32($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i32.i64($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $srem.i64($i130,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i64.i32($i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1144, 5} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i121,$i121);
  call {:cexpr "b"} boogie_si_record_i32($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i134 := $sext.i32.i64($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $srem.i64($i134,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i64.i32($i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1147, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i125,$i125);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb55, $bb56;
$bb52:
  assume ($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1140, 7} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122,1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1141, 3} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb54;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  assume !($i126 == 1);
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i125 := $i127;
  goto $bb51;
$bb55:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1149, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 3} true;
  assume {:verifier.code 0} true;
  $i140 := $i139;
  goto $bb57;
$bb56:
  assume !($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 16} true;
  assume {:verifier.code 0} true;
  $i141 := $slt.i32($i136,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1153, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i132,$i132);
  call {:cexpr "a"} boogie_si_record_i32($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i145 := $sext.i32.i64($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 9} true;
  assume {:verifier.code 0} true;
  $i146 := $srem.i64($i145,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i64.i32($i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1155, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i136,$i136);
  call {:cexpr "b"} boogie_si_record_i32($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $srem.i64($i149,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i64.i32($i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1158, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i140,$i140);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb61, $bb62;
$bb58:
  assume ($i141 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1151, 7} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137,1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1152, 3} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb60;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  assume !($i141 == 1);
  goto $bb60;
$bb60:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i140 := $i142;
  goto $bb57;
$bb61:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1160, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i154);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 3} true;
  assume {:verifier.code 0} true;
  $i155 := $i154;
  goto $bb63;
$bb62:
  assume !($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 16} true;
  assume {:verifier.code 0} true;
  $i156 := $slt.i32($i151,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb64, $bb65;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1164, 5} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i32($i147,$i147);
  call {:cexpr "a"} boogie_si_record_i32($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i160 := $sext.i32.i64($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $srem.i64($i160,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i64.i32($i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1166, 5} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i32($i151,$i151);
  call {:cexpr "b"} boogie_si_record_i32($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $sext.i32.i64($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 9} true;
  assume {:verifier.code 0} true;
  $i165 := $srem.i64($i164,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i64.i32($i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1169, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i155,$i155);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb67, $bb68;
$bb64:
  assume ($i156 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1162, 7} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152,1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1163, 3} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb66;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  assume !($i156 == 1);
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i155 := $i157;
  goto $bb63;
$bb67:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1171, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i169);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 3} true;
  assume {:verifier.code 0} true;
  $i170 := $i169;
  goto $bb69;
$bb68:
  assume !($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $slt.i32($i166,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb70, $bb71;
$bb69:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1175, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i162,$i162);
  call {:cexpr "a"} boogie_si_record_i32($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $sext.i32.i64($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 9} true;
  assume {:verifier.code 0} true;
  $i176 := $srem.i64($i175,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i177 := $trunc.i64.i32($i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1177, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i166,$i166);
  call {:cexpr "b"} boogie_si_record_i32($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $sext.i32.i64($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 9} true;
  assume {:verifier.code 0} true;
  $i180 := $srem.i64($i179,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i64.i32($i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1180, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i170,$i170);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb73, $bb74;
$bb70:
  assume ($i171 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1173, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167,1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1174, 3} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb72;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  assume !($i171 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i170 := $i172;
  goto $bb69;
$bb73:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1182, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i184);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $i184;
  goto $bb75;
$bb74:
  assume !($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 16} true;
  assume {:verifier.code 0} true;
  $i186 := $slt.i32($i181,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb76, $bb77;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1186, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i177,$i177);
  call {:cexpr "a"} boogie_si_record_i32($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i190 := $sext.i32.i64($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 9} true;
  assume {:verifier.code 0} true;
  $i191 := $srem.i64($i190,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i192 := $trunc.i64.i32($i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1188, 5} true;
  assume {:verifier.code 0} true;
  $i193 := $add.i32($i181,$i181);
  call {:cexpr "b"} boogie_si_record_i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i32.i64($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 9} true;
  assume {:verifier.code 0} true;
  $i195 := $srem.i64($i194,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i196 := $trunc.i64.i32($i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1191, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i185,$i185);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb79, $bb80;
$bb76:
  assume ($i186 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1184, 7} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182,1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1185, 3} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb78;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  assume !($i186 == 1);
  goto $bb78;
$bb78:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i185 := $i187;
  goto $bb75;
$bb79:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1193, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i199);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 3} true;
  assume {:verifier.code 0} true;
  $i200 := $i199;
  goto $bb81;
$bb80:
  assume !($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 16} true;
  assume {:verifier.code 0} true;
  $i201 := $slt.i32($i196,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb82, $bb83;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1197, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $add.i32($i192,$i192);
  call {:cexpr "a"} boogie_si_record_i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i32.i64($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $srem.i64($i205,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.i64.i32($i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1199, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i32($i196,$i196);
  call {:cexpr "b"} boogie_si_record_i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i32.i64($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $srem.i64($i209,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $trunc.i64.i32($i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1202, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i200,$i200);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb85, $bb86;
$bb82:
  assume ($i201 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1195, 7} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197,1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1196, 3} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb84;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  assume !($i201 == 1);
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i200 := $i202;
  goto $bb81;
$bb85:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1204, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i214);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 3} true;
  assume {:verifier.code 0} true;
  $i215 := $i214;
  goto $bb87;
$bb86:
  assume !($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 16} true;
  assume {:verifier.code 0} true;
  $i216 := $slt.i32($i211,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb88, $bb89;
$bb87:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1208, 5} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i32($i207,$i207);
  call {:cexpr "a"} boogie_si_record_i32($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i32.i64($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i64($i220,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i64.i32($i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1210, 5} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i32($i211,$i211);
  call {:cexpr "b"} boogie_si_record_i32($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i32.i64($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 9} true;
  assume {:verifier.code 0} true;
  $i225 := $srem.i64($i224,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i64.i32($i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1213, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i215,$i215);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb91, $bb92;
$bb88:
  assume ($i216 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1206, 7} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212,1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1207, 3} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb90;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  assume !($i216 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i215 := $i217;
  goto $bb87;
$bb91:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1215, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 3} true;
  assume {:verifier.code 0} true;
  $i230 := $i229;
  goto $bb93;
$bb92:
  assume !($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 16} true;
  assume {:verifier.code 0} true;
  $i231 := $slt.i32($i226,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb94, $bb95;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1219, 5} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i32($i222,$i222);
  call {:cexpr "a"} boogie_si_record_i32($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 9} true;
  assume {:verifier.code 0} true;
  $i236 := $srem.i64($i235,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i64.i32($i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1221, 5} true;
  assume {:verifier.code 0} true;
  $i238 := $add.i32($i226,$i226);
  call {:cexpr "b"} boogie_si_record_i32($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i239 := $sext.i32.i64($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $srem.i64($i239,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i241 := $trunc.i64.i32($i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1224, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i230,$i230);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb97, $bb98;
$bb94:
  assume ($i231 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1217, 7} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227,1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1218, 3} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb96;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  assume !($i231 == 1);
  goto $bb96;
$bb96:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i230 := $i232;
  goto $bb93;
$bb97:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1226, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i244);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 3} true;
  assume {:verifier.code 0} true;
  $i245 := $i244;
  goto $bb99;
$bb98:
  assume !($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 16} true;
  assume {:verifier.code 0} true;
  $i246 := $slt.i32($i241,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb100, $bb101;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1230, 5} true;
  assume {:verifier.code 0} true;
  $i249 := $add.i32($i237,$i237);
  call {:cexpr "a"} boogie_si_record_i32($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i250 := $sext.i32.i64($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 9} true;
  assume {:verifier.code 0} true;
  $i251 := $srem.i64($i250,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i252 := $trunc.i64.i32($i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1232, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i32($i241,$i241);
  call {:cexpr "b"} boogie_si_record_i32($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i254 := $sext.i32.i64($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 9} true;
  assume {:verifier.code 0} true;
  $i255 := $srem.i64($i254,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $trunc.i64.i32($i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1235, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i245,$i245);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb103, $bb104;
$bb100:
  assume ($i246 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1228, 7} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242,1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1229, 3} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb102;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  assume !($i246 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i245 := $i247;
  goto $bb99;
$bb103:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1237, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 3} true;
  assume {:verifier.code 0} true;
  $i260 := $i259;
  goto $bb105;
$bb104:
  assume !($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 16} true;
  assume {:verifier.code 0} true;
  $i261 := $slt.i32($i256,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb106, $bb107;
$bb105:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1241, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $add.i32($i252,$i252);
  call {:cexpr "a"} boogie_si_record_i32($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i265 := $sext.i32.i64($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 9} true;
  assume {:verifier.code 0} true;
  $i266 := $srem.i64($i265,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $trunc.i64.i32($i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1243, 5} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i256,$i256);
  call {:cexpr "b"} boogie_si_record_i32($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $sext.i32.i64($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $srem.i64($i269,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i271 := $trunc.i64.i32($i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1246, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i260,$i260);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb109, $bb110;
$bb106:
  assume ($i261 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1239, 7} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257,1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1240, 3} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb108;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  assume !($i261 == 1);
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i260 := $i262;
  goto $bb105;
$bb109:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1248, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i274);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 3} true;
  assume {:verifier.code 0} true;
  $i275 := $i274;
  goto $bb111;
$bb110:
  assume !($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 16} true;
  assume {:verifier.code 0} true;
  $i276 := $slt.i32($i271,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb112, $bb113;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1252, 5} true;
  assume {:verifier.code 0} true;
  $i279 := $add.i32($i267,$i267);
  call {:cexpr "a"} boogie_si_record_i32($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $sext.i32.i64($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 9} true;
  assume {:verifier.code 0} true;
  $i281 := $srem.i64($i280,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i282 := $trunc.i64.i32($i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1254, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i271,$i271);
  call {:cexpr "b"} boogie_si_record_i32($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i284 := $sext.i32.i64($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 9} true;
  assume {:verifier.code 0} true;
  $i285 := $srem.i64($i284,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i286 := $trunc.i64.i32($i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1257, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i275,$i275);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb115, $bb116;
$bb112:
  assume ($i276 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1250, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272,1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1251, 3} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb114;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  assume !($i276 == 1);
  goto $bb114;
$bb114:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i275 := $i277;
  goto $bb111;
$bb115:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1259, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i289);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 3} true;
  assume {:verifier.code 0} true;
  $i290 := $i289;
  goto $bb117;
$bb116:
  assume !($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 16} true;
  assume {:verifier.code 0} true;
  $i291 := $slt.i32($i286,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb118, $bb119;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1263, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i282,$i282);
  call {:cexpr "a"} boogie_si_record_i32($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i295 := $sext.i32.i64($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 9} true;
  assume {:verifier.code 0} true;
  $i296 := $srem.i64($i295,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i297 := $trunc.i64.i32($i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1265, 5} true;
  assume {:verifier.code 0} true;
  $i298 := $add.i32($i286,$i286);
  call {:cexpr "b"} boogie_si_record_i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i32.i64($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 9} true;
  assume {:verifier.code 0} true;
  $i300 := $srem.i64($i299,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i301 := $trunc.i64.i32($i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1268, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i290,$i290);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i303} true;
  goto $bb121, $bb122;
$bb118:
  assume ($i291 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1261, 7} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287,1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1262, 3} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb120;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  assume !($i291 == 1);
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i290 := $i292;
  goto $bb117;
$bb121:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1270, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i304);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 3} true;
  assume {:verifier.code 0} true;
  $i305 := $i304;
  goto $bb123;
$bb122:
  assume !($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 16} true;
  assume {:verifier.code 0} true;
  $i306 := $slt.i32($i301,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb124, $bb125;
$bb123:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1274, 5} true;
  assume {:verifier.code 0} true;
  $i309 := $add.i32($i297,$i297);
  call {:cexpr "a"} boogie_si_record_i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i32.i64($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 9} true;
  assume {:verifier.code 0} true;
  $i311 := $srem.i64($i310,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i312 := $trunc.i64.i32($i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1276, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $add.i32($i301,$i301);
  call {:cexpr "b"} boogie_si_record_i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i32.i64($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i64($i314,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i64.i32($i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1279, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i305,$i305);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i318} true;
  goto $bb127, $bb128;
$bb124:
  assume ($i306 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1272, 7} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302,1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1273, 3} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb126;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  assume !($i306 == 1);
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i305 := $i307;
  goto $bb123;
$bb127:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1281, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i319);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 3} true;
  assume {:verifier.code 0} true;
  $i320 := $i319;
  goto $bb129;
$bb128:
  assume !($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 16} true;
  assume {:verifier.code 0} true;
  $i321 := $slt.i32($i316,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb130, $bb131;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1285, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i32($i312,$i312);
  call {:cexpr "a"} boogie_si_record_i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i32.i64($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $srem.i64($i325,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $trunc.i64.i32($i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1287, 5} true;
  assume {:verifier.code 0} true;
  $i328 := $add.i32($i316,$i316);
  call {:cexpr "b"} boogie_si_record_i32($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i329 := $sext.i32.i64($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 9} true;
  assume {:verifier.code 0} true;
  $i330 := $srem.i64($i329,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i331 := $trunc.i64.i32($i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1290, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i320,$i320);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i333} true;
  goto $bb133, $bb134;
$bb130:
  assume ($i321 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1283, 7} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317,1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1284, 3} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb132;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  assume !($i321 == 1);
  goto $bb132;
$bb132:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i320 := $i322;
  goto $bb129;
$bb133:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1292, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i334);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 3} true;
  assume {:verifier.code 0} true;
  $i335 := $i334;
  goto $bb135;
$bb134:
  assume !($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 16} true;
  assume {:verifier.code 0} true;
  $i336 := $slt.i32($i331,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb136, $bb137;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1296, 5} true;
  assume {:verifier.code 0} true;
  $i339 := $add.i32($i327,$i327);
  call {:cexpr "a"} boogie_si_record_i32($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i32.i64($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 9} true;
  assume {:verifier.code 0} true;
  $i341 := $srem.i64($i340,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i64.i32($i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1298, 5} true;
  assume {:verifier.code 0} true;
  $i343 := $add.i32($i331,$i331);
  call {:cexpr "b"} boogie_si_record_i32($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i344 := $sext.i32.i64($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 9} true;
  assume {:verifier.code 0} true;
  $i345 := $srem.i64($i344,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i346 := $trunc.i64.i32($i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1301, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i335,$i335);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb139, $bb140;
$bb136:
  assume ($i336 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1294, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332,1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1295, 3} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb138;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  assume !($i336 == 1);
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i335 := $i337;
  goto $bb135;
$bb139:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1303, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 3} true;
  assume {:verifier.code 0} true;
  $i350 := $i349;
  goto $bb141;
$bb140:
  assume !($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 16} true;
  assume {:verifier.code 0} true;
  $i351 := $slt.i32($i346,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb142, $bb143;
$bb141:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1307, 5} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i32($i342,$i342);
  call {:cexpr "a"} boogie_si_record_i32($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i355 := $sext.i32.i64($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 9} true;
  assume {:verifier.code 0} true;
  $i356 := $srem.i64($i355,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i357 := $trunc.i64.i32($i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1309, 5} true;
  assume {:verifier.code 0} true;
  $i358 := $add.i32($i346,$i346);
  call {:cexpr "b"} boogie_si_record_i32($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i32.i64($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 9} true;
  assume {:verifier.code 0} true;
  $i360 := $srem.i64($i359,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i361 := $trunc.i64.i32($i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1312, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i350,$i350);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb145, $bb146;
$bb142:
  assume ($i351 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1305, 7} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347,1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1306, 3} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb144;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  assume !($i351 == 1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i350 := $i352;
  goto $bb141;
$bb145:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1314, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 3} true;
  assume {:verifier.code 0} true;
  $i365 := $i364;
  goto $bb147;
$bb146:
  assume !($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 16} true;
  assume {:verifier.code 0} true;
  $i366 := $slt.i32($i361,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb148, $bb149;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1318, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $add.i32($i357,$i357);
  call {:cexpr "a"} boogie_si_record_i32($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i370 := $sext.i32.i64($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 9} true;
  assume {:verifier.code 0} true;
  $i371 := $srem.i64($i370,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $trunc.i64.i32($i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1320, 5} true;
  assume {:verifier.code 0} true;
  $i373 := $add.i32($i361,$i361);
  call {:cexpr "b"} boogie_si_record_i32($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $sext.i32.i64($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 9} true;
  assume {:verifier.code 0} true;
  $i375 := $srem.i64($i374,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i376 := $trunc.i64.i32($i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1323, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i365,$i365);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i378} true;
  goto $bb151, $bb152;
$bb148:
  assume ($i366 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1316, 7} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362,1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1317, 3} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb150;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  assume !($i366 == 1);
  goto $bb150;
$bb150:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i365 := $i367;
  goto $bb147;
$bb151:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1325, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 3} true;
  assume {:verifier.code 0} true;
  $i380 := $i379;
  goto $bb153;
$bb152:
  assume !($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 16} true;
  assume {:verifier.code 0} true;
  $i381 := $slt.i32($i376,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb154, $bb155;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1329, 5} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i32($i372,$i372);
  call {:cexpr "a"} boogie_si_record_i32($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $sext.i32.i64($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $srem.i64($i385,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i387 := $trunc.i64.i32($i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1331, 5} true;
  assume {:verifier.code 0} true;
  $i388 := $add.i32($i376,$i376);
  call {:cexpr "b"} boogie_si_record_i32($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i389 := $sext.i32.i64($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $srem.i64($i389,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i64.i32($i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1334, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i380,$i380);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i393} true;
  goto $bb157, $bb158;
$bb154:
  assume ($i381 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1327, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377,1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1328, 3} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb156;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  assume !($i381 == 1);
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i380 := $i382;
  goto $bb153;
$bb157:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1336, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i394);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 3} true;
  assume {:verifier.code 0} true;
  $i395 := $i394;
  goto $bb159;
$bb158:
  assume !($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 16} true;
  assume {:verifier.code 0} true;
  $i396 := $slt.i32($i391,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb160, $bb161;
$bb159:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1340, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i387,$i387);
  call {:cexpr "a"} boogie_si_record_i32($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i400 := $sext.i32.i64($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 9} true;
  assume {:verifier.code 0} true;
  $i401 := $srem.i64($i400,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i402 := $trunc.i64.i32($i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1342, 5} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i32($i391,$i391);
  call {:cexpr "b"} boogie_si_record_i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i32.i64($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 9} true;
  assume {:verifier.code 0} true;
  $i405 := $srem.i64($i404,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i406 := $trunc.i64.i32($i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1345, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i395,$i395);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i408} true;
  goto $bb163, $bb164;
$bb160:
  assume ($i396 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1338, 7} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392,1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1339, 3} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb162;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  assume !($i396 == 1);
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i395 := $i397;
  goto $bb159;
$bb163:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1347, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i409);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 3} true;
  assume {:verifier.code 0} true;
  $i410 := $i409;
  goto $bb165;
$bb164:
  assume !($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 16} true;
  assume {:verifier.code 0} true;
  $i411 := $slt.i32($i406,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb166, $bb167;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1351, 5} true;
  assume {:verifier.code 0} true;
  $i414 := $add.i32($i402,$i402);
  call {:cexpr "a"} boogie_si_record_i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i32.i64($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 9} true;
  assume {:verifier.code 0} true;
  $i416 := $srem.i64($i415,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i417 := $trunc.i64.i32($i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1353, 5} true;
  assume {:verifier.code 0} true;
  $i418 := $add.i32($i406,$i406);
  call {:cexpr "b"} boogie_si_record_i32($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $srem.i64($i419,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i421 := $trunc.i64.i32($i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1356, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i410,$i410);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i423} true;
  goto $bb169, $bb170;
$bb166:
  assume ($i411 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1349, 7} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407,1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1350, 3} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb168;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  assume !($i411 == 1);
  goto $bb168;
$bb168:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i410 := $i412;
  goto $bb165;
$bb169:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1358, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i424);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 3} true;
  assume {:verifier.code 0} true;
  $i425 := $i424;
  goto $bb171;
$bb170:
  assume !($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 16} true;
  assume {:verifier.code 0} true;
  $i426 := $slt.i32($i421,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb172, $bb173;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1362, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $add.i32($i417,$i417);
  call {:cexpr "a"} boogie_si_record_i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i32.i64($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i64($i430,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i64.i32($i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1364, 5} true;
  assume {:verifier.code 0} true;
  $i433 := $add.i32($i421,$i421);
  call {:cexpr "b"} boogie_si_record_i32($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i32.i64($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 9} true;
  assume {:verifier.code 0} true;
  $i435 := $srem.i64($i434,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i64.i32($i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1367, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i425,$i425);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i438} true;
  goto $bb175, $bb176;
$bb172:
  assume ($i426 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1360, 7} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422,1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1361, 3} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb174;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  assume !($i426 == 1);
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i425 := $i427;
  goto $bb171;
$bb175:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1369, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i439);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 3} true;
  assume {:verifier.code 0} true;
  $i440 := $i439;
  goto $bb177;
$bb176:
  assume !($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 16} true;
  assume {:verifier.code 0} true;
  $i441 := $slt.i32($i436,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb178, $bb179;
$bb177:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1373, 5} true;
  assume {:verifier.code 0} true;
  $i444 := $add.i32($i432,$i432);
  call {:cexpr "a"} boogie_si_record_i32($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i445 := $sext.i32.i64($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 9} true;
  assume {:verifier.code 0} true;
  $i446 := $srem.i64($i445,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i447 := $trunc.i64.i32($i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1375, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $add.i32($i436,$i436);
  call {:cexpr "b"} boogie_si_record_i32($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i32.i64($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $srem.i64($i449,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i64.i32($i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1378, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i440,$i440);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i453} true;
  goto $bb181, $bb182;
$bb178:
  assume ($i441 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1371, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437,1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1372, 3} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb180;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  assume !($i441 == 1);
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i440 := $i442;
  goto $bb177;
$bb181:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1380, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i454);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 3} true;
  assume {:verifier.code 0} true;
  $i455 := $i454;
  goto $bb183;
$bb182:
  assume !($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 16} true;
  assume {:verifier.code 0} true;
  $i456 := $slt.i32($i451,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb184, $bb185;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1384, 5} true;
  assume {:verifier.code 0} true;
  $i459 := $add.i32($i447,$i447);
  call {:cexpr "a"} boogie_si_record_i32($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i460 := $sext.i32.i64($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 9} true;
  assume {:verifier.code 0} true;
  $i461 := $srem.i64($i460,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i462 := $trunc.i64.i32($i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1386, 5} true;
  assume {:verifier.code 0} true;
  $i463 := $add.i32($i451,$i451);
  call {:cexpr "b"} boogie_si_record_i32($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i464 := $sext.i32.i64($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 9} true;
  assume {:verifier.code 0} true;
  $i465 := $srem.i64($i464,2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i466 := $trunc.i64.i32($i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1389, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i455,$i455);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i468} true;
  goto $bb187, $bb188;
$bb184:
  assume ($i456 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1382, 7} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452,1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1383, 3} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb186;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  assume !($i456 == 1);
  goto $bb186;
$bb186:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i455 := $i457;
  goto $bb183;
$bb187:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1391, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i469);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 3} true;
  assume {:verifier.code 0} true;
  $i470 := $i469;
  goto $bb189;
$bb188:
  assume !($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 16} true;
  assume {:verifier.code 0} true;
  $i471 := $slt.i32($i466,0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb190, $bb191;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1400, 3} true;
  assume {:verifier.code 0} true;
  $r := $i470;
  $exn := false;
  return;
$bb190:
  assume ($i471 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1393, 7} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467,1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1394, 3} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb192;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  assume !($i471 == 1);
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i470 := $i472;
  goto $bb189;
}
const __SMACK_or64: ref;
axiom (__SMACK_or64 == $sub.ref(0,54921));
procedure {:inline 1} __SMACK_or64($i0: i64, $i1: i64) returns ($r: i64)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_or64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 66} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 50} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 44} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 37} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or16: ref;
axiom (__SMACK_or16 == $sub.ref(0,55953));
procedure {:inline 1} __SMACK_or16($i0: i16, $i1: i16) returns ($r: i16)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_or16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 70} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 54} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 40} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or8: ref;
axiom (__SMACK_or8 == $sub.ref(0,56985));
procedure {:inline 1} __SMACK_or8($i0: i8, $i1: i8) returns ($r: i8)
modifies $exn;
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_or8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 65} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 49} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 36} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0,58017));
procedure {:inline 1} __SMACK_check_overflow($i0: i32)
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1606, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1409, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} ($i0 == $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1410, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_loop_exit: ref;
axiom (__SMACK_loop_exit == $sub.ref(0,59049));
procedure {:inline 1} __SMACK_loop_exit()
modifies $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 32} true;
  assume {:verifier.code 1} true;
  assert {:loopexit} false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1412, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0,60081));
type $mop;
procedure {:inline 1} boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exn.shadow: bool;
var $exnv: int;
var $exnv.shadow: int;
procedure {:inline 1} corral_atomic_begin();
procedure {:inline 1} corral_atomic_end();
procedure {:inline 1} $alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}
procedure {:inline 1} $malloc(n: ref, n.shadow: ref) returns (p: ref, p.shadow: ref)
modifies $CurrAddr;
{
  call corral_atomic_begin();
  $shadow_ok := ($shadow_ok && (n == n.shadow));
  call p := $$alloc(n);
  p.shadow := p;
  call corral_atomic_end();
}
var $CurrAddr: ref;
var $CurrAddr.shadow: ref;
var $shadow_ok: bool;
procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n,$0.ref);
  if ($sgt.ref.bool(n,$0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr,n),p);
    assume ($sgt.ref.bool($CurrAddr,$0.ref) && $slt.ref.bool($CurrAddr,$MALLOC_TOP));
  }
}
procedure {:inline 1} $free(p: ref);
const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0,61113));
procedure {:inline 1} __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0,62145));
procedure {:inline 1} __SMACK_init_func_memory_model()
modifies $CurrAddr, $exn;
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1885, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1885, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1890, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0,63177));
procedure {:inline 1} __SMACK_static_init()
modifies $M.17, $M.18, $M.19, $M.20, $M.16, $M.21, $M.22, $M.6, $M.14, $M.3, $exn;
{
$bb0:
  $M.17 := 8388608;
  $M.17.shadow := 8388608;
  $M.18 := api_generator;
  $M.18.shadow := api_generator;
  $M.19 := api_order;
  $M.19.shadow := api_order;
  $M.20 := api_xoff;
  $M.20.shadow := api_xoff;
  $M.16 := api_mul;
  $M.16.shadow := api_mul;
  $M.21 := api_mulgen;
  $M.21.shadow := api_mulgen;
  $M.22 := api_muladd;
  $M.22.shadow := api_muladd;
  $shadow_ok := ($shadow_ok && (F256 == F256));
  $M.6 := $store.i32($M.6,F256,1073741823);
  $M.6.shadow := $store.i32($M.6.shadow,F256,1073741823);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(1,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(1,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(1,4)),1073741823);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(1,4)),1073741823);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(2,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(2,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(2,4)),1073741823);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(2,4)),1073741823);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(3,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(3,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(3,4)),63);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(3,4)),63);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(4,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(4,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(4,4)),0);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(4,4)),0);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(5,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(5,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(5,4)),0);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(5,4)),0);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(6,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(6,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(6,4)),4096);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(6,4)),4096);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(7,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(7,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(7,4)),1073725440);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(7,4)),1073725440);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(8,4)) == $add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(8,4))));
  $M.6 := $store.i32($M.6,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(8,4)),65535);
  $M.6.shadow := $store.i32($M.6.shadow,$add.ref($add.ref(F256,$mul.ref(0,36)),$mul.ref(8,4)),65535);
  $shadow_ok := ($shadow_ok && (Gwin == Gwin));
  $M.14 := $store.i32($M.14,Gwin,412664470);
  $M.14.shadow := $store.i32($M.14.shadow,Gwin,412664470);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(1,4)),310699287);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(1,4)),310699287);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(2,4)),515062287);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(2,4)),515062287);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(3,4)),14639179);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(3,4)),14639179);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(4,4)),608236151);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(4,4)),608236151);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(5,4)),865834382);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(5,4)),865834382);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(6,4)),69500811);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(6,4)),69500811);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(7,4)),880588875);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(7,4)),880588875);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(8,4)),27415);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(8,4)),27415);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(9,4)),935285237);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(9,4)),935285237);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(10,4)),785973664);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(10,4)),785973664);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(11,4)),857074924);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(11,4)),857074924);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(12,4)),864867802);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(12,4)),864867802);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(13,4)),262018603);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(13,4)),262018603);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(14,4)),531442160);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(14,4)),531442160);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(15,4)),670677230);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(15,4)),670677230);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(16,4)),280543110);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(16,4)),280543110);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(17,4)),20451);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(0,72)),$mul.ref(17,4)),20451);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(0,4)),124164472);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(0,4)),124164472);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(1,4)),405611505);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(1,4)),405611505);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(2,4)),1059173210);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(2,4)),1059173210);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(3,4)),576354461);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(3,4)),576354461);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(4,4)),890946496);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(4,4)),890946496);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(5,4)),148900882);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(5,4)),148900882);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(6,4)),888662181);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(6,4)),888662181);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(7,4)),516301632);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(7,4)),516301632);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(8,4)),31986);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(8,4)),31986);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(9,4)),578319313);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(9,4)),578319313);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(10,4)),940760692);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(10,4)),940760692);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(11,4)),244851353);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(11,4)),244851353);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(12,4)),527137167);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(12,4)),527137167);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(13,4)),875617210);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(13,4)),875617210);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(14,4)),912988797);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(14,4)),912988797);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(15,4)),755237523);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(15,4)),755237523);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(16,4)),356792035);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(16,4)),356792035);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(17,4)),1911);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(1,72)),$mul.ref(17,4)),1911);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(0,4)),115866988);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(0,4)),115866988);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(1,4)),755341423);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(1,4)),755341423);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(2,4)),987404383);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(2,4)),987404383);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(3,4)),833472635);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(3,4)),833472635);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(4,4)),200369638);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(4,4)),200369638);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(5,4)),532567157);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(5,4)),532567157);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(6,4)),816073871);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(6,4)),816073871);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(7,4)),959736204);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(7,4)),959736204);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(8,4)),24267);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(8,4)),24267);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(9,4)),578637874);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(9,4)),578637874);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(10,4)),702989470);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(10,4)),702989470);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(11,4)),83592153);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(11,4)),83592153);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(12,4)),179047822);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(12,4)),179047822);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(13,4)),614657240);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(13,4)),614657240);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(14,4)),739981417);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(14,4)),739981417);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(15,4)),267903860);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(15,4)),267903860);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(16,4)),419631718);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(16,4)),419631718);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(17,4)),34612);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(2,72)),$mul.ref(17,4)),34612);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(0,4)),721619026);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(0,4)),721619026);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(1,4)),38537489);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(1,4)),38537489);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(2,4)),89747189);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(2,4)),89747189);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(3,4)),133740254);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(3,4)),133740254);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(4,4)),640405507);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(4,4)),640405507);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(5,4)),930715259);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(5,4)),930715259);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(6,4)),150714882);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(6,4)),150714882);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(7,4)),311250100);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(7,4)),311250100);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(8,4)),57939);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(8,4)),57939);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(9,4)),407820486);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(9,4)),407820486);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(10,4)),822806780);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(10,4)),822806780);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(11,4)),820904021);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(11,4)),820904021);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(12,4)),1059434748);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(12,4)),1059434748);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(13,4)),103642702);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(13,4)),103642702);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(14,4)),1069121386);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(14,4)),1069121386);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(15,4)),869036445);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(15,4)),869036445);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(16,4)),366383896);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(16,4)),366383896);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(17,4)),57585);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(3,72)),$mul.ref(17,4)),57585);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(0,4)),63976429);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(0,4)),63976429);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(1,4)),89466935);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(1,4)),89466935);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(2,4)),901665346);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(2,4)),901665346);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(3,4)),589348679);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(3,4)),589348679);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(4,4)),646963183);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(4,4)),646963183);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(5,4)),320952353);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(5,4)),320952353);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(6,4)),336407928);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(6,4)),336407928);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(7,4)),48141396);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(7,4)),48141396);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(8,4)),20825);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(8,4)),20825);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(9,4)),1033989540);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(9,4)),1033989540);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(10,4)),121826579);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(10,4)),121826579);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(11,4)),226527373);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(11,4)),226527373);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(12,4)),4964405);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(12,4)),4964405);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(13,4)),175711757);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(13,4)),175711757);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(14,4)),117234430);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(14,4)),117234430);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(15,4)),656922798);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(15,4)),656922798);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(16,4)),527049746);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(16,4)),527049746);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(17,4)),57537);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(4,72)),$mul.ref(17,4)),57537);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(0,4)),1008898473);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(0,4)),1008898473);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(1,4)),448965540);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(1,4)),448965540);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(2,4)),992041804);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(2,4)),992041804);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(3,4)),320668538);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(3,4)),320668538);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(4,4)),400417538);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(4,4)),400417538);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(5,4)),210809570);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(5,4)),210809570);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(6,4)),100845869);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(6,4)),100845869);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(7,4)),97164713);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(7,4)),97164713);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(8,4)),45082);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(8,4)),45082);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(9,4)),264732642);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(9,4)),264732642);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(10,4)),904995150);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(10,4)),904995150);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(11,4)),132213727);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(11,4)),132213727);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(12,4)),4054023);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(12,4)),4054023);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(13,4)),654539036);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(13,4)),654539036);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(14,4)),809023470);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(14,4)),809023470);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(15,4)),1034770174);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(15,4)),1034770174);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(16,4)),69012621);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(16,4)),69012621);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(17,4)),59484);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(5,72)),$mul.ref(17,4)),59484);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(0,4)),830976675);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(0,4)),830976675);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(1,4)),1614272);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(1,4)),1614272);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(2,4)),16709043);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(2,4)),16709043);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(3,4)),1048456746);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(3,4)),1048456746);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(4,4)),33251454);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(4,4)),33251454);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(5,4)),750885360);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(5,4)),750885360);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(6,4)),934568539);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(6,4)),934568539);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(7,4)),249292847);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(7,4)),249292847);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(8,4)),36435);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(8,4)),36435);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(9,4)),32768180);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(9,4)),32768180);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(10,4)),360213019);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(10,4)),360213019);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(11,4)),809611804);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(11,4)),809611804);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(12,4)),835554546);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(12,4)),835554546);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(13,4)),898629715);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(13,4)),898629715);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(14,4)),444468891);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(14,4)),444468891);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(15,4)),830695120);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(15,4)),830695120);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(16,4)),124745740);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(16,4)),124745740);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(17,4)),29675);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(6,72)),$mul.ref(17,4)),29675);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(0,4)),460305299);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(0,4)),460305299);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(1,4)),326530823);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(1,4)),326530823);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(2,4)),1021935035);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(2,4)),1021935035);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(3,4)),881731075);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(3,4)),881731075);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(4,4)),894217665);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(4,4)),894217665);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(5,4)),164672746);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(5,4)),164672746);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(6,4)),453325828);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(6,4)),453325828);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(7,4)),501706682);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(7,4)),501706682);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(8,4)),25305);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(8,4)),25305);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(9,4)),252286334);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(9,4)),252286334);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(10,4)),693119400);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(10,4)),693119400);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(11,4)),1047963533);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(11,4)),1047963533);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(12,4)),995392942);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(12,4)),995392942);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(13,4)),667869346);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(13,4)),667869346);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(14,4)),91610181);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(14,4)),91610181);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(15,4)),495076607);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(15,4)),495076607);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(16,4)),858743930);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(16,4)),858743930);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(17,4)),44378);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(7,72)),$mul.ref(17,4)),44378);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(0,4)),278175456);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(0,4)),278175456);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(1,4)),511322414);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(1,4)),511322414);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(2,4)),115313469);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(2,4)),115313469);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(3,4)),45277963);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(3,4)),45277963);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(4,4)),838365854);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(4,4)),838365854);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(5,4)),618878069);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(5,4)),618878069);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(6,4)),817305720);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(6,4)),817305720);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(7,4)),904773559);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(7,4)),904773559);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(8,4)),60008);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(8,4)),60008);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(9,4)),231753978);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(9,4)),231753978);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(10,4)),560498985);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(10,4)),560498985);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(11,4)),233317374);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(11,4)),233317374);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(12,4)),475265705);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(12,4)),475265705);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(13,4)),245418061);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(13,4)),245418061);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(14,4)),86661418);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(14,4)),86661418);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(15,4)),533624944);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(15,4)),533624944);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(16,4)),288513202);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(16,4)),288513202);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(17,4)),10791);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(8,72)),$mul.ref(17,4)),10791);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(0,4)),80048703);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(0,4)),80048703);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(1,4)),819468880);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(1,4)),819468880);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(2,4)),75695844);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(2,4)),75695844);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(3,4)),849023431);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(3,4)),849023431);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(4,4)),574600517);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(4,4)),574600517);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(5,4)),139675560);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(5,4)),139675560);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(6,4)),697558417);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(6,4)),697558417);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(7,4)),458934926);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(7,4)),458934926);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(8,4)),52982);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(8,4)),52982);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(9,4)),78579571);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(9,4)),78579571);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(10,4)),684912297);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(10,4)),684912297);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(11,4)),659681004);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(11,4)),659681004);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(12,4)),58411647);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(12,4)),58411647);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(13,4)),994840665);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(13,4)),994840665);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(14,4)),150173300);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(14,4)),150173300);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(15,4)),719914721);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(15,4)),719914721);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(16,4)),413698666);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(16,4)),413698666);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(17,4)),34694);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(9,72)),$mul.ref(17,4)),34694);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(0,4)),884744657);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(0,4)),884744657);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(1,4)),214845261);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(1,4)),214845261);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(2,4)),352619508);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(2,4)),352619508);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(3,4)),487306249);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(3,4)),487306249);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(4,4)),35445270);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(4,4)),35445270);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(5,4)),551450307);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(5,4)),551450307);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(6,4)),885362787);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(6,4)),885362787);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(7,4)),82698766);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(7,4)),82698766);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(8,4)),16081);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(8,4)),16081);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(9,4)),673855296);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(9,4)),673855296);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(10,4)),199474163);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(10,4)),199474163);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(11,4)),696819118);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(11,4)),696819118);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(12,4)),54605463);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(12,4)),54605463);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(13,4)),885426697);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(13,4)),885426697);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(14,4)),554614419);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(14,4)),554614419);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(15,4)),210379340);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(15,4)),210379340);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(16,4)),136753969);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(16,4)),136753969);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(17,4)),37017);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(10,72)),$mul.ref(17,4)),37017);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(0,4)),103080900);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(0,4)),103080900);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(1,4)),335747002);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(1,4)),335747002);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(2,4)),797100445);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(2,4)),797100445);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(3,4)),638323244);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(3,4)),638323244);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(4,4)),634737017);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(4,4)),634737017);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(5,4)),424529027);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(5,4)),424529027);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(6,4)),1033233506);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(6,4)),1033233506);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(7,4)),896494085);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(7,4)),896494085);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(8,4)),29725);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(8,4)),29725);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(9,4)),222593491);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(9,4)),222593491);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(10,4)),643300491);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(10,4)),643300491);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(11,4)),463850097);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(11,4)),463850097);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(12,4)),988039949);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(12,4)),988039949);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(13,4)),129062030);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(13,4)),129062030);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(14,4)),235754786);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(14,4)),235754786);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(15,4)),100517223);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(15,4)),100517223);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(16,4)),756721422);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(16,4)),756721422);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(17,4)),1904);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(11,72)),$mul.ref(17,4)),1904);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(0,4)),101133313);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(0,4)),101133313);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(1,4)),595949173);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(1,4)),595949173);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(2,4)),514676905);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(2,4)),514676905);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(3,4)),193598169);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(3,4)),193598169);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(4,4)),518192249);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(4,4)),518192249);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(5,4)),24628065);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(5,4)),24628065);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(6,4)),76916248);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(6,4)),76916248);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(7,4)),551467051);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(7,4)),551467051);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(8,4)),6012);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(8,4)),6012);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(9,4)),801619928);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(9,4)),801619928);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(10,4)),823062411);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(10,4)),823062411);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(11,4)),531947321);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(11,4)),531947321);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(12,4)),998584552);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(12,4)),998584552);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(13,4)),256799270);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(13,4)),256799270);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(14,4)),38188752);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(14,4)),38188752);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(15,4)),710248996);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(15,4)),710248996);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(16,4)),372462511);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(16,4)),372462511);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(17,4)),25531);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(12,72)),$mul.ref(17,4)),25531);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(0,4)),617779723);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(0,4)),617779723);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(1,4)),472161740);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(1,4)),472161740);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(2,4)),543802853);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(2,4)),543802853);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(3,4)),162213790);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(3,4)),162213790);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(4,4)),920599793);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(4,4)),920599793);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(5,4)),428997900);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(5,4)),428997900);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(6,4)),103520167);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(6,4)),103520167);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(7,4)),511706894);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(7,4)),511706894);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(8,4)),21735);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(8,4)),21735);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(9,4)),550548341);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(9,4)),550548341);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(10,4)),782180541);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(10,4)),782180541);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(11,4)),889782401);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(11,4)),889782401);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(12,4)),477797852);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(12,4)),477797852);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(13,4)),585614193);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(13,4)),585614193);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(14,4)),142487574);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(14,4)),142487574);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(15,4)),51860513);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(15,4)),51860513);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(16,4)),1013893757);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(16,4)),1013893757);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(17,4)),62873);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(13,72)),$mul.ref(17,4)),62873);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(0,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(0,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(0,4)),630955359);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(0,4)),630955359);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(1,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(1,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(1,4)),228209039);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(1,4)),228209039);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(2,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(2,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(2,4)),597749526);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(2,4)),597749526);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(3,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(3,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(3,4)),15459511);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(3,4)),15459511);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(4,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(4,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(4,4)),142763438);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(4,4)),142763438);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(5,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(5,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(5,4)),752756326);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(5,4)),752756326);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(6,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(6,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(6,4)),732855007);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(6,4)),732855007);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(7,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(7,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(7,4)),326215110);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(7,4)),326215110);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(8,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(8,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(8,4)),61509);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(8,4)),61509);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(9,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(9,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(9,4)),218320694);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(9,4)),218320694);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(10,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(10,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(10,4)),529953656);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(10,4)),529953656);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(11,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(11,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(11,4)),459252724);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(11,4)),459252724);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(12,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(12,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(12,4)),248017821);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(12,4)),248017821);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(13,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(13,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(13,4)),373548586);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(13,4)),373548586);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(14,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(14,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(14,4)),374576254);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(14,4)),374576254);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(15,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(15,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(15,4)),584185062);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(15,4)),584185062);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(16,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(16,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(16,4)),263771723);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(16,4)),263771723);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(17,4)) == $add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(17,4))));
  $M.14 := $store.i32($M.14,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(17,4)),46521);
  $M.14.shadow := $store.i32($M.14.shadow,$add.ref($add.ref($add.ref(Gwin,$mul.ref(0,1080)),$mul.ref(14,72)),$mul.ref(17,4)),46521);
  $shadow_ok := ($shadow_ok && (P256_B == P256_B));
  $M.3 := $store.i32($M.3,P256_B,668098635);
  $M.3.shadow := $store.i32($M.3.shadow,P256_B,668098635);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(1,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(1,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(1,4)),792260856);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(1,4)),792260856);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(2,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(2,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(2,4)),87756643);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(2,4)),87756643);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(3,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(3,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(3,4)),121744435);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(3,4)),121744435);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(4,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(4,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(4,4)),411483237);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(4,4)),411483237);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(5,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(5,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(5,4)),787830234);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(5,4)),787830234);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(6,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(6,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(6,4)),691960638);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(6,4)),691960638);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(7,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(7,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(7,4)),225847950);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(7,4)),225847950);
  $shadow_ok := ($shadow_ok && ($add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(8,4)) == $add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(8,4))));
  $M.3 := $store.i32($M.3,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(8,4)),23238);
  $M.3.shadow := $store.i32($M.3.shadow,$add.ref($add.ref(P256_B,$mul.ref(0,36)),$mul.ref(8,4)),23238);
  $exn := false;
  $exn.shadow := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0,64209));
procedure {:inline 1} devirtbounce(funcPtr: ref, funcPtr.shadow: ref, arg: ref, arg.shadow: ref, arg1: i64, arg1.shadow: i64, arg2: ref, arg2.shadow: ref, arg3: i64, arg3.shadow: i64, arg4: i32, arg4.shadow: i32) returns ($r: i32, $r.shadow: i32)
modifies $exn;
modifies $M.3, $M.4;
modifies $M.8, $M.10, $CurrAddr;
modifies $M.11, $M.9, $M.12, $M.7;
{
  var $p0: ref;
  var $p0.shadow: ref;
  var $i1: i32;
  var $i1.shadow: i32;
  var $i2: i1;
  var $i2.shadow: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  $p0.shadow := $bitcast.ref.ref(funcPtr.shadow);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(api_mul,$p0);
  $i2.shadow := $eq.ref(api_mul,$p0.shadow);
  assume {:branchcond $i2} true;
  $shadow_ok := ($shadow_ok && ($i2 == $i2.shadow));
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1, $i1.shadow := api_mul(arg, arg.shadow, arg1, arg1.shadow, arg2, arg2.shadow, arg3, arg3.shadow, arg4, arg4.shadow);
  $r := $i1;
  $r.shadow := $i1.shadow;
  $exn := false;
  $exn.shadow := false;
  return;
$bb3:
  assume !($i2 == 1);
  assume false;
}
procedure {:inline 1} $memcpy.i8(M.dst: [ref] i8, M.dst.shadow: [ref] i8, M.src: [ref] i8, M.src.shadow: [ref] i8, dst: ref, dst.shadow: ref, src: ref, src.shadow: ref, len: ref, len.shadow: ref, isvolatile: bool, isvolatile.shadow: bool) returns (M.ret: [ref] i8, M.ret.shadow: [ref] i8)
{
  assume (forall x: ref :: (($sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len))) ==> (M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)])));
  assume (forall x: ref :: (($sle.ref.bool(dst.shadow,x) && $slt.ref.bool(x,$add.ref(dst.shadow,len.shadow))) ==> (M.ret.shadow[x] == M.src.shadow[$add.ref($sub.ref(src.shadow,dst.shadow),x)])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst) ==> (M.ret[x] == M.dst[x])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst.shadow) ==> (M.ret.shadow[x] == M.dst.shadow[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst,len),x) ==> (M.ret[x] == M.dst[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst.shadow,len.shadow),x) ==> (M.ret.shadow[x] == M.dst.shadow[x])));
}
procedure {:inline 1} $memset.i8(M: [ref] i8, M.shadow: [ref] i8, dst: ref, dst.shadow: ref, val: i8, val.shadow: i8, len: ref, len.shadow: ref, isvolatile: bool, isvolatile.shadow: bool) returns (M.ret: [ref] i8, M.ret.shadow: [ref] i8)
{
  assume (forall x: ref :: (($sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len))) ==> (M.ret[x] == val)));
  assume (forall x: ref :: (($sle.ref.bool(dst.shadow,x) && $slt.ref.bool(x,$add.ref(dst.shadow,len.shadow))) ==> (M.ret.shadow[x] == val.shadow)));
  assume (forall x: ref :: ($slt.ref.bool(x,dst) ==> (M.ret[x] == M[x])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst.shadow) ==> (M.ret.shadow[x] == M.shadow[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst,len),x) ==> (M.ret[x] == M[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst.shadow,len.shadow),x) ==> (M.ret.shadow[x] == M.shadow[x])));
}
const $u0: i64;
const $u1: i32;
procedure {:inline 1} boogie_si_record_i16(x: i16);
procedure {:inline 1} boogie_si_record_i32(x: i32);
procedure {:inline 1} boogie_si_record_i64(x: i64);
procedure {:inline 1} boogie_si_record_i8(x: i8);
procedure {:inline 1} boogie_si_record_ref(x: ref);
procedure {:inline 1} $initialize()
modifies $CurrAddr, $exn;
modifies $M.17, $M.18, $M.19, $M.20, $M.16, $M.21, $M.22, $M.6, $M.14, $M.3;
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}